open Sail_lib;;
module Big_int = Nat_big_num;;

let zcap_sizze = (Big_int.of_int (16));;

let rec zeq_unit ((_, _) : (unit * unit)) : bool = sail_call (fun r -> true)

and zneq_int ((zx, zy) : (Big_int.num * Big_int.num)) : bool = sail_call (fun r ->
  not (eq_int (zx, zy)))

and zneq_bool ((zx, zy) : (bool * bool)) : bool = sail_call (fun r ->
  not (eq_bool (zx, zy)))

and z__id (zx : (Big_int.num)) : Big_int.num = sail_call (fun r -> zx)

type  zbits = (bit) list;;

let string_of_zbits (gs19 : zbits) = string_of_bits gs19;;

let rec zsail_mask ((zlen, zv) : (Big_int.num * (bit) list)) : (bit) list = sail_call (fun r ->
  if (lteq (zlen, (length zv))) then (vector_truncate (zv, zlen)) else (zero_extend (zv, zlen)))

type 'za zoption = | ZSome of 'za | ZNone of unit;;

let string_of_zoption _ = "VARIANT";;

let rec zundefined_option : 'za. ('za) -> ('za) zoption = fun ztyp_a -> sail_call (fun r ->
  let zu_0 = (undefined_unit ()) in
  let zu_1 = ztyp_a in
  internal_pick [ZSome zu_1; ZNone zu_0])

and zis_none : 'za. (('za) zoption) -> bool = fun zopt -> sail_call (fun r ->
  begin match zopt with | ZSome (_) -> false | ZNone (()) -> true end)

and zis_some : 'za. (('za) zoption) -> bool = fun zopt -> sail_call (fun r ->
  begin match zopt with | ZSome (_) -> true | ZNone (()) -> false end)

and zhex_bits_1_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_1_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_1_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_1_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_1_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_2_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_2_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_2_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_2_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_2_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_3_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_3_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_3_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_3_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_3_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_4_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_4_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_4_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_4_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_4_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_5_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_5_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_5_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_5_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_5_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_6_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_6_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_6_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_6_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_6_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_7_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_7_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_7_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_7_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_7_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_8_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_8_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_8_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_8_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_8_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_9_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_9_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_9_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_9_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_9_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_10_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_10_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_10_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_10_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_10_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_11_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_11_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_11_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_11_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_11_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_12_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_12_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_12_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_12_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_12_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_13_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_13_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_13_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_13_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_13_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_14_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_14_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_14_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_14_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_14_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_15_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_15_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_15_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_15_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_15_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_16_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_16_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_16_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_16_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_16_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_17_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_17_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_17_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_17_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_17_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_18_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_18_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_18_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_18_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_18_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_19_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_19_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_19_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_19_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_19_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_20_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_20_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_20_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_20_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_20_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_21_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_21_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_21_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_21_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_21_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_22_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_22_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_22_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_22_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_22_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_23_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_23_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_23_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_23_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_23_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_24_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_24_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_24_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_24_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_24_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_25_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_25_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_25_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_25_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_25_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_26_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_26_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_26_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_26_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_26_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_27_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_27_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_27_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_27_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_27_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_28_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_28_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_28_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_28_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_28_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_29_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_29_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_29_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_29_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_29_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_30_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_30_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_30_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_30_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_30_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_31_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_31_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_31_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_31_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_31_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_32_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_32_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_32_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_32_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_32_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_33_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_33_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_33_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_33_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_33_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_48_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_48_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_48_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_48_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_48_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zhex_bits_64_forwards_matches (zbv : ((bit) list)) : bool = sail_call (fun r ->
  true)

and zhex_bits_64_backwards_matches (zs : (string)) : bool = sail_call (fun r ->
  begin
    match zs with
    | zs when (begin
      match (hex_bits_64_matches_prefix zs) with
      | ZSome (_, zn) when (eq_int (zn, (string_length zs))) -> true
      | _ -> false
    end) ->
      true
    | _ -> false
  end)

and zhex_bits_64_backwards (zs : (string)) : (bit) list = sail_call (fun r ->
  begin
    match (hex_bits_64_matches_prefix zs) with
    | ZSome (zbv, zn) when (eq_int (zn, (string_length zs))) -> zbv
  end)

and zneq_vec ((zx, zy) : ((bit) list * (bit) list)) : bool = sail_call (fun r ->
  not (eq_list (zx, zy)))

and zneq_anything : 'za. ('za * 'za) -> bool = fun (zx, zy) -> sail_call (fun r ->
  not ((fun (x, y) -> x = y) (zx, zy)))

and z__GetSlice_int ((zn, zm, zo) : (Big_int.num * Big_int.num * Big_int.num)) : (bit) list = sail_call (fun r ->
  get_slice_int (zn, zm, zo))

and zcast_unit_vec (zb : (bit)) : (bit) list = sail_call (fun r ->
  begin
    match zb with
    | zp0z3 when (eq_bit (zp0z3, B0)) -> [B0]
    | zp0z3 when (eq_bit (zp0z3, B1)) -> [B1]
  end)

and z__RISCV_write ((zaddr, zwidth, zdata) : ((bit) list * Big_int.num * (bit) list)) : bool = sail_call (fun r ->
  write_ram ((Big_int.of_int (64)), zwidth, [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0], zaddr, zdata))

and z__RISCV_read ((zaddr, zwidth, zaq, zrl, zres) : ((bit) list * Big_int.num * bool * bool * bool)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match (zaq, zrl, zres) with
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, false))) ->
      ZSome (read_ram ((Big_int.of_int (64)), zwidth, [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0], zaddr))
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, true))) ->
      ZSome (read_ram ((Big_int.of_int (64)), zwidth, [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0], zaddr))
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
      ZSome (read_ram ((Big_int.of_int (64)), zwidth, [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0], zaddr))
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, false))) ->
      ZSome (read_ram ((Big_int.of_int (64)), zwidth, [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0], zaddr))
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, true))) ->
      ZSome (read_ram ((Big_int.of_int (64)), zwidth, [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0], zaddr))
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
      ZSome (read_ram ((Big_int.of_int (64)), zwidth, [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0], zaddr))
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, false))) ->
      ZNone ()
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, false))) ->
      ZNone ()
  end)

and zex_nat (zn : (Big_int.num)) : Big_int.num = sail_call (fun r -> zn)

and zex_int (zn : (Big_int.num)) : Big_int.num = sail_call (fun r -> zn)

and zcoerce_int_nat (zx : (Big_int.num)) : Big_int.num = sail_call (fun r ->
  begin assert (gteq ((z__id zx), Big_int.zero)); zx end)

and zEXTS ((zm, zv) : (Big_int.num * (bit) list)) : (bit) list = sail_call (fun r ->
  sign_extend (zv, zm))

and zEXTZ ((zm, zv) : (Big_int.num * (bit) list)) : (bit) list = sail_call (fun r ->
  zero_extend (zv, zm))

and zz8operatorz0zI_sz9 ((zx, zy) : ((bit) list * (bit) list)) : bool = sail_call (fun r ->
  lt ((sint zx), (sint zy)))

and zz8operatorz0zKzJ_sz9 ((zx, zy) : ((bit) list * (bit) list)) : bool = sail_call (fun r ->
  gteq ((sint zx), (sint zy)))

and zz8operatorz0zI_uz9 ((zx, zy) : ((bit) list * (bit) list)) : bool = sail_call (fun r ->
  lt ((uint zx), (uint zy)))

and zz8operatorz0zKzJ_uz9 ((zx, zy) : ((bit) list * (bit) list)) : bool = sail_call (fun r ->
  gteq ((uint zx), (uint zy)))

and zz8operatorz0zIzJ_uz9 ((zx, zy) : ((bit) list * (bit) list)) : bool = sail_call (fun r ->
  lteq ((uint zx), (uint zy)))

and zbool_to_bits (zx : (bool)) : (bit) list = sail_call (fun r ->
  if zx then [B1] else [B0])

and zbit_to_bool (zb : (bit)) : bool = sail_call (fun r ->
  begin
    match zb with
    | zp0z3 when (eq_bit (zp0z3, B1)) -> true
    | zp0z3 when (eq_bit (zp0z3, B0)) -> false
  end)

and zvector64 (zn : (Big_int.num)) : (bit) list = sail_call (fun r ->
  get_slice_int ((Big_int.of_int (64)), zn, Big_int.zero))

and zto_bits ((zl, zn) : (Big_int.num * Big_int.num)) : (bit) list = sail_call (fun r ->
  get_slice_int (zl, zn, Big_int.zero))

and zMAX (zn : (Big_int.num)) : Big_int.num = sail_call (fun r ->
  sub_int ((pow2 zn), (Big_int.of_int (1))))

and zzzeros_implicit (zn : (Big_int.num)) : (bit) list = sail_call (fun r ->
  zeros zn)

and zones_n (zn : (Big_int.num)) : (bit) list = sail_call (fun r ->
  replicate_bits ([B1], zn))

and zones_implicit (zn : (Big_int.num)) : (bit) list = sail_call (fun r ->
  zones_n zn)

and zshift_right_arith64 ((zv, zshift) : (zbits * zbits)) : zbits = sail_call (fun r ->
  let zv128 = (zEXTS ((Big_int.of_int (128)), zv)) in
  subrange ((shift_bits_right (zv128, zshift)), (Big_int.of_int (63)), Big_int.zero))

and zshift_right_arith32 ((zv, zshift) : (zbits * zbits)) : zbits = sail_call (fun r ->
  let zv64 = (zEXTS ((Big_int.of_int (64)), zv)) in
  subrange ((shift_bits_right (zv64, zshift)), (Big_int.of_int (31)), Big_int.zero))

and zn_leading_spaces (zs : (string)) : Big_int.num = sail_call (fun r ->
  begin
    match zs with
    | "" -> Big_int.zero
    | _ ->
      begin
        match (string_take (zs, (Big_int.of_int (1)))) with
        | " " ->
          add_int ((Big_int.of_int (1)), (zn_leading_spaces (string_drop (zs, (Big_int.of_int (1))))))
        | _ -> Big_int.zero
      end
  end)

and zspc_forwards (() : (unit)) : string = sail_call (fun r -> " ")

and zspc_backwards (zs : (string)) : unit = sail_call (fun r -> ())

and zspc_matches_prefix (zs : (string)) : ((unit * Big_int.num)) zoption = sail_call (fun r ->
  let zn = (zn_leading_spaces zs) in
  begin
    match zn with
    | zl__161 when (eq_int (zl__161, Big_int.zero)) -> ZNone ()
    | _ -> ZSome ((), zn)
  end)

and zopt_spc_forwards (() : (unit)) : string = sail_call (fun r -> "")

and zopt_spc_backwards (zs : (string)) : unit = sail_call (fun r -> ())

and zopt_spc_matches_prefix (zs : (string)) : ((unit * Big_int.num)) zoption = sail_call (fun r ->
  ZSome ((), zn_leading_spaces zs))

and zdef_spc_forwards (() : (unit)) : string = sail_call (fun r -> " ")

and zdef_spc_backwards (zs : (string)) : unit = sail_call (fun r -> ())

and zdef_spc_matches_prefix (zs : (string)) : ((unit * Big_int.num)) zoption = sail_call (fun r ->
  zopt_spc_matches_prefix zs)

type  zCapLen = Big_int.num;;

let string_of_zCapLen (gs621 : zCapLen) = string_of_zint gs621;;

type  zuint64 = Big_int.num;;

let string_of_zuint64 (gs622 : zuint64) = string_of_zint gs622;;

type zCPtrCmpOp = | ZCEQ | ZCNE | ZCLT | ZCLE | ZCLTU | ZCLEU | ZCEXEQ | ZCNEXEQ;;

let string_of_zCPtrCmpOp = function
  | ZCEQ -> "CEQ"
  | ZCNE -> "CNE"
  | ZCLT -> "CLT"
  | ZCLE -> "CLE"
  | ZCLTU -> "CLTU"
  | ZCLEU -> "CLEU"
  | ZCEXEQ -> "CEXEQ"
  | ZCNEXEQ -> "CNEXEQ";;

let rec zCPtrCmpOp_of_num (zargz3 : (Big_int.num)) : zCPtrCmpOp = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__154 when (eq_int (zl__154, Big_int.zero)) -> ZCEQ
    | zl__155 when (eq_int (zl__155, (Big_int.of_int (1)))) -> ZCNE
    | zl__156 when (eq_int (zl__156, (Big_int.of_int (2)))) -> ZCLT
    | zl__157 when (eq_int (zl__157, (Big_int.of_int (3)))) -> ZCLE
    | zl__158 when (eq_int (zl__158, (Big_int.of_int (4)))) -> ZCLTU
    | zl__159 when (eq_int (zl__159, (Big_int.of_int (5)))) -> ZCLEU
    | zl__160 when (eq_int (zl__160, (Big_int.of_int (6)))) -> ZCEXEQ
    | _ -> ZCNEXEQ
  end)

and znum_of_CPtrCmpOp (zargz3 : (zCPtrCmpOp)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZCEQ -> Big_int.zero
    | ZCNE -> (Big_int.of_int (1))
    | ZCLT -> (Big_int.of_int (2))
    | ZCLE -> (Big_int.of_int (3))
    | ZCLTU -> (Big_int.of_int (4))
    | ZCLEU -> (Big_int.of_int (5))
    | ZCEXEQ -> (Big_int.of_int (6))
    | ZCNEXEQ -> (Big_int.of_int (7))
  end)

and zundefined_CPtrCmpOp (() : (unit)) : zCPtrCmpOp = sail_call (fun r ->
  internal_pick [ZCEQ; ZCNE; ZCLT; ZCLE; ZCLTU; ZCLEU; ZCEXEQ; ZCNEXEQ])

type zClearRegSet = | ZGPRegs | ZFPRegs;;

let string_of_zClearRegSet = function
  | ZGPRegs -> "GPRegs"
  | ZFPRegs -> "FPRegs";;

let rec zClearRegSet_of_num (zargz3 : (Big_int.num)) : zClearRegSet = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__153 when (eq_int (zl__153, Big_int.zero)) -> ZGPRegs
    | _ -> ZFPRegs
  end)

and znum_of_ClearRegSet (zargz3 : (zClearRegSet)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZGPRegs -> Big_int.zero
    | ZFPRegs -> (Big_int.of_int (1))
  end)

and zundefined_ClearRegSet (() : (unit)) : zClearRegSet = sail_call (fun r ->
  internal_pick [ZGPRegs; ZFPRegs])

let zMAX_U64 = (zMAX (Big_int.of_int (64)));;

type zCapEx =
  | ZCapEx_None
  | ZCapEx_LengthViolation
  | ZCapEx_TagViolation
  | ZCapEx_SealViolation
  | ZCapEx_TypeViolation
  | ZCapEx_CallTrap
  | ZCapEx_ReturnTrap
  | ZCapEx_TSSUnderFlow
  | ZCapEx_UserDefViolation
  | ZCapEx_TLBNoStoreCap
  | ZCapEx_InexactBounds
  | ZCapEx_GlobalViolation
  | ZCapEx_PermitExecuteViolation
  | ZCapEx_PermitLoadViolation
  | ZCapEx_PermitStoreViolation
  | ZCapEx_PermitLoadCapViolation
  | ZCapEx_PermitStoreCapViolation
  | ZCapEx_PermitStoreLocalCapViolation
  | ZCapEx_PermitSealViolation
  | ZCapEx_AccessSystemRegsViolation
  | ZCapEx_PermitCCallViolation
  | ZCapEx_AccessCCallIDCViolation
  | ZCapEx_PermitUnsealViolation
  | ZCapEx_PermitSetCIDViolation;;

let string_of_zCapEx = function
  | ZCapEx_None -> "CapEx_None"
  | ZCapEx_LengthViolation -> "CapEx_LengthViolation"
  | ZCapEx_TagViolation -> "CapEx_TagViolation"
  | ZCapEx_SealViolation -> "CapEx_SealViolation"
  | ZCapEx_TypeViolation -> "CapEx_TypeViolation"
  | ZCapEx_CallTrap -> "CapEx_CallTrap"
  | ZCapEx_ReturnTrap -> "CapEx_ReturnTrap"
  | ZCapEx_TSSUnderFlow -> "CapEx_TSSUnderFlow"
  | ZCapEx_UserDefViolation -> "CapEx_UserDefViolation"
  | ZCapEx_TLBNoStoreCap -> "CapEx_TLBNoStoreCap"
  | ZCapEx_InexactBounds -> "CapEx_InexactBounds"
  | ZCapEx_GlobalViolation -> "CapEx_GlobalViolation"
  | ZCapEx_PermitExecuteViolation -> "CapEx_PermitExecuteViolation"
  | ZCapEx_PermitLoadViolation -> "CapEx_PermitLoadViolation"
  | ZCapEx_PermitStoreViolation -> "CapEx_PermitStoreViolation"
  | ZCapEx_PermitLoadCapViolation -> "CapEx_PermitLoadCapViolation"
  | ZCapEx_PermitStoreCapViolation -> "CapEx_PermitStoreCapViolation"
  | ZCapEx_PermitStoreLocalCapViolation -> "CapEx_PermitStoreLocalCapViolation"
  | ZCapEx_PermitSealViolation -> "CapEx_PermitSealViolation"
  | ZCapEx_AccessSystemRegsViolation -> "CapEx_AccessSystemRegsViolation"
  | ZCapEx_PermitCCallViolation -> "CapEx_PermitCCallViolation"
  | ZCapEx_AccessCCallIDCViolation -> "CapEx_AccessCCallIDCViolation"
  | ZCapEx_PermitUnsealViolation -> "CapEx_PermitUnsealViolation"
  | ZCapEx_PermitSetCIDViolation -> "CapEx_PermitSetCIDViolation";;

let rec zCapEx_of_num (zargz3 : (Big_int.num)) : zCapEx = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__130 when (eq_int (zl__130, Big_int.zero)) -> ZCapEx_None
    | zl__131 when (eq_int (zl__131, (Big_int.of_int (1)))) ->
      ZCapEx_LengthViolation
    | zl__132 when (eq_int (zl__132, (Big_int.of_int (2)))) ->
      ZCapEx_TagViolation
    | zl__133 when (eq_int (zl__133, (Big_int.of_int (3)))) ->
      ZCapEx_SealViolation
    | zl__134 when (eq_int (zl__134, (Big_int.of_int (4)))) ->
      ZCapEx_TypeViolation
    | zl__135 when (eq_int (zl__135, (Big_int.of_int (5)))) -> ZCapEx_CallTrap
    | zl__136 when (eq_int (zl__136, (Big_int.of_int (6)))) -> ZCapEx_ReturnTrap
    | zl__137 when (eq_int (zl__137, (Big_int.of_int (7)))) ->
      ZCapEx_TSSUnderFlow
    | zl__138 when (eq_int (zl__138, (Big_int.of_int (8)))) ->
      ZCapEx_UserDefViolation
    | zl__139 when (eq_int (zl__139, (Big_int.of_int (9)))) ->
      ZCapEx_TLBNoStoreCap
    | zl__140 when (eq_int (zl__140, (Big_int.of_int (10)))) ->
      ZCapEx_InexactBounds
    | zl__141 when (eq_int (zl__141, (Big_int.of_int (11)))) ->
      ZCapEx_GlobalViolation
    | zl__142 when (eq_int (zl__142, (Big_int.of_int (12)))) ->
      ZCapEx_PermitExecuteViolation
    | zl__143 when (eq_int (zl__143, (Big_int.of_int (13)))) ->
      ZCapEx_PermitLoadViolation
    | zl__144 when (eq_int (zl__144, (Big_int.of_int (14)))) ->
      ZCapEx_PermitStoreViolation
    | zl__145 when (eq_int (zl__145, (Big_int.of_int (15)))) ->
      ZCapEx_PermitLoadCapViolation
    | zl__146 when (eq_int (zl__146, (Big_int.of_int (16)))) ->
      ZCapEx_PermitStoreCapViolation
    | zl__147 when (eq_int (zl__147, (Big_int.of_int (17)))) ->
      ZCapEx_PermitStoreLocalCapViolation
    | zl__148 when (eq_int (zl__148, (Big_int.of_int (18)))) ->
      ZCapEx_PermitSealViolation
    | zl__149 when (eq_int (zl__149, (Big_int.of_int (19)))) ->
      ZCapEx_AccessSystemRegsViolation
    | zl__150 when (eq_int (zl__150, (Big_int.of_int (20)))) ->
      ZCapEx_PermitCCallViolation
    | zl__151 when (eq_int (zl__151, (Big_int.of_int (21)))) ->
      ZCapEx_AccessCCallIDCViolation
    | zl__152 when (eq_int (zl__152, (Big_int.of_int (22)))) ->
      ZCapEx_PermitUnsealViolation
    | _ -> ZCapEx_PermitSetCIDViolation
  end)

and znum_of_CapEx (zargz3 : (zCapEx)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZCapEx_None -> Big_int.zero
    | ZCapEx_LengthViolation -> (Big_int.of_int (1))
    | ZCapEx_TagViolation -> (Big_int.of_int (2))
    | ZCapEx_SealViolation -> (Big_int.of_int (3))
    | ZCapEx_TypeViolation -> (Big_int.of_int (4))
    | ZCapEx_CallTrap -> (Big_int.of_int (5))
    | ZCapEx_ReturnTrap -> (Big_int.of_int (6))
    | ZCapEx_TSSUnderFlow -> (Big_int.of_int (7))
    | ZCapEx_UserDefViolation -> (Big_int.of_int (8))
    | ZCapEx_TLBNoStoreCap -> (Big_int.of_int (9))
    | ZCapEx_InexactBounds -> (Big_int.of_int (10))
    | ZCapEx_GlobalViolation -> (Big_int.of_int (11))
    | ZCapEx_PermitExecuteViolation -> (Big_int.of_int (12))
    | ZCapEx_PermitLoadViolation -> (Big_int.of_int (13))
    | ZCapEx_PermitStoreViolation -> (Big_int.of_int (14))
    | ZCapEx_PermitLoadCapViolation -> (Big_int.of_int (15))
    | ZCapEx_PermitStoreCapViolation -> (Big_int.of_int (16))
    | ZCapEx_PermitStoreLocalCapViolation -> (Big_int.of_int (17))
    | ZCapEx_PermitSealViolation -> (Big_int.of_int (18))
    | ZCapEx_AccessSystemRegsViolation -> (Big_int.of_int (19))
    | ZCapEx_PermitCCallViolation -> (Big_int.of_int (20))
    | ZCapEx_AccessCCallIDCViolation -> (Big_int.of_int (21))
    | ZCapEx_PermitUnsealViolation -> (Big_int.of_int (22))
    | ZCapEx_PermitSetCIDViolation -> (Big_int.of_int (23))
  end)

and zundefined_CapEx (() : (unit)) : zCapEx = sail_call (fun r ->
  internal_pick [ZCapEx_None; ZCapEx_LengthViolation; ZCapEx_TagViolation; ZCapEx_SealViolation; ZCapEx_TypeViolation; ZCapEx_CallTrap; ZCapEx_ReturnTrap; ZCapEx_TSSUnderFlow; ZCapEx_UserDefViolation; ZCapEx_TLBNoStoreCap; ZCapEx_InexactBounds; ZCapEx_GlobalViolation; ZCapEx_PermitExecuteViolation; ZCapEx_PermitLoadViolation; ZCapEx_PermitStoreViolation; ZCapEx_PermitLoadCapViolation; ZCapEx_PermitStoreCapViolation; ZCapEx_PermitStoreLocalCapViolation; ZCapEx_PermitSealViolation; ZCapEx_AccessSystemRegsViolation; ZCapEx_PermitCCallViolation; ZCapEx_AccessCCallIDCViolation; ZCapEx_PermitUnsealViolation; ZCapEx_PermitSetCIDViolation])

and zCapExCode (zex : (zCapEx)) : zbits = sail_call (fun r ->
  begin
    match zex with
    | ZCapEx_None -> [B0; B0; B0; B0; B0]
    | ZCapEx_LengthViolation -> [B0; B0; B0; B0; B1]
    | ZCapEx_TagViolation -> [B0; B0; B0; B1; B0]
    | ZCapEx_SealViolation -> [B0; B0; B0; B1; B1]
    | ZCapEx_TypeViolation -> [B0; B0; B1; B0; B0]
    | ZCapEx_CallTrap -> [B0; B0; B1; B0; B1]
    | ZCapEx_ReturnTrap -> [B0; B0; B1; B1; B0]
    | ZCapEx_TSSUnderFlow -> [B0; B0; B1; B1; B1]
    | ZCapEx_UserDefViolation -> [B0; B1; B0; B0; B0]
    | ZCapEx_TLBNoStoreCap -> [B0; B1; B0; B0; B1]
    | ZCapEx_InexactBounds -> [B0; B1; B0; B1; B0]
    | ZCapEx_GlobalViolation -> [B1; B0; B0; B0; B0]
    | ZCapEx_PermitExecuteViolation -> [B1; B0; B0; B0; B1]
    | ZCapEx_PermitLoadViolation -> [B1; B0; B0; B1; B0]
    | ZCapEx_PermitStoreViolation -> [B1; B0; B0; B1; B1]
    | ZCapEx_PermitLoadCapViolation -> [B1; B0; B1; B0; B0]
    | ZCapEx_PermitStoreCapViolation -> [B1; B0; B1; B0; B1]
    | ZCapEx_PermitStoreLocalCapViolation -> [B1; B0; B1; B1; B0]
    | ZCapEx_PermitSealViolation -> [B1; B0; B1; B1; B1]
    | ZCapEx_AccessSystemRegsViolation -> [B1; B1; B0; B0; B0]
    | ZCapEx_PermitCCallViolation -> [B1; B1; B0; B0; B1]
    | ZCapEx_AccessCCallIDCViolation -> [B1; B1; B0; B1; B0]
    | ZCapEx_PermitUnsealViolation -> [B1; B1; B0; B1; B1]
    | ZCapEx_PermitSetCIDViolation -> [B1; B1; B1; B0; B0]
  end)

and zstring_of_capex (zex : (zCapEx)) : string = sail_call (fun r ->
  begin
    match zex with
    | ZCapEx_None -> "None"
    | ZCapEx_LengthViolation -> "LengthViolation"
    | ZCapEx_TagViolation -> "TagViolation"
    | ZCapEx_SealViolation -> "SealViolation"
    | ZCapEx_TypeViolation -> "TypeViolation"
    | ZCapEx_CallTrap -> "CallTrap"
    | ZCapEx_ReturnTrap -> "ReturnTrap"
    | ZCapEx_TSSUnderFlow -> "TSSUnderFlow"
    | ZCapEx_UserDefViolation -> "UserDefViolation"
    | ZCapEx_TLBNoStoreCap -> "TLBNoStoreCap"
    | ZCapEx_InexactBounds -> "InexactBounds"
    | ZCapEx_GlobalViolation -> "GlobalViolation"
    | ZCapEx_PermitExecuteViolation -> "PermitExecuteViolation"
    | ZCapEx_PermitLoadViolation -> "PermitLoadViolation"
    | ZCapEx_PermitStoreViolation -> "PermitStoreViolation"
    | ZCapEx_PermitLoadCapViolation -> "PermitLoadCapViolation"
    | ZCapEx_PermitStoreCapViolation -> "PermitStoreCapViolation"
    | ZCapEx_PermitStoreLocalCapViolation -> "PermitStoreLocalCapViolation"
    | ZCapEx_PermitSealViolation -> "PermitSealViolation"
    | ZCapEx_AccessSystemRegsViolation -> "AccessSystemRegsViolation"
    | ZCapEx_PermitCCallViolation -> "PermitCCallViolation"
    | ZCapEx_AccessCCallIDCViolation -> "AccessCCallIDCViolation"
    | ZCapEx_PermitUnsealViolation -> "PermitUnsealViolation"
    | ZCapEx_PermitSetCIDViolation -> "PermitSetCIDViolation"
  end)

type  zCapBits = zbits;;

let string_of_zCapBits (gs667 : zCapBits) = string_of_zbits gs667;;

let zmax_otype = (zMAX (Big_int.of_int (18)));;

type  zCapability = {
  ztag : bool;
  zuperms : zbits;
  zpermit_set_CID : bool;
  zaccess_system_regs : bool;
  zpermit_unseal : bool;
  zpermit_ccall : bool;
  zpermit_seal : bool;
  zpermit_store_local_cap : bool;
  zpermit_store_cap : bool;
  zpermit_load_cap : bool;
  zpermit_store : bool;
  zpermit_load : bool;
  zpermit_execute : bool;
  zglobal : bool;
  zreserved : zbits;
  zinternal_e : bool;
  zE : zbits;
  zsealed : bool;
  zB : zbits;
  zT : zbits;
  zotype : zbits;
  zaddress : zbits
};;

let string_of_zCapability (gs668 : zCapability) =
  "{tag = " ^ string_of_zbool gs668.ztag
  ^ ", uperms = " ^ string_of_zbits gs668.zuperms
  ^ ", permit_set_CID = " ^ string_of_zbool gs668.zpermit_set_CID
  ^ ", access_system_regs = " ^ string_of_zbool gs668.zaccess_system_regs
  ^ ", permit_unseal = " ^ string_of_zbool gs668.zpermit_unseal
  ^ ", permit_ccall = " ^ string_of_zbool gs668.zpermit_ccall
  ^ ", permit_seal = " ^ string_of_zbool gs668.zpermit_seal
  ^ ", permit_store_local_cap = " ^ string_of_zbool gs668.zpermit_store_local_cap
  ^ ", permit_store_cap = " ^ string_of_zbool gs668.zpermit_store_cap
  ^ ", permit_load_cap = " ^ string_of_zbool gs668.zpermit_load_cap
  ^ ", permit_store = " ^ string_of_zbool gs668.zpermit_store
  ^ ", permit_load = " ^ string_of_zbool gs668.zpermit_load
  ^ ", permit_execute = " ^ string_of_zbool gs668.zpermit_execute
  ^ ", global = " ^ string_of_zbool gs668.zglobal
  ^ ", reserved = " ^ string_of_zbits gs668.zreserved
  ^ ", internal_e = " ^ string_of_zbool gs668.zinternal_e
  ^ ", E = " ^ string_of_zbits gs668.zE
  ^ ", sealed = " ^ string_of_zbool gs668.zsealed
  ^ ", B = " ^ string_of_zbits gs668.zB
  ^ ", T = " ^ string_of_zbits gs668.zT
  ^ ", otype = " ^ string_of_zbits gs668.zotype
  ^ ", address = " ^ string_of_zbits gs668.zaddress ^ "}";;

let rec zundefined_Capability (() : (unit)) : zCapability = sail_call (fun r ->
  {ztag = undefined_bool ();
  zuperms = undefined_vector ((Big_int.of_int (4)), (undefined_bit ()));
  zpermit_set_CID = undefined_bool ();
  zaccess_system_regs = undefined_bool ();
  zpermit_unseal = undefined_bool ();
  zpermit_ccall = undefined_bool ();
  zpermit_seal = undefined_bool ();
  zpermit_store_local_cap = undefined_bool ();
  zpermit_store_cap = undefined_bool ();
  zpermit_load_cap = undefined_bool ();
  zpermit_store = undefined_bool ();
  zpermit_load = undefined_bool ();
  zpermit_execute = undefined_bool ();
  zglobal = undefined_bool ();
  zreserved = undefined_vector ((Big_int.of_int (3)), (undefined_bit ()));
  zinternal_e = undefined_bool ();
  zE = undefined_vector ((Big_int.of_int (6)), (undefined_bit ()));
  zsealed = undefined_bool ();
  zB = undefined_vector ((Big_int.of_int (14)), (undefined_bit ()));
  zT = undefined_vector ((Big_int.of_int (14)), (undefined_bit ()));
  zotype = undefined_vector ((Big_int.of_int (18)), (undefined_bit ()));
  zaddress = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

let zresetE = (zto_bits ((Big_int.of_int (6)), (Big_int.of_int (52))));;

let zresetT = (append ([B0; B1], [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0]));;

let znull_cap = ({ztag = false;
zuperms = zzzeros_implicit (Big_int.of_int (4));
zpermit_set_CID = false;
zaccess_system_regs = false;
zpermit_unseal = false;
zpermit_ccall = false;
zpermit_seal = false;
zpermit_store_local_cap = false;
zpermit_store_cap = false;
zpermit_load_cap = false;
zpermit_store = false;
zpermit_load = false;
zpermit_execute = false;
zglobal = false;
zreserved = zzzeros_implicit (Big_int.of_int (3));
zinternal_e = true;
zE = zresetE;
zsealed = false;
zB = zzzeros_implicit (Big_int.of_int (14));
zT = zresetT;
zotype = zones_implicit (Big_int.of_int (18));
zaddress = zzzeros_implicit (Big_int.of_int (64))});;

let zdefault_cap = ({ztag = true;
zuperms = zones_implicit (Big_int.of_int (4));
zpermit_set_CID = true;
zaccess_system_regs = true;
zpermit_unseal = true;
zpermit_ccall = true;
zpermit_seal = true;
zpermit_store_local_cap = true;
zpermit_store_cap = true;
zpermit_load_cap = true;
zpermit_store = true;
zpermit_load = true;
zpermit_execute = true;
zglobal = true;
zreserved = zzzeros_implicit (Big_int.of_int (3));
zinternal_e = true;
zE = zresetE;
zsealed = false;
zB = zzzeros_implicit (Big_int.of_int (14));
zT = zresetT;
zotype = zones_implicit (Big_int.of_int (18));
zaddress = zzzeros_implicit (Big_int.of_int (64))});;

let rec zcapBitsToCapability ((zt, zc) : (bool * zCapBits)) : zCapability = sail_call (fun r ->
  let zinternal_exponent = ref ((zbit_to_bool (access (zc, (Big_int.of_int (90))))) : bool) in
  let zotype = ref ((subrange (zc, (Big_int.of_int (108)), (Big_int.of_int (91)))) : (bit) list) in
  let zsealed = (zneq_vec (!zotype, (zones_implicit (Big_int.of_int (18))))) in
  let zE = ref ((zzzeros_implicit (Big_int.of_int (6))) : (bit) list) in
  let zBs = ref ((zzzeros_implicit (Big_int.of_int (14))) : (bit) list) in
  let zT = ref ((zzzeros_implicit (Big_int.of_int (12))) : (bit) list) in
  let zlenMSBs = ref ((zzzeros_implicit (Big_int.of_int (2))) : (bit) list) in
  begin
    if !zinternal_exponent then (begin
      zE := (append ((subrange (zc, (Big_int.of_int (80)), (Big_int.of_int (78)))), (subrange (zc, (Big_int.of_int (66)), (Big_int.of_int (64))))));
      zlenMSBs := ([B0; B1]);
      zT := (append ((subrange (zc, (Big_int.of_int (89)), (Big_int.of_int (81)))), [B0; B0; B0]));
      zBs := (append ((subrange (zc, (Big_int.of_int (77)), (Big_int.of_int (67)))), [B0; B0; B0]))
    end) else (begin
      zlenMSBs := ([B0; B0]);
      zT := (subrange (zc, (Big_int.of_int (89)), (Big_int.of_int (78))));
      zBs := (subrange (zc, (Big_int.of_int (77)), (Big_int.of_int (64))))
    end);
    let zcarry_out = ref ((if (zz8operatorz0zI_uz9 (!zT, (subrange (!zBs, (Big_int.of_int (11)), Big_int.zero)))) then [B0; B1] else [B0; B0]) : (bit) list) in
    let zTtop2 = ref ((add_vec ((add_vec ((subrange (!zBs, (Big_int.of_int (13)), (Big_int.of_int (12)))), !zlenMSBs)), !zcarry_out)) : (bit) list) in
    r.return ({ztag = zt;
    zuperms = subrange (zc, (Big_int.of_int (127)), (Big_int.of_int (124)));
    zpermit_set_CID = zbit_to_bool (access (zc, (Big_int.of_int (123))));
    zaccess_system_regs = zbit_to_bool (access (zc, (Big_int.of_int (122))));
    zpermit_unseal = zbit_to_bool (access (zc, (Big_int.of_int (121))));
    zpermit_ccall = zbit_to_bool (access (zc, (Big_int.of_int (120))));
    zpermit_seal = zbit_to_bool (access (zc, (Big_int.of_int (119))));
    zpermit_store_local_cap = zbit_to_bool (access (zc, (Big_int.of_int (118))));
    zpermit_store_cap = zbit_to_bool (access (zc, (Big_int.of_int (117))));
    zpermit_load_cap = zbit_to_bool (access (zc, (Big_int.of_int (116))));
    zpermit_store = zbit_to_bool (access (zc, (Big_int.of_int (115))));
    zpermit_load = zbit_to_bool (access (zc, (Big_int.of_int (114))));
    zpermit_execute = zbit_to_bool (access (zc, (Big_int.of_int (113))));
    zglobal = zbit_to_bool (access (zc, (Big_int.of_int (112))));
    zreserved = subrange (zc, (Big_int.of_int (111)), (Big_int.of_int (109)));
    zinternal_e = !zinternal_exponent;
    zE = !zE;
    zsealed = zsealed;
    zB = !zBs;
    zT = append (!zTtop2, !zT);
    zotype = !zotype;
    zaddress = subrange (zc, (Big_int.of_int (63)), Big_int.zero)})
  end)

and zgetCapHardPerms (zcap : (zCapability)) : zbits = sail_call (fun r ->
  append ((zbool_to_bits (zcap.zpermit_set_CID)), (append ((zbool_to_bits (zcap.zaccess_system_regs)), (append ((zbool_to_bits (zcap.zpermit_unseal)), (append ((zbool_to_bits (zcap.zpermit_ccall)), (append ((zbool_to_bits (zcap.zpermit_seal)), (append ((zbool_to_bits (zcap.zpermit_store_local_cap)), (append ((zbool_to_bits (zcap.zpermit_store_cap)), (append ((zbool_to_bits (zcap.zpermit_load_cap)), (append ((zbool_to_bits (zcap.zpermit_store)), (append ((zbool_to_bits (zcap.zpermit_load)), (append ((zbool_to_bits (zcap.zpermit_execute)), (zbool_to_bits (zcap.zglobal))))))))))))))))))))))))

and zcapToBits (zcap : (zCapability)) : zbits = sail_call (fun r ->
  let zt_hi = ref ((subrange ((zcap.zT), (Big_int.of_int (11)), (Big_int.of_int (3)))) : (bit) list) in
  let zt_lo = ref ((subrange ((zcap.zT), (Big_int.of_int (2)), Big_int.zero)) : (bit) list) in
  let zb_hi = ref ((subrange ((zcap.zB), (Big_int.of_int (13)), (Big_int.of_int (3)))) : (bit) list) in
  let zb_lo = ref ((subrange ((zcap.zB), (Big_int.of_int (2)), Big_int.zero)) : (bit) list) in
  begin
    if (zcap.zinternal_e) then (begin
      zt_lo := (subrange ((zcap.zE), (Big_int.of_int (5)), (Big_int.of_int (3))));
      zb_lo := (subrange ((zcap.zE), (Big_int.of_int (2)), Big_int.zero))
    end) else ();
    r.return (append ((zcap.zuperms), (append ((zgetCapHardPerms zcap), (append ((zcap.zreserved), (append ((zcap.zotype), (append ((zbool_to_bits (zcap.zinternal_e)), (append (!zt_hi, (append (!zt_lo, (append (!zb_hi, (append (!zb_lo, (zcap.zaddress)))))))))))))))))))
  end)

let znull_cap_bits = (zcapToBits znull_cap);;

let rec zcapToMemBits (zcap : (zCapability)) : zbits = sail_call (fun r ->
  xor_vec ((zcapToBits zcap), znull_cap_bits))

and zmemBitsToCapability ((ztag, zb) : (bool * zbits)) : zCapability = sail_call (fun r ->
  zcapBitsToCapability (ztag, (xor_vec (zb, znull_cap_bits))))

and zgetCapPerms (zcap : (zCapability)) : zbits = sail_call (fun r ->
  let zperms = (zEXTZ ((Big_int.of_int (15)), (zgetCapHardPerms zcap))) in
  append ([B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0], (append ((zcap.zuperms), zperms))))

and zsetCapPerms ((zcap, zperms) : (zCapability * zbits)) : zCapability = sail_call (fun r ->
  {zcap with zuperms = subrange (zperms, (Big_int.of_int (18)), (Big_int.of_int (15))); zpermit_set_CID = zbit_to_bool (access (zperms, (Big_int.of_int (11)))); zaccess_system_regs = zbit_to_bool (access (zperms, (Big_int.of_int (10)))); zpermit_unseal = zbit_to_bool (access (zperms, (Big_int.of_int (9)))); zpermit_ccall = zbit_to_bool (access (zperms, (Big_int.of_int (8)))); zpermit_seal = zbit_to_bool (access (zperms, (Big_int.of_int (7)))); zpermit_store_local_cap = zbit_to_bool (access (zperms, (Big_int.of_int (6)))); zpermit_store_cap = zbit_to_bool (access (zperms, (Big_int.of_int (5)))); zpermit_load_cap = zbit_to_bool (access (zperms, (Big_int.of_int (4)))); zpermit_store = zbit_to_bool (access (zperms, (Big_int.of_int (3)))); zpermit_load = zbit_to_bool (access (zperms, (Big_int.of_int (2)))); zpermit_execute = zbit_to_bool (access (zperms, (Big_int.of_int (1)))); zglobal = zbit_to_bool (access (zperms, Big_int.zero))})

and zsealCap ((zcap, zotyp) : (zCapability * zbits)) : (bool * zCapability) = sail_call (fun r ->
  (true, {zcap with zsealed = true; zotype = subrange (zotyp, (Big_int.of_int (17)), Big_int.zero)}))

and zunsealCap (zcap : (zCapability)) : zCapability = sail_call (fun r ->
  {zcap with zsealed = false; zotype = zones_implicit (Big_int.of_int (18))})

and za_top_correction ((za_mid, zR, zbound) : (zbits * zbits * zbits)) : zbits = sail_call (fun r ->
  begin
    match (zz8operatorz0zI_uz9 (za_mid, zR), zz8operatorz0zI_uz9 (zbound, zR)) with
    | (zp0z3, zp1z3) when ((eq_bool (zp1z3, false)) && (eq_bool (zp0z3, false))) ->
      zzzeros_implicit (Big_int.of_int (65))
    | (zp0z3, zp1z3) when ((eq_bool (zp1z3, true)) && (eq_bool (zp0z3, false))) ->
      zEXTZ ((Big_int.of_int (65)), [B1])
    | (zp0z3, zp1z3) when ((eq_bool (zp1z3, false)) && (eq_bool (zp0z3, true))) ->
      zones_implicit (Big_int.of_int (65))
    | (zp0z3, zp1z3) when ((eq_bool (zp1z3, true)) && (eq_bool (zp0z3, true))) ->
      zzzeros_implicit (Big_int.of_int (65))
  end)

and zgetCapBounds (zc : (zCapability)) : (zuint64 * zCapLen) = sail_call (fun r ->
  let zE = (uint (zc.zE)) in
  let za = (zEXTZ ((Big_int.of_int (65)), (zc.zaddress))) in
  let za3 = (vector_truncate ((shiftr (za, (add_int (zE, (Big_int.of_int (11)))))), (Big_int.of_int (3)))) in
  let zB3 = (vector_truncateLSB ((zc.zB), (Big_int.of_int (3)))) in
  let zT3 = (vector_truncateLSB ((zc.zT), (Big_int.of_int (3)))) in
  let zR3 = (sub_vec (zB3, [B0; B0; B1])) in
  let zcorrection_base = (za_top_correction (za3, zR3, zB3)) in
  let zcorrection_top = (za_top_correction (za3, zR3, zT3)) in
  let za_top = (shiftr (za, (add_int (zE, (Big_int.of_int (14)))))) in
  let ze_zzeros = (zzzeros_implicit zE) in
  let zbase = (vector_truncate ((append ((add_vec (za_top, zcorrection_base)), (append ((zc.zB), ze_zzeros)))), (Big_int.of_int (64)))) in
  let ztop = (vector_truncate ((append ((add_vec (za_top, zcorrection_top)), (append ((zc.zT), ze_zzeros)))), (Big_int.of_int (65)))) in
  (uint zbase, uint ztop))

and zgetCapBase (zc : (zCapability)) : zuint64 = sail_call (fun r ->
  let (zbase, _) = (zgetCapBounds zc) in
  zbase)

and zgetCapTop (zc : (zCapability)) : zCapLen = sail_call (fun r ->
  let (_, ztop) = (zgetCapBounds zc) in
  ztop)

and zgetCapOffset (zc : (zCapability)) : zuint64 = sail_call (fun r ->
  let zbase = (zgetCapBase zc) in
  modulus ((sub_int ((uint (zc.zaddress)), zbase)), (pow2 (Big_int.of_int (64)))))

and zgetCapOffsetBits (zc : (zCapability)) : zbits = sail_call (fun r ->
  let zbase = (zgetCapBase zc) in
  sub_vec ((zc.zaddress), (zto_bits ((Big_int.of_int (64)), zbase))))

and zgetCapLength (zc : (zCapability)) : zCapLen = sail_call (fun r ->
  let (zbase, ztop) = (zgetCapBounds zc) in
  begin
    assert ((not (zc.ztag)) || (gteq (ztop, zbase)));
    modulus ((sub_int (ztop, zbase)), (pow2 (Big_int.of_int (65))))
  end)

and zgetCapCursor (zcap : (zCapability)) : zuint64 = sail_call (fun r ->
  uint (zcap.zaddress))

and zint_to_cap (zoffset : (zbits)) : zCapability = sail_call (fun r ->
  {znull_cap with zaddress = zoffset})

and zcapBoundsEqual ((zc1, zc2) : (zCapability * zCapability)) : bool = sail_call (fun r ->
  let (zbase1, ztop1) = (zgetCapBounds zc1) in
  let (zbase2, ztop2) = (zgetCapBounds zc2) in
  (eq_int (zbase1, zbase2)) && (eq_int (ztop1, ztop2)))

and zsetCapAddr ((zc, zaddr) : (zCapability * (bit) list)) : (bool * zCapability) = sail_call (fun r ->
  let znewCap = ({zc with zaddress = zaddr}) in
  let zrepresentable = (zcapBoundsEqual (zc, znewCap)) in
  (zrepresentable, znewCap))

and zsetCapAddrOrNull ((zcap, zaddr) : (zCapability * zbits)) : zCapability = sail_call (fun r ->
  let (zrepresentable, znewCap) = (zsetCapAddr (zcap, zaddr)) in
  if zrepresentable then znewCap else (zint_to_cap zaddr))

and zsetCapOffset ((zc, zoffset) : (zCapability * zbits)) : (bool * zCapability) = sail_call (fun r ->
  let zbase64 = (zto_bits ((Big_int.of_int (64)), (zgetCapBase zc))) in
  let znewAddress = (add_vec (zbase64, zoffset)) in
  let znewCap = ({zc with zaddress = znewAddress}) in
  let zrepresentable = (zcapBoundsEqual (zc, znewCap)) in
  (zrepresentable, znewCap))

and zsetCapOffsetOrNull ((zcap, zoffset) : (zCapability * zbits)) : zCapability = sail_call (fun r ->
  let (zrepresentable, znewCap) = (zsetCapOffset (zcap, zoffset)) in
  if zrepresentable then znewCap else (zint_to_cap (znewCap.zaddress)))

and zincCapOffset ((zc, zdelta) : (zCapability * zbits)) : (bool * zCapability) = sail_call (fun r ->
  let znewAddress = (add_vec ((zc.zaddress), zdelta)) in
  let znewCap = ({zc with zaddress = znewAddress}) in
  let zrepresentable = (zcapBoundsEqual (zc, znewCap)) in
  (zrepresentable, znewCap))

and zCountLeadingZeros (zx : ((bit) list)) : Big_int.num = sail_call (fun r ->
  begin
    let rec loop zi =
      if Big_int.greater_equal zi Big_int.zero
      then ((if (eq_list ([access (zx, zi)], [B1])) then (r.return (sub_int ((sub_int ((length zx), zi)), (Big_int.of_int (1))))) else ()); loop (Big_int.sub zi (Big_int.of_int (1))))
      else ()
    in
    loop (sub_int ((length zx), (Big_int.of_int (1))));
    r.return (length zx)
  end)

and zsetCapBounds ((zcap, zbase, ztop) : (zCapability * zbits * zbits)) : (bool * zCapability) = sail_call (fun r ->
  let zbase65 = (append ([B0], zbase)) in
  let zlength = (sub_vec (ztop, zbase65)) in
  let ze = (sub_int ((Big_int.of_int (52)), (zCountLeadingZeros (subrange (zlength, (Big_int.of_int (64)), (Big_int.of_int (13))))))) in
  let zie = ((zneq_int (ze, Big_int.zero)) || (zbit_to_bool (access (zlength, (Big_int.of_int (12)))))) in
  let zBbits = ref ((vector_truncate (zbase, (Big_int.of_int (14)))) : (bit) list) in
  let zTbits = ref ((vector_truncate (ztop, (Big_int.of_int (14)))) : (bit) list) in
  let zlostSignificantTop = ref (false : bool) in
  let zlostSignificantBase = ref (false : bool) in
  let zincE = ref (false : bool) in
  begin
    if zie then (let zB_ie = ref ((vector_truncate ((shiftr (zbase, (add_int (ze, (Big_int.of_int (3)))))), (Big_int.of_int (11)))) : (bit) list) in
    let zT_ie = ref ((vector_truncate ((shiftr (ztop, (add_int (ze, (Big_int.of_int (3)))))), (Big_int.of_int (11)))) : (bit) list) in
    let zmaskLo = ref ((zEXTZ ((Big_int.of_int (65)), (replicate_bits ([B1], (add_int (ze, (Big_int.of_int (3)))))))) : (bit) list) in
    let zzz65 = ref ((zzzeros_implicit (Big_int.of_int (65))) : (bit) list) in
    begin
      zlostSignificantBase := (zneq_vec ((and_vec (zbase65, !zmaskLo)), !zzz65));
      zlostSignificantTop := (zneq_vec ((and_vec (ztop, !zmaskLo)), !zzz65));
      if !zlostSignificantTop then (zT_ie := (add_vec_int (!zT_ie, (Big_int.of_int (1))))) else ();
      let zlen_ie = ref ((sub_vec (!zT_ie, !zB_ie)) : (bit) list) in
      begin
        if (zbit_to_bool (access (!zlen_ie, (Big_int.of_int (10))))) then (begin
          zincE := (true);
          zlostSignificantBase := (!zlostSignificantBase || (zbit_to_bool (access (!zB_ie, Big_int.zero))));
          zlostSignificantTop := (!zlostSignificantTop || (zbit_to_bool (access (!zT_ie, Big_int.zero))));
          zB_ie := (vector_truncate ((shiftr (zbase, (add_int (ze, (Big_int.of_int (4)))))), (Big_int.of_int (11))));
          let zincT = (if !zlostSignificantTop then (Big_int.of_int (1)) else Big_int.zero) in
          zT_ie := (add_vec_int ((vector_truncate ((shiftr (ztop, (add_int (ze, (Big_int.of_int (4)))))), (Big_int.of_int (11)))), zincT))
        end) else ();
        zBbits := (append (!zB_ie, [B0; B0; B0]));
        zTbits := (append (!zT_ie, [B0; B0; B0]))
      end
    end) else ();
    let znewCap = ({zcap with zaddress = zbase; zE = zto_bits ((Big_int.of_int (6)), (if !zincE then (add_int (ze, (Big_int.of_int (1)))) else ze)); zB = !zBbits; zT = !zTbits; zinternal_e = zie}) in
    let zexact = (not (!zlostSignificantBase || !zlostSignificantTop)) in
    (zexact, znewCap)
  end)

and zcapToString (zcap : (zCapability)) : string = sail_call (fun r ->
  let zlen = (zgetCapLength zcap) in
  let zlen_str = (string_of_bits (zto_bits ((Big_int.of_int (68)), zlen))) in
  let zotype64 = (if (zcap.zsealed) then (zEXTZ ((Big_int.of_int (64)), (zcap.zotype))) else (zones_implicit (Big_int.of_int (64)))) in
  concat_str (" t:", (concat_str ((if (zcap.ztag) then "1" else "0"), (concat_str (" s:", (concat_str ((if (zcap.zsealed) then "1" else "0"), (concat_str (" perms:", (concat_str ((string_of_bits (append ([B0], (zgetCapPerms zcap)))), (concat_str (" type:", (concat_str ((string_of_bits zotype64), (concat_str (" offset:", (concat_str ((string_of_bits (zto_bits ((Big_int.of_int (64)), (zgetCapOffset zcap)))), (concat_str (" base:", (concat_str ((string_of_bits (zto_bits ((Big_int.of_int (64)), (zgetCapBase zcap)))), (concat_str (" length:", zlen_str))))))))))))))))))))))))))

and zcheckCP2usable (() : (unit)) : unit = sail_call (fun r -> ())

let zxlen = (Big_int.of_int (64));;

type  zxlenbits = zbits;;

let string_of_zxlenbits (gs811 : zxlenbits) = string_of_zbits gs811;;

let zxlen_max_unsigned = (sub_int ((pow2 zxlen), (Big_int.of_int (1))));;

let zxlen_max_signed = (sub_int ((pow2 (sub_int (zxlen, (Big_int.of_int (1))))), (Big_int.of_int (1))));;

let zxlen_min_signed = (sub_int (Big_int.zero, (pow2 (sub_int (zxlen, (Big_int.of_int (1)))))));;

type  zhalf = zbits;;

let string_of_zhalf (gs812 : zhalf) = string_of_zbits gs812;;

type  zword = zbits;;

let string_of_zword (gs813 : zword) = string_of_zbits gs813;;

type  zregbits = zbits;;

let string_of_zregbits (gs814 : zregbits) = string_of_zbits gs814;;

type  zcregbits = zbits;;

let string_of_zcregbits (gs815 : zcregbits) = string_of_zbits gs815;;

type  zcsreg = zbits;;

let string_of_zcsreg (gs816 : zcsreg) = string_of_zbits gs816;;

type  zregno = Big_int.num;;

let string_of_zregno (gs817 : zregno) = string_of_zint gs817;;

let rec zregbits_to_regno (zb : ((bit) list)) : Big_int.num = sail_call (fun r ->
  let zr = (uint zb) in
  zr)

and zcreg2reg_bits (zcreg : ((bit) list)) : (bit) list = sail_call (fun r ->
  append ([B0; B1], zcreg))

let zzzreg = [B0; B0; B0; B0; B0];;

let zra = [B0; B0; B0; B0; B1];;

let zsp = [B0; B0; B0; B1; B0];;

let zPC : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let znextPC : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let zinstbits : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let zPCC : (zCapability) ref = ref (zundefined_Capability ());;

let znextPCC : (zCapability) ref = ref (zundefined_Capability ());;

let zDDC : (zCapability) ref = ref (zundefined_Capability ());;

let zUTCC : (zCapability) ref = ref (zundefined_Capability ());;

let zUScratchC : (zCapability) ref = ref (zundefined_Capability ());;

let zUEPCC : (zCapability) ref = ref (zundefined_Capability ());;

let zSTCC : (zCapability) ref = ref (zundefined_Capability ());;

let zSScratchC : (zCapability) ref = ref (zundefined_Capability ());;

let zSEPCC : (zCapability) ref = ref (zundefined_Capability ());;

let zMTCC : (zCapability) ref = ref (zundefined_Capability ());;

let zMScratchC : (zCapability) ref = ref (zundefined_Capability ());;

let zMEPCC : (zCapability) ref = ref (zundefined_Capability ());;

let zx1 : (zCapability) ref = ref (zundefined_Capability ());;

let zx2 : (zCapability) ref = ref (zundefined_Capability ());;

let zx3 : (zCapability) ref = ref (zundefined_Capability ());;

let zx4 : (zCapability) ref = ref (zundefined_Capability ());;

let zx5 : (zCapability) ref = ref (zundefined_Capability ());;

let zx6 : (zCapability) ref = ref (zundefined_Capability ());;

let zx7 : (zCapability) ref = ref (zundefined_Capability ());;

let zx8 : (zCapability) ref = ref (zundefined_Capability ());;

let zx9 : (zCapability) ref = ref (zundefined_Capability ());;

let zx10 : (zCapability) ref = ref (zundefined_Capability ());;

let zx11 : (zCapability) ref = ref (zundefined_Capability ());;

let zx12 : (zCapability) ref = ref (zundefined_Capability ());;

let zx13 : (zCapability) ref = ref (zundefined_Capability ());;

let zx14 : (zCapability) ref = ref (zundefined_Capability ());;

let zx15 : (zCapability) ref = ref (zundefined_Capability ());;

let zx16 : (zCapability) ref = ref (zundefined_Capability ());;

let zx17 : (zCapability) ref = ref (zundefined_Capability ());;

let zx18 : (zCapability) ref = ref (zundefined_Capability ());;

let zx19 : (zCapability) ref = ref (zundefined_Capability ());;

let zx20 : (zCapability) ref = ref (zundefined_Capability ());;

let zx21 : (zCapability) ref = ref (zundefined_Capability ());;

let zx22 : (zCapability) ref = ref (zundefined_Capability ());;

let zx23 : (zCapability) ref = ref (zundefined_Capability ());;

let zx24 : (zCapability) ref = ref (zundefined_Capability ());;

let zx25 : (zCapability) ref = ref (zundefined_Capability ());;

let zx26 : (zCapability) ref = ref (zundefined_Capability ());;

let zx27 : (zCapability) ref = ref (zundefined_Capability ());;

let zx28 : (zCapability) ref = ref (zundefined_Capability ());;

let zx29 : (zCapability) ref = ref (zundefined_Capability ());;

let zx30 : (zCapability) ref = ref (zundefined_Capability ());;

let zx31 : (zCapability) ref = ref (zundefined_Capability ());;

let zCapRegs = [zx31; zx30; zx29; zx28; zx27; zx26; zx25; zx24; zx23; zx22; zx21; zx20; zx19; zx18; zx17; zx16; zx15; zx14; zx13; zx12; zx11; zx10; zx9; zx8; zx7; zx6; zx5; zx4; zx3; zx2; zx1; zDDC];;

let rec zreadCapReg (zn : (Big_int.num)) : zCapability = sail_call (fun r ->
  if (eq_int (zn, Big_int.zero)) then znull_cap else (reg_deref (access (zCapRegs, zn))))

and zreadCapRegDDC (zn : (Big_int.num)) : zCapability = sail_call (fun r ->
  reg_deref (access (zCapRegs, zn)))

and zrvfi_wX ((zr, zv) : (Big_int.num * (bit) list)) : unit = sail_call (fun r ->
  ())

and zwriteCapReg ((zn, zcap) : (Big_int.num * zCapability)) : unit = sail_call (fun r ->
  if (zneq_int (zn, Big_int.zero)) then (begin
    zrvfi_wX (zn, (zcap.zaddress));
    (access (zCapRegs, zn)) := (zcap)
  end) else ())

and zinit_regs (() : (unit)) : unit = sail_call (fun r ->
  begin
    zPCC := zdefault_cap;
    zDDC := zdefault_cap;
    znextPCC := zdefault_cap;
    zUTCC := zdefault_cap;
    zUScratchC := znull_cap;
    zUEPCC := znull_cap;
    zSTCC := zdefault_cap;
    zSScratchC := znull_cap;
    zSEPCC := znull_cap;
    zMTCC := zdefault_cap;
    zMScratchC := znull_cap;
    zMEPCC := znull_cap;
    let rec loop zi =
      if Big_int.less_equal zi (Big_int.of_int (31))
      then (((access (zCapRegs, zi)) := (zdefault_cap)); loop (Big_int.add zi (Big_int.of_int (1))))
      else ()
    in
    loop (Big_int.of_int (1))
  end)

and zrX (zr : (Big_int.num)) : (bit) list = sail_call (fun r ->
  let zcap_val = (zreadCapReg zr) in
  zcap_val.zaddress)

and zwX ((zr, zv) : (Big_int.num * (bit) list)) : unit = sail_call (fun r ->
  begin
    zwriteCapReg (zr, ({znull_cap with zaddress = zv}));
    if (zneq_int (zr, Big_int.zero)) then (Platform.print_reg (concat_str ("x", (concat_str ((string_of_int zr), (concat_str (" <- ", (string_of_bits zv)))))))) else ()
  end)

and zreg_name_abi (zr : ((bit) list)) : string = sail_call (fun r ->
  begin
    match zr with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__0, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "zero"
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__1, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "ra"
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__2, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "sp"
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__3, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "gp"
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__4, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "tp"
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__5, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "t0"
    | zb__6 when (let zp0z3 = (access (zb__6, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__6, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__6, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__6, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__6, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "t1"
    | zb__7 when (let zp0z3 = (access (zb__7, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__7, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__7, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__7, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__7, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "t2"
    | zb__8 when (let zp0z3 = (access (zb__8, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__8, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__8, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__8, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__8, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "fp"
    | zb__9 when (let zp0z3 = (access (zb__9, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__9, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__9, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__9, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__9, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "s1"
    | zb__10 when (let zp0z3 = (access (zb__10, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__10, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__10, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__10, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__10, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "a0"
    | zb__11 when (let zp0z3 = (access (zb__11, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__11, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__11, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__11, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__11, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "a1"
    | zb__12 when (let zp0z3 = (access (zb__12, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__12, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__12, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__12, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__12, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "a2"
    | zb__13 when (let zp0z3 = (access (zb__13, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__13, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__13, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__13, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__13, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "a3"
    | zb__14 when (let zp0z3 = (access (zb__14, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__14, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__14, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__14, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__14, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "a4"
    | zb__15 when (let zp0z3 = (access (zb__15, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__15, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__15, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__15, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__15, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "a5"
    | zb__16 when (let zp0z3 = (access (zb__16, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__16, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__16, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__16, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__16, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "a6"
    | zb__17 when (let zp0z3 = (access (zb__17, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__17, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__17, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__17, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__17, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "a7"
    | zb__18 when (let zp0z3 = (access (zb__18, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__18, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__18, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__18, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__18, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "s2"
    | zb__19 when (let zp0z3 = (access (zb__19, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__19, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__19, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__19, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__19, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "s3"
    | zb__20 when (let zp0z3 = (access (zb__20, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__20, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__20, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__20, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__20, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "s4"
    | zb__21 when (let zp0z3 = (access (zb__21, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__21, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__21, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__21, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__21, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "s5"
    | zb__22 when (let zp0z3 = (access (zb__22, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__22, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__22, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__22, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__22, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "s6"
    | zb__23 when (let zp0z3 = (access (zb__23, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__23, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__23, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__23, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__23, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "s7"
    | zb__24 when (let zp0z3 = (access (zb__24, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__24, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__24, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__24, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__24, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "s8"
    | zb__25 when (let zp0z3 = (access (zb__25, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__25, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__25, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__25, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__25, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "s9"
    | zb__26 when (let zp0z3 = (access (zb__26, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__26, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__26, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__26, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__26, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "s10"
    | zb__27 when (let zp0z3 = (access (zb__27, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__27, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__27, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__27, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__27, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "s11"
    | zb__28 when (let zp0z3 = (access (zb__28, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__28, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__28, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__28, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__28, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "t3"
    | zb__29 when (let zp0z3 = (access (zb__29, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__29, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__29, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__29, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__29, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "t4"
    | zb__30 when (let zp0z3 = (access (zb__30, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__30, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__30, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__30, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__30, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "t5"
    | zb__31 when (let zp0z3 = (access (zb__31, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__31, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__31, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__31, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__31, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "t6"
  end)

type  zopcode = zbits;;

let string_of_zopcode (gs873 : zopcode) = string_of_zbits gs873;;

type  zimm12 = zbits;;

let string_of_zimm12 (gs874 : zimm12) = string_of_zbits gs874;;

type  zimm20 = zbits;;

let string_of_zimm20 (gs875 : zimm20) = string_of_zbits gs875;;

type  zamo = zbits;;

let string_of_zamo (gs876 : zamo) = string_of_zbits gs876;;

type zArchitecture = | ZRV32 | ZRV64 | ZRV128;;

let string_of_zArchitecture = function
  | ZRV32 -> "RV32"
  | ZRV64 -> "RV64"
  | ZRV128 -> "RV128";;

let rec zArchitecture_of_num (zargz3 : (Big_int.num)) : zArchitecture = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__128 when (eq_int (zl__128, Big_int.zero)) -> ZRV32
    | zl__129 when (eq_int (zl__129, (Big_int.of_int (1)))) -> ZRV64
    | _ -> ZRV128
  end)

and znum_of_Architecture (zargz3 : (zArchitecture)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRV32 -> Big_int.zero
    | ZRV64 -> (Big_int.of_int (1))
    | ZRV128 -> (Big_int.of_int (2))
  end)

and zundefined_Architecture (() : (unit)) : zArchitecture = sail_call (fun r ->
  internal_pick [ZRV32; ZRV64; ZRV128])

type  zarch_xlen = zbits;;

let string_of_zarch_xlen (gs889 : zarch_xlen) = string_of_zbits gs889;;

let rec zarchitecture (za : (zarch_xlen)) : (zArchitecture) zoption = sail_call (fun r ->
  begin
    match za with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__0, Big_int.zero)) in
    (eq_bit (zp1z3, B1)) && (eq_bit (zp0z3, B0))) ->
      ZSome ZRV32
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__1, Big_int.zero)) in
    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B1))) ->
      ZSome ZRV64
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__2, Big_int.zero)) in
    (eq_bit (zp1z3, B1)) && (eq_bit (zp0z3, B1))) ->
      ZSome ZRV128
    | _ -> ZNone ()
  end)

and zarch_to_bits (za : (zArchitecture)) : zarch_xlen = sail_call (fun r ->
  begin
    match za with
    | ZRV32 -> [B0; B1]
    | ZRV64 -> [B1; B0]
    | ZRV128 -> [B1; B1]
  end)

type  zpriv_level = zbits;;

let string_of_zpriv_level (gs898 : zpriv_level) = string_of_zbits gs898;;

type zPrivilege = | ZUser | ZSupervisor | ZMachine;;

let string_of_zPrivilege = function
  | ZUser -> "User"
  | ZSupervisor -> "Supervisor"
  | ZMachine -> "Machine";;

let rec zPrivilege_of_num (zargz3 : (Big_int.num)) : zPrivilege = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__126 when (eq_int (zl__126, Big_int.zero)) -> ZUser
    | zl__127 when (eq_int (zl__127, (Big_int.of_int (1)))) -> ZSupervisor
    | _ -> ZMachine
  end)

and znum_of_Privilege (zargz3 : (zPrivilege)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZUser -> Big_int.zero
    | ZSupervisor -> (Big_int.of_int (1))
    | ZMachine -> (Big_int.of_int (2))
  end)

and zundefined_Privilege (() : (unit)) : zPrivilege = sail_call (fun r ->
  internal_pick [ZUser; ZSupervisor; ZMachine])

and zprivLevel_to_bits (zp : (zPrivilege)) : (bit) list = sail_call (fun r ->
  begin
    match zp with
    | ZUser -> [B0; B0]
    | ZSupervisor -> [B0; B1]
    | ZMachine -> [B1; B1]
  end)

and zprivLevel_of_bits (zp : ((bit) list)) : zPrivilege = sail_call (fun r ->
  begin
    match zp with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__0, Big_int.zero)) in
    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B0))) ->
      ZUser
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__1, Big_int.zero)) in
    (eq_bit (zp1z3, B1)) && (eq_bit (zp0z3, B0))) ->
      ZSupervisor
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__2, Big_int.zero)) in
    (eq_bit (zp1z3, B1)) && (eq_bit (zp0z3, B1))) ->
      ZMachine
  end)

and zprivLevel_to_str (zp : (zPrivilege)) : string = sail_call (fun r ->
  begin match zp with | ZUser -> "U" | ZSupervisor -> "S" | ZMachine -> "M" end)

type zAccessType = | ZRead | ZWrite | ZReadWrite | ZExecute;;

let string_of_zAccessType = function
  | ZRead -> "Read"
  | ZWrite -> "Write"
  | ZReadWrite -> "ReadWrite"
  | ZExecute -> "Execute";;

let rec zAccessType_of_num (zargz3 : (Big_int.num)) : zAccessType = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__123 when (eq_int (zl__123, Big_int.zero)) -> ZRead
    | zl__124 when (eq_int (zl__124, (Big_int.of_int (1)))) -> ZWrite
    | zl__125 when (eq_int (zl__125, (Big_int.of_int (2)))) -> ZReadWrite
    | _ -> ZExecute
  end)

and znum_of_AccessType (zargz3 : (zAccessType)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRead -> Big_int.zero
    | ZWrite -> (Big_int.of_int (1))
    | ZReadWrite -> (Big_int.of_int (2))
    | ZExecute -> (Big_int.of_int (3))
  end)

and zundefined_AccessType (() : (unit)) : zAccessType = sail_call (fun r ->
  internal_pick [ZRead; ZWrite; ZReadWrite; ZExecute])

and zaccessType_to_str (za : (zAccessType)) : string = sail_call (fun r ->
  begin
    match za with
    | ZRead -> "R"
    | ZWrite -> "W"
    | ZReadWrite -> "RW"
    | ZExecute -> "X"
  end)

type zReadType = | ZInstruction | ZData;;

let string_of_zReadType = function
  | ZInstruction -> "Instruction"
  | ZData -> "Data";;

let rec zReadType_of_num (zargz3 : (Big_int.num)) : zReadType = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__122 when (eq_int (zl__122, Big_int.zero)) -> ZInstruction
    | _ -> ZData
  end)

and znum_of_ReadType (zargz3 : (zReadType)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZInstruction -> Big_int.zero
    | ZData -> (Big_int.of_int (1))
  end)

and zundefined_ReadType (() : (unit)) : zReadType = sail_call (fun r ->
  internal_pick [ZInstruction; ZData])

and zreadType_to_str (zr : (zReadType)) : string = sail_call (fun r ->
  begin match zr with | ZInstruction -> "I" | ZData -> "D" end)

type zword_width = | ZBYTE | ZHALF | ZWORD | ZDOUBLE;;

let string_of_zword_width = function
  | ZBYTE -> "BYTE"
  | ZHALF -> "HALF"
  | ZWORD -> "WORD"
  | ZDOUBLE -> "DOUBLE";;

let rec zword_width_of_num (zargz3 : (Big_int.num)) : zword_width = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__119 when (eq_int (zl__119, Big_int.zero)) -> ZBYTE
    | zl__120 when (eq_int (zl__120, (Big_int.of_int (1)))) -> ZHALF
    | zl__121 when (eq_int (zl__121, (Big_int.of_int (2)))) -> ZWORD
    | _ -> ZDOUBLE
  end)

and znum_of_word_width (zargz3 : (zword_width)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZBYTE -> Big_int.zero
    | ZHALF -> (Big_int.of_int (1))
    | ZWORD -> (Big_int.of_int (2))
    | ZDOUBLE -> (Big_int.of_int (3))
  end)

and zundefined_word_width (() : (unit)) : zword_width = sail_call (fun r ->
  internal_pick [ZBYTE; ZHALF; ZWORD; ZDOUBLE])

type  zexc_code = zbits;;

let string_of_zexc_code (gs967 : zexc_code) = string_of_zbits gs967;;

type zInterruptType =
  | ZI_U_Software
  | ZI_S_Software
  | ZI_M_Software
  | ZI_U_Timer
  | ZI_S_Timer
  | ZI_M_Timer
  | ZI_U_External
  | ZI_S_External
  | ZI_M_External;;

let string_of_zInterruptType = function
  | ZI_U_Software -> "I_U_Software"
  | ZI_S_Software -> "I_S_Software"
  | ZI_M_Software -> "I_M_Software"
  | ZI_U_Timer -> "I_U_Timer"
  | ZI_S_Timer -> "I_S_Timer"
  | ZI_M_Timer -> "I_M_Timer"
  | ZI_U_External -> "I_U_External"
  | ZI_S_External -> "I_S_External"
  | ZI_M_External -> "I_M_External";;

let rec zInterruptType_of_num (zargz3 : (Big_int.num)) : zInterruptType = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__111 when (eq_int (zl__111, Big_int.zero)) -> ZI_U_Software
    | zl__112 when (eq_int (zl__112, (Big_int.of_int (1)))) -> ZI_S_Software
    | zl__113 when (eq_int (zl__113, (Big_int.of_int (2)))) -> ZI_M_Software
    | zl__114 when (eq_int (zl__114, (Big_int.of_int (3)))) -> ZI_U_Timer
    | zl__115 when (eq_int (zl__115, (Big_int.of_int (4)))) -> ZI_S_Timer
    | zl__116 when (eq_int (zl__116, (Big_int.of_int (5)))) -> ZI_M_Timer
    | zl__117 when (eq_int (zl__117, (Big_int.of_int (6)))) -> ZI_U_External
    | zl__118 when (eq_int (zl__118, (Big_int.of_int (7)))) -> ZI_S_External
    | _ -> ZI_M_External
  end)

and znum_of_InterruptType (zargz3 : (zInterruptType)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZI_U_Software -> Big_int.zero
    | ZI_S_Software -> (Big_int.of_int (1))
    | ZI_M_Software -> (Big_int.of_int (2))
    | ZI_U_Timer -> (Big_int.of_int (3))
    | ZI_S_Timer -> (Big_int.of_int (4))
    | ZI_M_Timer -> (Big_int.of_int (5))
    | ZI_U_External -> (Big_int.of_int (6))
    | ZI_S_External -> (Big_int.of_int (7))
    | ZI_M_External -> (Big_int.of_int (8))
  end)

and zundefined_InterruptType (() : (unit)) : zInterruptType = sail_call (fun r ->
  internal_pick [ZI_U_Software; ZI_S_Software; ZI_M_Software; ZI_U_Timer; ZI_S_Timer; ZI_M_Timer; ZI_U_External; ZI_S_External; ZI_M_External])

and zinterruptType_to_bits (zi : (zInterruptType)) : (bit) list = sail_call (fun r ->
  begin
    match zi with
    | ZI_U_Software -> [B0; B0; B0; B0; B0; B0; B0; B0]
    | ZI_S_Software -> [B0; B0; B0; B0; B0; B0; B0; B1]
    | ZI_M_Software -> [B0; B0; B0; B0; B0; B0; B1; B1]
    | ZI_U_Timer -> [B0; B0; B0; B0; B0; B1; B0; B0]
    | ZI_S_Timer -> [B0; B0; B0; B0; B0; B1; B0; B1]
    | ZI_M_Timer -> [B0; B0; B0; B0; B0; B1; B1; B1]
    | ZI_U_External -> [B0; B0; B0; B0; B1; B0; B0; B0]
    | ZI_S_External -> [B0; B0; B0; B0; B1; B0; B0; B1]
    | ZI_M_External -> [B0; B0; B0; B0; B1; B0; B1; B1]
  end)

type zExceptionType =
  | ZE_Fetch_Addr_Align
  | ZE_Fetch_Access_Fault
  | ZE_Illegal_Instr
  | ZE_Breakpoint
  | ZE_Load_Addr_Align
  | ZE_Load_Access_Fault
  | ZE_SAMO_Addr_Align
  | ZE_SAMO_Access_Fault
  | ZE_U_EnvCall
  | ZE_S_EnvCall
  | ZE_Reserved_10
  | ZE_M_EnvCall
  | ZE_Fetch_Page_Fault
  | ZE_Load_Page_Fault
  | ZE_Reserved_14
  | ZE_SAMO_Page_Fault
  | ZE_CHERI;;

let string_of_zExceptionType = function
  | ZE_Fetch_Addr_Align -> "E_Fetch_Addr_Align"
  | ZE_Fetch_Access_Fault -> "E_Fetch_Access_Fault"
  | ZE_Illegal_Instr -> "E_Illegal_Instr"
  | ZE_Breakpoint -> "E_Breakpoint"
  | ZE_Load_Addr_Align -> "E_Load_Addr_Align"
  | ZE_Load_Access_Fault -> "E_Load_Access_Fault"
  | ZE_SAMO_Addr_Align -> "E_SAMO_Addr_Align"
  | ZE_SAMO_Access_Fault -> "E_SAMO_Access_Fault"
  | ZE_U_EnvCall -> "E_U_EnvCall"
  | ZE_S_EnvCall -> "E_S_EnvCall"
  | ZE_Reserved_10 -> "E_Reserved_10"
  | ZE_M_EnvCall -> "E_M_EnvCall"
  | ZE_Fetch_Page_Fault -> "E_Fetch_Page_Fault"
  | ZE_Load_Page_Fault -> "E_Load_Page_Fault"
  | ZE_Reserved_14 -> "E_Reserved_14"
  | ZE_SAMO_Page_Fault -> "E_SAMO_Page_Fault"
  | ZE_CHERI -> "E_CHERI";;

let rec zExceptionType_of_num (zargz3 : (Big_int.num)) : zExceptionType = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__95 when (eq_int (zl__95, Big_int.zero)) -> ZE_Fetch_Addr_Align
    | zl__96 when (eq_int (zl__96, (Big_int.of_int (1)))) ->
      ZE_Fetch_Access_Fault
    | zl__97 when (eq_int (zl__97, (Big_int.of_int (2)))) -> ZE_Illegal_Instr
    | zl__98 when (eq_int (zl__98, (Big_int.of_int (3)))) -> ZE_Breakpoint
    | zl__99 when (eq_int (zl__99, (Big_int.of_int (4)))) -> ZE_Load_Addr_Align
    | zl__100 when (eq_int (zl__100, (Big_int.of_int (5)))) ->
      ZE_Load_Access_Fault
    | zl__101 when (eq_int (zl__101, (Big_int.of_int (6)))) ->
      ZE_SAMO_Addr_Align
    | zl__102 when (eq_int (zl__102, (Big_int.of_int (7)))) ->
      ZE_SAMO_Access_Fault
    | zl__103 when (eq_int (zl__103, (Big_int.of_int (8)))) -> ZE_U_EnvCall
    | zl__104 when (eq_int (zl__104, (Big_int.of_int (9)))) -> ZE_S_EnvCall
    | zl__105 when (eq_int (zl__105, (Big_int.of_int (10)))) -> ZE_Reserved_10
    | zl__106 when (eq_int (zl__106, (Big_int.of_int (11)))) -> ZE_M_EnvCall
    | zl__107 when (eq_int (zl__107, (Big_int.of_int (12)))) ->
      ZE_Fetch_Page_Fault
    | zl__108 when (eq_int (zl__108, (Big_int.of_int (13)))) ->
      ZE_Load_Page_Fault
    | zl__109 when (eq_int (zl__109, (Big_int.of_int (14)))) -> ZE_Reserved_14
    | zl__110 when (eq_int (zl__110, (Big_int.of_int (15)))) ->
      ZE_SAMO_Page_Fault
    | _ -> ZE_CHERI
  end)

and znum_of_ExceptionType (zargz3 : (zExceptionType)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZE_Fetch_Addr_Align -> Big_int.zero
    | ZE_Fetch_Access_Fault -> (Big_int.of_int (1))
    | ZE_Illegal_Instr -> (Big_int.of_int (2))
    | ZE_Breakpoint -> (Big_int.of_int (3))
    | ZE_Load_Addr_Align -> (Big_int.of_int (4))
    | ZE_Load_Access_Fault -> (Big_int.of_int (5))
    | ZE_SAMO_Addr_Align -> (Big_int.of_int (6))
    | ZE_SAMO_Access_Fault -> (Big_int.of_int (7))
    | ZE_U_EnvCall -> (Big_int.of_int (8))
    | ZE_S_EnvCall -> (Big_int.of_int (9))
    | ZE_Reserved_10 -> (Big_int.of_int (10))
    | ZE_M_EnvCall -> (Big_int.of_int (11))
    | ZE_Fetch_Page_Fault -> (Big_int.of_int (12))
    | ZE_Load_Page_Fault -> (Big_int.of_int (13))
    | ZE_Reserved_14 -> (Big_int.of_int (14))
    | ZE_SAMO_Page_Fault -> (Big_int.of_int (15))
    | ZE_CHERI -> (Big_int.of_int (16))
  end)

and zundefined_ExceptionType (() : (unit)) : zExceptionType = sail_call (fun r ->
  internal_pick [ZE_Fetch_Addr_Align; ZE_Fetch_Access_Fault; ZE_Illegal_Instr; ZE_Breakpoint; ZE_Load_Addr_Align; ZE_Load_Access_Fault; ZE_SAMO_Addr_Align; ZE_SAMO_Access_Fault; ZE_U_EnvCall; ZE_S_EnvCall; ZE_Reserved_10; ZE_M_EnvCall; ZE_Fetch_Page_Fault; ZE_Load_Page_Fault; ZE_Reserved_14; ZE_SAMO_Page_Fault; ZE_CHERI])

and zexceptionType_to_bits (ze : (zExceptionType)) : (bit) list = sail_call (fun r ->
  begin
    match ze with
    | ZE_Fetch_Addr_Align -> [B0; B0; B0; B0; B0; B0; B0; B0]
    | ZE_Fetch_Access_Fault -> [B0; B0; B0; B0; B0; B0; B0; B1]
    | ZE_Illegal_Instr -> [B0; B0; B0; B0; B0; B0; B1; B0]
    | ZE_Breakpoint -> [B0; B0; B0; B0; B0; B0; B1; B1]
    | ZE_Load_Addr_Align -> [B0; B0; B0; B0; B0; B1; B0; B0]
    | ZE_Load_Access_Fault -> [B0; B0; B0; B0; B0; B1; B0; B1]
    | ZE_SAMO_Addr_Align -> [B0; B0; B0; B0; B0; B1; B1; B0]
    | ZE_SAMO_Access_Fault -> [B0; B0; B0; B0; B0; B1; B1; B1]
    | ZE_U_EnvCall -> [B0; B0; B0; B0; B1; B0; B0; B0]
    | ZE_S_EnvCall -> [B0; B0; B0; B0; B1; B0; B0; B1]
    | ZE_Reserved_10 -> [B0; B0; B0; B0; B1; B0; B1; B0]
    | ZE_M_EnvCall -> [B0; B0; B0; B0; B1; B0; B1; B1]
    | ZE_Fetch_Page_Fault -> [B0; B0; B0; B0; B1; B1; B0; B0]
    | ZE_Load_Page_Fault -> [B0; B0; B0; B0; B1; B1; B0; B1]
    | ZE_Reserved_14 -> [B0; B0; B0; B0; B1; B1; B1; B0]
    | ZE_SAMO_Page_Fault -> [B0; B0; B0; B0; B1; B1; B1; B1]
    | ZE_CHERI -> [B0; B0; B1; B0; B0; B0; B0; B0]
  end)

and zexceptionType_to_str (ze : (zExceptionType)) : string = sail_call (fun r ->
  begin
    match ze with
    | ZE_Fetch_Addr_Align -> "misaligned-fetch"
    | ZE_Fetch_Access_Fault -> "fetch-access-fault"
    | ZE_Illegal_Instr -> "illegal-instruction"
    | ZE_Breakpoint -> "breakpoint"
    | ZE_Load_Addr_Align -> "misaligned-load"
    | ZE_Load_Access_Fault -> "load-access-fault"
    | ZE_SAMO_Addr_Align -> "misaliged-store/amo"
    | ZE_SAMO_Access_Fault -> "store/amo-access-fault"
    | ZE_U_EnvCall -> "u-call"
    | ZE_S_EnvCall -> "s-call"
    | ZE_Reserved_10 -> "reserved-0"
    | ZE_M_EnvCall -> "m-call"
    | ZE_Fetch_Page_Fault -> "fetch-page-fault"
    | ZE_Load_Page_Fault -> "load-page-fault"
    | ZE_Reserved_14 -> "reserved-1"
    | ZE_SAMO_Page_Fault -> "store/amo-page-fault"
    | ZE_CHERI -> "CHERI"
  end)

exception ZError_not_implemented of string;;
exception ZError_internal_error of unit;;

let rec zundefined_exception (() : (unit)) : exn = sail_call (fun r ->
  let zu_0 = (undefined_string ()) in
  let zu_1 = (undefined_unit ()) in
  internal_pick [ZError_not_implemented zu_0; ZError_internal_error zu_1])

and znot_implemented : 'za. (string) -> 'za = fun zmessage -> sail_call (fun r ->
  raise (ZError_not_implemented zmessage))

and zinternal_error : 'za. (string) -> 'za = fun zs -> sail_call (fun r ->
  begin assert false; raise (ZError_internal_error ()) end)

type  ztv_mode = zbits;;

let string_of_ztv_mode (gs1016 : ztv_mode) = string_of_zbits gs1016;;

type zTrapVectorMode = | ZTV_Direct | ZTV_Vector | ZTV_Reserved;;

let string_of_zTrapVectorMode = function
  | ZTV_Direct -> "TV_Direct"
  | ZTV_Vector -> "TV_Vector"
  | ZTV_Reserved -> "TV_Reserved";;

let rec zTrapVectorMode_of_num (zargz3 : (Big_int.num)) : zTrapVectorMode = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__93 when (eq_int (zl__93, Big_int.zero)) -> ZTV_Direct
    | zl__94 when (eq_int (zl__94, (Big_int.of_int (1)))) -> ZTV_Vector
    | _ -> ZTV_Reserved
  end)

and znum_of_TrapVectorMode (zargz3 : (zTrapVectorMode)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZTV_Direct -> Big_int.zero
    | ZTV_Vector -> (Big_int.of_int (1))
    | ZTV_Reserved -> (Big_int.of_int (2))
  end)

and zundefined_TrapVectorMode (() : (unit)) : zTrapVectorMode = sail_call (fun r ->
  internal_pick [ZTV_Direct; ZTV_Vector; ZTV_Reserved])

and ztrapVectorMode_of_bits (zm : ((bit) list)) : zTrapVectorMode = sail_call (fun r ->
  begin
    match zm with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__0, Big_int.zero)) in
    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B0))) ->
      ZTV_Direct
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__1, Big_int.zero)) in
    (eq_bit (zp1z3, B1)) && (eq_bit (zp0z3, B0))) ->
      ZTV_Vector
    | _ -> ZTV_Reserved
  end)

type  zext_status = zbits;;

let string_of_zext_status (gs1033 : zext_status) = string_of_zbits gs1033;;

type zExtStatus = | ZOff | ZInitial | ZClean | ZDirty;;

let string_of_zExtStatus = function
  | ZOff -> "Off"
  | ZInitial -> "Initial"
  | ZClean -> "Clean"
  | ZDirty -> "Dirty";;

let rec zExtStatus_of_num (zargz3 : (Big_int.num)) : zExtStatus = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__90 when (eq_int (zl__90, Big_int.zero)) -> ZOff
    | zl__91 when (eq_int (zl__91, (Big_int.of_int (1)))) -> ZInitial
    | zl__92 when (eq_int (zl__92, (Big_int.of_int (2)))) -> ZClean
    | _ -> ZDirty
  end)

and znum_of_ExtStatus (zargz3 : (zExtStatus)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZOff -> Big_int.zero
    | ZInitial -> (Big_int.of_int (1))
    | ZClean -> (Big_int.of_int (2))
    | ZDirty -> (Big_int.of_int (3))
  end)

and zundefined_ExtStatus (() : (unit)) : zExtStatus = sail_call (fun r ->
  internal_pick [ZOff; ZInitial; ZClean; ZDirty])

and zextStatus_to_bits (ze : (zExtStatus)) : (bit) list = sail_call (fun r ->
  begin
    match ze with
    | ZOff -> [B0; B0]
    | ZInitial -> [B0; B1]
    | ZClean -> [B1; B0]
    | ZDirty -> [B1; B1]
  end)

and zextStatus_of_bits (ze : ((bit) list)) : zExtStatus = sail_call (fun r ->
  begin
    match ze with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__0, Big_int.zero)) in
    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B0))) ->
      ZOff
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__1, Big_int.zero)) in
    (eq_bit (zp1z3, B1)) && (eq_bit (zp0z3, B0))) ->
      ZInitial
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__2, Big_int.zero)) in
    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B1))) ->
      ZClean
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__3, Big_int.zero)) in
    (eq_bit (zp1z3, B1)) && (eq_bit (zp0z3, B1))) ->
      ZDirty
  end)

type  zsatp_mode = zbits;;

let string_of_zsatp_mode (gs1054 : zsatp_mode) = string_of_zbits gs1054;;

type zSATPMode = | ZSbare | ZSv32 | ZSv39;;

let string_of_zSATPMode = function
  | ZSbare -> "Sbare"
  | ZSv32 -> "Sv32"
  | ZSv39 -> "Sv39";;

let rec zSATPMode_of_num (zargz3 : (Big_int.num)) : zSATPMode = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__88 when (eq_int (zl__88, Big_int.zero)) -> ZSbare
    | zl__89 when (eq_int (zl__89, (Big_int.of_int (1)))) -> ZSv32
    | _ -> ZSv39
  end)

and znum_of_SATPMode (zargz3 : (zSATPMode)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZSbare -> Big_int.zero
    | ZSv32 -> (Big_int.of_int (1))
    | ZSv39 -> (Big_int.of_int (2))
  end)

and zundefined_SATPMode (() : (unit)) : zSATPMode = sail_call (fun r ->
  internal_pick [ZSbare; ZSv32; ZSv39])

and zsatpMode_of_bits ((za, zm) : (zArchitecture * zsatp_mode)) : (zSATPMode) zoption = sail_call (fun r ->
  begin
    match (za, zm) with
    | (_, zb__0) when (let zp0z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp3z3 = (access (zb__0, Big_int.zero)) in
    (((eq_bit (zp3z3, B0)) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZSome ZSbare
    | (ZRV32, zb__1) when (let zp0z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp3z3 = (access (zb__1, Big_int.zero)) in
    (((eq_bit (zp3z3, B1)) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZSome ZSv32
    | (ZRV64, zb__2) when (let zp0z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp3z3 = (access (zb__2, Big_int.zero)) in
    (((eq_bit (zp3z3, B0)) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      ZSome ZSv39
    | (_, _) -> ZNone ()
  end)

type  zcsrRW = zbits;;

let string_of_zcsrRW (gs1072 : zcsrRW) = string_of_zbits gs1072;;

type zuop = | ZRISCV_LUI | ZRISCV_AUIPC;;

let string_of_zuop = function
  | ZRISCV_LUI -> "RISCV_LUI"
  | ZRISCV_AUIPC -> "RISCV_AUIPC";;

let rec zuop_of_num (zargz3 : (Big_int.num)) : zuop = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__87 when (eq_int (zl__87, Big_int.zero)) -> ZRISCV_LUI
    | _ -> ZRISCV_AUIPC
  end)

and znum_of_uop (zargz3 : (zuop)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_LUI -> Big_int.zero
    | ZRISCV_AUIPC -> (Big_int.of_int (1))
  end)

and zundefined_uop (() : (unit)) : zuop = sail_call (fun r ->
  internal_pick [ZRISCV_LUI; ZRISCV_AUIPC])

type zbop =
  | ZRISCV_BEQ
  | ZRISCV_BNE
  | ZRISCV_BLT
  | ZRISCV_BGE
  | ZRISCV_BLTU
  | ZRISCV_BGEU;;

let string_of_zbop = function
  | ZRISCV_BEQ -> "RISCV_BEQ"
  | ZRISCV_BNE -> "RISCV_BNE"
  | ZRISCV_BLT -> "RISCV_BLT"
  | ZRISCV_BGE -> "RISCV_BGE"
  | ZRISCV_BLTU -> "RISCV_BLTU"
  | ZRISCV_BGEU -> "RISCV_BGEU";;

let rec zbop_of_num (zargz3 : (Big_int.num)) : zbop = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__82 when (eq_int (zl__82, Big_int.zero)) -> ZRISCV_BEQ
    | zl__83 when (eq_int (zl__83, (Big_int.of_int (1)))) -> ZRISCV_BNE
    | zl__84 when (eq_int (zl__84, (Big_int.of_int (2)))) -> ZRISCV_BLT
    | zl__85 when (eq_int (zl__85, (Big_int.of_int (3)))) -> ZRISCV_BGE
    | zl__86 when (eq_int (zl__86, (Big_int.of_int (4)))) -> ZRISCV_BLTU
    | _ -> ZRISCV_BGEU
  end)

and znum_of_bop (zargz3 : (zbop)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_BEQ -> Big_int.zero
    | ZRISCV_BNE -> (Big_int.of_int (1))
    | ZRISCV_BLT -> (Big_int.of_int (2))
    | ZRISCV_BGE -> (Big_int.of_int (3))
    | ZRISCV_BLTU -> (Big_int.of_int (4))
    | ZRISCV_BGEU -> (Big_int.of_int (5))
  end)

and zundefined_bop (() : (unit)) : zbop = sail_call (fun r ->
  internal_pick [ZRISCV_BEQ; ZRISCV_BNE; ZRISCV_BLT; ZRISCV_BGE; ZRISCV_BLTU; ZRISCV_BGEU])

type ziop =
  | ZRISCV_ADDI
  | ZRISCV_SLTI
  | ZRISCV_SLTIU
  | ZRISCV_XORI
  | ZRISCV_ORI
  | ZRISCV_ANDI;;

let string_of_ziop = function
  | ZRISCV_ADDI -> "RISCV_ADDI"
  | ZRISCV_SLTI -> "RISCV_SLTI"
  | ZRISCV_SLTIU -> "RISCV_SLTIU"
  | ZRISCV_XORI -> "RISCV_XORI"
  | ZRISCV_ORI -> "RISCV_ORI"
  | ZRISCV_ANDI -> "RISCV_ANDI";;

let rec ziop_of_num (zargz3 : (Big_int.num)) : ziop = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__77 when (eq_int (zl__77, Big_int.zero)) -> ZRISCV_ADDI
    | zl__78 when (eq_int (zl__78, (Big_int.of_int (1)))) -> ZRISCV_SLTI
    | zl__79 when (eq_int (zl__79, (Big_int.of_int (2)))) -> ZRISCV_SLTIU
    | zl__80 when (eq_int (zl__80, (Big_int.of_int (3)))) -> ZRISCV_XORI
    | zl__81 when (eq_int (zl__81, (Big_int.of_int (4)))) -> ZRISCV_ORI
    | _ -> ZRISCV_ANDI
  end)

and znum_of_iop (zargz3 : (ziop)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_ADDI -> Big_int.zero
    | ZRISCV_SLTI -> (Big_int.of_int (1))
    | ZRISCV_SLTIU -> (Big_int.of_int (2))
    | ZRISCV_XORI -> (Big_int.of_int (3))
    | ZRISCV_ORI -> (Big_int.of_int (4))
    | ZRISCV_ANDI -> (Big_int.of_int (5))
  end)

and zundefined_iop (() : (unit)) : ziop = sail_call (fun r ->
  internal_pick [ZRISCV_ADDI; ZRISCV_SLTI; ZRISCV_SLTIU; ZRISCV_XORI; ZRISCV_ORI; ZRISCV_ANDI])

type zsop = | ZRISCV_SLLI | ZRISCV_SRLI | ZRISCV_SRAI;;

let string_of_zsop = function
  | ZRISCV_SLLI -> "RISCV_SLLI"
  | ZRISCV_SRLI -> "RISCV_SRLI"
  | ZRISCV_SRAI -> "RISCV_SRAI";;

let rec zsop_of_num (zargz3 : (Big_int.num)) : zsop = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__75 when (eq_int (zl__75, Big_int.zero)) -> ZRISCV_SLLI
    | zl__76 when (eq_int (zl__76, (Big_int.of_int (1)))) -> ZRISCV_SRLI
    | _ -> ZRISCV_SRAI
  end)

and znum_of_sop (zargz3 : (zsop)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_SLLI -> Big_int.zero
    | ZRISCV_SRLI -> (Big_int.of_int (1))
    | ZRISCV_SRAI -> (Big_int.of_int (2))
  end)

and zundefined_sop (() : (unit)) : zsop = sail_call (fun r ->
  internal_pick [ZRISCV_SLLI; ZRISCV_SRLI; ZRISCV_SRAI])

type zrop =
  | ZRISCV_ADD
  | ZRISCV_SUB
  | ZRISCV_SLL
  | ZRISCV_SLT
  | ZRISCV_SLTU
  | ZRISCV_XOR
  | ZRISCV_SRL
  | ZRISCV_SRA
  | ZRISCV_OR
  | ZRISCV_AND;;

let string_of_zrop = function
  | ZRISCV_ADD -> "RISCV_ADD"
  | ZRISCV_SUB -> "RISCV_SUB"
  | ZRISCV_SLL -> "RISCV_SLL"
  | ZRISCV_SLT -> "RISCV_SLT"
  | ZRISCV_SLTU -> "RISCV_SLTU"
  | ZRISCV_XOR -> "RISCV_XOR"
  | ZRISCV_SRL -> "RISCV_SRL"
  | ZRISCV_SRA -> "RISCV_SRA"
  | ZRISCV_OR -> "RISCV_OR"
  | ZRISCV_AND -> "RISCV_AND";;

let rec zrop_of_num (zargz3 : (Big_int.num)) : zrop = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__66 when (eq_int (zl__66, Big_int.zero)) -> ZRISCV_ADD
    | zl__67 when (eq_int (zl__67, (Big_int.of_int (1)))) -> ZRISCV_SUB
    | zl__68 when (eq_int (zl__68, (Big_int.of_int (2)))) -> ZRISCV_SLL
    | zl__69 when (eq_int (zl__69, (Big_int.of_int (3)))) -> ZRISCV_SLT
    | zl__70 when (eq_int (zl__70, (Big_int.of_int (4)))) -> ZRISCV_SLTU
    | zl__71 when (eq_int (zl__71, (Big_int.of_int (5)))) -> ZRISCV_XOR
    | zl__72 when (eq_int (zl__72, (Big_int.of_int (6)))) -> ZRISCV_SRL
    | zl__73 when (eq_int (zl__73, (Big_int.of_int (7)))) -> ZRISCV_SRA
    | zl__74 when (eq_int (zl__74, (Big_int.of_int (8)))) -> ZRISCV_OR
    | _ -> ZRISCV_AND
  end)

and znum_of_rop (zargz3 : (zrop)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_ADD -> Big_int.zero
    | ZRISCV_SUB -> (Big_int.of_int (1))
    | ZRISCV_SLL -> (Big_int.of_int (2))
    | ZRISCV_SLT -> (Big_int.of_int (3))
    | ZRISCV_SLTU -> (Big_int.of_int (4))
    | ZRISCV_XOR -> (Big_int.of_int (5))
    | ZRISCV_SRL -> (Big_int.of_int (6))
    | ZRISCV_SRA -> (Big_int.of_int (7))
    | ZRISCV_OR -> (Big_int.of_int (8))
    | ZRISCV_AND -> (Big_int.of_int (9))
  end)

and zundefined_rop (() : (unit)) : zrop = sail_call (fun r ->
  internal_pick [ZRISCV_ADD; ZRISCV_SUB; ZRISCV_SLL; ZRISCV_SLT; ZRISCV_SLTU; ZRISCV_XOR; ZRISCV_SRL; ZRISCV_SRA; ZRISCV_OR; ZRISCV_AND])

type zropw =
  | ZRISCV_ADDW
  | ZRISCV_SUBW
  | ZRISCV_SLLW
  | ZRISCV_SRLW
  | ZRISCV_SRAW;;

let string_of_zropw = function
  | ZRISCV_ADDW -> "RISCV_ADDW"
  | ZRISCV_SUBW -> "RISCV_SUBW"
  | ZRISCV_SLLW -> "RISCV_SLLW"
  | ZRISCV_SRLW -> "RISCV_SRLW"
  | ZRISCV_SRAW -> "RISCV_SRAW";;

let rec zropw_of_num (zargz3 : (Big_int.num)) : zropw = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__62 when (eq_int (zl__62, Big_int.zero)) -> ZRISCV_ADDW
    | zl__63 when (eq_int (zl__63, (Big_int.of_int (1)))) -> ZRISCV_SUBW
    | zl__64 when (eq_int (zl__64, (Big_int.of_int (2)))) -> ZRISCV_SLLW
    | zl__65 when (eq_int (zl__65, (Big_int.of_int (3)))) -> ZRISCV_SRLW
    | _ -> ZRISCV_SRAW
  end)

and znum_of_ropw (zargz3 : (zropw)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_ADDW -> Big_int.zero
    | ZRISCV_SUBW -> (Big_int.of_int (1))
    | ZRISCV_SLLW -> (Big_int.of_int (2))
    | ZRISCV_SRLW -> (Big_int.of_int (3))
    | ZRISCV_SRAW -> (Big_int.of_int (4))
  end)

and zundefined_ropw (() : (unit)) : zropw = sail_call (fun r ->
  internal_pick [ZRISCV_ADDW; ZRISCV_SUBW; ZRISCV_SLLW; ZRISCV_SRLW; ZRISCV_SRAW])

type zsopw = | ZRISCV_SLLIW | ZRISCV_SRLIW | ZRISCV_SRAIW;;

let string_of_zsopw = function
  | ZRISCV_SLLIW -> "RISCV_SLLIW"
  | ZRISCV_SRLIW -> "RISCV_SRLIW"
  | ZRISCV_SRAIW -> "RISCV_SRAIW";;

let rec zsopw_of_num (zargz3 : (Big_int.num)) : zsopw = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__60 when (eq_int (zl__60, Big_int.zero)) -> ZRISCV_SLLIW
    | zl__61 when (eq_int (zl__61, (Big_int.of_int (1)))) -> ZRISCV_SRLIW
    | _ -> ZRISCV_SRAIW
  end)

and znum_of_sopw (zargz3 : (zsopw)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_SLLIW -> Big_int.zero
    | ZRISCV_SRLIW -> (Big_int.of_int (1))
    | ZRISCV_SRAIW -> (Big_int.of_int (2))
  end)

and zundefined_sopw (() : (unit)) : zsopw = sail_call (fun r ->
  internal_pick [ZRISCV_SLLIW; ZRISCV_SRLIW; ZRISCV_SRAIW])

type zamoop =
  | ZAMOSWAP
  | ZAMOADD
  | ZAMOXOR
  | ZAMOAND
  | ZAMOOR
  | ZAMOMIN
  | ZAMOMAX
  | ZAMOMINU
  | ZAMOMAXU;;

let string_of_zamoop = function
  | ZAMOSWAP -> "AMOSWAP"
  | ZAMOADD -> "AMOADD"
  | ZAMOXOR -> "AMOXOR"
  | ZAMOAND -> "AMOAND"
  | ZAMOOR -> "AMOOR"
  | ZAMOMIN -> "AMOMIN"
  | ZAMOMAX -> "AMOMAX"
  | ZAMOMINU -> "AMOMINU"
  | ZAMOMAXU -> "AMOMAXU";;

let rec zamoop_of_num (zargz3 : (Big_int.num)) : zamoop = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__52 when (eq_int (zl__52, Big_int.zero)) -> ZAMOSWAP
    | zl__53 when (eq_int (zl__53, (Big_int.of_int (1)))) -> ZAMOADD
    | zl__54 when (eq_int (zl__54, (Big_int.of_int (2)))) -> ZAMOXOR
    | zl__55 when (eq_int (zl__55, (Big_int.of_int (3)))) -> ZAMOAND
    | zl__56 when (eq_int (zl__56, (Big_int.of_int (4)))) -> ZAMOOR
    | zl__57 when (eq_int (zl__57, (Big_int.of_int (5)))) -> ZAMOMIN
    | zl__58 when (eq_int (zl__58, (Big_int.of_int (6)))) -> ZAMOMAX
    | zl__59 when (eq_int (zl__59, (Big_int.of_int (7)))) -> ZAMOMINU
    | _ -> ZAMOMAXU
  end)

and znum_of_amoop (zargz3 : (zamoop)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZAMOSWAP -> Big_int.zero
    | ZAMOADD -> (Big_int.of_int (1))
    | ZAMOXOR -> (Big_int.of_int (2))
    | ZAMOAND -> (Big_int.of_int (3))
    | ZAMOOR -> (Big_int.of_int (4))
    | ZAMOMIN -> (Big_int.of_int (5))
    | ZAMOMAX -> (Big_int.of_int (6))
    | ZAMOMINU -> (Big_int.of_int (7))
    | ZAMOMAXU -> (Big_int.of_int (8))
  end)

and zundefined_amoop (() : (unit)) : zamoop = sail_call (fun r ->
  internal_pick [ZAMOSWAP; ZAMOADD; ZAMOXOR; ZAMOAND; ZAMOOR; ZAMOMIN; ZAMOMAX; ZAMOMINU; ZAMOMAXU])

type zcsrop = | ZCSRRW | ZCSRRS | ZCSRRC;;

let string_of_zcsrop = function
  | ZCSRRW -> "CSRRW"
  | ZCSRRS -> "CSRRS"
  | ZCSRRC -> "CSRRC";;

let rec zcsrop_of_num (zargz3 : (Big_int.num)) : zcsrop = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__50 when (eq_int (zl__50, Big_int.zero)) -> ZCSRRW
    | zl__51 when (eq_int (zl__51, (Big_int.of_int (1)))) -> ZCSRRS
    | _ -> ZCSRRC
  end)

and znum_of_csrop (zargz3 : (zcsrop)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZCSRRW -> Big_int.zero
    | ZCSRRS -> (Big_int.of_int (1))
    | ZCSRRC -> (Big_int.of_int (2))
  end)

and zundefined_csrop (() : (unit)) : zcsrop = sail_call (fun r ->
  internal_pick [ZCSRRW; ZCSRRS; ZCSRRC])

and zreg_name_forwards (zargz3 : ((bit) list)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__0, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "zero"
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__1, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "ra"
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__2, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "sp"
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__3, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "gp"
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__4, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "tp"
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__5, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "t0"
    | zb__6 when (let zp0z3 = (access (zb__6, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__6, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__6, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__6, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__6, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "t1"
    | zb__7 when (let zp0z3 = (access (zb__7, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__7, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__7, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__7, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__7, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "t2"
    | zb__8 when (let zp0z3 = (access (zb__8, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__8, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__8, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__8, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__8, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "fp"
    | zb__9 when (let zp0z3 = (access (zb__9, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__9, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__9, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__9, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__9, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "s1"
    | zb__10 when (let zp0z3 = (access (zb__10, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__10, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__10, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__10, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__10, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "a0"
    | zb__11 when (let zp0z3 = (access (zb__11, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__11, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__11, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__11, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__11, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "a1"
    | zb__12 when (let zp0z3 = (access (zb__12, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__12, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__12, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__12, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__12, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "a2"
    | zb__13 when (let zp0z3 = (access (zb__13, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__13, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__13, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__13, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__13, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "a3"
    | zb__14 when (let zp0z3 = (access (zb__14, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__14, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__14, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__14, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__14, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "a4"
    | zb__15 when (let zp0z3 = (access (zb__15, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__15, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__15, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__15, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__15, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "a5"
    | zb__16 when (let zp0z3 = (access (zb__16, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__16, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__16, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__16, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__16, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "a6"
    | zb__17 when (let zp0z3 = (access (zb__17, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__17, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__17, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__17, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__17, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "a7"
    | zb__18 when (let zp0z3 = (access (zb__18, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__18, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__18, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__18, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__18, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "s2"
    | zb__19 when (let zp0z3 = (access (zb__19, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__19, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__19, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__19, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__19, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "s3"
    | zb__20 when (let zp0z3 = (access (zb__20, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__20, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__20, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__20, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__20, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "s4"
    | zb__21 when (let zp0z3 = (access (zb__21, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__21, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__21, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__21, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__21, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "s5"
    | zb__22 when (let zp0z3 = (access (zb__22, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__22, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__22, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__22, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__22, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "s6"
    | zb__23 when (let zp0z3 = (access (zb__23, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__23, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__23, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__23, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__23, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "s7"
    | zb__24 when (let zp0z3 = (access (zb__24, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__24, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__24, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__24, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__24, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "s8"
    | zb__25 when (let zp0z3 = (access (zb__25, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__25, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__25, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__25, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__25, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "s9"
    | zb__26 when (let zp0z3 = (access (zb__26, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__26, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__26, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__26, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__26, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "s10"
    | zb__27 when (let zp0z3 = (access (zb__27, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__27, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__27, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__27, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__27, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "s11"
    | zb__28 when (let zp0z3 = (access (zb__28, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__28, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__28, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__28, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__28, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "t3"
    | zb__29 when (let zp0z3 = (access (zb__29, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__29, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__29, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__29, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__29, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "t4"
    | zb__30 when (let zp0z3 = (access (zb__30, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__30, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__30, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__30, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__30, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "t5"
    | zb__31 when (let zp0z3 = (access (zb__31, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__31, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__31, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__31, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__31, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "t6"
  end)

and zreg_name_backwards (zargz3 : (string)) : (bit) list = sail_call (fun r ->
  begin
    match zargz3 with
    | "zero" -> [B0; B0; B0; B0; B0]
    | "ra" -> [B0; B0; B0; B0; B1]
    | "sp" -> [B0; B0; B0; B1; B0]
    | "gp" -> [B0; B0; B0; B1; B1]
    | "tp" -> [B0; B0; B1; B0; B0]
    | "t0" -> [B0; B0; B1; B0; B1]
    | "t1" -> [B0; B0; B1; B1; B0]
    | "t2" -> [B0; B0; B1; B1; B1]
    | "fp" -> [B0; B1; B0; B0; B0]
    | "s1" -> [B0; B1; B0; B0; B1]
    | "a0" -> [B0; B1; B0; B1; B0]
    | "a1" -> [B0; B1; B0; B1; B1]
    | "a2" -> [B0; B1; B1; B0; B0]
    | "a3" -> [B0; B1; B1; B0; B1]
    | "a4" -> [B0; B1; B1; B1; B0]
    | "a5" -> [B0; B1; B1; B1; B1]
    | "a6" -> [B1; B0; B0; B0; B0]
    | "a7" -> [B1; B0; B0; B0; B1]
    | "s2" -> [B1; B0; B0; B1; B0]
    | "s3" -> [B1; B0; B0; B1; B1]
    | "s4" -> [B1; B0; B1; B0; B0]
    | "s5" -> [B1; B0; B1; B0; B1]
    | "s6" -> [B1; B0; B1; B1; B0]
    | "s7" -> [B1; B0; B1; B1; B1]
    | "s8" -> [B1; B1; B0; B0; B0]
    | "s9" -> [B1; B1; B0; B0; B1]
    | "s10" -> [B1; B1; B0; B1; B0]
    | "s11" -> [B1; B1; B0; B1; B1]
    | "t3" -> [B1; B1; B1; B0; B0]
    | "t4" -> [B1; B1; B1; B0; B1]
    | "t5" -> [B1; B1; B1; B1; B0]
    | "t6" -> [B1; B1; B1; B1; B1]
  end)

and zreg_name_forwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__0, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__1, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__2, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__3, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__4, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__5, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__6 when (let zp0z3 = (access (zb__6, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__6, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__6, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__6, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__6, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__7 when (let zp0z3 = (access (zb__7, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__7, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__7, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__7, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__7, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__8 when (let zp0z3 = (access (zb__8, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__8, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__8, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__8, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__8, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__9 when (let zp0z3 = (access (zb__9, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__9, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__9, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__9, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__9, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__10 when (let zp0z3 = (access (zb__10, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__10, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__10, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__10, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__10, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__11 when (let zp0z3 = (access (zb__11, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__11, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__11, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__11, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__11, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__12 when (let zp0z3 = (access (zb__12, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__12, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__12, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__12, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__12, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__13 when (let zp0z3 = (access (zb__13, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__13, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__13, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__13, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__13, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__14 when (let zp0z3 = (access (zb__14, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__14, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__14, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__14, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__14, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__15 when (let zp0z3 = (access (zb__15, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__15, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__15, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__15, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__15, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__16 when (let zp0z3 = (access (zb__16, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__16, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__16, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__16, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__16, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__17 when (let zp0z3 = (access (zb__17, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__17, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__17, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__17, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__17, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__18 when (let zp0z3 = (access (zb__18, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__18, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__18, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__18, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__18, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__19 when (let zp0z3 = (access (zb__19, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__19, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__19, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__19, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__19, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__20 when (let zp0z3 = (access (zb__20, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__20, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__20, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__20, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__20, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__21 when (let zp0z3 = (access (zb__21, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__21, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__21, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__21, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__21, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__22 when (let zp0z3 = (access (zb__22, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__22, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__22, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__22, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__22, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__23 when (let zp0z3 = (access (zb__23, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__23, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__23, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__23, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__23, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__24 when (let zp0z3 = (access (zb__24, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__24, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__24, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__24, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__24, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__25 when (let zp0z3 = (access (zb__25, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__25, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__25, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__25, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__25, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__26 when (let zp0z3 = (access (zb__26, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__26, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__26, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__26, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__26, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__27 when (let zp0z3 = (access (zb__27, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__27, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__27, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__27, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__27, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__28 when (let zp0z3 = (access (zb__28, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__28, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__28, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__28, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__28, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__29 when (let zp0z3 = (access (zb__29, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__29, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__29, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__29, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__29, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__30 when (let zp0z3 = (access (zb__30, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__30, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__30, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__30, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__30, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__31 when (let zp0z3 = (access (zb__31, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__31, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__31, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__31, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__31, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | _ -> false
  end)

and zreg_name_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | "zero" -> true
    | "ra" -> true
    | "sp" -> true
    | "gp" -> true
    | "tp" -> true
    | "t0" -> true
    | "t1" -> true
    | "t2" -> true
    | "fp" -> true
    | "s1" -> true
    | "a0" -> true
    | "a1" -> true
    | "a2" -> true
    | "a3" -> true
    | "a4" -> true
    | "a5" -> true
    | "a6" -> true
    | "a7" -> true
    | "s2" -> true
    | "s3" -> true
    | "s4" -> true
    | "s5" -> true
    | "s6" -> true
    | "s7" -> true
    | "s8" -> true
    | "s9" -> true
    | "s10" -> true
    | "s11" -> true
    | "t3" -> true
    | "t4" -> true
    | "t5" -> true
    | "t6" -> true
    | _ -> false
  end)

and z_s124z3 (z_s125z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s125z3 with
    | z_s126z3 when (string_startswith (z_s126z3, "t6")) ->
      begin
        match (string_drop (z_s126z3, (string_length "t6"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s120z3 (z_s121z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s121z3 with
    | z_s122z3 when (string_startswith (z_s122z3, "t5")) ->
      begin
        match (string_drop (z_s122z3, (string_length "t5"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s116z3 (z_s117z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s117z3 with
    | z_s118z3 when (string_startswith (z_s118z3, "t4")) ->
      begin
        match (string_drop (z_s118z3, (string_length "t4"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s112z3 (z_s113z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s113z3 with
    | z_s114z3 when (string_startswith (z_s114z3, "t3")) ->
      begin
        match (string_drop (z_s114z3, (string_length "t3"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s108z3 (z_s109z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s109z3 with
    | z_s110z3 when (string_startswith (z_s110z3, "s11")) ->
      begin
        match (string_drop (z_s110z3, (string_length "s11"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s104z3 (z_s105z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s105z3 with
    | z_s106z3 when (string_startswith (z_s106z3, "s10")) ->
      begin
        match (string_drop (z_s106z3, (string_length "s10"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s100z3 (z_s101z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s101z3 with
    | z_s102z3 when (string_startswith (z_s102z3, "s9")) ->
      begin
        match (string_drop (z_s102z3, (string_length "s9"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s96z3 (z_s97z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s97z3 with
    | z_s98z3 when (string_startswith (z_s98z3, "s8")) ->
      begin
        match (string_drop (z_s98z3, (string_length "s8"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s92z3 (z_s93z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s93z3 with
    | z_s94z3 when (string_startswith (z_s94z3, "s7")) ->
      begin
        match (string_drop (z_s94z3, (string_length "s7"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s88z3 (z_s89z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s89z3 with
    | z_s90z3 when (string_startswith (z_s90z3, "s6")) ->
      begin
        match (string_drop (z_s90z3, (string_length "s6"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s84z3 (z_s85z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s85z3 with
    | z_s86z3 when (string_startswith (z_s86z3, "s5")) ->
      begin
        match (string_drop (z_s86z3, (string_length "s5"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s80z3 (z_s81z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s81z3 with
    | z_s82z3 when (string_startswith (z_s82z3, "s4")) ->
      begin
        match (string_drop (z_s82z3, (string_length "s4"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s76z3 (z_s77z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s77z3 with
    | z_s78z3 when (string_startswith (z_s78z3, "s3")) ->
      begin
        match (string_drop (z_s78z3, (string_length "s3"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s72z3 (z_s73z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s73z3 with
    | z_s74z3 when (string_startswith (z_s74z3, "s2")) ->
      begin
        match (string_drop (z_s74z3, (string_length "s2"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s68z3 (z_s69z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s69z3 with
    | z_s70z3 when (string_startswith (z_s70z3, "a7")) ->
      begin
        match (string_drop (z_s70z3, (string_length "a7"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s64z3 (z_s65z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s65z3 with
    | z_s66z3 when (string_startswith (z_s66z3, "a6")) ->
      begin
        match (string_drop (z_s66z3, (string_length "a6"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s60z3 (z_s61z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s61z3 with
    | z_s62z3 when (string_startswith (z_s62z3, "a5")) ->
      begin
        match (string_drop (z_s62z3, (string_length "a5"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s56z3 (z_s57z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s57z3 with
    | z_s58z3 when (string_startswith (z_s58z3, "a4")) ->
      begin
        match (string_drop (z_s58z3, (string_length "a4"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s52z3 (z_s53z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s53z3 with
    | z_s54z3 when (string_startswith (z_s54z3, "a3")) ->
      begin
        match (string_drop (z_s54z3, (string_length "a3"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s48z3 (z_s49z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s49z3 with
    | z_s50z3 when (string_startswith (z_s50z3, "a2")) ->
      begin
        match (string_drop (z_s50z3, (string_length "a2"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s44z3 (z_s45z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s45z3 with
    | z_s46z3 when (string_startswith (z_s46z3, "a1")) ->
      begin
        match (string_drop (z_s46z3, (string_length "a1"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s40z3 (z_s41z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s41z3 with
    | z_s42z3 when (string_startswith (z_s42z3, "a0")) ->
      begin
        match (string_drop (z_s42z3, (string_length "a0"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s36z3 (z_s37z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s37z3 with
    | z_s38z3 when (string_startswith (z_s38z3, "s1")) ->
      begin
        match (string_drop (z_s38z3, (string_length "s1"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s32z3 (z_s33z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s33z3 with
    | z_s34z3 when (string_startswith (z_s34z3, "fp")) ->
      begin
        match (string_drop (z_s34z3, (string_length "fp"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s28z3 (z_s29z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s29z3 with
    | z_s30z3 when (string_startswith (z_s30z3, "t2")) ->
      begin
        match (string_drop (z_s30z3, (string_length "t2"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s24z3 (z_s25z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s25z3 with
    | z_s26z3 when (string_startswith (z_s26z3, "t1")) ->
      begin
        match (string_drop (z_s26z3, (string_length "t1"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s20z3 (z_s21z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s21z3 with
    | z_s22z3 when (string_startswith (z_s22z3, "t0")) ->
      begin
        match (string_drop (z_s22z3, (string_length "t0"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s16z3 (z_s17z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s17z3 with
    | z_s18z3 when (string_startswith (z_s18z3, "tp")) ->
      begin
        match (string_drop (z_s18z3, (string_length "tp"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s12z3 (z_s13z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s13z3 with
    | z_s14z3 when (string_startswith (z_s14z3, "gp")) ->
      begin
        match (string_drop (z_s14z3, (string_length "gp"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s8z3 (z_s9z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s9z3 with
    | z_s10z3 when (string_startswith (z_s10z3, "sp")) ->
      begin
        match (string_drop (z_s10z3, (string_length "sp"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4z3 (z_s5z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s5z3 with
    | z_s6z3 when (string_startswith (z_s6z3, "ra")) ->
      begin
        match (string_drop (z_s6z3, (string_length "ra"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s0z3 (z_s1z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s1z3 with
    | z_s2z3 when (string_startswith (z_s2z3, "zero")) ->
      begin
        match (string_drop (z_s2z3, (string_length "zero"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zreg_name_matches_prefix (zargz3 : (string)) : (((bit) list * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s3z3 when (begin
      match (z_s0z3 z_s3z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s0z3 z_s3z3) in
      ZSome ([B0; B0; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s7z3 when (begin
      match (z_s4z3 z_s7z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s4z3 z_s7z3) in
      ZSome ([B0; B0; B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s11z3 when (begin
      match (z_s8z3 z_s11z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s8z3 z_s11z3) in
      ZSome ([B0; B0; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s15z3 when (begin
      match (z_s12z3 z_s15z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s12z3 z_s15z3) in
      ZSome ([B0; B0; B0; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s19z3 when (begin
      match (z_s16z3 z_s19z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s16z3 z_s19z3) in
      ZSome ([B0; B0; B1; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s23z3 when (begin
      match (z_s20z3 z_s23z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s20z3 z_s23z3) in
      ZSome ([B0; B0; B1; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s27z3 when (begin
      match (z_s24z3 z_s27z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s24z3 z_s27z3) in
      ZSome ([B0; B0; B1; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s31z3 when (begin
      match (z_s28z3 z_s31z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s28z3 z_s31z3) in
      ZSome ([B0; B0; B1; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s35z3 when (begin
      match (z_s32z3 z_s35z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s32z3 z_s35z3) in
      ZSome ([B0; B1; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s39z3 when (begin
      match (z_s36z3 z_s39z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s36z3 z_s39z3) in
      ZSome ([B0; B1; B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s43z3 when (begin
      match (z_s40z3 z_s43z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s40z3 z_s43z3) in
      ZSome ([B0; B1; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s47z3 when (begin
      match (z_s44z3 z_s47z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s44z3 z_s47z3) in
      ZSome ([B0; B1; B0; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s51z3 when (begin
      match (z_s48z3 z_s51z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s48z3 z_s51z3) in
      ZSome ([B0; B1; B1; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s55z3 when (begin
      match (z_s52z3 z_s55z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s52z3 z_s55z3) in
      ZSome ([B0; B1; B1; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s59z3 when (begin
      match (z_s56z3 z_s59z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s56z3 z_s59z3) in
      ZSome ([B0; B1; B1; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s63z3 when (begin
      match (z_s60z3 z_s63z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s60z3 z_s63z3) in
      ZSome ([B0; B1; B1; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s67z3 when (begin
      match (z_s64z3 z_s67z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s64z3 z_s67z3) in
      ZSome ([B1; B0; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s71z3 when (begin
      match (z_s68z3 z_s71z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s68z3 z_s71z3) in
      ZSome ([B1; B0; B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s75z3 when (begin
      match (z_s72z3 z_s75z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s72z3 z_s75z3) in
      ZSome ([B1; B0; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s79z3 when (begin
      match (z_s76z3 z_s79z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s76z3 z_s79z3) in
      ZSome ([B1; B0; B0; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s83z3 when (begin
      match (z_s80z3 z_s83z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s80z3 z_s83z3) in
      ZSome ([B1; B0; B1; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s87z3 when (begin
      match (z_s84z3 z_s87z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s84z3 z_s87z3) in
      ZSome ([B1; B0; B1; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s91z3 when (begin
      match (z_s88z3 z_s91z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s88z3 z_s91z3) in
      ZSome ([B1; B0; B1; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s95z3 when (begin
      match (z_s92z3 z_s95z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s92z3 z_s95z3) in
      ZSome ([B1; B0; B1; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s99z3 when (begin
      match (z_s96z3 z_s99z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s96z3 z_s99z3) in
      ZSome ([B1; B1; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s103z3 when (begin
      match (z_s100z3 z_s103z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s100z3 z_s103z3) in
      ZSome ([B1; B1; B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s107z3 when (begin
      match (z_s104z3 z_s107z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s104z3 z_s107z3) in
      ZSome ([B1; B1; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s111z3 when (begin
      match (z_s108z3 z_s111z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s108z3 z_s111z3) in
      ZSome ([B1; B1; B0; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s115z3 when (begin
      match (z_s112z3 z_s115z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s112z3 z_s115z3) in
      ZSome ([B1; B1; B1; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s119z3 when (begin
      match (z_s116z3 z_s119z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s116z3 z_s119z3) in
      ZSome ([B1; B1; B1; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s123z3 when (begin
      match (z_s120z3 z_s123z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s120z3 z_s123z3) in
      ZSome ([B1; B1; B1; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s127z3 when (begin
      match (z_s124z3 z_s127z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s124z3 z_s127z3) in
      ZSome ([B1; B1; B1; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zcreg_name_forwards (zargz3 : ((bit) list)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__0, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "s0"
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__1, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "s1"
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__2, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "a0"
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__3, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "a1"
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__4, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "a2"
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__5, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "a3"
    | zb__6 when (let zp0z3 = (access (zb__6, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__6, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__6, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "a4"
    | zb__7 when (let zp0z3 = (access (zb__7, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__7, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__7, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "a5"
  end)

and zcreg_name_backwards (zargz3 : (string)) : (bit) list = sail_call (fun r ->
  begin
    match zargz3 with
    | "s0" -> [B0; B0; B0]
    | "s1" -> [B0; B0; B1]
    | "a0" -> [B0; B1; B0]
    | "a1" -> [B0; B1; B1]
    | "a2" -> [B1; B0; B0]
    | "a3" -> [B1; B0; B1]
    | "a4" -> [B1; B1; B0]
    | "a5" -> [B1; B1; B1]
  end)

and zcreg_name_forwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__0, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__1, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__2, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__3, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__4, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__5, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__6 when (let zp0z3 = (access (zb__6, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__6, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__6, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__7 when (let zp0z3 = (access (zb__7, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__7, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__7, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | _ -> false
  end)

and zcreg_name_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | "s0" -> true
    | "s1" -> true
    | "a0" -> true
    | "a1" -> true
    | "a2" -> true
    | "a3" -> true
    | "a4" -> true
    | "a5" -> true
    | _ -> false
  end)

and z_s156z3 (z_s157z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s157z3 with
    | z_s158z3 when (string_startswith (z_s158z3, "a5")) ->
      begin
        match (string_drop (z_s158z3, (string_length "a5"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s152z3 (z_s153z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s153z3 with
    | z_s154z3 when (string_startswith (z_s154z3, "a4")) ->
      begin
        match (string_drop (z_s154z3, (string_length "a4"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s148z3 (z_s149z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s149z3 with
    | z_s150z3 when (string_startswith (z_s150z3, "a3")) ->
      begin
        match (string_drop (z_s150z3, (string_length "a3"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s144z3 (z_s145z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s145z3 with
    | z_s146z3 when (string_startswith (z_s146z3, "a2")) ->
      begin
        match (string_drop (z_s146z3, (string_length "a2"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s140z3 (z_s141z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s141z3 with
    | z_s142z3 when (string_startswith (z_s142z3, "a1")) ->
      begin
        match (string_drop (z_s142z3, (string_length "a1"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s136z3 (z_s137z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s137z3 with
    | z_s138z3 when (string_startswith (z_s138z3, "a0")) ->
      begin
        match (string_drop (z_s138z3, (string_length "a0"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s132z3 (z_s133z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s133z3 with
    | z_s134z3 when (string_startswith (z_s134z3, "s1")) ->
      begin
        match (string_drop (z_s134z3, (string_length "s1"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s128z3 (z_s129z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s129z3 with
    | z_s130z3 when (string_startswith (z_s130z3, "s0")) ->
      begin
        match (string_drop (z_s130z3, (string_length "s0"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zcreg_name_matches_prefix (zargz3 : (string)) : (((bit) list * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s131z3 when (begin
      match (z_s128z3 z_s131z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s128z3 z_s131z3) in
      ZSome ([B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s135z3 when (begin
      match (z_s132z3 z_s135z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s132z3 z_s135z3) in
      ZSome ([B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s139z3 when (begin
      match (z_s136z3 z_s139z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s136z3 z_s139z3) in
      ZSome ([B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s143z3 when (begin
      match (z_s140z3 z_s143z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s140z3 z_s143z3) in
      ZSome ([B0; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s147z3 when (begin
      match (z_s144z3 z_s147z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s144z3 z_s147z3) in
      ZSome ([B1; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s151z3 when (begin
      match (z_s148z3 z_s151z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s148z3 z_s151z3) in
      ZSome ([B1; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s155z3 when (begin
      match (z_s152z3 z_s155z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s152z3 z_s155z3) in
      ZSome ([B1; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s159z3 when (begin
      match (z_s156z3 z_s159z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s156z3 z_s159z3) in
      ZSome ([B1; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zsep_forwards (zargz3 : (unit)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | () ->
      string_append ((zopt_spc_forwards ()), (string_append (",", (string_append ((zdef_spc_forwards ()), "")))))
  end)

and z_s160z3 (z_s161z3 : (string)) : (unit) zoption = sail_call (fun r ->
  begin
    match z_s161z3 with
    | z_s162z3 ->
      begin
        match (zopt_spc_matches_prefix z_s162z3) with
        | ZSome ((), z_s163z3) ->
          begin
            match (string_drop (z_s162z3, z_s163z3)) with
            | z_s164z3 when (string_startswith (z_s164z3, ",")) ->
              begin
                match (string_drop (z_s164z3, (string_length ","))) with
                | z_s165z3 ->
                  begin
                    match (zdef_spc_matches_prefix z_s165z3) with
                    | ZSome ((), z_s166z3) ->
                      begin
                        match (string_drop (z_s165z3, z_s166z3)) with
                        | "" -> ZSome ()
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zsep_backwards (zargz3 : (string)) : unit = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s167z3 when (begin
      match (z_s160z3 z_s167z3) with
      | ZSome (()) -> true
      | _ -> false
    end) ->
      let ZSome (()) = (z_s160z3 z_s167z3) in ()
  end)

and zsep_forwards_matches (zargz3 : (unit)) : bool = sail_call (fun r ->
  begin match zargz3 with | () -> true | _ -> false end)

and z_s168z3 (z_s169z3 : (string)) : (unit) zoption = sail_call (fun r ->
  begin
    match z_s169z3 with
    | z_s170z3 ->
      begin
        match (zopt_spc_matches_prefix z_s170z3) with
        | ZSome ((), z_s171z3) ->
          begin
            match (string_drop (z_s170z3, z_s171z3)) with
            | z_s172z3 when (string_startswith (z_s172z3, ",")) ->
              begin
                match (string_drop (z_s172z3, (string_length ","))) with
                | z_s173z3 ->
                  begin
                    match (zdef_spc_matches_prefix z_s173z3) with
                    | ZSome ((), z_s174z3) ->
                      begin
                        match (string_drop (z_s173z3, z_s174z3)) with
                        | "" -> ZSome ()
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zsep_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s175z3 when (begin
      match (z_s168z3 z_s175z3) with
      | ZSome (()) -> true
      | _ -> false
    end) ->
      let ZSome (()) = (z_s168z3 z_s175z3) in true
    | _ -> false
  end)

and z_s176z3 (z_s177z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s177z3 with
    | z_s178z3 ->
      begin
        match (zopt_spc_matches_prefix z_s178z3) with
        | ZSome ((), z_s179z3) ->
          begin
            match (string_drop (z_s178z3, z_s179z3)) with
            | z_s180z3 when (string_startswith (z_s180z3, ",")) ->
              begin
                match (string_drop (z_s180z3, (string_length ","))) with
                | z_s181z3 ->
                  begin
                    match (zdef_spc_matches_prefix z_s181z3) with
                    | ZSome ((), z_s182z3) ->
                      begin
                        match (string_drop (z_s181z3, z_s182z3)) with
                        | zsz3 -> ZSome zsz3
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zsep_matches_prefix (zargz3 : (string)) : ((unit * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s183z3 when (begin
      match (z_s176z3 z_s183z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s176z3 z_s183z3) in
      ZSome ((), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zbool_bits_forwards (zargz3 : (bool)) : (bit) list = sail_call (fun r ->
  begin
    match zargz3 with
    | zp0z3 when (eq_bool (zp0z3, true)) -> [B1]
    | zp0z3 when (eq_bool (zp0z3, false)) -> [B0]
  end)

and zbool_bits_backwards (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, Big_int.zero)) in
    eq_bit (zp0z3, B1)) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, Big_int.zero)) in
    eq_bit (zp0z3, B0)) ->
      false
  end)

and zbool_bits_forwards_matches (zargz3 : (bool)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zp0z3 when (eq_bool (zp0z3, true)) -> true
    | zp0z3 when (eq_bool (zp0z3, false)) -> true
    | _ -> false
  end)

and zbool_bits_backwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, Big_int.zero)) in
    eq_bit (zp0z3, B1)) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, Big_int.zero)) in
    eq_bit (zp0z3, B0)) ->
      true
    | _ -> false
  end)

and zbool_not_bits_forwards (zargz3 : (bool)) : (bit) list = sail_call (fun r ->
  begin
    match zargz3 with
    | zp0z3 when (eq_bool (zp0z3, true)) -> [B0]
    | zp0z3 when (eq_bool (zp0z3, false)) -> [B1]
  end)

and zbool_not_bits_backwards (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, Big_int.zero)) in
    eq_bit (zp0z3, B0)) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, Big_int.zero)) in
    eq_bit (zp0z3, B1)) ->
      false
  end)

and zbool_not_bits_forwards_matches (zargz3 : (bool)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zp0z3 when (eq_bool (zp0z3, true)) -> true
    | zp0z3 when (eq_bool (zp0z3, false)) -> true
    | _ -> false
  end)

and zbool_not_bits_backwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, Big_int.zero)) in
    eq_bit (zp0z3, B0)) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, Big_int.zero)) in
    eq_bit (zp0z3, B1)) ->
      true
    | _ -> false
  end)

and zsizze_bits_forwards (zargz3 : (zword_width)) : (bit) list = sail_call (fun r ->
  begin
    match zargz3 with
    | ZBYTE -> [B0; B0]
    | ZHALF -> [B0; B1]
    | ZWORD -> [B1; B0]
    | ZDOUBLE -> [B1; B1]
  end)

and zsizze_bits_backwards (zargz3 : ((bit) list)) : zword_width = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__0, Big_int.zero)) in
    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B0))) ->
      ZBYTE
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__1, Big_int.zero)) in
    (eq_bit (zp1z3, B1)) && (eq_bit (zp0z3, B0))) ->
      ZHALF
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__2, Big_int.zero)) in
    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B1))) ->
      ZWORD
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__3, Big_int.zero)) in
    (eq_bit (zp1z3, B1)) && (eq_bit (zp0z3, B1))) ->
      ZDOUBLE
  end)

and zsizze_bits_forwards_matches (zargz3 : (zword_width)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZBYTE -> true
    | ZHALF -> true
    | ZWORD -> true
    | ZDOUBLE -> true
    | _ -> false
  end)

and zsizze_bits_backwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__0, Big_int.zero)) in
    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__1, Big_int.zero)) in
    (eq_bit (zp1z3, B1)) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__2, Big_int.zero)) in
    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__3, Big_int.zero)) in
    (eq_bit (zp1z3, B1)) && (eq_bit (zp0z3, B1))) ->
      true
    | _ -> false
  end)

and zword_width_bytes (zwidth : (zword_width)) : Big_int.num = sail_call (fun r ->
  begin
    match zwidth with
    | ZBYTE -> (Big_int.of_int (1))
    | ZHALF -> (Big_int.of_int (2))
    | ZWORD -> (Big_int.of_int (4))
    | ZDOUBLE -> (Big_int.of_int (8))
  end)

and zsizze_mnemonic_forwards (zargz3 : (zword_width)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | ZBYTE -> "b"
    | ZHALF -> "h"
    | ZWORD -> "w"
    | ZDOUBLE -> "d"
  end)

and zsizze_mnemonic_backwards (zargz3 : (string)) : zword_width = sail_call (fun r ->
  begin
    match zargz3 with
    | "b" -> ZBYTE
    | "h" -> ZHALF
    | "w" -> ZWORD
    | "d" -> ZDOUBLE
  end)

and zsizze_mnemonic_forwards_matches (zargz3 : (zword_width)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZBYTE -> true
    | ZHALF -> true
    | ZWORD -> true
    | ZDOUBLE -> true
    | _ -> false
  end)

and zsizze_mnemonic_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | "b" -> true
    | "h" -> true
    | "w" -> true
    | "d" -> true
    | _ -> false
  end)

and z_s196z3 (z_s197z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s197z3 with
    | z_s198z3 when (string_startswith (z_s198z3, "d")) ->
      begin
        match (string_drop (z_s198z3, (string_length "d"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s192z3 (z_s193z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s193z3 with
    | z_s194z3 when (string_startswith (z_s194z3, "w")) ->
      begin
        match (string_drop (z_s194z3, (string_length "w"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s188z3 (z_s189z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s189z3 with
    | z_s190z3 when (string_startswith (z_s190z3, "h")) ->
      begin
        match (string_drop (z_s190z3, (string_length "h"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s184z3 (z_s185z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s185z3 with
    | z_s186z3 when (string_startswith (z_s186z3, "b")) ->
      begin
        match (string_drop (z_s186z3, (string_length "b"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zsizze_mnemonic_matches_prefix (zargz3 : (string)) : ((zword_width * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s187z3 when (begin
      match (z_s184z3 z_s187z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s184z3 z_s187z3) in
      ZSome (ZBYTE, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s191z3 when (begin
      match (z_s188z3 z_s191z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s188z3 z_s191z3) in
      ZSome (ZHALF, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s195z3 when (begin
      match (z_s192z3 z_s195z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s192z3 z_s195z3) in
      ZSome (ZWORD, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s199z3 when (begin
      match (z_s196z3 z_s199z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s196z3 z_s199z3) in
      ZSome (ZDOUBLE, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

type  zDDC_Result = | ZDDC_Address of zxlenbits | ZDDC_Failure of zCapEx;;

let string_of_zDDC_Result _ = "VARIANT";;

let rec zundefined_DDC_Result (() : (unit)) : zDDC_Result = sail_call (fun r ->
  let zu_0 = (zundefined_CapEx ()) in
  let zu_1 = (undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))) in
  internal_pick [ZDDC_Address zu_1; ZDDC_Failure zu_0])

and ztranslateDDC ((zaddr, zat, zwidth) : ((bit) list * zAccessType * zword_width)) : zDDC_Result = sail_call (fun r ->
  let zddc = !zDDC in
  let zhave_rqd_load_perm = (begin
    match zat with
    | ZRead -> zddc.zpermit_load
    | ZWrite -> true
    | ZReadWrite -> zddc.zpermit_load
    | ZExecute -> false
  end) in
  let zhave_rqd_store_perm = (begin
    match zat with
    | ZRead -> true
    | ZWrite -> zddc.zpermit_store
    | ZReadWrite -> zddc.zpermit_store
    | ZExecute -> false
  end) in
  let znewAddr = (modulus ((add_int ((zgetCapCursor zddc), (uint zaddr))), (pow2 zxlen))) in
  let zsizze = (zword_width_bytes zwidth) in
  let (zbase, ztop) = (zgetCapBounds zddc) in
  if (not (zddc.ztag)) then (ZDDC_Failure ZCapEx_TagViolation) else (if (zddc.zsealed) then (ZDDC_Failure ZCapEx_SealViolation) else (if (not zhave_rqd_load_perm) then (ZDDC_Failure ZCapEx_PermitLoadViolation) else (if (not zhave_rqd_store_perm) then (ZDDC_Failure ZCapEx_PermitStoreViolation) else (if (gt ((add_int (znewAddr, zsizze)), ztop)) then (ZDDC_Failure ZCapEx_LengthViolation) else (if (lt (znewAddr, zbase)) then (ZDDC_Failure ZCapEx_LengthViolation) else (ZDDC_Address (zto_bits ((Big_int.of_int (64)), znewAddr)))))))))

and zcsr_name (zcsr : ((bit) list)) : string = sail_call (fun r ->
  begin
    match zcsr with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__0, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__0, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__0, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__0, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "ustatus"
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__1, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__1, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__1, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__1, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "uie"
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__2, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__2, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__2, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__2, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "utvec"
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__3, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__3, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__3, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__3, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "uscratch"
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__4, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__4, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__4, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__4, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__4, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__4, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__4, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__4, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "uepc"
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__5, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__5, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__5, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__5, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__5, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__5, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__5, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__5, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "ucause"
    | zb__6 when (let zp0z3 = (access (zb__6, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__6, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__6, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__6, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__6, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__6, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__6, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__6, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__6, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__6, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__6, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__6, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "utval"
    | zb__7 when (let zp0z3 = (access (zb__7, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__7, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__7, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__7, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__7, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__7, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__7, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__7, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__7, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__7, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__7, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__7, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "uip"
    | zb__8 when (let zp0z3 = (access (zb__8, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__8, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__8, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__8, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__8, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__8, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__8, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__8, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__8, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__8, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__8, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__8, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "fflags"
    | zb__9 when (let zp0z3 = (access (zb__9, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__9, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__9, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__9, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__9, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__9, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__9, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__9, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__9, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__9, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__9, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__9, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "frm"
    | zb__10 when (let zp0z3 = (access (zb__10, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__10, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__10, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__10, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__10, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__10, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__10, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__10, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__10, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__10, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__10, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__10, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "fcsr"
    | zb__11 when (let zp0z3 = (access (zb__11, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__11, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__11, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__11, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__11, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__11, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__11, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__11, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__11, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__11, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__11, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__11, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "cycle"
    | zb__12 when (let zp0z3 = (access (zb__12, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__12, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__12, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__12, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__12, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__12, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__12, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__12, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__12, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__12, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__12, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__12, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "time"
    | zb__13 when (let zp0z3 = (access (zb__13, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__13, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__13, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__13, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__13, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__13, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__13, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__13, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__13, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__13, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__13, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__13, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "instret"
    | zb__14 when (let zp0z3 = (access (zb__14, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__14, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__14, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__14, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__14, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__14, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__14, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__14, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__14, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__14, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__14, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__14, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "cycleh"
    | zb__15 when (let zp0z3 = (access (zb__15, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__15, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__15, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__15, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__15, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__15, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__15, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__15, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__15, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__15, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__15, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__15, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "timeh"
    | zb__16 when (let zp0z3 = (access (zb__16, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__16, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__16, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__16, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__16, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__16, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__16, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__16, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__16, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__16, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__16, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__16, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "instreth"
    | zb__17 when (let zp0z3 = (access (zb__17, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__17, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__17, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__17, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__17, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__17, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__17, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__17, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__17, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__17, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__17, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__17, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "sstatus"
    | zb__18 when (let zp0z3 = (access (zb__18, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__18, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__18, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__18, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__18, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__18, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__18, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__18, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__18, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__18, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__18, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__18, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "sedeleg"
    | zb__19 when (let zp0z3 = (access (zb__19, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__19, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__19, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__19, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__19, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__19, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__19, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__19, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__19, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__19, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__19, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__19, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "sideleg"
    | zb__20 when (let zp0z3 = (access (zb__20, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__20, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__20, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__20, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__20, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__20, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__20, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__20, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__20, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__20, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__20, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__20, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "sie"
    | zb__21 when (let zp0z3 = (access (zb__21, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__21, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__21, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__21, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__21, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__21, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__21, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__21, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__21, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__21, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__21, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__21, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "stvec"
    | zb__22 when (let zp0z3 = (access (zb__22, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__22, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__22, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__22, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__22, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__22, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__22, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__22, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__22, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__22, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__22, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__22, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "scounteren"
    | zb__23 when (let zp0z3 = (access (zb__23, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__23, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__23, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__23, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__23, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__23, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__23, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__23, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__23, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__23, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__23, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__23, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "sscratch"
    | zb__24 when (let zp0z3 = (access (zb__24, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__24, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__24, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__24, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__24, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__24, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__24, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__24, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__24, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__24, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__24, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__24, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "sepc"
    | zb__25 when (let zp0z3 = (access (zb__25, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__25, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__25, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__25, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__25, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__25, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__25, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__25, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__25, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__25, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__25, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__25, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "scause"
    | zb__26 when (let zp0z3 = (access (zb__26, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__26, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__26, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__26, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__26, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__26, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__26, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__26, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__26, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__26, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__26, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__26, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "stval"
    | zb__27 when (let zp0z3 = (access (zb__27, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__27, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__27, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__27, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__27, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__27, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__27, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__27, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__27, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__27, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__27, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__27, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "sip"
    | zb__28 when (let zp0z3 = (access (zb__28, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__28, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__28, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__28, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__28, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__28, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__28, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__28, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__28, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__28, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__28, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__28, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "satp"
    | zb__29 when (let zp0z3 = (access (zb__29, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__29, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__29, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__29, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__29, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__29, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__29, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__29, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__29, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__29, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__29, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__29, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "mvendorid"
    | zb__30 when (let zp0z3 = (access (zb__30, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__30, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__30, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__30, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__30, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__30, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__30, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__30, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__30, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__30, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__30, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__30, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "marchid"
    | zb__31 when (let zp0z3 = (access (zb__31, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__31, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__31, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__31, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__31, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__31, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__31, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__31, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__31, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__31, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__31, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__31, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "mimpid"
    | zb__32 when (let zp0z3 = (access (zb__32, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__32, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__32, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__32, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__32, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__32, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__32, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__32, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__32, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__32, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__32, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__32, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "mhartid"
    | zb__33 when (let zp0z3 = (access (zb__33, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__33, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__33, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__33, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__33, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__33, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__33, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__33, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__33, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__33, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__33, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__33, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mstatus"
    | zb__34 when (let zp0z3 = (access (zb__34, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__34, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__34, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__34, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__34, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__34, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__34, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__34, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__34, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__34, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__34, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__34, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "misa"
    | zb__35 when (let zp0z3 = (access (zb__35, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__35, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__35, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__35, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__35, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__35, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__35, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__35, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__35, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__35, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__35, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__35, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "medeleg"
    | zb__36 when (let zp0z3 = (access (zb__36, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__36, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__36, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__36, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__36, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__36, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__36, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__36, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__36, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__36, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__36, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__36, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mideleg"
    | zb__37 when (let zp0z3 = (access (zb__37, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__37, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__37, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__37, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__37, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__37, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__37, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__37, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__37, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__37, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__37, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__37, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mie"
    | zb__38 when (let zp0z3 = (access (zb__38, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__38, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__38, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__38, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__38, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__38, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__38, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__38, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__38, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__38, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__38, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__38, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mtvec"
    | zb__39 when (let zp0z3 = (access (zb__39, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__39, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__39, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__39, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__39, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__39, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__39, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__39, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__39, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__39, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__39, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__39, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mcounteren"
    | zb__40 when (let zp0z3 = (access (zb__40, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__40, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__40, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__40, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__40, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__40, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__40, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__40, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__40, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__40, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__40, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__40, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mscratch"
    | zb__41 when (let zp0z3 = (access (zb__41, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__41, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__41, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__41, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__41, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__41, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__41, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__41, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__41, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__41, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__41, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__41, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mepc"
    | zb__42 when (let zp0z3 = (access (zb__42, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__42, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__42, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__42, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__42, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__42, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__42, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__42, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__42, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__42, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__42, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__42, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mcause"
    | zb__43 when (let zp0z3 = (access (zb__43, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__43, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__43, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__43, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__43, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__43, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__43, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__43, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__43, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__43, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__43, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__43, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mtval"
    | zb__44 when (let zp0z3 = (access (zb__44, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__44, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__44, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__44, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__44, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__44, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__44, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__44, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__44, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__44, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__44, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__44, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mip"
    | zb__45 when (let zp0z3 = (access (zb__45, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__45, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__45, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__45, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__45, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__45, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__45, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__45, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__45, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__45, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__45, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__45, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpcfg0"
    | zb__46 when (let zp0z3 = (access (zb__46, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__46, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__46, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__46, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__46, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__46, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__46, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__46, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__46, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__46, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__46, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__46, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr0"
    | zb__47 when (let zp0z3 = (access (zb__47, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__47, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__47, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__47, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__47, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__47, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__47, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__47, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__47, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__47, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__47, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__47, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "mcycle"
    | zb__48 when (let zp0z3 = (access (zb__48, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__48, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__48, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__48, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__48, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__48, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__48, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__48, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__48, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__48, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__48, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__48, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "minstret"
    | zb__49 when (let zp0z3 = (access (zb__49, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__49, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__49, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__49, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__49, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__49, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__49, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__49, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__49, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__49, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__49, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__49, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "mcycleh"
    | zb__50 when (let zp0z3 = (access (zb__50, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__50, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__50, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__50, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__50, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__50, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__50, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__50, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__50, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__50, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__50, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__50, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "minstreth"
    | zb__51 when (let zp0z3 = (access (zb__51, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__51, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__51, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__51, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__51, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__51, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__51, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__51, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__51, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__51, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__51, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__51, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "tselect"
    | _ -> "UNKNOWN"
  end)

and zcsr_name_map_forwards (zargz3 : ((bit) list)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__0, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__0, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__0, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__0, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "ustatus"
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__1, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__1, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__1, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__1, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "uie"
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__2, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__2, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__2, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__2, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "utvec"
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__3, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__3, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__3, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__3, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "uscratch"
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__4, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__4, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__4, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__4, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__4, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__4, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__4, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__4, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "uepc"
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__5, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__5, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__5, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__5, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__5, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__5, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__5, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__5, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "ucause"
    | zb__6 when (let zp0z3 = (access (zb__6, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__6, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__6, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__6, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__6, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__6, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__6, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__6, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__6, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__6, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__6, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__6, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "utval"
    | zb__7 when (let zp0z3 = (access (zb__7, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__7, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__7, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__7, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__7, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__7, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__7, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__7, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__7, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__7, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__7, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__7, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "uip"
    | zb__8 when (let zp0z3 = (access (zb__8, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__8, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__8, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__8, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__8, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__8, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__8, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__8, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__8, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__8, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__8, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__8, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "fflags"
    | zb__9 when (let zp0z3 = (access (zb__9, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__9, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__9, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__9, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__9, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__9, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__9, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__9, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__9, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__9, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__9, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__9, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "frm"
    | zb__10 when (let zp0z3 = (access (zb__10, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__10, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__10, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__10, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__10, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__10, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__10, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__10, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__10, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__10, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__10, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__10, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "fcsr"
    | zb__11 when (let zp0z3 = (access (zb__11, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__11, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__11, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__11, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__11, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__11, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__11, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__11, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__11, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__11, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__11, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__11, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "cycle"
    | zb__12 when (let zp0z3 = (access (zb__12, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__12, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__12, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__12, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__12, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__12, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__12, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__12, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__12, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__12, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__12, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__12, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "time"
    | zb__13 when (let zp0z3 = (access (zb__13, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__13, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__13, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__13, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__13, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__13, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__13, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__13, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__13, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__13, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__13, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__13, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "instret"
    | zb__14 when (let zp0z3 = (access (zb__14, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__14, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__14, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__14, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__14, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__14, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__14, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__14, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__14, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__14, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__14, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__14, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "cycleh"
    | zb__15 when (let zp0z3 = (access (zb__15, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__15, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__15, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__15, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__15, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__15, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__15, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__15, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__15, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__15, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__15, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__15, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "timeh"
    | zb__16 when (let zp0z3 = (access (zb__16, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__16, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__16, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__16, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__16, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__16, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__16, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__16, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__16, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__16, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__16, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__16, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "instreth"
    | zb__17 when (let zp0z3 = (access (zb__17, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__17, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__17, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__17, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__17, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__17, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__17, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__17, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__17, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__17, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__17, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__17, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "sstatus"
    | zb__18 when (let zp0z3 = (access (zb__18, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__18, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__18, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__18, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__18, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__18, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__18, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__18, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__18, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__18, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__18, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__18, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "sedeleg"
    | zb__19 when (let zp0z3 = (access (zb__19, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__19, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__19, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__19, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__19, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__19, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__19, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__19, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__19, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__19, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__19, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__19, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "sideleg"
    | zb__20 when (let zp0z3 = (access (zb__20, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__20, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__20, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__20, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__20, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__20, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__20, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__20, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__20, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__20, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__20, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__20, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "sie"
    | zb__21 when (let zp0z3 = (access (zb__21, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__21, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__21, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__21, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__21, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__21, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__21, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__21, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__21, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__21, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__21, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__21, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "stvec"
    | zb__22 when (let zp0z3 = (access (zb__22, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__22, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__22, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__22, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__22, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__22, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__22, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__22, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__22, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__22, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__22, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__22, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "scounteren"
    | zb__23 when (let zp0z3 = (access (zb__23, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__23, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__23, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__23, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__23, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__23, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__23, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__23, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__23, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__23, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__23, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__23, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "sscratch"
    | zb__24 when (let zp0z3 = (access (zb__24, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__24, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__24, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__24, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__24, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__24, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__24, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__24, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__24, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__24, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__24, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__24, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "sepc"
    | zb__25 when (let zp0z3 = (access (zb__25, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__25, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__25, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__25, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__25, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__25, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__25, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__25, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__25, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__25, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__25, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__25, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "scause"
    | zb__26 when (let zp0z3 = (access (zb__26, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__26, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__26, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__26, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__26, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__26, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__26, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__26, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__26, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__26, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__26, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__26, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "stval"
    | zb__27 when (let zp0z3 = (access (zb__27, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__27, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__27, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__27, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__27, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__27, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__27, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__27, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__27, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__27, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__27, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__27, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "sip"
    | zb__28 when (let zp0z3 = (access (zb__28, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__28, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__28, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__28, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__28, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__28, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__28, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__28, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__28, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__28, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__28, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__28, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "satp"
    | zb__29 when (let zp0z3 = (access (zb__29, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__29, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__29, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__29, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__29, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__29, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__29, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__29, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__29, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__29, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__29, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__29, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "mvendorid"
    | zb__30 when (let zp0z3 = (access (zb__30, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__30, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__30, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__30, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__30, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__30, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__30, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__30, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__30, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__30, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__30, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__30, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "marchid"
    | zb__31 when (let zp0z3 = (access (zb__31, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__31, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__31, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__31, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__31, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__31, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__31, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__31, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__31, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__31, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__31, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__31, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "mimpid"
    | zb__32 when (let zp0z3 = (access (zb__32, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__32, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__32, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__32, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__32, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__32, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__32, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__32, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__32, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__32, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__32, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__32, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      "mhartid"
    | zb__33 when (let zp0z3 = (access (zb__33, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__33, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__33, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__33, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__33, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__33, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__33, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__33, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__33, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__33, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__33, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__33, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mstatus"
    | zb__34 when (let zp0z3 = (access (zb__34, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__34, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__34, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__34, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__34, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__34, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__34, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__34, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__34, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__34, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__34, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__34, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "misa"
    | zb__35 when (let zp0z3 = (access (zb__35, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__35, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__35, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__35, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__35, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__35, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__35, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__35, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__35, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__35, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__35, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__35, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "medeleg"
    | zb__36 when (let zp0z3 = (access (zb__36, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__36, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__36, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__36, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__36, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__36, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__36, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__36, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__36, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__36, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__36, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__36, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mideleg"
    | zb__37 when (let zp0z3 = (access (zb__37, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__37, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__37, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__37, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__37, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__37, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__37, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__37, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__37, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__37, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__37, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__37, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mie"
    | zb__38 when (let zp0z3 = (access (zb__38, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__38, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__38, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__38, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__38, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__38, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__38, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__38, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__38, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__38, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__38, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__38, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mtvec"
    | zb__39 when (let zp0z3 = (access (zb__39, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__39, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__39, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__39, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__39, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__39, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__39, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__39, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__39, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__39, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__39, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__39, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mcounteren"
    | zb__40 when (let zp0z3 = (access (zb__40, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__40, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__40, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__40, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__40, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__40, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__40, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__40, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__40, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__40, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__40, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__40, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mscratch"
    | zb__41 when (let zp0z3 = (access (zb__41, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__41, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__41, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__41, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__41, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__41, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__41, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__41, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__41, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__41, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__41, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__41, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mepc"
    | zb__42 when (let zp0z3 = (access (zb__42, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__42, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__42, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__42, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__42, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__42, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__42, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__42, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__42, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__42, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__42, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__42, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mcause"
    | zb__43 when (let zp0z3 = (access (zb__43, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__43, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__43, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__43, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__43, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__43, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__43, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__43, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__43, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__43, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__43, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__43, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mtval"
    | zb__44 when (let zp0z3 = (access (zb__44, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__44, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__44, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__44, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__44, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__44, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__44, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__44, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__44, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__44, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__44, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__44, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "mip"
    | zb__45 when (let zp0z3 = (access (zb__45, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__45, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__45, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__45, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__45, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__45, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__45, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__45, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__45, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__45, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__45, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__45, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpcfg0"
    | zb__46 when (let zp0z3 = (access (zb__46, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__46, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__46, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__46, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__46, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__46, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__46, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__46, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__46, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__46, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__46, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__46, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpcfg1"
    | zb__47 when (let zp0z3 = (access (zb__47, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__47, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__47, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__47, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__47, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__47, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__47, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__47, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__47, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__47, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__47, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__47, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpcfg2"
    | zb__48 when (let zp0z3 = (access (zb__48, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__48, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__48, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__48, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__48, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__48, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__48, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__48, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__48, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__48, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__48, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__48, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpcfg3"
    | zb__49 when (let zp0z3 = (access (zb__49, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__49, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__49, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__49, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__49, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__49, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__49, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__49, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__49, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__49, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__49, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__49, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr0"
    | zb__50 when (let zp0z3 = (access (zb__50, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__50, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__50, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__50, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__50, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__50, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__50, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__50, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__50, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__50, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__50, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__50, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr1"
    | zb__51 when (let zp0z3 = (access (zb__51, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__51, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__51, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__51, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__51, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__51, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__51, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__51, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__51, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__51, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__51, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__51, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr2"
    | zb__52 when (let zp0z3 = (access (zb__52, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__52, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__52, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__52, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__52, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__52, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__52, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__52, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__52, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__52, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__52, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__52, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr3"
    | zb__53 when (let zp0z3 = (access (zb__53, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__53, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__53, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__53, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__53, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__53, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__53, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__53, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__53, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__53, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__53, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__53, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr4"
    | zb__54 when (let zp0z3 = (access (zb__54, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__54, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__54, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__54, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__54, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__54, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__54, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__54, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__54, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__54, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__54, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__54, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr5"
    | zb__55 when (let zp0z3 = (access (zb__55, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__55, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__55, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__55, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__55, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__55, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__55, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__55, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__55, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__55, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__55, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__55, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr6"
    | zb__56 when (let zp0z3 = (access (zb__56, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__56, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__56, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__56, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__56, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__56, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__56, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__56, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__56, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__56, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__56, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__56, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr7"
    | zb__57 when (let zp0z3 = (access (zb__57, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__57, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__57, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__57, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__57, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__57, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__57, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__57, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__57, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__57, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__57, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__57, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr8"
    | zb__58 when (let zp0z3 = (access (zb__58, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__58, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__58, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__58, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__58, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__58, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__58, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__58, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__58, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__58, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__58, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__58, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr9"
    | zb__59 when (let zp0z3 = (access (zb__59, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__59, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__59, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__59, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__59, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__59, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__59, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__59, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__59, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__59, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__59, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__59, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr10"
    | zb__60 when (let zp0z3 = (access (zb__60, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__60, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__60, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__60, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__60, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__60, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__60, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__60, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__60, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__60, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__60, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__60, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr11"
    | zb__61 when (let zp0z3 = (access (zb__61, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__61, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__61, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__61, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__61, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__61, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__61, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__61, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__61, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__61, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__61, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__61, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr12"
    | zb__62 when (let zp0z3 = (access (zb__62, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__62, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__62, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__62, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__62, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__62, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__62, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__62, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__62, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__62, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__62, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__62, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr13"
    | zb__63 when (let zp0z3 = (access (zb__63, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__63, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__63, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__63, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__63, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__63, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__63, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__63, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__63, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__63, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__63, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__63, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr14"
    | zb__64 when (let zp0z3 = (access (zb__64, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__64, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__64, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__64, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__64, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__64, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__64, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__64, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__64, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__64, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__64, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__64, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      "pmpaddr15"
    | zb__65 when (let zp0z3 = (access (zb__65, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__65, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__65, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__65, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__65, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__65, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__65, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__65, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__65, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__65, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__65, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__65, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "mcycle"
    | zb__66 when (let zp0z3 = (access (zb__66, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__66, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__66, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__66, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__66, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__66, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__66, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__66, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__66, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__66, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__66, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__66, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "minstret"
    | zb__67 when (let zp0z3 = (access (zb__67, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__67, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__67, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__67, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__67, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__67, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__67, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__67, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__67, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__67, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__67, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__67, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "mcycleh"
    | zb__68 when (let zp0z3 = (access (zb__68, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__68, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__68, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__68, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__68, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__68, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__68, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__68, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__68, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__68, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__68, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__68, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      "minstreth"
    | zb__69 when (let zp0z3 = (access (zb__69, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__69, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__69, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__69, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__69, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__69, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__69, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__69, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__69, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__69, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__69, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__69, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "tselect"
    | zb__70 when (let zp0z3 = (access (zb__70, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__70, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__70, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__70, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__70, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__70, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__70, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__70, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__70, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__70, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__70, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__70, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "tdata1"
    | zb__71 when (let zp0z3 = (access (zb__71, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__71, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__71, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__71, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__71, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__71, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__71, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__71, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__71, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__71, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__71, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__71, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "tdata2"
    | zb__72 when (let zp0z3 = (access (zb__72, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__72, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__72, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__72, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__72, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__72, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__72, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__72, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__72, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__72, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__72, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__72, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      "tdata3"
  end)

and zcsr_name_map_backwards (zargz3 : (string)) : (bit) list = sail_call (fun r ->
  begin
    match zargz3 with
    | "ustatus" -> [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0]
    | "uie" -> [B0; B0; B0; B0; B0; B0; B0; B0; B0; B1; B0; B0]
    | "utvec" -> [B0; B0; B0; B0; B0; B0; B0; B0; B0; B1; B0; B1]
    | "uscratch" -> [B0; B0; B0; B0; B0; B1; B0; B0; B0; B0; B0; B0]
    | "uepc" -> [B0; B0; B0; B0; B0; B1; B0; B0; B0; B0; B0; B1]
    | "ucause" -> [B0; B0; B0; B0; B0; B1; B0; B0; B0; B0; B1; B0]
    | "utval" -> [B0; B0; B0; B0; B0; B1; B0; B0; B0; B0; B1; B1]
    | "uip" -> [B0; B0; B0; B0; B0; B1; B0; B0; B0; B1; B0; B0]
    | "fflags" -> [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B1]
    | "frm" -> [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B1; B0]
    | "fcsr" -> [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B1; B1]
    | "cycle" -> [B1; B1; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0]
    | "time" -> [B1; B1; B0; B0; B0; B0; B0; B0; B0; B0; B0; B1]
    | "instret" -> [B1; B1; B0; B0; B0; B0; B0; B0; B0; B0; B1; B0]
    | "cycleh" -> [B1; B1; B0; B0; B1; B0; B0; B0; B0; B0; B0; B0]
    | "timeh" -> [B1; B1; B0; B0; B1; B0; B0; B0; B0; B0; B0; B1]
    | "instreth" -> [B1; B1; B0; B0; B1; B0; B0; B0; B0; B0; B1; B0]
    | "sstatus" -> [B0; B0; B0; B1; B0; B0; B0; B0; B0; B0; B0; B0]
    | "sedeleg" -> [B0; B0; B0; B1; B0; B0; B0; B0; B0; B0; B1; B0]
    | "sideleg" -> [B0; B0; B0; B1; B0; B0; B0; B0; B0; B0; B1; B1]
    | "sie" -> [B0; B0; B0; B1; B0; B0; B0; B0; B0; B1; B0; B0]
    | "stvec" -> [B0; B0; B0; B1; B0; B0; B0; B0; B0; B1; B0; B1]
    | "scounteren" -> [B0; B0; B0; B1; B0; B0; B0; B0; B0; B1; B1; B0]
    | "sscratch" -> [B0; B0; B0; B1; B0; B1; B0; B0; B0; B0; B0; B0]
    | "sepc" -> [B0; B0; B0; B1; B0; B1; B0; B0; B0; B0; B0; B1]
    | "scause" -> [B0; B0; B0; B1; B0; B1; B0; B0; B0; B0; B1; B0]
    | "stval" -> [B0; B0; B0; B1; B0; B1; B0; B0; B0; B0; B1; B1]
    | "sip" -> [B0; B0; B0; B1; B0; B1; B0; B0; B0; B1; B0; B0]
    | "satp" -> [B0; B0; B0; B1; B1; B0; B0; B0; B0; B0; B0; B0]
    | "mvendorid" -> [B1; B1; B1; B1; B0; B0; B0; B1; B0; B0; B0; B1]
    | "marchid" -> [B1; B1; B1; B1; B0; B0; B0; B1; B0; B0; B1; B0]
    | "mimpid" -> [B1; B1; B1; B1; B0; B0; B0; B1; B0; B0; B1; B1]
    | "mhartid" -> [B1; B1; B1; B1; B0; B0; B0; B1; B0; B1; B0; B0]
    | "mstatus" -> [B0; B0; B1; B1; B0; B0; B0; B0; B0; B0; B0; B0]
    | "misa" -> [B0; B0; B1; B1; B0; B0; B0; B0; B0; B0; B0; B1]
    | "medeleg" -> [B0; B0; B1; B1; B0; B0; B0; B0; B0; B0; B1; B0]
    | "mideleg" -> [B0; B0; B1; B1; B0; B0; B0; B0; B0; B0; B1; B1]
    | "mie" -> [B0; B0; B1; B1; B0; B0; B0; B0; B0; B1; B0; B0]
    | "mtvec" -> [B0; B0; B1; B1; B0; B0; B0; B0; B0; B1; B0; B1]
    | "mcounteren" -> [B0; B0; B1; B1; B0; B0; B0; B0; B0; B1; B1; B0]
    | "mscratch" -> [B0; B0; B1; B1; B0; B1; B0; B0; B0; B0; B0; B0]
    | "mepc" -> [B0; B0; B1; B1; B0; B1; B0; B0; B0; B0; B0; B1]
    | "mcause" -> [B0; B0; B1; B1; B0; B1; B0; B0; B0; B0; B1; B0]
    | "mtval" -> [B0; B0; B1; B1; B0; B1; B0; B0; B0; B0; B1; B1]
    | "mip" -> [B0; B0; B1; B1; B0; B1; B0; B0; B0; B1; B0; B0]
    | "pmpcfg0" -> [B0; B0; B1; B1; B1; B0; B1; B0; B0; B0; B0; B0]
    | "pmpcfg1" -> [B0; B0; B1; B1; B1; B0; B1; B0; B0; B0; B0; B1]
    | "pmpcfg2" -> [B0; B0; B1; B1; B1; B0; B1; B0; B0; B0; B1; B0]
    | "pmpcfg3" -> [B0; B0; B1; B1; B1; B0; B1; B0; B0; B0; B1; B1]
    | "pmpaddr0" -> [B0; B0; B1; B1; B1; B0; B1; B1; B0; B0; B0; B0]
    | "pmpaddr1" -> [B0; B0; B1; B1; B1; B0; B1; B1; B0; B0; B0; B1]
    | "pmpaddr2" -> [B0; B0; B1; B1; B1; B0; B1; B1; B0; B0; B1; B0]
    | "pmpaddr3" -> [B0; B0; B1; B1; B1; B0; B1; B1; B0; B0; B1; B1]
    | "pmpaddr4" -> [B0; B0; B1; B1; B1; B0; B1; B1; B0; B1; B0; B0]
    | "pmpaddr5" -> [B0; B0; B1; B1; B1; B0; B1; B1; B0; B1; B0; B1]
    | "pmpaddr6" -> [B0; B0; B1; B1; B1; B0; B1; B1; B0; B1; B1; B0]
    | "pmpaddr7" -> [B0; B0; B1; B1; B1; B0; B1; B1; B0; B1; B1; B1]
    | "pmpaddr8" -> [B0; B0; B1; B1; B1; B0; B1; B1; B1; B0; B0; B0]
    | "pmpaddr9" -> [B0; B0; B1; B1; B1; B0; B1; B1; B1; B0; B0; B1]
    | "pmpaddr10" -> [B0; B0; B1; B1; B1; B0; B1; B1; B1; B0; B1; B0]
    | "pmpaddr11" -> [B0; B0; B1; B1; B1; B0; B1; B1; B1; B0; B1; B1]
    | "pmpaddr12" -> [B0; B0; B1; B1; B1; B0; B1; B1; B1; B1; B0; B0]
    | "pmpaddr13" -> [B0; B0; B1; B1; B1; B0; B1; B1; B1; B1; B0; B1]
    | "pmpaddr14" -> [B0; B0; B1; B1; B1; B0; B1; B1; B1; B1; B1; B0]
    | "pmpaddr15" -> [B0; B0; B1; B1; B1; B0; B1; B1; B1; B1; B1; B1]
    | "mcycle" -> [B1; B0; B1; B1; B0; B0; B0; B0; B0; B0; B0; B0]
    | "minstret" -> [B1; B0; B1; B1; B0; B0; B0; B0; B0; B0; B1; B0]
    | "mcycleh" -> [B1; B0; B1; B1; B1; B0; B0; B0; B0; B0; B0; B0]
    | "minstreth" -> [B1; B0; B1; B1; B1; B0; B0; B0; B0; B0; B1; B0]
    | "tselect" -> [B0; B1; B1; B1; B1; B0; B1; B0; B0; B0; B0; B0]
    | "tdata1" -> [B0; B1; B1; B1; B1; B0; B1; B0; B0; B0; B0; B1]
    | "tdata2" -> [B0; B1; B1; B1; B1; B0; B1; B0; B0; B0; B1; B0]
    | "tdata3" -> [B0; B1; B1; B1; B1; B0; B1; B0; B0; B0; B1; B1]
  end)

and zcsr_name_map_forwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__0, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__0, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__0, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__0, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__1, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__1, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__1, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__1, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__2, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__2, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__2, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__2, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__3, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__3, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__3, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__3, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__4, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__4, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__4, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__4, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__4, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__4, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__4, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__4, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__5, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__5, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__5, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__5, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__5, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__5, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__5, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__5, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__6 when (let zp0z3 = (access (zb__6, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__6, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__6, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__6, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__6, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__6, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__6, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__6, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__6, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__6, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__6, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__6, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__7 when (let zp0z3 = (access (zb__7, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__7, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__7, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__7, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__7, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__7, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__7, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__7, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__7, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__7, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__7, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__7, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__8 when (let zp0z3 = (access (zb__8, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__8, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__8, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__8, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__8, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__8, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__8, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__8, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__8, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__8, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__8, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__8, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__9 when (let zp0z3 = (access (zb__9, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__9, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__9, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__9, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__9, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__9, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__9, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__9, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__9, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__9, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__9, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__9, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__10 when (let zp0z3 = (access (zb__10, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__10, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__10, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__10, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__10, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__10, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__10, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__10, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__10, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__10, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__10, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__10, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__11 when (let zp0z3 = (access (zb__11, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__11, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__11, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__11, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__11, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__11, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__11, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__11, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__11, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__11, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__11, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__11, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__12 when (let zp0z3 = (access (zb__12, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__12, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__12, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__12, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__12, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__12, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__12, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__12, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__12, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__12, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__12, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__12, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__13 when (let zp0z3 = (access (zb__13, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__13, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__13, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__13, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__13, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__13, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__13, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__13, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__13, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__13, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__13, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__13, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__14 when (let zp0z3 = (access (zb__14, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__14, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__14, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__14, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__14, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__14, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__14, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__14, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__14, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__14, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__14, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__14, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__15 when (let zp0z3 = (access (zb__15, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__15, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__15, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__15, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__15, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__15, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__15, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__15, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__15, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__15, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__15, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__15, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__16 when (let zp0z3 = (access (zb__16, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__16, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__16, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__16, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__16, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__16, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__16, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__16, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__16, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__16, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__16, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__16, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__17 when (let zp0z3 = (access (zb__17, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__17, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__17, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__17, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__17, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__17, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__17, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__17, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__17, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__17, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__17, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__17, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__18 when (let zp0z3 = (access (zb__18, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__18, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__18, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__18, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__18, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__18, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__18, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__18, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__18, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__18, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__18, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__18, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__19 when (let zp0z3 = (access (zb__19, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__19, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__19, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__19, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__19, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__19, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__19, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__19, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__19, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__19, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__19, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__19, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__20 when (let zp0z3 = (access (zb__20, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__20, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__20, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__20, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__20, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__20, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__20, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__20, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__20, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__20, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__20, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__20, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__21 when (let zp0z3 = (access (zb__21, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__21, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__21, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__21, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__21, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__21, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__21, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__21, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__21, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__21, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__21, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__21, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__22 when (let zp0z3 = (access (zb__22, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__22, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__22, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__22, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__22, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__22, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__22, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__22, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__22, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__22, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__22, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__22, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__23 when (let zp0z3 = (access (zb__23, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__23, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__23, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__23, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__23, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__23, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__23, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__23, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__23, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__23, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__23, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__23, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__24 when (let zp0z3 = (access (zb__24, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__24, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__24, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__24, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__24, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__24, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__24, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__24, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__24, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__24, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__24, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__24, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__25 when (let zp0z3 = (access (zb__25, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__25, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__25, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__25, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__25, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__25, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__25, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__25, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__25, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__25, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__25, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__25, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__26 when (let zp0z3 = (access (zb__26, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__26, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__26, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__26, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__26, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__26, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__26, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__26, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__26, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__26, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__26, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__26, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__27 when (let zp0z3 = (access (zb__27, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__27, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__27, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__27, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__27, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__27, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__27, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__27, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__27, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__27, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__27, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__27, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__28 when (let zp0z3 = (access (zb__28, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__28, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__28, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__28, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__28, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__28, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__28, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__28, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__28, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__28, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__28, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__28, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__29 when (let zp0z3 = (access (zb__29, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__29, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__29, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__29, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__29, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__29, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__29, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__29, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__29, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__29, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__29, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__29, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__30 when (let zp0z3 = (access (zb__30, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__30, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__30, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__30, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__30, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__30, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__30, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__30, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__30, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__30, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__30, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__30, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__31 when (let zp0z3 = (access (zb__31, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__31, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__31, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__31, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__31, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__31, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__31, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__31, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__31, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__31, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__31, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__31, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__32 when (let zp0z3 = (access (zb__32, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__32, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__32, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__32, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__32, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__32, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__32, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__32, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__32, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__32, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__32, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__32, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__33 when (let zp0z3 = (access (zb__33, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__33, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__33, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__33, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__33, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__33, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__33, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__33, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__33, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__33, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__33, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__33, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__34 when (let zp0z3 = (access (zb__34, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__34, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__34, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__34, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__34, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__34, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__34, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__34, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__34, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__34, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__34, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__34, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__35 when (let zp0z3 = (access (zb__35, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__35, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__35, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__35, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__35, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__35, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__35, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__35, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__35, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__35, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__35, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__35, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__36 when (let zp0z3 = (access (zb__36, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__36, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__36, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__36, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__36, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__36, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__36, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__36, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__36, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__36, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__36, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__36, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__37 when (let zp0z3 = (access (zb__37, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__37, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__37, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__37, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__37, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__37, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__37, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__37, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__37, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__37, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__37, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__37, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__38 when (let zp0z3 = (access (zb__38, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__38, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__38, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__38, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__38, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__38, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__38, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__38, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__38, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__38, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__38, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__38, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__39 when (let zp0z3 = (access (zb__39, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__39, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__39, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__39, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__39, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__39, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__39, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__39, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__39, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__39, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__39, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__39, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__40 when (let zp0z3 = (access (zb__40, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__40, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__40, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__40, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__40, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__40, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__40, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__40, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__40, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__40, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__40, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__40, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__41 when (let zp0z3 = (access (zb__41, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__41, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__41, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__41, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__41, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__41, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__41, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__41, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__41, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__41, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__41, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__41, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__42 when (let zp0z3 = (access (zb__42, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__42, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__42, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__42, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__42, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__42, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__42, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__42, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__42, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__42, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__42, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__42, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__43 when (let zp0z3 = (access (zb__43, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__43, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__43, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__43, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__43, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__43, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__43, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__43, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__43, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__43, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__43, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__43, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__44 when (let zp0z3 = (access (zb__44, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__44, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__44, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__44, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__44, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__44, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__44, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__44, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__44, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__44, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__44, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__44, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__45 when (let zp0z3 = (access (zb__45, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__45, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__45, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__45, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__45, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__45, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__45, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__45, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__45, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__45, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__45, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__45, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__46 when (let zp0z3 = (access (zb__46, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__46, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__46, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__46, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__46, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__46, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__46, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__46, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__46, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__46, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__46, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__46, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__47 when (let zp0z3 = (access (zb__47, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__47, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__47, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__47, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__47, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__47, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__47, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__47, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__47, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__47, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__47, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__47, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__48 when (let zp0z3 = (access (zb__48, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__48, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__48, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__48, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__48, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__48, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__48, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__48, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__48, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__48, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__48, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__48, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__49 when (let zp0z3 = (access (zb__49, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__49, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__49, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__49, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__49, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__49, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__49, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__49, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__49, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__49, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__49, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__49, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__50 when (let zp0z3 = (access (zb__50, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__50, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__50, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__50, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__50, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__50, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__50, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__50, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__50, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__50, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__50, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__50, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__51 when (let zp0z3 = (access (zb__51, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__51, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__51, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__51, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__51, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__51, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__51, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__51, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__51, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__51, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__51, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__51, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__52 when (let zp0z3 = (access (zb__52, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__52, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__52, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__52, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__52, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__52, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__52, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__52, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__52, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__52, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__52, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__52, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__53 when (let zp0z3 = (access (zb__53, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__53, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__53, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__53, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__53, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__53, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__53, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__53, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__53, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__53, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__53, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__53, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__54 when (let zp0z3 = (access (zb__54, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__54, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__54, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__54, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__54, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__54, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__54, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__54, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__54, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__54, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__54, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__54, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__55 when (let zp0z3 = (access (zb__55, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__55, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__55, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__55, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__55, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__55, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__55, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__55, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__55, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__55, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__55, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__55, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__56 when (let zp0z3 = (access (zb__56, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__56, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__56, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__56, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__56, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__56, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__56, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__56, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__56, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__56, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__56, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__56, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__57 when (let zp0z3 = (access (zb__57, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__57, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__57, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__57, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__57, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__57, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__57, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__57, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__57, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__57, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__57, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__57, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__58 when (let zp0z3 = (access (zb__58, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__58, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__58, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__58, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__58, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__58, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__58, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__58, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__58, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__58, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__58, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__58, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__59 when (let zp0z3 = (access (zb__59, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__59, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__59, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__59, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__59, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__59, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__59, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__59, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__59, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__59, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__59, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__59, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__60 when (let zp0z3 = (access (zb__60, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__60, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__60, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__60, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__60, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__60, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__60, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__60, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__60, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__60, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__60, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__60, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__61 when (let zp0z3 = (access (zb__61, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__61, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__61, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__61, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__61, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__61, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__61, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__61, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__61, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__61, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__61, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__61, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__62 when (let zp0z3 = (access (zb__62, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__62, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__62, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__62, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__62, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__62, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__62, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__62, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__62, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__62, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__62, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__62, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__63 when (let zp0z3 = (access (zb__63, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__63, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__63, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__63, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__63, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__63, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__63, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__63, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__63, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__63, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__63, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__63, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__64 when (let zp0z3 = (access (zb__64, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__64, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__64, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__64, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__64, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__64, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__64, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__64, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__64, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__64, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__64, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__64, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__65 when (let zp0z3 = (access (zb__65, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__65, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__65, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__65, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__65, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__65, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__65, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__65, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__65, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__65, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__65, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__65, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__66 when (let zp0z3 = (access (zb__66, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__66, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__66, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__66, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__66, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__66, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__66, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__66, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__66, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__66, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__66, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__66, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__67 when (let zp0z3 = (access (zb__67, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__67, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__67, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__67, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__67, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__67, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__67, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__67, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__67, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__67, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__67, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__67, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__68 when (let zp0z3 = (access (zb__68, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__68, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__68, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__68, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__68, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__68, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__68, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__68, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__68, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__68, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__68, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__68, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__69 when (let zp0z3 = (access (zb__69, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__69, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__69, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__69, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__69, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__69, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__69, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__69, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__69, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__69, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__69, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__69, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__70 when (let zp0z3 = (access (zb__70, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__70, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__70, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__70, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__70, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__70, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__70, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__70, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__70, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__70, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__70, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__70, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__71 when (let zp0z3 = (access (zb__71, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__71, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__71, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__71, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__71, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__71, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__71, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__71, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__71, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__71, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__71, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__71, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__72 when (let zp0z3 = (access (zb__72, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__72, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__72, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__72, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__72, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__72, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__72, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__72, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__72, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__72, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__72, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__72, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | _ -> false
  end)

and zcsr_name_map_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | "ustatus" -> true
    | "uie" -> true
    | "utvec" -> true
    | "uscratch" -> true
    | "uepc" -> true
    | "ucause" -> true
    | "utval" -> true
    | "uip" -> true
    | "fflags" -> true
    | "frm" -> true
    | "fcsr" -> true
    | "cycle" -> true
    | "time" -> true
    | "instret" -> true
    | "cycleh" -> true
    | "timeh" -> true
    | "instreth" -> true
    | "sstatus" -> true
    | "sedeleg" -> true
    | "sideleg" -> true
    | "sie" -> true
    | "stvec" -> true
    | "scounteren" -> true
    | "sscratch" -> true
    | "sepc" -> true
    | "scause" -> true
    | "stval" -> true
    | "sip" -> true
    | "satp" -> true
    | "mvendorid" -> true
    | "marchid" -> true
    | "mimpid" -> true
    | "mhartid" -> true
    | "mstatus" -> true
    | "misa" -> true
    | "medeleg" -> true
    | "mideleg" -> true
    | "mie" -> true
    | "mtvec" -> true
    | "mcounteren" -> true
    | "mscratch" -> true
    | "mepc" -> true
    | "mcause" -> true
    | "mtval" -> true
    | "mip" -> true
    | "pmpcfg0" -> true
    | "pmpcfg1" -> true
    | "pmpcfg2" -> true
    | "pmpcfg3" -> true
    | "pmpaddr0" -> true
    | "pmpaddr1" -> true
    | "pmpaddr2" -> true
    | "pmpaddr3" -> true
    | "pmpaddr4" -> true
    | "pmpaddr5" -> true
    | "pmpaddr6" -> true
    | "pmpaddr7" -> true
    | "pmpaddr8" -> true
    | "pmpaddr9" -> true
    | "pmpaddr10" -> true
    | "pmpaddr11" -> true
    | "pmpaddr12" -> true
    | "pmpaddr13" -> true
    | "pmpaddr14" -> true
    | "pmpaddr15" -> true
    | "mcycle" -> true
    | "minstret" -> true
    | "mcycleh" -> true
    | "minstreth" -> true
    | "tselect" -> true
    | "tdata1" -> true
    | "tdata2" -> true
    | "tdata3" -> true
    | _ -> false
  end)

and z_s488z3 (z_s489z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s489z3 with
    | z_s490z3 when (string_startswith (z_s490z3, "tdata3")) ->
      begin
        match (string_drop (z_s490z3, (string_length "tdata3"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s484z3 (z_s485z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s485z3 with
    | z_s486z3 when (string_startswith (z_s486z3, "tdata2")) ->
      begin
        match (string_drop (z_s486z3, (string_length "tdata2"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s480z3 (z_s481z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s481z3 with
    | z_s482z3 when (string_startswith (z_s482z3, "tdata1")) ->
      begin
        match (string_drop (z_s482z3, (string_length "tdata1"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s476z3 (z_s477z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s477z3 with
    | z_s478z3 when (string_startswith (z_s478z3, "tselect")) ->
      begin
        match (string_drop (z_s478z3, (string_length "tselect"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s472z3 (z_s473z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s473z3 with
    | z_s474z3 when (string_startswith (z_s474z3, "minstreth")) ->
      begin
        match (string_drop (z_s474z3, (string_length "minstreth"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s468z3 (z_s469z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s469z3 with
    | z_s470z3 when (string_startswith (z_s470z3, "mcycleh")) ->
      begin
        match (string_drop (z_s470z3, (string_length "mcycleh"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s464z3 (z_s465z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s465z3 with
    | z_s466z3 when (string_startswith (z_s466z3, "minstret")) ->
      begin
        match (string_drop (z_s466z3, (string_length "minstret"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s460z3 (z_s461z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s461z3 with
    | z_s462z3 when (string_startswith (z_s462z3, "mcycle")) ->
      begin
        match (string_drop (z_s462z3, (string_length "mcycle"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s456z3 (z_s457z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s457z3 with
    | z_s458z3 when (string_startswith (z_s458z3, "pmpaddr15")) ->
      begin
        match (string_drop (z_s458z3, (string_length "pmpaddr15"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s452z3 (z_s453z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s453z3 with
    | z_s454z3 when (string_startswith (z_s454z3, "pmpaddr14")) ->
      begin
        match (string_drop (z_s454z3, (string_length "pmpaddr14"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s448z3 (z_s449z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s449z3 with
    | z_s450z3 when (string_startswith (z_s450z3, "pmpaddr13")) ->
      begin
        match (string_drop (z_s450z3, (string_length "pmpaddr13"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s444z3 (z_s445z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s445z3 with
    | z_s446z3 when (string_startswith (z_s446z3, "pmpaddr12")) ->
      begin
        match (string_drop (z_s446z3, (string_length "pmpaddr12"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s440z3 (z_s441z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s441z3 with
    | z_s442z3 when (string_startswith (z_s442z3, "pmpaddr11")) ->
      begin
        match (string_drop (z_s442z3, (string_length "pmpaddr11"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s436z3 (z_s437z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s437z3 with
    | z_s438z3 when (string_startswith (z_s438z3, "pmpaddr10")) ->
      begin
        match (string_drop (z_s438z3, (string_length "pmpaddr10"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s432z3 (z_s433z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s433z3 with
    | z_s434z3 when (string_startswith (z_s434z3, "pmpaddr9")) ->
      begin
        match (string_drop (z_s434z3, (string_length "pmpaddr9"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s428z3 (z_s429z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s429z3 with
    | z_s430z3 when (string_startswith (z_s430z3, "pmpaddr8")) ->
      begin
        match (string_drop (z_s430z3, (string_length "pmpaddr8"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s424z3 (z_s425z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s425z3 with
    | z_s426z3 when (string_startswith (z_s426z3, "pmpaddr7")) ->
      begin
        match (string_drop (z_s426z3, (string_length "pmpaddr7"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s420z3 (z_s421z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s421z3 with
    | z_s422z3 when (string_startswith (z_s422z3, "pmpaddr6")) ->
      begin
        match (string_drop (z_s422z3, (string_length "pmpaddr6"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s416z3 (z_s417z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s417z3 with
    | z_s418z3 when (string_startswith (z_s418z3, "pmpaddr5")) ->
      begin
        match (string_drop (z_s418z3, (string_length "pmpaddr5"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s412z3 (z_s413z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s413z3 with
    | z_s414z3 when (string_startswith (z_s414z3, "pmpaddr4")) ->
      begin
        match (string_drop (z_s414z3, (string_length "pmpaddr4"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s408z3 (z_s409z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s409z3 with
    | z_s410z3 when (string_startswith (z_s410z3, "pmpaddr3")) ->
      begin
        match (string_drop (z_s410z3, (string_length "pmpaddr3"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s404z3 (z_s405z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s405z3 with
    | z_s406z3 when (string_startswith (z_s406z3, "pmpaddr2")) ->
      begin
        match (string_drop (z_s406z3, (string_length "pmpaddr2"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s400z3 (z_s401z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s401z3 with
    | z_s402z3 when (string_startswith (z_s402z3, "pmpaddr1")) ->
      begin
        match (string_drop (z_s402z3, (string_length "pmpaddr1"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s396z3 (z_s397z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s397z3 with
    | z_s398z3 when (string_startswith (z_s398z3, "pmpaddr0")) ->
      begin
        match (string_drop (z_s398z3, (string_length "pmpaddr0"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s392z3 (z_s393z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s393z3 with
    | z_s394z3 when (string_startswith (z_s394z3, "pmpcfg3")) ->
      begin
        match (string_drop (z_s394z3, (string_length "pmpcfg3"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s388z3 (z_s389z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s389z3 with
    | z_s390z3 when (string_startswith (z_s390z3, "pmpcfg2")) ->
      begin
        match (string_drop (z_s390z3, (string_length "pmpcfg2"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s384z3 (z_s385z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s385z3 with
    | z_s386z3 when (string_startswith (z_s386z3, "pmpcfg1")) ->
      begin
        match (string_drop (z_s386z3, (string_length "pmpcfg1"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s380z3 (z_s381z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s381z3 with
    | z_s382z3 when (string_startswith (z_s382z3, "pmpcfg0")) ->
      begin
        match (string_drop (z_s382z3, (string_length "pmpcfg0"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s376z3 (z_s377z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s377z3 with
    | z_s378z3 when (string_startswith (z_s378z3, "mip")) ->
      begin
        match (string_drop (z_s378z3, (string_length "mip"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s372z3 (z_s373z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s373z3 with
    | z_s374z3 when (string_startswith (z_s374z3, "mtval")) ->
      begin
        match (string_drop (z_s374z3, (string_length "mtval"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s368z3 (z_s369z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s369z3 with
    | z_s370z3 when (string_startswith (z_s370z3, "mcause")) ->
      begin
        match (string_drop (z_s370z3, (string_length "mcause"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s364z3 (z_s365z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s365z3 with
    | z_s366z3 when (string_startswith (z_s366z3, "mepc")) ->
      begin
        match (string_drop (z_s366z3, (string_length "mepc"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s360z3 (z_s361z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s361z3 with
    | z_s362z3 when (string_startswith (z_s362z3, "mscratch")) ->
      begin
        match (string_drop (z_s362z3, (string_length "mscratch"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s356z3 (z_s357z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s357z3 with
    | z_s358z3 when (string_startswith (z_s358z3, "mcounteren")) ->
      begin
        match (string_drop (z_s358z3, (string_length "mcounteren"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s352z3 (z_s353z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s353z3 with
    | z_s354z3 when (string_startswith (z_s354z3, "mtvec")) ->
      begin
        match (string_drop (z_s354z3, (string_length "mtvec"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s348z3 (z_s349z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s349z3 with
    | z_s350z3 when (string_startswith (z_s350z3, "mie")) ->
      begin
        match (string_drop (z_s350z3, (string_length "mie"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s344z3 (z_s345z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s345z3 with
    | z_s346z3 when (string_startswith (z_s346z3, "mideleg")) ->
      begin
        match (string_drop (z_s346z3, (string_length "mideleg"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s340z3 (z_s341z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s341z3 with
    | z_s342z3 when (string_startswith (z_s342z3, "medeleg")) ->
      begin
        match (string_drop (z_s342z3, (string_length "medeleg"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s336z3 (z_s337z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s337z3 with
    | z_s338z3 when (string_startswith (z_s338z3, "misa")) ->
      begin
        match (string_drop (z_s338z3, (string_length "misa"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s332z3 (z_s333z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s333z3 with
    | z_s334z3 when (string_startswith (z_s334z3, "mstatus")) ->
      begin
        match (string_drop (z_s334z3, (string_length "mstatus"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s328z3 (z_s329z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s329z3 with
    | z_s330z3 when (string_startswith (z_s330z3, "mhartid")) ->
      begin
        match (string_drop (z_s330z3, (string_length "mhartid"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s324z3 (z_s325z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s325z3 with
    | z_s326z3 when (string_startswith (z_s326z3, "mimpid")) ->
      begin
        match (string_drop (z_s326z3, (string_length "mimpid"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s320z3 (z_s321z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s321z3 with
    | z_s322z3 when (string_startswith (z_s322z3, "marchid")) ->
      begin
        match (string_drop (z_s322z3, (string_length "marchid"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s316z3 (z_s317z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s317z3 with
    | z_s318z3 when (string_startswith (z_s318z3, "mvendorid")) ->
      begin
        match (string_drop (z_s318z3, (string_length "mvendorid"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s312z3 (z_s313z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s313z3 with
    | z_s314z3 when (string_startswith (z_s314z3, "satp")) ->
      begin
        match (string_drop (z_s314z3, (string_length "satp"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s308z3 (z_s309z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s309z3 with
    | z_s310z3 when (string_startswith (z_s310z3, "sip")) ->
      begin
        match (string_drop (z_s310z3, (string_length "sip"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s304z3 (z_s305z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s305z3 with
    | z_s306z3 when (string_startswith (z_s306z3, "stval")) ->
      begin
        match (string_drop (z_s306z3, (string_length "stval"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s300z3 (z_s301z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s301z3 with
    | z_s302z3 when (string_startswith (z_s302z3, "scause")) ->
      begin
        match (string_drop (z_s302z3, (string_length "scause"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s296z3 (z_s297z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s297z3 with
    | z_s298z3 when (string_startswith (z_s298z3, "sepc")) ->
      begin
        match (string_drop (z_s298z3, (string_length "sepc"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s292z3 (z_s293z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s293z3 with
    | z_s294z3 when (string_startswith (z_s294z3, "sscratch")) ->
      begin
        match (string_drop (z_s294z3, (string_length "sscratch"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s288z3 (z_s289z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s289z3 with
    | z_s290z3 when (string_startswith (z_s290z3, "scounteren")) ->
      begin
        match (string_drop (z_s290z3, (string_length "scounteren"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s284z3 (z_s285z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s285z3 with
    | z_s286z3 when (string_startswith (z_s286z3, "stvec")) ->
      begin
        match (string_drop (z_s286z3, (string_length "stvec"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s280z3 (z_s281z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s281z3 with
    | z_s282z3 when (string_startswith (z_s282z3, "sie")) ->
      begin
        match (string_drop (z_s282z3, (string_length "sie"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s276z3 (z_s277z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s277z3 with
    | z_s278z3 when (string_startswith (z_s278z3, "sideleg")) ->
      begin
        match (string_drop (z_s278z3, (string_length "sideleg"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s272z3 (z_s273z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s273z3 with
    | z_s274z3 when (string_startswith (z_s274z3, "sedeleg")) ->
      begin
        match (string_drop (z_s274z3, (string_length "sedeleg"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s268z3 (z_s269z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s269z3 with
    | z_s270z3 when (string_startswith (z_s270z3, "sstatus")) ->
      begin
        match (string_drop (z_s270z3, (string_length "sstatus"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s264z3 (z_s265z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s265z3 with
    | z_s266z3 when (string_startswith (z_s266z3, "instreth")) ->
      begin
        match (string_drop (z_s266z3, (string_length "instreth"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s260z3 (z_s261z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s261z3 with
    | z_s262z3 when (string_startswith (z_s262z3, "timeh")) ->
      begin
        match (string_drop (z_s262z3, (string_length "timeh"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s256z3 (z_s257z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s257z3 with
    | z_s258z3 when (string_startswith (z_s258z3, "cycleh")) ->
      begin
        match (string_drop (z_s258z3, (string_length "cycleh"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s252z3 (z_s253z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s253z3 with
    | z_s254z3 when (string_startswith (z_s254z3, "instret")) ->
      begin
        match (string_drop (z_s254z3, (string_length "instret"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s248z3 (z_s249z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s249z3 with
    | z_s250z3 when (string_startswith (z_s250z3, "time")) ->
      begin
        match (string_drop (z_s250z3, (string_length "time"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s244z3 (z_s245z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s245z3 with
    | z_s246z3 when (string_startswith (z_s246z3, "cycle")) ->
      begin
        match (string_drop (z_s246z3, (string_length "cycle"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s240z3 (z_s241z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s241z3 with
    | z_s242z3 when (string_startswith (z_s242z3, "fcsr")) ->
      begin
        match (string_drop (z_s242z3, (string_length "fcsr"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s236z3 (z_s237z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s237z3 with
    | z_s238z3 when (string_startswith (z_s238z3, "frm")) ->
      begin
        match (string_drop (z_s238z3, (string_length "frm"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s232z3 (z_s233z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s233z3 with
    | z_s234z3 when (string_startswith (z_s234z3, "fflags")) ->
      begin
        match (string_drop (z_s234z3, (string_length "fflags"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s228z3 (z_s229z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s229z3 with
    | z_s230z3 when (string_startswith (z_s230z3, "uip")) ->
      begin
        match (string_drop (z_s230z3, (string_length "uip"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s224z3 (z_s225z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s225z3 with
    | z_s226z3 when (string_startswith (z_s226z3, "utval")) ->
      begin
        match (string_drop (z_s226z3, (string_length "utval"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s220z3 (z_s221z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s221z3 with
    | z_s222z3 when (string_startswith (z_s222z3, "ucause")) ->
      begin
        match (string_drop (z_s222z3, (string_length "ucause"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s216z3 (z_s217z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s217z3 with
    | z_s218z3 when (string_startswith (z_s218z3, "uepc")) ->
      begin
        match (string_drop (z_s218z3, (string_length "uepc"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s212z3 (z_s213z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s213z3 with
    | z_s214z3 when (string_startswith (z_s214z3, "uscratch")) ->
      begin
        match (string_drop (z_s214z3, (string_length "uscratch"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s208z3 (z_s209z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s209z3 with
    | z_s210z3 when (string_startswith (z_s210z3, "utvec")) ->
      begin
        match (string_drop (z_s210z3, (string_length "utvec"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s204z3 (z_s205z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s205z3 with
    | z_s206z3 when (string_startswith (z_s206z3, "uie")) ->
      begin
        match (string_drop (z_s206z3, (string_length "uie"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s200z3 (z_s201z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s201z3 with
    | z_s202z3 when (string_startswith (z_s202z3, "ustatus")) ->
      begin
        match (string_drop (z_s202z3, (string_length "ustatus"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zcsr_name_map_matches_prefix (zargz3 : (string)) : (((bit) list * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s203z3 when (begin
      match (z_s200z3 z_s203z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s200z3 z_s203z3) in
      ZSome ([B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s207z3 when (begin
      match (z_s204z3 z_s207z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s204z3 z_s207z3) in
      ZSome ([B0; B0; B0; B0; B0; B0; B0; B0; B0; B1; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s211z3 when (begin
      match (z_s208z3 z_s211z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s208z3 z_s211z3) in
      ZSome ([B0; B0; B0; B0; B0; B0; B0; B0; B0; B1; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s215z3 when (begin
      match (z_s212z3 z_s215z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s212z3 z_s215z3) in
      ZSome ([B0; B0; B0; B0; B0; B1; B0; B0; B0; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s219z3 when (begin
      match (z_s216z3 z_s219z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s216z3 z_s219z3) in
      ZSome ([B0; B0; B0; B0; B0; B1; B0; B0; B0; B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s223z3 when (begin
      match (z_s220z3 z_s223z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s220z3 z_s223z3) in
      ZSome ([B0; B0; B0; B0; B0; B1; B0; B0; B0; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s227z3 when (begin
      match (z_s224z3 z_s227z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s224z3 z_s227z3) in
      ZSome ([B0; B0; B0; B0; B0; B1; B0; B0; B0; B0; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s231z3 when (begin
      match (z_s228z3 z_s231z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s228z3 z_s231z3) in
      ZSome ([B0; B0; B0; B0; B0; B1; B0; B0; B0; B1; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s235z3 when (begin
      match (z_s232z3 z_s235z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s232z3 z_s235z3) in
      ZSome ([B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s239z3 when (begin
      match (z_s236z3 z_s239z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s236z3 z_s239z3) in
      ZSome ([B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s243z3 when (begin
      match (z_s240z3 z_s243z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s240z3 z_s243z3) in
      ZSome ([B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s247z3 when (begin
      match (z_s244z3 z_s247z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s244z3 z_s247z3) in
      ZSome ([B1; B1; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s251z3 when (begin
      match (z_s248z3 z_s251z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s248z3 z_s251z3) in
      ZSome ([B1; B1; B0; B0; B0; B0; B0; B0; B0; B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s255z3 when (begin
      match (z_s252z3 z_s255z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s252z3 z_s255z3) in
      ZSome ([B1; B1; B0; B0; B0; B0; B0; B0; B0; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s259z3 when (begin
      match (z_s256z3 z_s259z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s256z3 z_s259z3) in
      ZSome ([B1; B1; B0; B0; B1; B0; B0; B0; B0; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s263z3 when (begin
      match (z_s260z3 z_s263z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s260z3 z_s263z3) in
      ZSome ([B1; B1; B0; B0; B1; B0; B0; B0; B0; B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s267z3 when (begin
      match (z_s264z3 z_s267z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s264z3 z_s267z3) in
      ZSome ([B1; B1; B0; B0; B1; B0; B0; B0; B0; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s271z3 when (begin
      match (z_s268z3 z_s271z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s268z3 z_s271z3) in
      ZSome ([B0; B0; B0; B1; B0; B0; B0; B0; B0; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s275z3 when (begin
      match (z_s272z3 z_s275z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s272z3 z_s275z3) in
      ZSome ([B0; B0; B0; B1; B0; B0; B0; B0; B0; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s279z3 when (begin
      match (z_s276z3 z_s279z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s276z3 z_s279z3) in
      ZSome ([B0; B0; B0; B1; B0; B0; B0; B0; B0; B0; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s283z3 when (begin
      match (z_s280z3 z_s283z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s280z3 z_s283z3) in
      ZSome ([B0; B0; B0; B1; B0; B0; B0; B0; B0; B1; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s287z3 when (begin
      match (z_s284z3 z_s287z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s284z3 z_s287z3) in
      ZSome ([B0; B0; B0; B1; B0; B0; B0; B0; B0; B1; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s291z3 when (begin
      match (z_s288z3 z_s291z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s288z3 z_s291z3) in
      ZSome ([B0; B0; B0; B1; B0; B0; B0; B0; B0; B1; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s295z3 when (begin
      match (z_s292z3 z_s295z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s292z3 z_s295z3) in
      ZSome ([B0; B0; B0; B1; B0; B1; B0; B0; B0; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s299z3 when (begin
      match (z_s296z3 z_s299z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s296z3 z_s299z3) in
      ZSome ([B0; B0; B0; B1; B0; B1; B0; B0; B0; B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s303z3 when (begin
      match (z_s300z3 z_s303z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s300z3 z_s303z3) in
      ZSome ([B0; B0; B0; B1; B0; B1; B0; B0; B0; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s307z3 when (begin
      match (z_s304z3 z_s307z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s304z3 z_s307z3) in
      ZSome ([B0; B0; B0; B1; B0; B1; B0; B0; B0; B0; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s311z3 when (begin
      match (z_s308z3 z_s311z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s308z3 z_s311z3) in
      ZSome ([B0; B0; B0; B1; B0; B1; B0; B0; B0; B1; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s315z3 when (begin
      match (z_s312z3 z_s315z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s312z3 z_s315z3) in
      ZSome ([B0; B0; B0; B1; B1; B0; B0; B0; B0; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s319z3 when (begin
      match (z_s316z3 z_s319z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s316z3 z_s319z3) in
      ZSome ([B1; B1; B1; B1; B0; B0; B0; B1; B0; B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s323z3 when (begin
      match (z_s320z3 z_s323z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s320z3 z_s323z3) in
      ZSome ([B1; B1; B1; B1; B0; B0; B0; B1; B0; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s327z3 when (begin
      match (z_s324z3 z_s327z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s324z3 z_s327z3) in
      ZSome ([B1; B1; B1; B1; B0; B0; B0; B1; B0; B0; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s331z3 when (begin
      match (z_s328z3 z_s331z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s328z3 z_s331z3) in
      ZSome ([B1; B1; B1; B1; B0; B0; B0; B1; B0; B1; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s335z3 when (begin
      match (z_s332z3 z_s335z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s332z3 z_s335z3) in
      ZSome ([B0; B0; B1; B1; B0; B0; B0; B0; B0; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s339z3 when (begin
      match (z_s336z3 z_s339z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s336z3 z_s339z3) in
      ZSome ([B0; B0; B1; B1; B0; B0; B0; B0; B0; B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s343z3 when (begin
      match (z_s340z3 z_s343z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s340z3 z_s343z3) in
      ZSome ([B0; B0; B1; B1; B0; B0; B0; B0; B0; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s347z3 when (begin
      match (z_s344z3 z_s347z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s344z3 z_s347z3) in
      ZSome ([B0; B0; B1; B1; B0; B0; B0; B0; B0; B0; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s351z3 when (begin
      match (z_s348z3 z_s351z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s348z3 z_s351z3) in
      ZSome ([B0; B0; B1; B1; B0; B0; B0; B0; B0; B1; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s355z3 when (begin
      match (z_s352z3 z_s355z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s352z3 z_s355z3) in
      ZSome ([B0; B0; B1; B1; B0; B0; B0; B0; B0; B1; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s359z3 when (begin
      match (z_s356z3 z_s359z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s356z3 z_s359z3) in
      ZSome ([B0; B0; B1; B1; B0; B0; B0; B0; B0; B1; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s363z3 when (begin
      match (z_s360z3 z_s363z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s360z3 z_s363z3) in
      ZSome ([B0; B0; B1; B1; B0; B1; B0; B0; B0; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s367z3 when (begin
      match (z_s364z3 z_s367z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s364z3 z_s367z3) in
      ZSome ([B0; B0; B1; B1; B0; B1; B0; B0; B0; B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s371z3 when (begin
      match (z_s368z3 z_s371z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s368z3 z_s371z3) in
      ZSome ([B0; B0; B1; B1; B0; B1; B0; B0; B0; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s375z3 when (begin
      match (z_s372z3 z_s375z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s372z3 z_s375z3) in
      ZSome ([B0; B0; B1; B1; B0; B1; B0; B0; B0; B0; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s379z3 when (begin
      match (z_s376z3 z_s379z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s376z3 z_s379z3) in
      ZSome ([B0; B0; B1; B1; B0; B1; B0; B0; B0; B1; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s383z3 when (begin
      match (z_s380z3 z_s383z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s380z3 z_s383z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B0; B0; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s387z3 when (begin
      match (z_s384z3 z_s387z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s384z3 z_s387z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B0; B0; B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s391z3 when (begin
      match (z_s388z3 z_s391z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s388z3 z_s391z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B0; B0; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s395z3 when (begin
      match (z_s392z3 z_s395z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s392z3 z_s395z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B0; B0; B0; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s399z3 when (begin
      match (z_s396z3 z_s399z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s396z3 z_s399z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B1; B0; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s403z3 when (begin
      match (z_s400z3 z_s403z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s400z3 z_s403z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B1; B0; B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s407z3 when (begin
      match (z_s404z3 z_s407z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s404z3 z_s407z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B1; B0; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s411z3 when (begin
      match (z_s408z3 z_s411z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s408z3 z_s411z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B1; B0; B0; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s415z3 when (begin
      match (z_s412z3 z_s415z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s412z3 z_s415z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B1; B0; B1; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s419z3 when (begin
      match (z_s416z3 z_s419z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s416z3 z_s419z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B1; B0; B1; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s423z3 when (begin
      match (z_s420z3 z_s423z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s420z3 z_s423z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B1; B0; B1; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s427z3 when (begin
      match (z_s424z3 z_s427z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s424z3 z_s427z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B1; B0; B1; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s431z3 when (begin
      match (z_s428z3 z_s431z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s428z3 z_s431z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B1; B1; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s435z3 when (begin
      match (z_s432z3 z_s435z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s432z3 z_s435z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B1; B1; B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s439z3 when (begin
      match (z_s436z3 z_s439z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s436z3 z_s439z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B1; B1; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s443z3 when (begin
      match (z_s440z3 z_s443z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s440z3 z_s443z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B1; B1; B0; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s447z3 when (begin
      match (z_s444z3 z_s447z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s444z3 z_s447z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B1; B1; B1; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s451z3 when (begin
      match (z_s448z3 z_s451z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s448z3 z_s451z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B1; B1; B1; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s455z3 when (begin
      match (z_s452z3 z_s455z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s452z3 z_s455z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B1; B1; B1; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s459z3 when (begin
      match (z_s456z3 z_s459z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s456z3 z_s459z3) in
      ZSome ([B0; B0; B1; B1; B1; B0; B1; B1; B1; B1; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s463z3 when (begin
      match (z_s460z3 z_s463z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s460z3 z_s463z3) in
      ZSome ([B1; B0; B1; B1; B0; B0; B0; B0; B0; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s467z3 when (begin
      match (z_s464z3 z_s467z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s464z3 z_s467z3) in
      ZSome ([B1; B0; B1; B1; B0; B0; B0; B0; B0; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s471z3 when (begin
      match (z_s468z3 z_s471z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s468z3 z_s471z3) in
      ZSome ([B1; B0; B1; B1; B1; B0; B0; B0; B0; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s475z3 when (begin
      match (z_s472z3 z_s475z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s472z3 z_s475z3) in
      ZSome ([B1; B0; B1; B1; B1; B0; B0; B0; B0; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s479z3 when (begin
      match (z_s476z3 z_s479z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s476z3 z_s479z3) in
      ZSome ([B0; B1; B1; B1; B1; B0; B1; B0; B0; B0; B0; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s483z3 when (begin
      match (z_s480z3 z_s483z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s480z3 z_s483z3) in
      ZSome ([B0; B1; B1; B1; B1; B0; B1; B0; B0; B0; B0; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s487z3 when (begin
      match (z_s484z3 z_s487z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s484z3 z_s487z3) in
      ZSome ([B0; B1; B1; B1; B1; B0; B1; B0; B0; B0; B1; B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s491z3 when (begin
      match (z_s488z3 z_s491z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s488z3 z_s491z3) in
      ZSome ([B0; B1; B1; B1; B1; B0; B1; B0; B0; B0; B1; B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

let zcur_privilege : (zPrivilege) ref = ref (zundefined_Privilege ());;

let zcur_inst : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

type  zMisa = { zMisa_chunk_0 : (bit) list
};;

let string_of_zMisa (gs1827 : zMisa) =
  "{Misa_chunk_0 = " ^ string_of_bits gs1827.zMisa_chunk_0 ^ "}";;

let rec zundefined_Misa (() : (unit)) : zMisa = sail_call (fun r ->
  {zMisa_chunk_0 = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

and zMk_Misa (zv : ((bit) list)) : zMisa = sail_call (fun r ->
  {zMisa_chunk_0 = subrange (zv, (Big_int.of_int (63)), Big_int.zero)})

and z_get_Misa_bits (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (63)), Big_int.zero))

and z_set_Misa_bits ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zv, (Big_int.of_int (63)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_bits ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zx, (Big_int.of_int (63)), Big_int.zero)))}) in
  zv)

type  zSV39_PTE = { zSV39_PTE_chunk_0 : (bit) list
};;

let string_of_zSV39_PTE (gs1850 : zSV39_PTE) =
  "{SV39_PTE_chunk_0 = " ^ string_of_bits gs1850.zSV39_PTE_chunk_0 ^ "}";;

let rec z_get_Misa_MXL (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (62))))

and z_set_Misa_MXL ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (62)), (subrange (zv, (Big_int.of_int (1)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_MXL ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (62)), (subrange (zx, (Big_int.of_int (1)), Big_int.zero)))}) in
  zv)

and z_get_Misa_Z (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (25)), (Big_int.of_int (25))))

and z_set_Misa_Z ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (25)), (Big_int.of_int (25)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_Z ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (25)), (Big_int.of_int (25)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_Y (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (24)), (Big_int.of_int (24))))

and z_set_Misa_Y ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (24)), (Big_int.of_int (24)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_Y ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (24)), (Big_int.of_int (24)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_X (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (23)), (Big_int.of_int (23))))

and z_set_Misa_X ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (23)), (Big_int.of_int (23)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_X ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (23)), (Big_int.of_int (23)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

type  zPTE_Bits = { zPTE_Bits_chunk_0 : (bit) list
};;

let string_of_zPTE_Bits (gs1907 : zPTE_Bits) =
  "{PTE_Bits_chunk_0 = " ^ string_of_bits gs1907.zPTE_Bits_chunk_0 ^ "}";;

let rec z_get_Misa_W (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (22)), (Big_int.of_int (22))))

and z_set_Misa_W ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (22)), (Big_int.of_int (22)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_W ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (22)), (Big_int.of_int (22)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_V (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (21)), (Big_int.of_int (21))))

and z_set_Misa_V ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (21)), (Big_int.of_int (21)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_V ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (21)), (Big_int.of_int (21)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_U (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (20)), (Big_int.of_int (20))))

and z_set_Misa_U ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (20)), (Big_int.of_int (20)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_U ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (20)), (Big_int.of_int (20)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_T (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (19)), (Big_int.of_int (19))))

and z_set_Misa_T ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (19)), (Big_int.of_int (19)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_T ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (19)), (Big_int.of_int (19)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_S (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (18)), (Big_int.of_int (18))))

and z_set_Misa_S ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (18)), (Big_int.of_int (18)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_S ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (18)), (Big_int.of_int (18)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_R (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (17)), (Big_int.of_int (17))))

and z_set_Misa_R ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (17)), (Big_int.of_int (17)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_R ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (17)), (Big_int.of_int (17)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_Q (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (16)), (Big_int.of_int (16))))

and z_set_Misa_Q ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (16)), (Big_int.of_int (16)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_Q ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (16)), (Big_int.of_int (16)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_P (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (15)), (Big_int.of_int (15))))

and z_set_Misa_P ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (15)), (Big_int.of_int (15)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_P ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (15)), (Big_int.of_int (15)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_O (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (14)), (Big_int.of_int (14))))

and z_set_Misa_O ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (14)), (Big_int.of_int (14)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_O ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (14)), (Big_int.of_int (14)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_N (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (13)), (Big_int.of_int (13))))

and z_set_Misa_N ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (13)), (Big_int.of_int (13)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_N ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (13)), (Big_int.of_int (13)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_M (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (12)), (Big_int.of_int (12))))

and z_set_Misa_M ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (12)), (Big_int.of_int (12)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_M ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (12)), (Big_int.of_int (12)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_L (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (11)), (Big_int.of_int (11))))

and z_set_Misa_L ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (11)), (Big_int.of_int (11)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_L ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (11)), (Big_int.of_int (11)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_K (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (10)), (Big_int.of_int (10))))

and z_set_Misa_K ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (10)), (Big_int.of_int (10)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_K ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (10)), (Big_int.of_int (10)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_J (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (9)), (Big_int.of_int (9))))

and z_set_Misa_J ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (9)), (Big_int.of_int (9)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_J ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (9)), (Big_int.of_int (9)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_I (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8))))

and z_set_Misa_I ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_I ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_H (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7))))

and z_set_Misa_H ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_H ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_G (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (6)), (Big_int.of_int (6))))

and z_set_Misa_G ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (6)), (Big_int.of_int (6)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_G ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (6)), (Big_int.of_int (6)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_F (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5))))

and z_set_Misa_F ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_F ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_E (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4))))

and z_set_Misa_E ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_E ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_D (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3))))

and z_set_Misa_D ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_D ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_C (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2))))

and z_set_Misa_C ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_C ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_B (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1))))

and z_set_Misa_B ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_B ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Misa_A (zv : (zMisa)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMisa_chunk_0), Big_int.zero, Big_int.zero))

and z_set_Misa_A ((zr_ref, zv) : ((zMisa) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMisa) in
  begin
    zr := ({!zr with zMisa_chunk_0 = update_subrange ((!zr.zMisa_chunk_0), Big_int.zero, Big_int.zero, (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Misa_A ((zv, zx) : (zMisa * (bit) list)) : zMisa = sail_call (fun r ->
  let zv = ({zv with zMisa_chunk_0 = update_subrange ((zv.zMisa_chunk_0), Big_int.zero, Big_int.zero, (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

let zmisa : (zMisa) ref = ref (zundefined_Misa ());;

let rec zlegalizze_misa ((zm, zv) : (zMisa * zxlenbits)) : zMisa = sail_call (fun r ->
  let zv = (zMk_Misa zv) in
  if ((eq_list ((z_get_Misa_C zv), (zbool_to_bits false))) && (eq_bool ((zbit_to_bool (access (!znextPC, (Big_int.of_int (1))))), true))) then zm else (z_update_Misa_C (zm, (z_get_Misa_C zv))))

and zhaveAtomics (() : (unit)) : bool = sail_call (fun r ->
  eq_list ((z_get_Misa_A !zmisa), (zbool_to_bits true)))

and zhaveRVC (() : (unit)) : bool = sail_call (fun r ->
  eq_list ((z_get_Misa_C !zmisa), (zbool_to_bits true)))

and zhaveMulDiv (() : (unit)) : bool = sail_call (fun r ->
  eq_list ((z_get_Misa_M !zmisa), (zbool_to_bits true)))

and zhaveSupMode (() : (unit)) : bool = sail_call (fun r ->
  eq_list ((z_get_Misa_S !zmisa), (zbool_to_bits true)))

and zhaveUsrMode (() : (unit)) : bool = sail_call (fun r ->
  eq_list ((z_get_Misa_U !zmisa), (zbool_to_bits true)))

and zhaveNExt (() : (unit)) : bool = sail_call (fun r ->
  eq_list ((z_get_Misa_N !zmisa), (zbool_to_bits true)))

type  zMstatus = { zMstatus_chunk_0 : (bit) list
};;

let string_of_zMstatus (gs2259 : zMstatus) =
  "{Mstatus_chunk_0 = " ^ string_of_bits gs2259.zMstatus_chunk_0 ^ "}";;

let rec zundefined_Mstatus (() : (unit)) : zMstatus = sail_call (fun r ->
  {zMstatus_chunk_0 = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

and zMk_Mstatus (zv : ((bit) list)) : zMstatus = sail_call (fun r ->
  {zMstatus_chunk_0 = subrange (zv, (Big_int.of_int (63)), Big_int.zero)})

and z_get_Mstatus_bits (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (63)), Big_int.zero))

and z_set_Mstatus_bits ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zv, (Big_int.of_int (63)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_bits ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zx, (Big_int.of_int (63)), Big_int.zero)))}) in
  zv)

and z_get_Mstatus_SD (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (63))))

and z_set_Mstatus_SD ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (63)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_SD ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (63)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

type  zSstatus = { zSstatus_chunk_0 : (bit) list
};;

let string_of_zSstatus (gs2296 : zSstatus) =
  "{Sstatus_chunk_0 = " ^ string_of_bits gs2296.zSstatus_chunk_0 ^ "}";;

let rec z_get_Mstatus_SXL (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (35)), (Big_int.of_int (34))))

and z_set_Mstatus_SXL ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (35)), (Big_int.of_int (34)), (subrange (zv, (Big_int.of_int (1)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_SXL ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (35)), (Big_int.of_int (34)), (subrange (zx, (Big_int.of_int (1)), Big_int.zero)))}) in
  zv)

and z_get_Mstatus_UXL (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (33)), (Big_int.of_int (32))))

and z_set_Mstatus_UXL ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (33)), (Big_int.of_int (32)), (subrange (zv, (Big_int.of_int (1)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_UXL ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (33)), (Big_int.of_int (32)), (subrange (zx, (Big_int.of_int (1)), Big_int.zero)))}) in
  zv)

and z_get_Mstatus_TSR (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (22)), (Big_int.of_int (22))))

and z_set_Mstatus_TSR ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (22)), (Big_int.of_int (22)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_TSR ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (22)), (Big_int.of_int (22)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Mstatus_TW (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (21)), (Big_int.of_int (21))))

and z_set_Mstatus_TW ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (21)), (Big_int.of_int (21)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_TW ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (21)), (Big_int.of_int (21)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Mstatus_TVM (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (20)), (Big_int.of_int (20))))

and z_set_Mstatus_TVM ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (20)), (Big_int.of_int (20)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_TVM ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (20)), (Big_int.of_int (20)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Mstatus_MXR (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (19)), (Big_int.of_int (19))))

and z_set_Mstatus_MXR ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (19)), (Big_int.of_int (19)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_MXR ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (19)), (Big_int.of_int (19)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Mstatus_SUM (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (18)), (Big_int.of_int (18))))

and z_set_Mstatus_SUM ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (18)), (Big_int.of_int (18)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_SUM ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (18)), (Big_int.of_int (18)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Mstatus_MPRV (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (17)), (Big_int.of_int (17))))

and z_set_Mstatus_MPRV ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (17)), (Big_int.of_int (17)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_MPRV ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (17)), (Big_int.of_int (17)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Mstatus_XS (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (16)), (Big_int.of_int (15))))

and z_set_Mstatus_XS ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (16)), (Big_int.of_int (15)), (subrange (zv, (Big_int.of_int (1)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_XS ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (16)), (Big_int.of_int (15)), (subrange (zx, (Big_int.of_int (1)), Big_int.zero)))}) in
  zv)

and z_get_Mstatus_FS (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (14)), (Big_int.of_int (13))))

and z_set_Mstatus_FS ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (14)), (Big_int.of_int (13)), (subrange (zv, (Big_int.of_int (1)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_FS ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (14)), (Big_int.of_int (13)), (subrange (zx, (Big_int.of_int (1)), Big_int.zero)))}) in
  zv)

and z_get_Mstatus_MPP (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (12)), (Big_int.of_int (11))))

and z_set_Mstatus_MPP ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (12)), (Big_int.of_int (11)), (subrange (zv, (Big_int.of_int (1)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_MPP ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (12)), (Big_int.of_int (11)), (subrange (zx, (Big_int.of_int (1)), Big_int.zero)))}) in
  zv)

and z_get_Mstatus_SPP (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8))))

and z_set_Mstatus_SPP ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_SPP ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Mstatus_MPIE (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7))))

and z_set_Mstatus_MPIE ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_MPIE ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Mstatus_SPIE (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5))))

and z_set_Mstatus_SPIE ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_SPIE ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Mstatus_UPIE (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4))))

and z_set_Mstatus_UPIE ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_UPIE ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

type  zUstatus = { zUstatus_chunk_0 : (bit) list
};;

let string_of_zUstatus (gs2507 : zUstatus) =
  "{Ustatus_chunk_0 = " ^ string_of_bits gs2507.zUstatus_chunk_0 ^ "}";;

let rec z_get_Mstatus_MIE (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3))))

and z_set_Mstatus_MIE ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_MIE ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Mstatus_SIE (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1))))

and z_set_Mstatus_SIE ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_SIE ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Mstatus_UIE (zv : (zMstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMstatus_chunk_0), Big_int.zero, Big_int.zero))

and z_set_Mstatus_UIE ((zr_ref, zv) : ((zMstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMstatus) in
  begin
    zr := ({!zr with zMstatus_chunk_0 = update_subrange ((!zr.zMstatus_chunk_0), Big_int.zero, Big_int.zero, (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mstatus_UIE ((zv, zx) : (zMstatus * (bit) list)) : zMstatus = sail_call (fun r ->
  let zv = ({zv with zMstatus_chunk_0 = update_subrange ((zv.zMstatus_chunk_0), Big_int.zero, Big_int.zero, (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

let zmstatus : (zMstatus) ref = ref (zundefined_Mstatus ());;

let rec zlegalizze_mstatus ((zo, zv) : (zMstatus * zxlenbits)) : zMstatus = sail_call (fun r ->
  let zm = (zMk_Mstatus zv) in
  let zm = (z_update_Mstatus_XS (zm, (zextStatus_to_bits ZOff))) in
  let zm = (z_update_Mstatus_SD (zm, (zbool_to_bits ((eq_list ((zextStatus_to_bits (zextStatus_of_bits (z_get_Mstatus_FS zm))), (zextStatus_to_bits ZDirty))) || (eq_list ((zextStatus_to_bits (zextStatus_of_bits (z_get_Mstatus_XS zm))), (zextStatus_to_bits ZDirty))))))) in
  let zm = (z_update_Mstatus_SXL (zm, (z_get_Mstatus_SXL zo))) in
  let zm = (z_update_Mstatus_UXL (zm, (z_get_Mstatus_UXL zo))) in
  let zm = (z_update_Mstatus_UPIE (zm, (zbool_to_bits false))) in
  let zm = (z_update_Mstatus_UIE (zm, (zbool_to_bits false))) in
  zm)

and zcur_Architecture (() : (unit)) : zArchitecture = sail_call (fun r ->
  let za = (begin
    match !zcur_privilege with
    | ZMachine -> z_get_Misa_MXL !zmisa
    | ZSupervisor -> z_get_Mstatus_SXL !zmstatus
    | ZUser -> z_get_Mstatus_UXL !zmstatus
  end) in
  begin
    match (zarchitecture za) with
    | ZSome (za) -> za
    | ZNone (()) -> zinternal_error "Invalid current architecture"
  end)

and zin32BitMode (() : (unit)) : bool = sail_call (fun r ->
  (fun (x, y) -> x = y) ((zcur_Architecture ()), ZRV32))

type  zMinterrupts = { zMinterrupts_chunk_0 : (bit) list
};;

let string_of_zMinterrupts (gs2563 : zMinterrupts) =
  "{Minterrupts_chunk_0 = " ^ string_of_bits gs2563.zMinterrupts_chunk_0 ^ "}";;

let rec zundefined_Minterrupts (() : (unit)) : zMinterrupts = sail_call (fun r ->
  {zMinterrupts_chunk_0 = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

and zMk_Minterrupts (zv : ((bit) list)) : zMinterrupts = sail_call (fun r ->
  {zMinterrupts_chunk_0 = subrange (zv, (Big_int.of_int (63)), Big_int.zero)})

and z_get_Minterrupts_bits (zv : (zMinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (63)), Big_int.zero))

and z_set_Minterrupts_bits ((zr_ref, zv) : ((zMinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMinterrupts) in
  begin
    zr := ({!zr with zMinterrupts_chunk_0 = update_subrange ((!zr.zMinterrupts_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zv, (Big_int.of_int (63)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Minterrupts_bits ((zv, zx) : (zMinterrupts * (bit) list)) : zMinterrupts = sail_call (fun r ->
  let zv = ({zv with zMinterrupts_chunk_0 = update_subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zx, (Big_int.of_int (63)), Big_int.zero)))}) in
  zv)

and z_get_Minterrupts_MEI (zv : (zMinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (11)), (Big_int.of_int (11))))

and z_set_Minterrupts_MEI ((zr_ref, zv) : ((zMinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMinterrupts) in
  begin
    zr := ({!zr with zMinterrupts_chunk_0 = update_subrange ((!zr.zMinterrupts_chunk_0), (Big_int.of_int (11)), (Big_int.of_int (11)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Minterrupts_MEI ((zv, zx) : (zMinterrupts * (bit) list)) : zMinterrupts = sail_call (fun r ->
  let zv = ({zv with zMinterrupts_chunk_0 = update_subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (11)), (Big_int.of_int (11)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Minterrupts_SEI (zv : (zMinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (9)), (Big_int.of_int (9))))

and z_set_Minterrupts_SEI ((zr_ref, zv) : ((zMinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMinterrupts) in
  begin
    zr := ({!zr with zMinterrupts_chunk_0 = update_subrange ((!zr.zMinterrupts_chunk_0), (Big_int.of_int (9)), (Big_int.of_int (9)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Minterrupts_SEI ((zv, zx) : (zMinterrupts * (bit) list)) : zMinterrupts = sail_call (fun r ->
  let zv = ({zv with zMinterrupts_chunk_0 = update_subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (9)), (Big_int.of_int (9)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

type  zSinterrupts = { zSinterrupts_chunk_0 : (bit) list
};;

let string_of_zSinterrupts (gs2614 : zSinterrupts) =
  "{Sinterrupts_chunk_0 = " ^ string_of_bits gs2614.zSinterrupts_chunk_0 ^ "}";;

let rec z_get_Minterrupts_UEI (zv : (zMinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8))))

and z_set_Minterrupts_UEI ((zr_ref, zv) : ((zMinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMinterrupts) in
  begin
    zr := ({!zr with zMinterrupts_chunk_0 = update_subrange ((!zr.zMinterrupts_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Minterrupts_UEI ((zv, zx) : (zMinterrupts * (bit) list)) : zMinterrupts = sail_call (fun r ->
  let zv = ({zv with zMinterrupts_chunk_0 = update_subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

type  zUinterrupts = { zUinterrupts_chunk_0 : (bit) list
};;

let string_of_zUinterrupts (gs2629 : zUinterrupts) =
  "{Uinterrupts_chunk_0 = " ^ string_of_bits gs2629.zUinterrupts_chunk_0 ^ "}";;

let rec z_get_Minterrupts_MTI (zv : (zMinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7))))

and z_set_Minterrupts_MTI ((zr_ref, zv) : ((zMinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMinterrupts) in
  begin
    zr := ({!zr with zMinterrupts_chunk_0 = update_subrange ((!zr.zMinterrupts_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Minterrupts_MTI ((zv, zx) : (zMinterrupts * (bit) list)) : zMinterrupts = sail_call (fun r ->
  let zv = ({zv with zMinterrupts_chunk_0 = update_subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Minterrupts_STI (zv : (zMinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5))))

and z_set_Minterrupts_STI ((zr_ref, zv) : ((zMinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMinterrupts) in
  begin
    zr := ({!zr with zMinterrupts_chunk_0 = update_subrange ((!zr.zMinterrupts_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Minterrupts_STI ((zv, zx) : (zMinterrupts * (bit) list)) : zMinterrupts = sail_call (fun r ->
  let zv = ({zv with zMinterrupts_chunk_0 = update_subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Minterrupts_UTI (zv : (zMinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4))))

and z_set_Minterrupts_UTI ((zr_ref, zv) : ((zMinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMinterrupts) in
  begin
    zr := ({!zr with zMinterrupts_chunk_0 = update_subrange ((!zr.zMinterrupts_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Minterrupts_UTI ((zv, zx) : (zMinterrupts * (bit) list)) : zMinterrupts = sail_call (fun r ->
  let zv = ({zv with zMinterrupts_chunk_0 = update_subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Minterrupts_MSI (zv : (zMinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3))))

and z_set_Minterrupts_MSI ((zr_ref, zv) : ((zMinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMinterrupts) in
  begin
    zr := ({!zr with zMinterrupts_chunk_0 = update_subrange ((!zr.zMinterrupts_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Minterrupts_MSI ((zv, zx) : (zMinterrupts * (bit) list)) : zMinterrupts = sail_call (fun r ->
  let zv = ({zv with zMinterrupts_chunk_0 = update_subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Minterrupts_SSI (zv : (zMinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1))))

and z_set_Minterrupts_SSI ((zr_ref, zv) : ((zMinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMinterrupts) in
  begin
    zr := ({!zr with zMinterrupts_chunk_0 = update_subrange ((!zr.zMinterrupts_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Minterrupts_SSI ((zv, zx) : (zMinterrupts * (bit) list)) : zMinterrupts = sail_call (fun r ->
  let zv = ({zv with zMinterrupts_chunk_0 = update_subrange ((zv.zMinterrupts_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Minterrupts_USI (zv : (zMinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMinterrupts_chunk_0), Big_int.zero, Big_int.zero))

and z_set_Minterrupts_USI ((zr_ref, zv) : ((zMinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMinterrupts) in
  begin
    zr := ({!zr with zMinterrupts_chunk_0 = update_subrange ((!zr.zMinterrupts_chunk_0), Big_int.zero, Big_int.zero, (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Minterrupts_USI ((zv, zx) : (zMinterrupts * (bit) list)) : zMinterrupts = sail_call (fun r ->
  let zv = ({zv with zMinterrupts_chunk_0 = update_subrange ((zv.zMinterrupts_chunk_0), Big_int.zero, Big_int.zero, (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

let zmip : (zMinterrupts) ref = ref (zundefined_Minterrupts ());;

let zmie : (zMinterrupts) ref = ref (zundefined_Minterrupts ());;

let zmideleg : (zMinterrupts) ref = ref (zundefined_Minterrupts ());;

let rec zlegalizze_mip ((zo, zv) : (zMinterrupts * zxlenbits)) : zMinterrupts = sail_call (fun r ->
  let zv = (zMk_Minterrupts zv) in
  let zm = (z_update_Minterrupts_SEI (zo, (z_get_Minterrupts_SEI zv))) in
  let zm = (z_update_Minterrupts_STI (zm, (z_get_Minterrupts_STI zv))) in
  let zm = (z_update_Minterrupts_SSI (zm, (z_get_Minterrupts_SSI zv))) in
  if (zhaveUsrMode ()) then (let zm = (z_update_Minterrupts_UEI (zm, (z_get_Minterrupts_UEI zv))) in
  let zm = (z_update_Minterrupts_UTI (zm, (z_get_Minterrupts_UTI zv))) in
  let zm = (z_update_Minterrupts_USI (zm, (z_get_Minterrupts_USI zv))) in
  zm) else zm)

and zlegalizze_mie ((zo, zv) : (zMinterrupts * zxlenbits)) : zMinterrupts = sail_call (fun r ->
  let zv = (zMk_Minterrupts zv) in
  let zm = (z_update_Minterrupts_MEI (zo, (z_get_Minterrupts_MEI zv))) in
  let zm = (z_update_Minterrupts_MTI (zm, (z_get_Minterrupts_MTI zv))) in
  let zm = (z_update_Minterrupts_MSI (zm, (z_get_Minterrupts_MSI zv))) in
  let zm = (z_update_Minterrupts_SEI (zm, (z_get_Minterrupts_SEI zv))) in
  let zm = (z_update_Minterrupts_STI (zm, (z_get_Minterrupts_STI zv))) in
  let zm = (z_update_Minterrupts_SSI (zm, (z_get_Minterrupts_SSI zv))) in
  if (zhaveUsrMode ()) then (let zm = (z_update_Minterrupts_UEI (zm, (z_get_Minterrupts_UEI zv))) in
  let zm = (z_update_Minterrupts_UTI (zm, (z_get_Minterrupts_UTI zv))) in
  let zm = (z_update_Minterrupts_USI (zm, (z_get_Minterrupts_USI zv))) in
  zm) else zm)

and zlegalizze_mideleg ((zo, zv) : (zMinterrupts * zxlenbits)) : zMinterrupts = sail_call (fun r ->
  let zm = (zMk_Minterrupts zv) in
  let zm = (z_update_Minterrupts_MEI (zm, (zbool_to_bits false))) in
  let zm = (z_update_Minterrupts_MTI (zm, (zbool_to_bits false))) in
  let zm = (z_update_Minterrupts_MSI (zm, (zbool_to_bits false))) in
  zm)

type  zMedeleg = { zMedeleg_chunk_0 : (bit) list
};;

let string_of_zMedeleg (gs2729 : zMedeleg) =
  "{Medeleg_chunk_0 = " ^ string_of_bits gs2729.zMedeleg_chunk_0 ^ "}";;

let rec zundefined_Medeleg (() : (unit)) : zMedeleg = sail_call (fun r ->
  {zMedeleg_chunk_0 = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

and zMk_Medeleg (zv : ((bit) list)) : zMedeleg = sail_call (fun r ->
  {zMedeleg_chunk_0 = subrange (zv, (Big_int.of_int (63)), Big_int.zero)})

and z_get_Medeleg_bits (zv : (zMedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (63)), Big_int.zero))

and z_set_Medeleg_bits ((zr_ref, zv) : ((zMedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMedeleg) in
  begin
    zr := ({!zr with zMedeleg_chunk_0 = update_subrange ((!zr.zMedeleg_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zv, (Big_int.of_int (63)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Medeleg_bits ((zv, zx) : (zMedeleg * (bit) list)) : zMedeleg = sail_call (fun r ->
  let zv = ({zv with zMedeleg_chunk_0 = update_subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zx, (Big_int.of_int (63)), Big_int.zero)))}) in
  zv)

and z_get_Medeleg_CHERI (zv : (zMedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (32)), (Big_int.of_int (32))))

and z_set_Medeleg_CHERI ((zr_ref, zv) : ((zMedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMedeleg) in
  begin
    zr := ({!zr with zMedeleg_chunk_0 = update_subrange ((!zr.zMedeleg_chunk_0), (Big_int.of_int (32)), (Big_int.of_int (32)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Medeleg_CHERI ((zv, zx) : (zMedeleg * (bit) list)) : zMedeleg = sail_call (fun r ->
  let zv = ({zv with zMedeleg_chunk_0 = update_subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (32)), (Big_int.of_int (32)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Medeleg_SAMO_Page_Fault (zv : (zMedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (15)), (Big_int.of_int (15))))

and z_set_Medeleg_SAMO_Page_Fault ((zr_ref, zv) : ((zMedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMedeleg) in
  begin
    zr := ({!zr with zMedeleg_chunk_0 = update_subrange ((!zr.zMedeleg_chunk_0), (Big_int.of_int (15)), (Big_int.of_int (15)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Medeleg_SAMO_Page_Fault ((zv, zx) : (zMedeleg * (bit) list)) : zMedeleg = sail_call (fun r ->
  let zv = ({zv with zMedeleg_chunk_0 = update_subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (15)), (Big_int.of_int (15)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Medeleg_Load_Page_Fault (zv : (zMedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (13)), (Big_int.of_int (13))))

and z_set_Medeleg_Load_Page_Fault ((zr_ref, zv) : ((zMedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMedeleg) in
  begin
    zr := ({!zr with zMedeleg_chunk_0 = update_subrange ((!zr.zMedeleg_chunk_0), (Big_int.of_int (13)), (Big_int.of_int (13)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Medeleg_Load_Page_Fault ((zv, zx) : (zMedeleg * (bit) list)) : zMedeleg = sail_call (fun r ->
  let zv = ({zv with zMedeleg_chunk_0 = update_subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (13)), (Big_int.of_int (13)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Medeleg_Fetch_Page_Fault (zv : (zMedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (12)), (Big_int.of_int (12))))

and z_set_Medeleg_Fetch_Page_Fault ((zr_ref, zv) : ((zMedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMedeleg) in
  begin
    zr := ({!zr with zMedeleg_chunk_0 = update_subrange ((!zr.zMedeleg_chunk_0), (Big_int.of_int (12)), (Big_int.of_int (12)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Medeleg_Fetch_Page_Fault ((zv, zx) : (zMedeleg * (bit) list)) : zMedeleg = sail_call (fun r ->
  let zv = ({zv with zMedeleg_chunk_0 = update_subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (12)), (Big_int.of_int (12)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Medeleg_MEnvCall (zv : (zMedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (10)), (Big_int.of_int (10))))

and z_set_Medeleg_MEnvCall ((zr_ref, zv) : ((zMedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMedeleg) in
  begin
    zr := ({!zr with zMedeleg_chunk_0 = update_subrange ((!zr.zMedeleg_chunk_0), (Big_int.of_int (10)), (Big_int.of_int (10)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Medeleg_MEnvCall ((zv, zx) : (zMedeleg * (bit) list)) : zMedeleg = sail_call (fun r ->
  let zv = ({zv with zMedeleg_chunk_0 = update_subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (10)), (Big_int.of_int (10)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Medeleg_SEnvCall (zv : (zMedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (9)), (Big_int.of_int (9))))

and z_set_Medeleg_SEnvCall ((zr_ref, zv) : ((zMedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMedeleg) in
  begin
    zr := ({!zr with zMedeleg_chunk_0 = update_subrange ((!zr.zMedeleg_chunk_0), (Big_int.of_int (9)), (Big_int.of_int (9)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Medeleg_SEnvCall ((zv, zx) : (zMedeleg * (bit) list)) : zMedeleg = sail_call (fun r ->
  let zv = ({zv with zMedeleg_chunk_0 = update_subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (9)), (Big_int.of_int (9)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Medeleg_UEnvCall (zv : (zMedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8))))

and z_set_Medeleg_UEnvCall ((zr_ref, zv) : ((zMedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMedeleg) in
  begin
    zr := ({!zr with zMedeleg_chunk_0 = update_subrange ((!zr.zMedeleg_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Medeleg_UEnvCall ((zv, zx) : (zMedeleg * (bit) list)) : zMedeleg = sail_call (fun r ->
  let zv = ({zv with zMedeleg_chunk_0 = update_subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

type  zSedeleg = { zSedeleg_chunk_0 : (bit) list
};;

let string_of_zSedeleg (gs2850 : zSedeleg) =
  "{Sedeleg_chunk_0 = " ^ string_of_bits gs2850.zSedeleg_chunk_0 ^ "}";;

let rec z_get_Medeleg_SAMO_Access_Fault (zv : (zMedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7))))

and z_set_Medeleg_SAMO_Access_Fault ((zr_ref, zv) : ((zMedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMedeleg) in
  begin
    zr := ({!zr with zMedeleg_chunk_0 = update_subrange ((!zr.zMedeleg_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Medeleg_SAMO_Access_Fault ((zv, zx) : (zMedeleg * (bit) list)) : zMedeleg = sail_call (fun r ->
  let zv = ({zv with zMedeleg_chunk_0 = update_subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Medeleg_SAMO_Addr_Align (zv : (zMedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (6)), (Big_int.of_int (6))))

and z_set_Medeleg_SAMO_Addr_Align ((zr_ref, zv) : ((zMedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMedeleg) in
  begin
    zr := ({!zr with zMedeleg_chunk_0 = update_subrange ((!zr.zMedeleg_chunk_0), (Big_int.of_int (6)), (Big_int.of_int (6)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Medeleg_SAMO_Addr_Align ((zv, zx) : (zMedeleg * (bit) list)) : zMedeleg = sail_call (fun r ->
  let zv = ({zv with zMedeleg_chunk_0 = update_subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (6)), (Big_int.of_int (6)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Medeleg_Load_Access_Fault (zv : (zMedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5))))

and z_set_Medeleg_Load_Access_Fault ((zr_ref, zv) : ((zMedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMedeleg) in
  begin
    zr := ({!zr with zMedeleg_chunk_0 = update_subrange ((!zr.zMedeleg_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Medeleg_Load_Access_Fault ((zv, zx) : (zMedeleg * (bit) list)) : zMedeleg = sail_call (fun r ->
  let zv = ({zv with zMedeleg_chunk_0 = update_subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Medeleg_Load_Addr_Align (zv : (zMedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4))))

and z_set_Medeleg_Load_Addr_Align ((zr_ref, zv) : ((zMedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMedeleg) in
  begin
    zr := ({!zr with zMedeleg_chunk_0 = update_subrange ((!zr.zMedeleg_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Medeleg_Load_Addr_Align ((zv, zx) : (zMedeleg * (bit) list)) : zMedeleg = sail_call (fun r ->
  let zv = ({zv with zMedeleg_chunk_0 = update_subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Medeleg_Breakpoint (zv : (zMedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3))))

and z_set_Medeleg_Breakpoint ((zr_ref, zv) : ((zMedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMedeleg) in
  begin
    zr := ({!zr with zMedeleg_chunk_0 = update_subrange ((!zr.zMedeleg_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Medeleg_Breakpoint ((zv, zx) : (zMedeleg * (bit) list)) : zMedeleg = sail_call (fun r ->
  let zv = ({zv with zMedeleg_chunk_0 = update_subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Medeleg_Illegal_Instr (zv : (zMedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2))))

and z_set_Medeleg_Illegal_Instr ((zr_ref, zv) : ((zMedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMedeleg) in
  begin
    zr := ({!zr with zMedeleg_chunk_0 = update_subrange ((!zr.zMedeleg_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Medeleg_Illegal_Instr ((zv, zx) : (zMedeleg * (bit) list)) : zMedeleg = sail_call (fun r ->
  let zv = ({zv with zMedeleg_chunk_0 = update_subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Medeleg_Fetch_Access_Fault (zv : (zMedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1))))

and z_set_Medeleg_Fetch_Access_Fault ((zr_ref, zv) : ((zMedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMedeleg) in
  begin
    zr := ({!zr with zMedeleg_chunk_0 = update_subrange ((!zr.zMedeleg_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Medeleg_Fetch_Access_Fault ((zv, zx) : (zMedeleg * (bit) list)) : zMedeleg = sail_call (fun r ->
  let zv = ({zv with zMedeleg_chunk_0 = update_subrange ((zv.zMedeleg_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Medeleg_Fetch_Addr_Align (zv : (zMedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMedeleg_chunk_0), Big_int.zero, Big_int.zero))

and z_set_Medeleg_Fetch_Addr_Align ((zr_ref, zv) : ((zMedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMedeleg) in
  begin
    zr := ({!zr with zMedeleg_chunk_0 = update_subrange ((!zr.zMedeleg_chunk_0), Big_int.zero, Big_int.zero, (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Medeleg_Fetch_Addr_Align ((zv, zx) : (zMedeleg * (bit) list)) : zMedeleg = sail_call (fun r ->
  let zv = ({zv with zMedeleg_chunk_0 = update_subrange ((zv.zMedeleg_chunk_0), Big_int.zero, Big_int.zero, (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

let zmedeleg : (zMedeleg) ref = ref (zundefined_Medeleg ());;

let rec zlegalizze_medeleg ((zo, zv) : (zMedeleg * zxlenbits)) : zMedeleg = sail_call (fun r ->
  let zm = (zMk_Medeleg zv) in
  let zm = (z_update_Medeleg_MEnvCall (zm, (zbool_to_bits false))) in
  zm)

type  zMtvec = { zMtvec_chunk_0 : (bit) list
};;

let string_of_zMtvec (gs2968 : zMtvec) =
  "{Mtvec_chunk_0 = " ^ string_of_bits gs2968.zMtvec_chunk_0 ^ "}";;

let rec zundefined_Mtvec (() : (unit)) : zMtvec = sail_call (fun r ->
  {zMtvec_chunk_0 = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

and zMk_Mtvec (zv : ((bit) list)) : zMtvec = sail_call (fun r ->
  {zMtvec_chunk_0 = subrange (zv, (Big_int.of_int (63)), Big_int.zero)})

and z_get_Mtvec_bits (zv : (zMtvec)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMtvec_chunk_0), (Big_int.of_int (63)), Big_int.zero))

and z_set_Mtvec_bits ((zr_ref, zv) : ((zMtvec) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMtvec) in
  begin
    zr := ({!zr with zMtvec_chunk_0 = update_subrange ((!zr.zMtvec_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zv, (Big_int.of_int (63)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mtvec_bits ((zv, zx) : (zMtvec * (bit) list)) : zMtvec = sail_call (fun r ->
  let zv = ({zv with zMtvec_chunk_0 = update_subrange ((zv.zMtvec_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zx, (Big_int.of_int (63)), Big_int.zero)))}) in
  zv)

and z_get_Mtvec_Base (zv : (zMtvec)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMtvec_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (2))))

and z_set_Mtvec_Base ((zr_ref, zv) : ((zMtvec) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMtvec) in
  begin
    zr := ({!zr with zMtvec_chunk_0 = update_subrange ((!zr.zMtvec_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (2)), (subrange (zv, (Big_int.of_int (61)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mtvec_Base ((zv, zx) : (zMtvec * (bit) list)) : zMtvec = sail_call (fun r ->
  let zv = ({zv with zMtvec_chunk_0 = update_subrange ((zv.zMtvec_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (2)), (subrange (zx, (Big_int.of_int (61)), Big_int.zero)))}) in
  zv)

and z_get_Mtvec_Mode (zv : (zMtvec)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMtvec_chunk_0), (Big_int.of_int (1)), Big_int.zero))

and z_set_Mtvec_Mode ((zr_ref, zv) : ((zMtvec) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMtvec) in
  begin
    zr := ({!zr with zMtvec_chunk_0 = update_subrange ((!zr.zMtvec_chunk_0), (Big_int.of_int (1)), Big_int.zero, (subrange (zv, (Big_int.of_int (1)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mtvec_Mode ((zv, zx) : (zMtvec * (bit) list)) : zMtvec = sail_call (fun r ->
  let zv = ({zv with zMtvec_chunk_0 = update_subrange ((zv.zMtvec_chunk_0), (Big_int.of_int (1)), Big_int.zero, (subrange (zx, (Big_int.of_int (1)), Big_int.zero)))}) in
  zv)

type  zSatp64 = { zSatp64_chunk_0 : (bit) list
};;

let string_of_zSatp64 (gs3019 : zSatp64) =
  "{Satp64_chunk_0 = " ^ string_of_bits gs3019.zSatp64_chunk_0 ^ "}";;

let rec zlegalizze_tvec ((zo, zv) : (zMtvec * zxlenbits)) : zMtvec = sail_call (fun r ->
  let zv = (zMk_Mtvec zv) in
  begin
    match (ztrapVectorMode_of_bits (z_get_Mtvec_Mode zv)) with
    | ZTV_Direct -> zv
    | ZTV_Vector -> zv
    | _ -> z_update_Mtvec_Mode (zv, (z_get_Mtvec_Mode zo))
  end)

type  zMcause = { zMcause_chunk_0 : (bit) list
};;

let string_of_zMcause (gs3025 : zMcause) =
  "{Mcause_chunk_0 = " ^ string_of_bits gs3025.zMcause_chunk_0 ^ "}";;

let rec zundefined_Mcause (() : (unit)) : zMcause = sail_call (fun r ->
  {zMcause_chunk_0 = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

and zMk_Mcause (zv : ((bit) list)) : zMcause = sail_call (fun r ->
  {zMcause_chunk_0 = subrange (zv, (Big_int.of_int (63)), Big_int.zero)})

and z_get_Mcause_bits (zv : (zMcause)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMcause_chunk_0), (Big_int.of_int (63)), Big_int.zero))

and z_set_Mcause_bits ((zr_ref, zv) : ((zMcause) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMcause) in
  begin
    zr := ({!zr with zMcause_chunk_0 = update_subrange ((!zr.zMcause_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zv, (Big_int.of_int (63)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mcause_bits ((zv, zx) : (zMcause * (bit) list)) : zMcause = sail_call (fun r ->
  let zv = ({zv with zMcause_chunk_0 = update_subrange ((zv.zMcause_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zx, (Big_int.of_int (63)), Big_int.zero)))}) in
  zv)

and z_get_Mcause_IsInterrupt (zv : (zMcause)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMcause_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (63))))

and z_set_Mcause_IsInterrupt ((zr_ref, zv) : ((zMcause) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMcause) in
  begin
    zr := ({!zr with zMcause_chunk_0 = update_subrange ((!zr.zMcause_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (63)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mcause_IsInterrupt ((zv, zx) : (zMcause * (bit) list)) : zMcause = sail_call (fun r ->
  let zv = ({zv with zMcause_chunk_0 = update_subrange ((zv.zMcause_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (63)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Mcause_Cause (zv : (zMcause)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zMcause_chunk_0), (Big_int.of_int (62)), Big_int.zero))

and z_set_Mcause_Cause ((zr_ref, zv) : ((zMcause) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zMcause) in
  begin
    zr := ({!zr with zMcause_chunk_0 = update_subrange ((!zr.zMcause_chunk_0), (Big_int.of_int (62)), Big_int.zero, (subrange (zv, (Big_int.of_int (62)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Mcause_Cause ((zv, zx) : (zMcause * (bit) list)) : zMcause = sail_call (fun r ->
  let zv = ({zv with zMcause_chunk_0 = update_subrange ((zv.zMcause_chunk_0), (Big_int.of_int (62)), Big_int.zero, (subrange (zx, (Big_int.of_int (62)), Big_int.zero)))}) in
  zv)

let zmcause : (zMcause) ref = ref (zundefined_Mcause ());;

let rec ztvec_addr ((zm, zc) : (zMtvec * zMcause)) : (zxlenbits) zoption = sail_call (fun r ->
  let zbase = (append ((z_get_Mtvec_Base zm), [B0; B0])) in
  begin
    match (ztrapVectorMode_of_bits (z_get_Mtvec_Mode zm)) with
    | ZTV_Direct -> ZSome zbase
    | ZTV_Vector ->
      if (eq_list ((z_get_Mcause_IsInterrupt zc), (zbool_to_bits true))) then (ZSome (add_vec (zbase, (shiftl ((zEXTZ ((Big_int.of_int (64)), (z_get_Mcause_Cause zc))), (Big_int.of_int (2))))))) else (ZSome zbase)
    | ZTV_Reserved -> ZNone ()
  end)

and zlegalizze_xepc (zv : (zxlenbits)) : zxlenbits = sail_call (fun r ->
  and_vec (zv, (zEXTS ((Big_int.of_int (64)), [B1; B0]))))

and zpc_alignment_mask (() : (unit)) : zxlenbits = sail_call (fun r ->
  not_vec (zEXTZ ((Big_int.of_int (64)), (if (eq_list ((z_get_Misa_C !zmisa), (zbool_to_bits true))) then [B0; B0] else [B1; B0]))))

let zmtval : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let zmscratch : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

type  zCounteren = { zCounteren_chunk_0 : (bit) list
};;

let string_of_zCounteren (gs3089 : zCounteren) =
  "{Counteren_chunk_0 = " ^ string_of_bits gs3089.zCounteren_chunk_0 ^ "}";;

let rec zundefined_Counteren (() : (unit)) : zCounteren = sail_call (fun r ->
  {zCounteren_chunk_0 = undefined_vector ((Big_int.of_int (32)), (undefined_bit ()))})

and zMk_Counteren (zv : ((bit) list)) : zCounteren = sail_call (fun r ->
  {zCounteren_chunk_0 = subrange (zv, (Big_int.of_int (31)), Big_int.zero)})

and z_get_Counteren_bits (zv : (zCounteren)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zCounteren_chunk_0), (Big_int.of_int (31)), Big_int.zero))

and z_set_Counteren_bits ((zr_ref, zv) : ((zCounteren) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zCounteren) in
  begin
    zr := ({!zr with zCounteren_chunk_0 = update_subrange ((!zr.zCounteren_chunk_0), (Big_int.of_int (31)), Big_int.zero, (subrange (zv, (Big_int.of_int (31)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Counteren_bits ((zv, zx) : (zCounteren * (bit) list)) : zCounteren = sail_call (fun r ->
  let zv = ({zv with zCounteren_chunk_0 = update_subrange ((zv.zCounteren_chunk_0), (Big_int.of_int (31)), Big_int.zero, (subrange (zx, (Big_int.of_int (31)), Big_int.zero)))}) in
  zv)

and z_get_Counteren_HPM (zv : (zCounteren)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zCounteren_chunk_0), (Big_int.of_int (31)), (Big_int.of_int (3))))

and z_set_Counteren_HPM ((zr_ref, zv) : ((zCounteren) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zCounteren) in
  begin
    zr := ({!zr with zCounteren_chunk_0 = update_subrange ((!zr.zCounteren_chunk_0), (Big_int.of_int (31)), (Big_int.of_int (3)), (subrange (zv, (Big_int.of_int (28)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Counteren_HPM ((zv, zx) : (zCounteren * (bit) list)) : zCounteren = sail_call (fun r ->
  let zv = ({zv with zCounteren_chunk_0 = update_subrange ((zv.zCounteren_chunk_0), (Big_int.of_int (31)), (Big_int.of_int (3)), (subrange (zx, (Big_int.of_int (28)), Big_int.zero)))}) in
  zv)

and z_get_Counteren_IR (zv : (zCounteren)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zCounteren_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2))))

and z_set_Counteren_IR ((zr_ref, zv) : ((zCounteren) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zCounteren) in
  begin
    zr := ({!zr with zCounteren_chunk_0 = update_subrange ((!zr.zCounteren_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Counteren_IR ((zv, zx) : (zCounteren * (bit) list)) : zCounteren = sail_call (fun r ->
  let zv = ({zv with zCounteren_chunk_0 = update_subrange ((zv.zCounteren_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Counteren_TM (zv : (zCounteren)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zCounteren_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1))))

and z_set_Counteren_TM ((zr_ref, zv) : ((zCounteren) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zCounteren) in
  begin
    zr := ({!zr with zCounteren_chunk_0 = update_subrange ((!zr.zCounteren_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Counteren_TM ((zv, zx) : (zCounteren * (bit) list)) : zCounteren = sail_call (fun r ->
  let zv = ({zv with zCounteren_chunk_0 = update_subrange ((zv.zCounteren_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Counteren_CY (zv : (zCounteren)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zCounteren_chunk_0), Big_int.zero, Big_int.zero))

and z_set_Counteren_CY ((zr_ref, zv) : ((zCounteren) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zCounteren) in
  begin
    zr := ({!zr with zCounteren_chunk_0 = update_subrange ((!zr.zCounteren_chunk_0), Big_int.zero, Big_int.zero, (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Counteren_CY ((zv, zx) : (zCounteren * (bit) list)) : zCounteren = sail_call (fun r ->
  let zv = ({zv with zCounteren_chunk_0 = update_subrange ((zv.zCounteren_chunk_0), Big_int.zero, Big_int.zero, (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

let zmcounteren : (zCounteren) ref = ref (zundefined_Counteren ());;

let zscounteren : (zCounteren) ref = ref (zundefined_Counteren ());;

let rec zlegalizze_mcounteren ((zc, zv) : (zCounteren * zxlenbits)) : zCounteren = sail_call (fun r ->
  let zc = (z_update_Counteren_IR (zc, (zcast_unit_vec (access (zv, (Big_int.of_int (2))))))) in
  let zc = (z_update_Counteren_TM (zc, (zcast_unit_vec (access (zv, (Big_int.of_int (1))))))) in
  let zc = (z_update_Counteren_CY (zc, (zcast_unit_vec (access (zv, Big_int.zero))))) in
  zc)

and zlegalizze_scounteren ((zc, zv) : (zCounteren * zxlenbits)) : zCounteren = sail_call (fun r ->
  let zc = (z_update_Counteren_IR (zc, (zcast_unit_vec (access (zv, (Big_int.of_int (2))))))) in
  let zc = (z_update_Counteren_TM (zc, (zcast_unit_vec (access (zv, (Big_int.of_int (1))))))) in
  let zc = (z_update_Counteren_CY (zc, (zcast_unit_vec (access (zv, Big_int.zero))))) in
  zc)

let zmcycle : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let zmtime : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let zminstret : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let zminstret_written : (bool) ref = ref (undefined_bool ());;

let rec zretire_instruction (() : (unit)) : unit = sail_call (fun r ->
  if (eq_bool (!zminstret_written, true)) then (zminstret_written := false) else (zminstret := (add_vec_int (!zminstret, (Big_int.of_int (1))))))

let zmvendorid : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let zmimpid : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let zmarchid : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let zmhartid : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let zpmpaddr0 : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let zpmpcfg0 : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let rec zundefined_Sstatus (() : (unit)) : zSstatus = sail_call (fun r ->
  {zSstatus_chunk_0 = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

and zMk_Sstatus (zv : ((bit) list)) : zSstatus = sail_call (fun r ->
  {zSstatus_chunk_0 = subrange (zv, (Big_int.of_int (63)), Big_int.zero)})

and z_get_Sstatus_bits (zv : (zSstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (63)), Big_int.zero))

and z_set_Sstatus_bits ((zr_ref, zv) : ((zSstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSstatus) in
  begin
    zr := ({!zr with zSstatus_chunk_0 = update_subrange ((!zr.zSstatus_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zv, (Big_int.of_int (63)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sstatus_bits ((zv, zx) : (zSstatus * (bit) list)) : zSstatus = sail_call (fun r ->
  let zv = ({zv with zSstatus_chunk_0 = update_subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zx, (Big_int.of_int (63)), Big_int.zero)))}) in
  zv)

and z_get_Sstatus_SD (zv : (zSstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (63))))

and z_set_Sstatus_SD ((zr_ref, zv) : ((zSstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSstatus) in
  begin
    zr := ({!zr with zSstatus_chunk_0 = update_subrange ((!zr.zSstatus_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (63)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sstatus_SD ((zv, zx) : (zSstatus * (bit) list)) : zSstatus = sail_call (fun r ->
  let zv = ({zv with zSstatus_chunk_0 = update_subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (63)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sstatus_UXL (zv : (zSstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (33)), (Big_int.of_int (32))))

and z_set_Sstatus_UXL ((zr_ref, zv) : ((zSstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSstatus) in
  begin
    zr := ({!zr with zSstatus_chunk_0 = update_subrange ((!zr.zSstatus_chunk_0), (Big_int.of_int (33)), (Big_int.of_int (32)), (subrange (zv, (Big_int.of_int (1)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sstatus_UXL ((zv, zx) : (zSstatus * (bit) list)) : zSstatus = sail_call (fun r ->
  let zv = ({zv with zSstatus_chunk_0 = update_subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (33)), (Big_int.of_int (32)), (subrange (zx, (Big_int.of_int (1)), Big_int.zero)))}) in
  zv)

and z_get_Sstatus_MXR (zv : (zSstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (19)), (Big_int.of_int (19))))

and z_set_Sstatus_MXR ((zr_ref, zv) : ((zSstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSstatus) in
  begin
    zr := ({!zr with zSstatus_chunk_0 = update_subrange ((!zr.zSstatus_chunk_0), (Big_int.of_int (19)), (Big_int.of_int (19)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sstatus_MXR ((zv, zx) : (zSstatus * (bit) list)) : zSstatus = sail_call (fun r ->
  let zv = ({zv with zSstatus_chunk_0 = update_subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (19)), (Big_int.of_int (19)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sstatus_SUM (zv : (zSstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (18)), (Big_int.of_int (18))))

and z_set_Sstatus_SUM ((zr_ref, zv) : ((zSstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSstatus) in
  begin
    zr := ({!zr with zSstatus_chunk_0 = update_subrange ((!zr.zSstatus_chunk_0), (Big_int.of_int (18)), (Big_int.of_int (18)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sstatus_SUM ((zv, zx) : (zSstatus * (bit) list)) : zSstatus = sail_call (fun r ->
  let zv = ({zv with zSstatus_chunk_0 = update_subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (18)), (Big_int.of_int (18)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sstatus_XS (zv : (zSstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (16)), (Big_int.of_int (15))))

and z_set_Sstatus_XS ((zr_ref, zv) : ((zSstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSstatus) in
  begin
    zr := ({!zr with zSstatus_chunk_0 = update_subrange ((!zr.zSstatus_chunk_0), (Big_int.of_int (16)), (Big_int.of_int (15)), (subrange (zv, (Big_int.of_int (1)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sstatus_XS ((zv, zx) : (zSstatus * (bit) list)) : zSstatus = sail_call (fun r ->
  let zv = ({zv with zSstatus_chunk_0 = update_subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (16)), (Big_int.of_int (15)), (subrange (zx, (Big_int.of_int (1)), Big_int.zero)))}) in
  zv)

and z_get_Sstatus_FS (zv : (zSstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (14)), (Big_int.of_int (13))))

and z_set_Sstatus_FS ((zr_ref, zv) : ((zSstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSstatus) in
  begin
    zr := ({!zr with zSstatus_chunk_0 = update_subrange ((!zr.zSstatus_chunk_0), (Big_int.of_int (14)), (Big_int.of_int (13)), (subrange (zv, (Big_int.of_int (1)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sstatus_FS ((zv, zx) : (zSstatus * (bit) list)) : zSstatus = sail_call (fun r ->
  let zv = ({zv with zSstatus_chunk_0 = update_subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (14)), (Big_int.of_int (13)), (subrange (zx, (Big_int.of_int (1)), Big_int.zero)))}) in
  zv)

and z_get_Sstatus_SPP (zv : (zSstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8))))

and z_set_Sstatus_SPP ((zr_ref, zv) : ((zSstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSstatus) in
  begin
    zr := ({!zr with zSstatus_chunk_0 = update_subrange ((!zr.zSstatus_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sstatus_SPP ((zv, zx) : (zSstatus * (bit) list)) : zSstatus = sail_call (fun r ->
  let zv = ({zv with zSstatus_chunk_0 = update_subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sstatus_SPIE (zv : (zSstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5))))

and z_set_Sstatus_SPIE ((zr_ref, zv) : ((zSstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSstatus) in
  begin
    zr := ({!zr with zSstatus_chunk_0 = update_subrange ((!zr.zSstatus_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sstatus_SPIE ((zv, zx) : (zSstatus * (bit) list)) : zSstatus = sail_call (fun r ->
  let zv = ({zv with zSstatus_chunk_0 = update_subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sstatus_UPIE (zv : (zSstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4))))

and z_set_Sstatus_UPIE ((zr_ref, zv) : ((zSstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSstatus) in
  begin
    zr := ({!zr with zSstatus_chunk_0 = update_subrange ((!zr.zSstatus_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sstatus_UPIE ((zv, zx) : (zSstatus * (bit) list)) : zSstatus = sail_call (fun r ->
  let zv = ({zv with zSstatus_chunk_0 = update_subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sstatus_SIE (zv : (zSstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1))))

and z_set_Sstatus_SIE ((zr_ref, zv) : ((zSstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSstatus) in
  begin
    zr := ({!zr with zSstatus_chunk_0 = update_subrange ((!zr.zSstatus_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sstatus_SIE ((zv, zx) : (zSstatus * (bit) list)) : zSstatus = sail_call (fun r ->
  let zv = ({zv with zSstatus_chunk_0 = update_subrange ((zv.zSstatus_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sstatus_UIE (zv : (zSstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSstatus_chunk_0), Big_int.zero, Big_int.zero))

and z_set_Sstatus_UIE ((zr_ref, zv) : ((zSstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSstatus) in
  begin
    zr := ({!zr with zSstatus_chunk_0 = update_subrange ((!zr.zSstatus_chunk_0), Big_int.zero, Big_int.zero, (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sstatus_UIE ((zv, zx) : (zSstatus * (bit) list)) : zSstatus = sail_call (fun r ->
  let zv = ({zv with zSstatus_chunk_0 = update_subrange ((zv.zSstatus_chunk_0), Big_int.zero, Big_int.zero, (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and zlower_mstatus (zm : (zMstatus)) : zSstatus = sail_call (fun r ->
  let zs = (zMk_Sstatus (zEXTZ ((Big_int.of_int (64)), [B0]))) in
  let zs = (z_update_Sstatus_SD (zs, (z_get_Mstatus_SD zm))) in
  let zs = (z_update_Sstatus_UXL (zs, (z_get_Mstatus_UXL zm))) in
  let zs = (z_update_Sstatus_MXR (zs, (z_get_Mstatus_MXR zm))) in
  let zs = (z_update_Sstatus_SUM (zs, (z_get_Mstatus_SUM zm))) in
  let zs = (z_update_Sstatus_XS (zs, (z_get_Mstatus_XS zm))) in
  let zs = (z_update_Sstatus_FS (zs, (z_get_Mstatus_FS zm))) in
  let zs = (z_update_Sstatus_SPP (zs, (z_get_Mstatus_SPP zm))) in
  let zs = (z_update_Sstatus_SPIE (zs, (z_get_Mstatus_SPIE zm))) in
  let zs = (z_update_Sstatus_UPIE (zs, (z_get_Mstatus_UPIE zm))) in
  let zs = (z_update_Sstatus_SIE (zs, (z_get_Mstatus_SIE zm))) in
  let zs = (z_update_Sstatus_UIE (zs, (z_get_Mstatus_UIE zm))) in
  zs)

and zlift_sstatus ((zm, zs) : (zMstatus * zSstatus)) : zMstatus = sail_call (fun r ->
  let zm = (z_update_Mstatus_MXR (zm, (z_get_Sstatus_MXR zs))) in
  let zm = (z_update_Mstatus_SUM (zm, (z_get_Sstatus_SUM zs))) in
  let zm = (z_update_Mstatus_XS (zm, (z_get_Sstatus_XS zs))) in
  let zm = (z_update_Mstatus_FS (zm, (z_get_Sstatus_FS zs))) in
  let zm = (z_update_Mstatus_SD (zm, (zbool_to_bits ((eq_list ((zextStatus_to_bits (zextStatus_of_bits (z_get_Mstatus_FS zm))), (zextStatus_to_bits ZDirty))) || (eq_list ((zextStatus_to_bits (zextStatus_of_bits (z_get_Mstatus_XS zm))), (zextStatus_to_bits ZDirty))))))) in
  let zm = (z_update_Mstatus_SPP (zm, (z_get_Sstatus_SPP zs))) in
  let zm = (z_update_Mstatus_SPIE (zm, (z_get_Sstatus_SPIE zs))) in
  let zm = (z_update_Mstatus_UPIE (zm, (z_get_Sstatus_UPIE zs))) in
  let zm = (z_update_Mstatus_SIE (zm, (z_get_Sstatus_SIE zs))) in
  let zm = (z_update_Mstatus_UIE (zm, (z_get_Sstatus_UIE zs))) in
  zm)

and zlegalizze_sstatus ((zm, zv) : (zMstatus * zxlenbits)) : zMstatus = sail_call (fun r ->
  zlift_sstatus (zm, (zMk_Sstatus zv)))

and zundefined_Sedeleg (() : (unit)) : zSedeleg = sail_call (fun r ->
  {zSedeleg_chunk_0 = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

and zMk_Sedeleg (zv : ((bit) list)) : zSedeleg = sail_call (fun r ->
  {zSedeleg_chunk_0 = subrange (zv, (Big_int.of_int (63)), Big_int.zero)})

and z_get_Sedeleg_bits (zv : (zSedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (63)), Big_int.zero))

and z_set_Sedeleg_bits ((zr_ref, zv) : ((zSedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSedeleg) in
  begin
    zr := ({!zr with zSedeleg_chunk_0 = update_subrange ((!zr.zSedeleg_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zv, (Big_int.of_int (63)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sedeleg_bits ((zv, zx) : (zSedeleg * (bit) list)) : zSedeleg = sail_call (fun r ->
  let zv = ({zv with zSedeleg_chunk_0 = update_subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zx, (Big_int.of_int (63)), Big_int.zero)))}) in
  zv)

and z_get_Sedeleg_UEnvCall (zv : (zSedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8))))

and z_set_Sedeleg_UEnvCall ((zr_ref, zv) : ((zSedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSedeleg) in
  begin
    zr := ({!zr with zSedeleg_chunk_0 = update_subrange ((!zr.zSedeleg_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sedeleg_UEnvCall ((zv, zx) : (zSedeleg * (bit) list)) : zSedeleg = sail_call (fun r ->
  let zv = ({zv with zSedeleg_chunk_0 = update_subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sedeleg_SAMO_Access_Fault (zv : (zSedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7))))

and z_set_Sedeleg_SAMO_Access_Fault ((zr_ref, zv) : ((zSedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSedeleg) in
  begin
    zr := ({!zr with zSedeleg_chunk_0 = update_subrange ((!zr.zSedeleg_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sedeleg_SAMO_Access_Fault ((zv, zx) : (zSedeleg * (bit) list)) : zSedeleg = sail_call (fun r ->
  let zv = ({zv with zSedeleg_chunk_0 = update_subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sedeleg_SAMO_Addr_Align (zv : (zSedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (6)), (Big_int.of_int (6))))

and z_set_Sedeleg_SAMO_Addr_Align ((zr_ref, zv) : ((zSedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSedeleg) in
  begin
    zr := ({!zr with zSedeleg_chunk_0 = update_subrange ((!zr.zSedeleg_chunk_0), (Big_int.of_int (6)), (Big_int.of_int (6)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sedeleg_SAMO_Addr_Align ((zv, zx) : (zSedeleg * (bit) list)) : zSedeleg = sail_call (fun r ->
  let zv = ({zv with zSedeleg_chunk_0 = update_subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (6)), (Big_int.of_int (6)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sedeleg_Load_Access_Fault (zv : (zSedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5))))

and z_set_Sedeleg_Load_Access_Fault ((zr_ref, zv) : ((zSedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSedeleg) in
  begin
    zr := ({!zr with zSedeleg_chunk_0 = update_subrange ((!zr.zSedeleg_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sedeleg_Load_Access_Fault ((zv, zx) : (zSedeleg * (bit) list)) : zSedeleg = sail_call (fun r ->
  let zv = ({zv with zSedeleg_chunk_0 = update_subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sedeleg_Load_Addr_Align (zv : (zSedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4))))

and z_set_Sedeleg_Load_Addr_Align ((zr_ref, zv) : ((zSedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSedeleg) in
  begin
    zr := ({!zr with zSedeleg_chunk_0 = update_subrange ((!zr.zSedeleg_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sedeleg_Load_Addr_Align ((zv, zx) : (zSedeleg * (bit) list)) : zSedeleg = sail_call (fun r ->
  let zv = ({zv with zSedeleg_chunk_0 = update_subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sedeleg_Breakpoint (zv : (zSedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3))))

and z_set_Sedeleg_Breakpoint ((zr_ref, zv) : ((zSedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSedeleg) in
  begin
    zr := ({!zr with zSedeleg_chunk_0 = update_subrange ((!zr.zSedeleg_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sedeleg_Breakpoint ((zv, zx) : (zSedeleg * (bit) list)) : zSedeleg = sail_call (fun r ->
  let zv = ({zv with zSedeleg_chunk_0 = update_subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sedeleg_Illegal_Instr (zv : (zSedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2))))

and z_set_Sedeleg_Illegal_Instr ((zr_ref, zv) : ((zSedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSedeleg) in
  begin
    zr := ({!zr with zSedeleg_chunk_0 = update_subrange ((!zr.zSedeleg_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sedeleg_Illegal_Instr ((zv, zx) : (zSedeleg * (bit) list)) : zSedeleg = sail_call (fun r ->
  let zv = ({zv with zSedeleg_chunk_0 = update_subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sedeleg_Fetch_Access_Fault (zv : (zSedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1))))

and z_set_Sedeleg_Fetch_Access_Fault ((zr_ref, zv) : ((zSedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSedeleg) in
  begin
    zr := ({!zr with zSedeleg_chunk_0 = update_subrange ((!zr.zSedeleg_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sedeleg_Fetch_Access_Fault ((zv, zx) : (zSedeleg * (bit) list)) : zSedeleg = sail_call (fun r ->
  let zv = ({zv with zSedeleg_chunk_0 = update_subrange ((zv.zSedeleg_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sedeleg_Fetch_Addr_Align (zv : (zSedeleg)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSedeleg_chunk_0), Big_int.zero, Big_int.zero))

and z_set_Sedeleg_Fetch_Addr_Align ((zr_ref, zv) : ((zSedeleg) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSedeleg) in
  begin
    zr := ({!zr with zSedeleg_chunk_0 = update_subrange ((!zr.zSedeleg_chunk_0), Big_int.zero, Big_int.zero, (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sedeleg_Fetch_Addr_Align ((zv, zx) : (zSedeleg * (bit) list)) : zSedeleg = sail_call (fun r ->
  let zv = ({zv with zSedeleg_chunk_0 = update_subrange ((zv.zSedeleg_chunk_0), Big_int.zero, Big_int.zero, (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

let zsedeleg : (zSedeleg) ref = ref (zundefined_Sedeleg ());;

let rec zlegalizze_sedeleg ((zs, zv) : (zSedeleg * zxlenbits)) : zSedeleg = sail_call (fun r ->
  zMk_Sedeleg (zEXTZ ((Big_int.of_int (64)), (subrange (zv, (Big_int.of_int (8)), Big_int.zero)))))

and zundefined_Sinterrupts (() : (unit)) : zSinterrupts = sail_call (fun r ->
  {zSinterrupts_chunk_0 = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

and zMk_Sinterrupts (zv : ((bit) list)) : zSinterrupts = sail_call (fun r ->
  {zSinterrupts_chunk_0 = subrange (zv, (Big_int.of_int (63)), Big_int.zero)})

and z_get_Sinterrupts_bits (zv : (zSinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSinterrupts_chunk_0), (Big_int.of_int (63)), Big_int.zero))

and z_set_Sinterrupts_bits ((zr_ref, zv) : ((zSinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSinterrupts) in
  begin
    zr := ({!zr with zSinterrupts_chunk_0 = update_subrange ((!zr.zSinterrupts_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zv, (Big_int.of_int (63)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sinterrupts_bits ((zv, zx) : (zSinterrupts * (bit) list)) : zSinterrupts = sail_call (fun r ->
  let zv = ({zv with zSinterrupts_chunk_0 = update_subrange ((zv.zSinterrupts_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zx, (Big_int.of_int (63)), Big_int.zero)))}) in
  zv)

and z_get_Sinterrupts_SEI (zv : (zSinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSinterrupts_chunk_0), (Big_int.of_int (9)), (Big_int.of_int (9))))

and z_set_Sinterrupts_SEI ((zr_ref, zv) : ((zSinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSinterrupts) in
  begin
    zr := ({!zr with zSinterrupts_chunk_0 = update_subrange ((!zr.zSinterrupts_chunk_0), (Big_int.of_int (9)), (Big_int.of_int (9)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sinterrupts_SEI ((zv, zx) : (zSinterrupts * (bit) list)) : zSinterrupts = sail_call (fun r ->
  let zv = ({zv with zSinterrupts_chunk_0 = update_subrange ((zv.zSinterrupts_chunk_0), (Big_int.of_int (9)), (Big_int.of_int (9)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sinterrupts_UEI (zv : (zSinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSinterrupts_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8))))

and z_set_Sinterrupts_UEI ((zr_ref, zv) : ((zSinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSinterrupts) in
  begin
    zr := ({!zr with zSinterrupts_chunk_0 = update_subrange ((!zr.zSinterrupts_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sinterrupts_UEI ((zv, zx) : (zSinterrupts * (bit) list)) : zSinterrupts = sail_call (fun r ->
  let zv = ({zv with zSinterrupts_chunk_0 = update_subrange ((zv.zSinterrupts_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sinterrupts_STI (zv : (zSinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSinterrupts_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5))))

and z_set_Sinterrupts_STI ((zr_ref, zv) : ((zSinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSinterrupts) in
  begin
    zr := ({!zr with zSinterrupts_chunk_0 = update_subrange ((!zr.zSinterrupts_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sinterrupts_STI ((zv, zx) : (zSinterrupts * (bit) list)) : zSinterrupts = sail_call (fun r ->
  let zv = ({zv with zSinterrupts_chunk_0 = update_subrange ((zv.zSinterrupts_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sinterrupts_UTI (zv : (zSinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSinterrupts_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4))))

and z_set_Sinterrupts_UTI ((zr_ref, zv) : ((zSinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSinterrupts) in
  begin
    zr := ({!zr with zSinterrupts_chunk_0 = update_subrange ((!zr.zSinterrupts_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sinterrupts_UTI ((zv, zx) : (zSinterrupts * (bit) list)) : zSinterrupts = sail_call (fun r ->
  let zv = ({zv with zSinterrupts_chunk_0 = update_subrange ((zv.zSinterrupts_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sinterrupts_SSI (zv : (zSinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSinterrupts_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1))))

and z_set_Sinterrupts_SSI ((zr_ref, zv) : ((zSinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSinterrupts) in
  begin
    zr := ({!zr with zSinterrupts_chunk_0 = update_subrange ((!zr.zSinterrupts_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sinterrupts_SSI ((zv, zx) : (zSinterrupts * (bit) list)) : zSinterrupts = sail_call (fun r ->
  let zv = ({zv with zSinterrupts_chunk_0 = update_subrange ((zv.zSinterrupts_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Sinterrupts_USI (zv : (zSinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSinterrupts_chunk_0), Big_int.zero, Big_int.zero))

and z_set_Sinterrupts_USI ((zr_ref, zv) : ((zSinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSinterrupts) in
  begin
    zr := ({!zr with zSinterrupts_chunk_0 = update_subrange ((!zr.zSinterrupts_chunk_0), Big_int.zero, Big_int.zero, (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Sinterrupts_USI ((zv, zx) : (zSinterrupts * (bit) list)) : zSinterrupts = sail_call (fun r ->
  let zv = ({zv with zSinterrupts_chunk_0 = update_subrange ((zv.zSinterrupts_chunk_0), Big_int.zero, Big_int.zero, (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and zlower_mip ((zm, zd) : (zMinterrupts * zMinterrupts)) : zSinterrupts = sail_call (fun r ->
  let zs = (zMk_Sinterrupts (zEXTZ ((Big_int.of_int (64)), [B0]))) in
  let zs = (z_update_Sinterrupts_SEI (zs, (and_vec ((z_get_Minterrupts_SEI zm), (z_get_Minterrupts_SEI zd))))) in
  let zs = (z_update_Sinterrupts_STI (zs, (and_vec ((z_get_Minterrupts_STI zm), (z_get_Minterrupts_STI zd))))) in
  let zs = (z_update_Sinterrupts_SSI (zs, (and_vec ((z_get_Minterrupts_SSI zm), (z_get_Minterrupts_SSI zd))))) in
  let zs = (z_update_Sinterrupts_UEI (zs, (and_vec ((z_get_Minterrupts_UEI zm), (z_get_Minterrupts_UEI zd))))) in
  let zs = (z_update_Sinterrupts_UTI (zs, (and_vec ((z_get_Minterrupts_UTI zm), (z_get_Minterrupts_UTI zd))))) in
  let zs = (z_update_Sinterrupts_USI (zs, (and_vec ((z_get_Minterrupts_USI zm), (z_get_Minterrupts_USI zd))))) in
  zs)

and zlower_mie ((zm, zd) : (zMinterrupts * zMinterrupts)) : zSinterrupts = sail_call (fun r ->
  let zs = (zMk_Sinterrupts (zEXTZ ((Big_int.of_int (64)), [B0]))) in
  let zs = (z_update_Sinterrupts_SEI (zs, (and_vec ((z_get_Minterrupts_SEI zm), (z_get_Minterrupts_SEI zd))))) in
  let zs = (z_update_Sinterrupts_STI (zs, (and_vec ((z_get_Minterrupts_STI zm), (z_get_Minterrupts_STI zd))))) in
  let zs = (z_update_Sinterrupts_SSI (zs, (and_vec ((z_get_Minterrupts_SSI zm), (z_get_Minterrupts_SSI zd))))) in
  let zs = (z_update_Sinterrupts_UEI (zs, (and_vec ((z_get_Minterrupts_UEI zm), (z_get_Minterrupts_UEI zd))))) in
  let zs = (z_update_Sinterrupts_UTI (zs, (and_vec ((z_get_Minterrupts_UTI zm), (z_get_Minterrupts_UTI zd))))) in
  let zs = (z_update_Sinterrupts_USI (zs, (and_vec ((z_get_Minterrupts_USI zm), (z_get_Minterrupts_USI zd))))) in
  zs)

and zlift_sip ((zo, zd, zs) : (zMinterrupts * zMinterrupts * zSinterrupts)) : zMinterrupts = sail_call (fun r ->
  let zm = zo in
  let zm = (z_update_Minterrupts_SSI (zm, (and_vec ((z_get_Sinterrupts_SSI zs), (z_get_Minterrupts_SSI zd))))) in
  if (zhaveNExt ()) then (let zm = (if (eq_list ((z_get_Minterrupts_UEI zd), (zbool_to_bits true))) then (z_update_Minterrupts_UEI (zm, (z_get_Sinterrupts_UEI zs))) else zm) in
  let zm = (if (eq_list ((z_get_Minterrupts_USI zd), (zbool_to_bits true))) then (z_update_Minterrupts_USI (zm, (z_get_Sinterrupts_USI zs))) else zm) in
  zm) else zm)

and zlegalizze_sip ((zm, zd, zv) : (zMinterrupts * zMinterrupts * zxlenbits)) : zMinterrupts = sail_call (fun r ->
  zlift_sip (zm, zd, (zMk_Sinterrupts zv)))

and zlift_sie ((zo, zd, zs) : (zMinterrupts * zMinterrupts * zSinterrupts)) : zMinterrupts = sail_call (fun r ->
  let zm = zo in
  let zm = (if (eq_list ((z_get_Minterrupts_SEI zd), (zbool_to_bits true))) then (z_update_Minterrupts_SEI (zm, (z_get_Sinterrupts_SEI zs))) else zm) in
  let zm = (if (eq_list ((z_get_Minterrupts_STI zd), (zbool_to_bits true))) then (z_update_Minterrupts_STI (zm, (z_get_Sinterrupts_STI zs))) else zm) in
  let zm = (if (eq_list ((z_get_Minterrupts_SSI zd), (zbool_to_bits true))) then (z_update_Minterrupts_SSI (zm, (z_get_Sinterrupts_SSI zs))) else zm) in
  if (zhaveNExt ()) then (let zm = (if (eq_list ((z_get_Minterrupts_UEI zd), (zbool_to_bits true))) then (z_update_Minterrupts_UEI (zm, (z_get_Sinterrupts_UEI zs))) else zm) in
  let zm = (if (eq_list ((z_get_Minterrupts_UTI zd), (zbool_to_bits true))) then (z_update_Minterrupts_UTI (zm, (z_get_Sinterrupts_UTI zs))) else zm) in
  let zm = (if (eq_list ((z_get_Minterrupts_USI zd), (zbool_to_bits true))) then (z_update_Minterrupts_USI (zm, (z_get_Sinterrupts_USI zs))) else zm) in
  zm) else zm)

and zlegalizze_sie ((zm, zd, zv) : (zMinterrupts * zMinterrupts * zxlenbits)) : zMinterrupts = sail_call (fun r ->
  zlift_sie (zm, zd, (zMk_Sinterrupts zv)))

let zsideleg : (zSinterrupts) ref = ref (zundefined_Sinterrupts ());;

let rec zundefined_Satp64 (() : (unit)) : zSatp64 = sail_call (fun r ->
  {zSatp64_chunk_0 = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

and zMk_Satp64 (zv : ((bit) list)) : zSatp64 = sail_call (fun r ->
  {zSatp64_chunk_0 = subrange (zv, (Big_int.of_int (63)), Big_int.zero)})

and z_get_Satp64_bits (zv : (zSatp64)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSatp64_chunk_0), (Big_int.of_int (63)), Big_int.zero))

and z_set_Satp64_bits ((zr_ref, zv) : ((zSatp64) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSatp64) in
  begin
    zr := ({!zr with zSatp64_chunk_0 = update_subrange ((!zr.zSatp64_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zv, (Big_int.of_int (63)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Satp64_bits ((zv, zx) : (zSatp64 * (bit) list)) : zSatp64 = sail_call (fun r ->
  let zv = ({zv with zSatp64_chunk_0 = update_subrange ((zv.zSatp64_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zx, (Big_int.of_int (63)), Big_int.zero)))}) in
  zv)

and z_get_Satp64_Mode (zv : (zSatp64)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSatp64_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (60))))

and z_set_Satp64_Mode ((zr_ref, zv) : ((zSatp64) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSatp64) in
  begin
    zr := ({!zr with zSatp64_chunk_0 = update_subrange ((!zr.zSatp64_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (60)), (subrange (zv, (Big_int.of_int (3)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Satp64_Mode ((zv, zx) : (zSatp64 * (bit) list)) : zSatp64 = sail_call (fun r ->
  let zv = ({zv with zSatp64_chunk_0 = update_subrange ((zv.zSatp64_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (60)), (subrange (zx, (Big_int.of_int (3)), Big_int.zero)))}) in
  zv)

and z_get_Satp64_Asid (zv : (zSatp64)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSatp64_chunk_0), (Big_int.of_int (59)), (Big_int.of_int (44))))

and z_set_Satp64_Asid ((zr_ref, zv) : ((zSatp64) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSatp64) in
  begin
    zr := ({!zr with zSatp64_chunk_0 = update_subrange ((!zr.zSatp64_chunk_0), (Big_int.of_int (59)), (Big_int.of_int (44)), (subrange (zv, (Big_int.of_int (15)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Satp64_Asid ((zv, zx) : (zSatp64 * (bit) list)) : zSatp64 = sail_call (fun r ->
  let zv = ({zv with zSatp64_chunk_0 = update_subrange ((zv.zSatp64_chunk_0), (Big_int.of_int (59)), (Big_int.of_int (44)), (subrange (zx, (Big_int.of_int (15)), Big_int.zero)))}) in
  zv)

and z_get_Satp64_PPN (zv : (zSatp64)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSatp64_chunk_0), (Big_int.of_int (43)), Big_int.zero))

and z_set_Satp64_PPN ((zr_ref, zv) : ((zSatp64) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSatp64) in
  begin
    zr := ({!zr with zSatp64_chunk_0 = update_subrange ((!zr.zSatp64_chunk_0), (Big_int.of_int (43)), Big_int.zero, (subrange (zv, (Big_int.of_int (43)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Satp64_PPN ((zv, zx) : (zSatp64 * (bit) list)) : zSatp64 = sail_call (fun r ->
  let zv = ({zv with zSatp64_chunk_0 = update_subrange ((zv.zSatp64_chunk_0), (Big_int.of_int (43)), Big_int.zero, (subrange (zx, (Big_int.of_int (43)), Big_int.zero)))}) in
  zv)

let zsatp : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let rec zlegalizze_satp ((za, zo, zv) : (zArchitecture * zxlenbits * zxlenbits)) : zxlenbits = sail_call (fun r ->
  let zs = (zMk_Satp64 zv) in
  begin
    match (zsatpMode_of_bits (za, (z_get_Satp64_Mode zs))) with
    | ZNone (()) -> zo
    | ZSome (ZSv32) -> zo
    | ZSome (_) -> z_get_Satp64_bits zs
  end)

let zsscratch : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let zscause : (zMcause) ref = ref (zundefined_Mcause ());;

let zstval : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let ztselect : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

type  zccsr = { zccsr_chunk_0 : (bit) list
};;

let string_of_zccsr (gs3737 : zccsr) =
  "{ccsr_chunk_0 = " ^ string_of_bits gs3737.zccsr_chunk_0 ^ "}";;

let rec zundefined_ccsr (() : (unit)) : zccsr = sail_call (fun r ->
  {zccsr_chunk_0 = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

and zMk_ccsr (zv : ((bit) list)) : zccsr = sail_call (fun r ->
  {zccsr_chunk_0 = subrange (zv, (Big_int.of_int (63)), Big_int.zero)})

and z_get_ccsr_bits (zv : (zccsr)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zccsr_chunk_0), (Big_int.of_int (63)), Big_int.zero))

and z_set_ccsr_bits ((zr_ref, zv) : ((zccsr) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zccsr) in
  begin
    zr := ({!zr with zccsr_chunk_0 = update_subrange ((!zr.zccsr_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zv, (Big_int.of_int (63)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_ccsr_bits ((zv, zx) : (zccsr * (bit) list)) : zccsr = sail_call (fun r ->
  let zv = ({zv with zccsr_chunk_0 = update_subrange ((zv.zccsr_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zx, (Big_int.of_int (63)), Big_int.zero)))}) in
  zv)

and z_get_ccsr_cap_idx (zv : (zccsr)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zccsr_chunk_0), (Big_int.of_int (13)), (Big_int.of_int (8))))

and z_set_ccsr_cap_idx ((zr_ref, zv) : ((zccsr) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zccsr) in
  begin
    zr := ({!zr with zccsr_chunk_0 = update_subrange ((!zr.zccsr_chunk_0), (Big_int.of_int (13)), (Big_int.of_int (8)), (subrange (zv, (Big_int.of_int (5)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_ccsr_cap_idx ((zv, zx) : (zccsr * (bit) list)) : zccsr = sail_call (fun r ->
  let zv = ({zv with zccsr_chunk_0 = update_subrange ((zv.zccsr_chunk_0), (Big_int.of_int (13)), (Big_int.of_int (8)), (subrange (zx, (Big_int.of_int (5)), Big_int.zero)))}) in
  zv)

and z_get_ccsr_cause (zv : (zccsr)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zccsr_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (3))))

and z_set_ccsr_cause ((zr_ref, zv) : ((zccsr) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zccsr) in
  begin
    zr := ({!zr with zccsr_chunk_0 = update_subrange ((!zr.zccsr_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (3)), (subrange (zv, (Big_int.of_int (4)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_ccsr_cause ((zv, zx) : (zccsr * (bit) list)) : zccsr = sail_call (fun r ->
  let zv = ({zv with zccsr_chunk_0 = update_subrange ((zv.zccsr_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (3)), (subrange (zx, (Big_int.of_int (4)), Big_int.zero)))}) in
  zv)

and z_get_ccsr_m (zv : (zccsr)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zccsr_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2))))

and z_set_ccsr_m ((zr_ref, zv) : ((zccsr) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zccsr) in
  begin
    zr := ({!zr with zccsr_chunk_0 = update_subrange ((!zr.zccsr_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_ccsr_m ((zv, zx) : (zccsr * (bit) list)) : zccsr = sail_call (fun r ->
  let zv = ({zv with zccsr_chunk_0 = update_subrange ((zv.zccsr_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_ccsr_d (zv : (zccsr)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zccsr_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1))))

and z_set_ccsr_d ((zr_ref, zv) : ((zccsr) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zccsr) in
  begin
    zr := ({!zr with zccsr_chunk_0 = update_subrange ((!zr.zccsr_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_ccsr_d ((zv, zx) : (zccsr * (bit) list)) : zccsr = sail_call (fun r ->
  let zv = ({zv with zccsr_chunk_0 = update_subrange ((zv.zccsr_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_ccsr_e (zv : (zccsr)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zccsr_chunk_0), Big_int.zero, Big_int.zero))

and z_set_ccsr_e ((zr_ref, zv) : ((zccsr) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zccsr) in
  begin
    zr := ({!zr with zccsr_chunk_0 = update_subrange ((!zr.zccsr_chunk_0), Big_int.zero, Big_int.zero, (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_ccsr_e ((zv, zx) : (zccsr * (bit) list)) : zccsr = sail_call (fun r ->
  let zv = ({zv with zccsr_chunk_0 = update_subrange ((zv.zccsr_chunk_0), Big_int.zero, Big_int.zero, (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

let zmccsr : (zccsr) ref = ref (zundefined_ccsr ());;

let zsccsr : (zccsr) ref = ref (zundefined_ccsr ());;

let zuccsr : (zccsr) ref = ref (zundefined_ccsr ());;

let rec zundefined_Ustatus (() : (unit)) : zUstatus = sail_call (fun r ->
  {zUstatus_chunk_0 = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

and zMk_Ustatus (zv : ((bit) list)) : zUstatus = sail_call (fun r ->
  {zUstatus_chunk_0 = subrange (zv, (Big_int.of_int (63)), Big_int.zero)})

and z_get_Ustatus_bits (zv : (zUstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zUstatus_chunk_0), (Big_int.of_int (63)), Big_int.zero))

and z_set_Ustatus_bits ((zr_ref, zv) : ((zUstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zUstatus) in
  begin
    zr := ({!zr with zUstatus_chunk_0 = update_subrange ((!zr.zUstatus_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zv, (Big_int.of_int (63)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Ustatus_bits ((zv, zx) : (zUstatus * (bit) list)) : zUstatus = sail_call (fun r ->
  let zv = ({zv with zUstatus_chunk_0 = update_subrange ((zv.zUstatus_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zx, (Big_int.of_int (63)), Big_int.zero)))}) in
  zv)

and z_get_Ustatus_UPIE (zv : (zUstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zUstatus_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4))))

and z_set_Ustatus_UPIE ((zr_ref, zv) : ((zUstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zUstatus) in
  begin
    zr := ({!zr with zUstatus_chunk_0 = update_subrange ((!zr.zUstatus_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Ustatus_UPIE ((zv, zx) : (zUstatus * (bit) list)) : zUstatus = sail_call (fun r ->
  let zv = ({zv with zUstatus_chunk_0 = update_subrange ((zv.zUstatus_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Ustatus_UIE (zv : (zUstatus)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zUstatus_chunk_0), Big_int.zero, Big_int.zero))

and z_set_Ustatus_UIE ((zr_ref, zv) : ((zUstatus) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zUstatus) in
  begin
    zr := ({!zr with zUstatus_chunk_0 = update_subrange ((!zr.zUstatus_chunk_0), Big_int.zero, Big_int.zero, (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Ustatus_UIE ((zv, zx) : (zUstatus * (bit) list)) : zUstatus = sail_call (fun r ->
  let zv = ({zv with zUstatus_chunk_0 = update_subrange ((zv.zUstatus_chunk_0), Big_int.zero, Big_int.zero, (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and zlower_sstatus (zs : (zSstatus)) : zUstatus = sail_call (fun r ->
  let zu = (zMk_Ustatus (zEXTZ ((Big_int.of_int (64)), [B0]))) in
  let zu = (z_update_Ustatus_UPIE (zu, (z_get_Sstatus_UPIE zs))) in
  let zu = (z_update_Ustatus_UIE (zu, (z_get_Sstatus_UIE zs))) in
  zu)

and zlift_ustatus ((zs, zu) : (zSstatus * zUstatus)) : zSstatus = sail_call (fun r ->
  let zs = (z_update_Sstatus_UPIE (zs, (z_get_Ustatus_UPIE zu))) in
  let zs = (z_update_Sstatus_UIE (zs, (z_get_Ustatus_UIE zu))) in
  zs)

and zlegalizze_ustatus ((zm, zv) : (zMstatus * zxlenbits)) : zMstatus = sail_call (fun r ->
  let zu = (zMk_Ustatus zv) in
  let zs = (zlower_mstatus zm) in
  let zs = (zlift_ustatus (zs, zu)) in
  let zm = (zlift_sstatus (zm, zs)) in
  zm)

and zundefined_Uinterrupts (() : (unit)) : zUinterrupts = sail_call (fun r ->
  {zUinterrupts_chunk_0 = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

and zMk_Uinterrupts (zv : ((bit) list)) : zUinterrupts = sail_call (fun r ->
  {zUinterrupts_chunk_0 = subrange (zv, (Big_int.of_int (63)), Big_int.zero)})

and z_get_Uinterrupts_bits (zv : (zUinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zUinterrupts_chunk_0), (Big_int.of_int (63)), Big_int.zero))

and z_set_Uinterrupts_bits ((zr_ref, zv) : ((zUinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zUinterrupts) in
  begin
    zr := ({!zr with zUinterrupts_chunk_0 = update_subrange ((!zr.zUinterrupts_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zv, (Big_int.of_int (63)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Uinterrupts_bits ((zv, zx) : (zUinterrupts * (bit) list)) : zUinterrupts = sail_call (fun r ->
  let zv = ({zv with zUinterrupts_chunk_0 = update_subrange ((zv.zUinterrupts_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zx, (Big_int.of_int (63)), Big_int.zero)))}) in
  zv)

and z_get_Uinterrupts_UEI (zv : (zUinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zUinterrupts_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8))))

and z_set_Uinterrupts_UEI ((zr_ref, zv) : ((zUinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zUinterrupts) in
  begin
    zr := ({!zr with zUinterrupts_chunk_0 = update_subrange ((!zr.zUinterrupts_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Uinterrupts_UEI ((zv, zx) : (zUinterrupts * (bit) list)) : zUinterrupts = sail_call (fun r ->
  let zv = ({zv with zUinterrupts_chunk_0 = update_subrange ((zv.zUinterrupts_chunk_0), (Big_int.of_int (8)), (Big_int.of_int (8)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Uinterrupts_UTI (zv : (zUinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zUinterrupts_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4))))

and z_set_Uinterrupts_UTI ((zr_ref, zv) : ((zUinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zUinterrupts) in
  begin
    zr := ({!zr with zUinterrupts_chunk_0 = update_subrange ((!zr.zUinterrupts_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Uinterrupts_UTI ((zv, zx) : (zUinterrupts * (bit) list)) : zUinterrupts = sail_call (fun r ->
  let zv = ({zv with zUinterrupts_chunk_0 = update_subrange ((zv.zUinterrupts_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_Uinterrupts_USI (zv : (zUinterrupts)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zUinterrupts_chunk_0), Big_int.zero, Big_int.zero))

and z_set_Uinterrupts_USI ((zr_ref, zv) : ((zUinterrupts) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zUinterrupts) in
  begin
    zr := ({!zr with zUinterrupts_chunk_0 = update_subrange ((!zr.zUinterrupts_chunk_0), Big_int.zero, Big_int.zero, (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_Uinterrupts_USI ((zv, zx) : (zUinterrupts * (bit) list)) : zUinterrupts = sail_call (fun r ->
  let zv = ({zv with zUinterrupts_chunk_0 = update_subrange ((zv.zUinterrupts_chunk_0), Big_int.zero, Big_int.zero, (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and zlower_sip ((zs, zd) : (zSinterrupts * zSinterrupts)) : zUinterrupts = sail_call (fun r ->
  let zu = (zMk_Uinterrupts (zEXTZ ((Big_int.of_int (64)), [B0]))) in
  let zu = (z_update_Uinterrupts_UEI (zu, (and_vec ((z_get_Sinterrupts_UEI zs), (z_get_Sinterrupts_UEI zd))))) in
  let zu = (z_update_Uinterrupts_UTI (zu, (and_vec ((z_get_Sinterrupts_UTI zs), (z_get_Sinterrupts_UTI zd))))) in
  let zu = (z_update_Uinterrupts_USI (zu, (and_vec ((z_get_Sinterrupts_USI zs), (z_get_Sinterrupts_USI zd))))) in
  zu)

and zlower_sie ((zs, zd) : (zSinterrupts * zSinterrupts)) : zUinterrupts = sail_call (fun r ->
  let zu = (zMk_Uinterrupts (zEXTZ ((Big_int.of_int (64)), [B0]))) in
  let zu = (z_update_Uinterrupts_UEI (zu, (and_vec ((z_get_Sinterrupts_UEI zs), (z_get_Sinterrupts_UEI zd))))) in
  let zu = (z_update_Uinterrupts_UTI (zu, (and_vec ((z_get_Sinterrupts_UTI zs), (z_get_Sinterrupts_UTI zd))))) in
  let zu = (z_update_Uinterrupts_USI (zu, (and_vec ((z_get_Sinterrupts_USI zs), (z_get_Sinterrupts_USI zd))))) in
  zu)

and zlift_uip ((zo, zd, zu) : (zSinterrupts * zSinterrupts * zUinterrupts)) : zSinterrupts = sail_call (fun r ->
  let zs = zo in
  let zs = (if (eq_list ((z_get_Sinterrupts_USI zd), (zbool_to_bits true))) then (z_update_Sinterrupts_USI (zs, (z_get_Uinterrupts_USI zu))) else zs) in
  zs)

and zlegalizze_uip ((zs, zd, zv) : (zSinterrupts * zSinterrupts * zxlenbits)) : zSinterrupts = sail_call (fun r ->
  zlift_uip (zs, zd, (zMk_Uinterrupts zv)))

and zlift_uie ((zo, zd, zu) : (zSinterrupts * zSinterrupts * zUinterrupts)) : zSinterrupts = sail_call (fun r ->
  let zs = zo in
  let zs = (if (eq_list ((z_get_Sinterrupts_UEI zd), (zbool_to_bits true))) then (z_update_Sinterrupts_UEI (zs, (z_get_Uinterrupts_UEI zu))) else zs) in
  let zs = (if (eq_list ((z_get_Sinterrupts_UTI zd), (zbool_to_bits true))) then (z_update_Sinterrupts_UTI (zs, (z_get_Uinterrupts_UTI zu))) else zs) in
  let zs = (if (eq_list ((z_get_Sinterrupts_USI zd), (zbool_to_bits true))) then (z_update_Sinterrupts_USI (zs, (z_get_Uinterrupts_USI zu))) else zs) in
  zs)

and zlegalizze_uie ((zs, zd, zv) : (zSinterrupts * zSinterrupts * zxlenbits)) : zSinterrupts = sail_call (fun r ->
  zlift_uie (zs, zd, (zMk_Uinterrupts zv)))

let zuscratch : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let zucause : (zMcause) ref = ref (zundefined_Mcause ());;

let zutval : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let rec zis_UExt_CSR_defined ((zcsr, zp) : (zbits * zPrivilege)) : bool = sail_call (fun r ->
  begin
    match zcsr with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__0, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__0, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__0, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__0, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      zhaveUsrMode ()
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__1, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__1, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__1, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__1, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      zhaveUsrMode ()
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__2, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__2, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__2, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__2, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      zhaveUsrMode ()
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__3, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__3, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__3, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__3, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      zhaveUsrMode ()
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__4, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__4, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__4, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__4, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__4, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__4, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__4, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__4, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      zhaveUsrMode ()
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__5, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__5, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__5, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__5, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__5, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__5, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__5, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__5, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      zhaveUsrMode ()
    | zb__6 when (let zp0z3 = (access (zb__6, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__6, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__6, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__6, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__6, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__6, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__6, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__6, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__6, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__6, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__6, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__6, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      zhaveUsrMode ()
    | zb__7 when (let zp0z3 = (access (zb__7, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__7, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__7, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__7, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__7, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__7, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__7, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__7, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__7, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__7, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__7, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__7, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      zhaveUsrMode ()
    | _ -> false
  end)

and zread_UExt_CSR (zcsr : (zcsreg)) : (zxlenbits) zoption = sail_call (fun r ->
  let zres = (begin
    match zcsr with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__0, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__0, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__0, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__0, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZSome (z_get_Ustatus_bits (zlower_sstatus (zlower_mstatus !zmstatus)))
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__1, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__1, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__1, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__1, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZSome (z_get_Uinterrupts_bits (zlower_sie ((zlower_mie (!zmie, !zmideleg)), !zsideleg)))
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__2, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__2, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__2, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__2, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZSome (zgetCapOffsetBits !zUTCC)
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__3, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__3, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__3, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__3, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZSome !zuscratch
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__4, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__4, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__4, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__4, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__4, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__4, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__4, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__4, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZSome (and_vec ((zgetCapOffsetBits !zUEPCC), (zpc_alignment_mask ())))
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__5, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__5, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__5, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__5, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__5, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__5, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__5, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__5, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZSome (z_get_Mcause_bits !zucause)
    | zb__6 when (let zp0z3 = (access (zb__6, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__6, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__6, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__6, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__6, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__6, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__6, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__6, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__6, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__6, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__6, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__6, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZSome !zutval
    | zb__7 when (let zp0z3 = (access (zb__7, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__7, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__7, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__7, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__7, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__7, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__7, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__7, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__7, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__7, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__7, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__7, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZSome (z_get_Uinterrupts_bits (zlower_sip ((zlower_mip (!zmip, !zmideleg)), !zsideleg)))
    | _ -> ZNone ()
  end) in
  zres)

and zwrite_UExt_CSR ((zcsr, zvalue) : (zcsreg * zxlenbits)) : bool = sail_call (fun r ->
  let zres = (begin
    match zcsr with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__0, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__0, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__0, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__0, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        zmstatus := (zlegalizze_ustatus (!zmstatus, zvalue));
        ZSome (z_get_Mstatus_bits !zmstatus)
      end
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__1, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__1, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__1, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__1, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zsie = (zlegalizze_uie ((zlower_mie (!zmie, !zmideleg)), !zsideleg, zvalue)) in
      begin
        zmie := (zlift_sie (!zmie, !zmideleg, zsie));
        ZSome (z_get_Minterrupts_bits !zmie)
      end
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__2, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__2, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__2, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__2, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zutvec = (zlegalizze_tvec ((zMk_Mtvec (zgetCapOffsetBits !zUTCC)), zvalue)) in
      begin
        zUTCC := (zsetCapOffsetOrNull (!zUTCC, (z_get_Mtvec_bits zutvec)));
        ZSome (z_get_Mtvec_bits zutvec)
      end
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__3, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__3, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__3, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__3, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin zuscratch := zvalue; ZSome !zuscratch end
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__4, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__4, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__4, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__4, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__4, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__4, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__4, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__4, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zuepc = (zlegalizze_xepc zvalue) in
      begin zUEPCC := (zsetCapOffsetOrNull (!zUEPCC, zuepc)); ZSome zuepc end
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__5, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__5, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__5, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__5, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__5, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__5, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__5, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__5, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        z_set_Mcause_bits (zucause, zvalue);
        ZSome (z_get_Mcause_bits !zucause)
      end
    | zb__6 when (let zp0z3 = (access (zb__6, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__6, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__6, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__6, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__6, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__6, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__6, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__6, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__6, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__6, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__6, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__6, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin zutval := zvalue; ZSome !zutval end
    | zb__7 when (let zp0z3 = (access (zb__7, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__7, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__7, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__7, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__7, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__7, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__7, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__7, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__7, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__7, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__7, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__7, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zsip = (zlegalizze_uip ((zlower_mip (!zmip, !zmideleg)), !zsideleg, zvalue)) in
      begin
        zmip := (zlift_sip (!zmip, !zmideleg, zsip));
        ZSome (z_get_Minterrupts_bits !zmip)
      end
    | _ -> ZNone ()
  end) in
  begin
    match zres with
    | ZSome (zv) ->
      begin
        Platform.print_reg (concat_str ("CSR ", (concat_str ((zcsr_name zcsr), (concat_str (" <- ", (concat_str ((string_of_bits zv), (concat_str (" (input: ", (concat_str ((string_of_bits zvalue), ")"))))))))))));
        true
      end
    | ZNone (()) -> false
  end)

and zcsrAccess (zcsr : (zcsreg)) : zcsrRW = sail_call (fun r ->
  subrange (zcsr, (Big_int.of_int (11)), (Big_int.of_int (10))))

and zcsrPriv (zcsr : (zcsreg)) : zpriv_level = sail_call (fun r ->
  subrange (zcsr, (Big_int.of_int (9)), (Big_int.of_int (8))))

and zis_CSR_defined ((zcsr, zp) : (zbits * zPrivilege)) : bool = sail_call (fun r ->
  begin
    match zcsr with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__0, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__0, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__0, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__0, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__1, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__1, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__1, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__1, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__2, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__2, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__2, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__2, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__3, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__3, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__3, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__3, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__4, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__4, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__4, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__4, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__4, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__4, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__4, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__4, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__5, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__5, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__5, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__5, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__5, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__5, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__5, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__5, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__6 when (let zp0z3 = (access (zb__6, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__6, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__6, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__6, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__6, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__6, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__6, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__6, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__6, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__6, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__6, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__6, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__7 when (let zp0z3 = (access (zb__7, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__7, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__7, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__7, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__7, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__7, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__7, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__7, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__7, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__7, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__7, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__7, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__8 when (let zp0z3 = (access (zb__8, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__8, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__8, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__8, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__8, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__8, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__8, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__8, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__8, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__8, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__8, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__8, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__9 when (let zp0z3 = (access (zb__9, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__9, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__9, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__9, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__9, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__9, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__9, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__9, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__9, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__9, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__9, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__9, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__10 when (let zp0z3 = (access (zb__10, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__10, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__10, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__10, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__10, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__10, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__10, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__10, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__10, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__10, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__10, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__10, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__11 when (let zp0z3 = (access (zb__11, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__11, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__11, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__11, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__11, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__11, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__11, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__11, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__11, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__11, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__11, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__11, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__12 when (let zp0z3 = (access (zb__12, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__12, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__12, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__12, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__12, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__12, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__12, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__12, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__12, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__12, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__12, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__12, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__13 when (let zp0z3 = (access (zb__13, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__13, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__13, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__13, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__13, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__13, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__13, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__13, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__13, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__13, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__13, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__13, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__14 when (let zp0z3 = (access (zb__14, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__14, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__14, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__14, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__14, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__14, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__14, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__14, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__14, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__14, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__14, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__14, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__15 when (let zp0z3 = (access (zb__15, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__15, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__15, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__15, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__15, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__15, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__15, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__15, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__15, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__15, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__15, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__15, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__16 when (let zp0z3 = (access (zb__16, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__16, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__16, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__16, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__16, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__16, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__16, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__16, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__16, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__16, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__16, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__16, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | zb__17 when (let zp0z3 = (access (zb__17, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__17, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__17, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__17, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__17, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__17, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__17, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__17, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__17, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__17, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__17, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__17, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      false
    | zb__18 when (let zp0z3 = (access (zb__18, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__18, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__18, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__18, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__18, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__18, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__18, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__18, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__18, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__18, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__18, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__18, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      (zhaveSupMode ()) && ((eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))) || (eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZSupervisor))))
    | zb__19 when (let zp0z3 = (access (zb__19, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__19, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__19, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__19, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__19, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__19, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__19, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__19, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__19, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__19, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__19, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__19, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      (zhaveSupMode ()) && ((eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))) || (eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZSupervisor))))
    | zb__20 when (let zp0z3 = (access (zb__20, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__20, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__20, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__20, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__20, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__20, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__20, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__20, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__20, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__20, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__20, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__20, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      (zhaveSupMode ()) && ((eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))) || (eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZSupervisor))))
    | zb__21 when (let zp0z3 = (access (zb__21, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__21, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__21, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__21, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__21, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__21, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__21, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__21, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__21, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__21, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__21, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__21, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      (zhaveSupMode ()) && ((eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))) || (eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZSupervisor))))
    | zb__22 when (let zp0z3 = (access (zb__22, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__22, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__22, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__22, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__22, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__22, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__22, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__22, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__22, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__22, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__22, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__22, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      (zhaveSupMode ()) && ((eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))) || (eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZSupervisor))))
    | zb__23 when (let zp0z3 = (access (zb__23, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__23, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__23, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__23, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__23, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__23, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__23, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__23, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__23, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__23, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__23, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__23, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      (zhaveSupMode ()) && ((eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))) || (eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZSupervisor))))
    | zb__24 when (let zp0z3 = (access (zb__24, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__24, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__24, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__24, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__24, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__24, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__24, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__24, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__24, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__24, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__24, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__24, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      (zhaveSupMode ()) && ((eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))) || (eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZSupervisor))))
    | zb__25 when (let zp0z3 = (access (zb__25, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__25, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__25, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__25, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__25, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__25, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__25, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__25, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__25, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__25, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__25, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__25, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      (zhaveSupMode ()) && ((eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))) || (eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZSupervisor))))
    | zb__26 when (let zp0z3 = (access (zb__26, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__26, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__26, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__26, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__26, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__26, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__26, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__26, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__26, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__26, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__26, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__26, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      (zhaveSupMode ()) && ((eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))) || (eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZSupervisor))))
    | zb__27 when (let zp0z3 = (access (zb__27, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__27, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__27, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__27, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__27, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__27, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__27, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__27, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__27, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__27, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__27, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__27, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      (zhaveSupMode ()) && ((eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))) || (eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZSupervisor))))
    | zb__28 when (let zp0z3 = (access (zb__28, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__28, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__28, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__28, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__28, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__28, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__28, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__28, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__28, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__28, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__28, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__28, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      (zhaveSupMode ()) && ((eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))) || (eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZSupervisor))))
    | zb__29 when (let zp0z3 = (access (zb__29, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__29, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__29, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__29, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__29, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__29, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__29, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__29, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__29, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__29, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__29, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__29, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      (zhaveSupMode ()) && ((eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))) || (eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZSupervisor))))
    | zb__30 when (let zp0z3 = (access (zb__30, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__30, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__30, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__30, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__30, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__30, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__30, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__30, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__30, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__30, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__30, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__30, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZMachine))
    | _ -> zis_UExt_CSR_defined (zcsr, zp)
  end)

and zcheck_CSR_access ((zcsrrw, zcsrpr, zp, zisWrite) : ((bit) list * (bit) list * zPrivilege * bool)) : bool = sail_call (fun r ->
  (not ((eq_bool (zisWrite, true)) && (eq_list (zcsrrw, [B1; B1])))) && (zz8operatorz0zKzJ_uz9 ((zprivLevel_to_bits zp), zcsrpr)))

and zcheck_TVM_SATP ((zcsr, zp) : (zcsreg * zPrivilege)) : bool = sail_call (fun r ->
  not ((eq_list (zcsr, [B0; B0; B0; B1; B1; B0; B0; B0; B0; B0; B0; B0])) && ((eq_list ((zprivLevel_to_bits zp), (zprivLevel_to_bits ZSupervisor))) && (eq_list ((z_get_Mstatus_TVM !zmstatus), (zbool_to_bits true))))))

and zcheck_Counteren ((zcsr, zp) : (zcsreg * zPrivilege)) : bool = sail_call (fun r ->
  begin
    match (zcsr, zp) with
    | (zb__0, ZSupervisor) when (let zp0z3 = (access (zb__0, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__0, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__0, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__0, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__0, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      eq_list ((z_get_Counteren_CY !zmcounteren), (zbool_to_bits true))
    | (zb__1, ZSupervisor) when (let zp0z3 = (access (zb__1, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__1, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__1, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__1, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__1, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      eq_list ((z_get_Counteren_TM !zmcounteren), (zbool_to_bits true))
    | (zb__2, ZSupervisor) when (let zp0z3 = (access (zb__2, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__2, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__2, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__2, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__2, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      eq_list ((z_get_Counteren_IR !zmcounteren), (zbool_to_bits true))
    | (zb__3, ZUser) when (let zp0z3 = (access (zb__3, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__3, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__3, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__3, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__3, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      eq_list ((z_get_Counteren_CY !zscounteren), (zbool_to_bits true))
    | (zb__4, ZUser) when (let zp0z3 = (access (zb__4, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__4, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__4, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__4, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__4, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__4, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__4, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__4, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__4, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      eq_list ((z_get_Counteren_TM !zscounteren), (zbool_to_bits true))
    | (zb__5, ZUser) when (let zp0z3 = (access (zb__5, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__5, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__5, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__5, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__5, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__5, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__5, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__5, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__5, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      eq_list ((z_get_Counteren_IR !zscounteren), (zbool_to_bits true))
    | (_, _) ->
      if ((zz8operatorz0zIzJ_uz9 ([B1; B1; B0; B0; B0; B0; B0; B0; B0; B0; B1; B1], zcsr)) && (zz8operatorz0zIzJ_uz9 (zcsr, [B1; B1; B0; B0; B0; B0; B0; B1; B1; B1; B1; B1]))) then false else true
  end)

and zcheck_CSR ((zcsr, zp, zisWrite) : (zcsreg * zPrivilege * bool)) : bool = sail_call (fun r ->
  (zis_CSR_defined (zcsr, zp)) && ((zcheck_CSR_access ((zcsrAccess zcsr), (zcsrPriv zcsr), zp, zisWrite)) && ((zcheck_TVM_SATP (zcsr, zp)) && (zcheck_Counteren (zcsr, zp)))))

and zexception_delegatee ((ze, zp) : (zExceptionType * zPrivilege)) : zPrivilege = sail_call (fun r ->
  let zidx = (znum_of_ExceptionType ze) in
  let zsuper = (access ((z_get_Medeleg_bits !zmedeleg), zidx)) in
  let zuser = (if (zhaveSupMode ()) then ((zbit_to_bool zsuper) && ((zhaveNExt ()) && (zbit_to_bool (access ((z_get_Sedeleg_bits !zsedeleg), zidx))))) else ((zbit_to_bool zsuper) && (zhaveNExt ()))) in
  let zdeleg = (if ((zhaveUsrMode ()) && zuser) then ZUser else (if ((zhaveSupMode ()) && (zbit_to_bool zsuper)) then ZSupervisor else ZMachine)) in
  if (zz8operatorz0zI_uz9 ((zprivLevel_to_bits zdeleg), (zprivLevel_to_bits zp))) then zp else zdeleg)

and zfindPendingInterrupt (zip : (zxlenbits)) : (zInterruptType) zoption = sail_call (fun r ->
  let zip = (zMk_Minterrupts zip) in
  if (eq_list ((z_get_Minterrupts_MEI zip), (zbool_to_bits true))) then (ZSome ZI_M_External) else (if (eq_list ((z_get_Minterrupts_MSI zip), (zbool_to_bits true))) then (ZSome ZI_M_Software) else (if (eq_list ((z_get_Minterrupts_MTI zip), (zbool_to_bits true))) then (ZSome ZI_M_Timer) else (if (eq_list ((z_get_Minterrupts_SEI zip), (zbool_to_bits true))) then (ZSome ZI_S_External) else (if (eq_list ((z_get_Minterrupts_SSI zip), (zbool_to_bits true))) then (ZSome ZI_S_Software) else (if (eq_list ((z_get_Minterrupts_STI zip), (zbool_to_bits true))) then (ZSome ZI_S_Timer) else (if (eq_list ((z_get_Minterrupts_UEI zip), (zbool_to_bits true))) then (ZSome ZI_U_External) else (if (eq_list ((z_get_Minterrupts_USI zip), (zbool_to_bits true))) then (ZSome ZI_U_Software) else (if (eq_list ((z_get_Minterrupts_UTI zip), (zbool_to_bits true))) then (ZSome ZI_U_Timer) else (ZNone ()))))))))))

type  zinterrupt_set =
  | ZInts_Pending of zxlenbits
  | ZInts_Delegated of zxlenbits
  | ZInts_Empty of unit;;

let string_of_zinterrupt_set _ = "VARIANT";;

let rec zundefined_interrupt_set (() : (unit)) : zinterrupt_set = sail_call (fun r ->
  let zu_0 = (undefined_unit ()) in
  let zu_1 = (undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))) in
  internal_pick [ZInts_Pending zu_1; ZInts_Delegated zu_1; ZInts_Empty zu_0])

and zprocessPending ((zxip, zxie, zxideleg, zpriv_enabled) : (zMinterrupts * zMinterrupts * zxlenbits * bool)) : zinterrupt_set = sail_call (fun r ->
  let zeffective_pend = (and_vec ((z_get_Minterrupts_bits zxip), (and_vec ((z_get_Minterrupts_bits zxie), (not_vec zxideleg))))) in
  let zeffective_delg = (and_vec ((z_get_Minterrupts_bits zxip), zxideleg)) in
  if (zpriv_enabled && (zneq_vec (zeffective_pend, (zEXTZ ((Big_int.of_int (64)), [B0]))))) then (ZInts_Pending zeffective_pend) else (if (zneq_vec (zeffective_delg, (zEXTZ ((Big_int.of_int (64)), [B0])))) then (ZInts_Delegated zeffective_delg) else (ZInts_Empty ())))

and zgetPendingSet (zpriv : (zPrivilege)) : ((zxlenbits * zPrivilege)) zoption = sail_call (fun r ->
  let zeffective_pending = (and_vec ((z_get_Minterrupts_bits !zmip), (z_get_Minterrupts_bits !zmie))) in
  if (eq_list (zeffective_pending, (zEXTZ ((Big_int.of_int (64)), [B0])))) then (ZNone ()) else (let zmIE = ((zneq_vec ((zprivLevel_to_bits zpriv), (zprivLevel_to_bits ZMachine))) || ((eq_list ((zprivLevel_to_bits zpriv), (zprivLevel_to_bits ZMachine))) && (eq_list ((z_get_Mstatus_MIE !zmstatus), (zbool_to_bits true))))) in
  let zsIE = ((zhaveSupMode ()) && ((eq_list ((zprivLevel_to_bits zpriv), (zprivLevel_to_bits ZUser))) || ((eq_list ((zprivLevel_to_bits zpriv), (zprivLevel_to_bits ZSupervisor))) && (eq_list ((z_get_Mstatus_SIE !zmstatus), (zbool_to_bits true)))))) in
  let zuIE = ((zhaveNExt ()) && ((eq_list ((zprivLevel_to_bits zpriv), (zprivLevel_to_bits ZUser))) && (eq_list ((z_get_Mstatus_UIE !zmstatus), (zbool_to_bits true))))) in
  begin
    match (zprocessPending (!zmip, !zmie, (z_get_Minterrupts_bits !zmideleg), zmIE)) with
    | ZInts_Empty (()) -> ZNone ()
    | ZInts_Pending (zp) -> let zr = (zp, ZMachine) in ZSome zr
    | ZInts_Delegated (zd) ->
      if (not (zhaveSupMode ())) then (if zuIE then (let zr = (zd, ZUser) in
      ZSome zr) else (ZNone ())) else (begin
        match (zprocessPending ((zMk_Minterrupts zd), !zmie, (z_get_Sinterrupts_bits !zsideleg), zsIE)) with
        | ZInts_Empty (()) -> ZNone ()
        | ZInts_Pending (zp) -> let zr = (zp, ZSupervisor) in ZSome zr
        | ZInts_Delegated (zd) ->
          if zuIE then (let zr = (zd, ZUser) in ZSome zr) else (ZNone ())
      end)
  end))

and zdispatchInterrupt (zpriv : (zPrivilege)) : ((zInterruptType * zPrivilege)) zoption = sail_call (fun r ->
  if ((not (zhaveUsrMode ())) || ((not (zhaveSupMode ())) && (not (zhaveNExt ())))) then (let zenabled_pending = (and_vec ((z_get_Minterrupts_bits !zmip), (z_get_Minterrupts_bits !zmie))) in
  begin
    match (zfindPendingInterrupt zenabled_pending) with
    | ZSome (zi) -> let zr = (zi, ZMachine) in ZSome zr
    | ZNone (()) -> ZNone ()
  end) else (begin
    match (zgetPendingSet zpriv) with
    | ZNone (()) -> ZNone ()
    | ZSome (zip, zp) ->
      begin
        match (zfindPendingInterrupt zip) with
        | ZNone (()) -> ZNone ()
        | ZSome (zi) -> let zr = (zi, zp) in ZSome zr
      end
  end))

type  zcheri_cause = { zcap_idx : zbits; zcapEx : zCapEx
};;

let string_of_zcheri_cause (gs4077 : zcheri_cause) =
  "{cap_idx = " ^ string_of_zbits gs4077.zcap_idx
  ^ ", capEx = " ^ string_of_zCapEx gs4077.zcapEx ^ "}";;

let rec zundefined_cheri_cause (() : (unit)) : zcheri_cause = sail_call (fun r ->
  {zcap_idx = undefined_vector ((Big_int.of_int (6)), (undefined_bit ()));
  zcapEx = zundefined_CapEx ()})

type  zsync_exception = {
  ztrap : zExceptionType;
  zexcinfo : (zxlenbits) zoption;
  zccause : (zcheri_cause) zoption
};;

let string_of_zsync_exception (gs4082 : zsync_exception) =
  "{trap = " ^ string_of_zExceptionType gs4082.ztrap
  ^ ", excinfo = " ^ "APP"
  ^ ", ccause = " ^ "APP" ^ "}";;

let rec zundefined_sync_exception (() : (unit)) : zsync_exception = sail_call (fun r ->
  {ztrap = zundefined_ExceptionType ();
  zexcinfo = zundefined_option (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
  zccause = zundefined_option (zundefined_cheri_cause ())})

and ztval (zexcinfo : ((zxlenbits) zoption)) : zxlenbits = sail_call (fun r ->
  begin
    match zexcinfo with
    | ZSome (ze) -> ze
    | ZNone (()) -> zEXTZ ((Big_int.of_int (64)), [B0])
  end)

type  zctl_result =
  | ZCTL_TRAP of zsync_exception
  | ZCTL_SRET of unit
  | ZCTL_MRET of unit
  | ZCTL_URET of unit;;

let string_of_zctl_result _ = "VARIANT";;

let rec zundefined_ctl_result (() : (unit)) : zctl_result = sail_call (fun r ->
  let zu_0 = (zundefined_sync_exception ()) in
  let zu_1 = (undefined_unit ()) in
  internal_pick [ZCTL_TRAP zu_0; ZCTL_SRET zu_1; ZCTL_MRET zu_1; ZCTL_URET zu_1])

and zrvfi_trap (() : (unit)) : unit = sail_call (fun r -> ())

and zhandle_trap ((zdel_priv, zintr, zc, zpc, zinfo, zccause) : (zPrivilege * bool * zexc_code * zxlenbits * (zxlenbits) zoption * (zcheri_cause) zoption)) : zxlenbits = sail_call (fun r ->
  begin
    zrvfi_trap ();
    Platform.print_platform (concat_str ("handling ", (concat_str ((if zintr then "int#" else "exc#"), (concat_str ((string_of_bits zc), (concat_str (" at priv ", (concat_str ((zprivLevel_to_str zdel_priv), (concat_str (" with tval ", (string_of_bits (ztval zinfo))))))))))))));
    Platform.cancel_reservation ();
    begin
      match zdel_priv with
      | ZMachine ->
        begin
          z_set_Mcause_IsInterrupt (zmcause, (zbool_to_bits zintr));
          z_set_Mcause_Cause (zmcause, (zEXTZ ((Big_int.of_int (63)), zc)));
          z_set_Mstatus_MPIE (zmstatus, (z_get_Mstatus_MIE !zmstatus));
          z_set_Mstatus_MIE (zmstatus, (zbool_to_bits false));
          z_set_Mstatus_MPP (zmstatus, (zprivLevel_to_bits !zcur_privilege));
          zmtval := (ztval zinfo);
          begin
            match zccause with
            | ZSome (zc) ->
              begin
                z_set_ccsr_cap_idx (zmccsr, (zc.zcap_idx));
                z_set_ccsr_cause (zmccsr, (zCapExCode (zc.zcapEx)))
              end
            | _ -> ()
          end;
          let (zrepresentable, zmepcc) = (zsetCapOffset (!zPCC, zpc)) in
          begin
            assert zrepresentable;
            zMEPCC := zmepcc;
            zcur_privilege := zdel_priv;
            Platform.print_reg (concat_str ("CSR mstatus <- ", (string_of_bits (z_get_Mstatus_bits !zmstatus))));
            znextPCC := !zMTCC;
            begin
              match (ztvec_addr ((zMk_Mtvec (zgetCapOffsetBits !zMTCC)), !zmcause)) with
              | ZSome (zepc) -> zepc
              | ZNone (()) -> zinternal_error "Invalid mtvec mode"
            end
          end
        end
      | ZSupervisor ->
        begin
          z_set_Mcause_IsInterrupt (zscause, (zbool_to_bits zintr));
          z_set_Mcause_Cause (zscause, (zEXTZ ((Big_int.of_int (63)), zc)));
          z_set_Mstatus_SPIE (zmstatus, (z_get_Mstatus_SIE !zmstatus));
          z_set_Mstatus_SIE (zmstatus, (zbool_to_bits false));
          z_set_Mstatus_SPP (zmstatus, (begin
            match !zcur_privilege with
            | ZUser -> zbool_to_bits false
            | ZSupervisor -> zbool_to_bits true
            | ZMachine -> zinternal_error "invalid privilege for s-mode trap"
          end));
          zstval := (ztval zinfo);
          begin
            match zccause with
            | ZSome (zc) ->
              begin
                z_set_ccsr_cap_idx (zsccsr, (zc.zcap_idx));
                z_set_ccsr_cause (zsccsr, (zCapExCode (zc.zcapEx)))
              end
            | _ -> ()
          end;
          let (zrepresentable, zsepcc) = (zsetCapOffset (!zPCC, zpc)) in
          begin
            assert zrepresentable;
            zSEPCC := zsepcc;
            zcur_privilege := zdel_priv;
            Platform.print_reg (concat_str ("CSR mstatus <- ", (string_of_bits (z_get_Mstatus_bits !zmstatus))));
            znextPCC := !zSTCC;
            begin
              match (ztvec_addr ((zMk_Mtvec (zgetCapOffsetBits !zSTCC)), !zscause)) with
              | ZSome (zepc) -> zepc
              | ZNone (()) -> zinternal_error "Invalid stvec mode"
            end
          end
        end
      | ZUser ->
        begin
          z_set_Mcause_IsInterrupt (zucause, (zbool_to_bits zintr));
          z_set_Mcause_Cause (zucause, (zEXTZ ((Big_int.of_int (63)), zc)));
          z_set_Mstatus_UPIE (zmstatus, (z_get_Mstatus_UIE !zmstatus));
          z_set_Mstatus_UIE (zmstatus, (zbool_to_bits false));
          zutval := (ztval zinfo);
          begin
            match zccause with
            | ZSome (zc) ->
              begin
                z_set_ccsr_cap_idx (zuccsr, (zc.zcap_idx));
                z_set_ccsr_cause (zuccsr, (zCapExCode (zc.zcapEx)))
              end
            | _ -> ()
          end;
          let (zrepresentable, zuepcc) = (zsetCapOffset (!zPCC, zpc)) in
          begin
            assert zrepresentable;
            zUEPCC := zuepcc;
            zcur_privilege := zdel_priv;
            Platform.print_reg (concat_str ("CSR mstatus <- ", (string_of_bits (z_get_Mstatus_bits !zmstatus))));
            znextPCC := !zUTCC;
            begin
              match (ztvec_addr ((zMk_Mtvec (zgetCapOffsetBits !zUTCC)), !zucause)) with
              | ZSome (zepc) -> zepc
              | ZNone (()) -> zinternal_error "Invalid utvec mode"
            end
          end
        end
    end
  end)

and zhandle_exception ((zcur_priv, zctl, zpc) : (zPrivilege * zctl_result * zxlenbits)) : zxlenbits = sail_call (fun r ->
  begin
    match (zcur_priv, zctl) with
    | (_, ZCTL_TRAP (ze)) ->
      let zdel_priv = (zexception_delegatee ((ze.ztrap), zcur_priv)) in
      begin
        Platform.print_platform (concat_str ("trapping from ", (concat_str ((zprivLevel_to_str zcur_priv), (concat_str (" to ", (concat_str ((zprivLevel_to_str zdel_priv), (concat_str (" to handle ", (zexceptionType_to_str (ze.ztrap))))))))))));
        zhandle_trap (zdel_priv, false, (zexceptionType_to_bits (ze.ztrap)), zpc, (ze.zexcinfo), (ze.zccause))
      end
    | (_, ZCTL_MRET (())) ->
      let zprev_priv = !zcur_privilege in
      begin
        z_set_Mstatus_MIE (zmstatus, (z_get_Mstatus_MPIE !zmstatus));
        z_set_Mstatus_MPIE (zmstatus, (zbool_to_bits true));
        zcur_privilege := (zprivLevel_of_bits (z_get_Mstatus_MPP !zmstatus));
        z_set_Mstatus_MPP (zmstatus, (zprivLevel_to_bits (if (zhaveUsrMode ()) then ZUser else ZMachine)));
        Platform.print_reg (concat_str ("CSR mstatus <- ", (string_of_bits (z_get_Mstatus_bits !zmstatus))));
        Platform.print_platform (concat_str ("ret-ing from ", (concat_str ((zprivLevel_to_str zprev_priv), (concat_str (" to ", (zprivLevel_to_str !zcur_privilege)))))));
        Platform.cancel_reservation ();
        and_vec ((zgetCapOffsetBits !zMEPCC), (zpc_alignment_mask ()))
      end
    | (_, ZCTL_SRET (())) ->
      let zprev_priv = !zcur_privilege in
      begin
        z_set_Mstatus_SIE (zmstatus, (z_get_Mstatus_SPIE !zmstatus));
        z_set_Mstatus_SPIE (zmstatus, (zbool_to_bits true));
        zcur_privilege := (if (eq_list ((z_get_Mstatus_SPP !zmstatus), (zbool_to_bits true))) then ZSupervisor else ZUser);
        z_set_Mstatus_SPP (zmstatus, (zbool_to_bits false));
        Platform.print_reg (concat_str ("CSR mstatus <- ", (string_of_bits (z_get_Mstatus_bits !zmstatus))));
        Platform.print_platform (concat_str ("ret-ing from ", (concat_str ((zprivLevel_to_str zprev_priv), (concat_str (" to ", (zprivLevel_to_str !zcur_privilege)))))));
        Platform.cancel_reservation ();
        and_vec ((zgetCapOffsetBits !zSEPCC), (zpc_alignment_mask ()))
      end
    | (_, ZCTL_URET (())) ->
      let zprev_priv = !zcur_privilege in
      begin
        z_set_Mstatus_UIE (zmstatus, (z_get_Mstatus_UPIE !zmstatus));
        z_set_Mstatus_UPIE (zmstatus, (zbool_to_bits true));
        zcur_privilege := ZUser;
        Platform.print_reg (concat_str ("CSR mstatus <- ", (string_of_bits (z_get_Mstatus_bits !zmstatus))));
        Platform.print_platform (concat_str ("ret-ing from ", (concat_str ((zprivLevel_to_str zprev_priv), (concat_str (" to ", (zprivLevel_to_str !zcur_privilege)))))));
        Platform.cancel_reservation ();
        and_vec ((zgetCapOffsetBits !zUEPCC), (zpc_alignment_mask ()))
      end
  end)

and zhandle_mem_exception ((zaddr, ze) : (zxlenbits * zExceptionType)) : unit = sail_call (fun r ->
  let zt = ({ztrap = ze; zexcinfo = ZSome zaddr; zccause = ZNone ()}) in
  znextPC := (zhandle_exception (!zcur_privilege, (ZCTL_TRAP zt), !zPC)))

and zhandle_interrupt ((zi, zdel_priv) : (zInterruptType * zPrivilege)) : unit = sail_call (fun r ->
  znextPC := (zhandle_trap (zdel_priv, true, (zinterruptType_to_bits zi), !zPC, (ZNone ()), (ZNone ()))))

and zinit_sys (() : (unit)) : unit = sail_call (fun r ->
  begin
    zcur_privilege := ZMachine;
    zmhartid := (zEXTZ ((Big_int.of_int (64)), [B0]));
    z_set_Misa_MXL (zmisa, (zarch_to_bits ZRV64));
    z_set_Misa_A (zmisa, (zbool_to_bits true));
    z_set_Misa_C (zmisa, (zbool_to_bits true));
    z_set_Misa_I (zmisa, (zbool_to_bits true));
    z_set_Misa_M (zmisa, (zbool_to_bits true));
    z_set_Misa_U (zmisa, (zbool_to_bits true));
    z_set_Misa_S (zmisa, (zbool_to_bits true));
    z_set_Mstatus_SXL (zmstatus, (z_get_Misa_MXL !zmisa));
    z_set_Mstatus_UXL (zmstatus, (z_get_Misa_MXL !zmisa));
    z_set_Mstatus_SD (zmstatus, (zbool_to_bits false));
    z_set_Minterrupts_bits (zmip, (zEXTZ ((Big_int.of_int (64)), [B0])));
    z_set_Minterrupts_bits (zmie, (zEXTZ ((Big_int.of_int (64)), [B0])));
    z_set_Minterrupts_bits (zmideleg, (zEXTZ ((Big_int.of_int (64)), [B0])));
    z_set_Medeleg_bits (zmedeleg, (zEXTZ ((Big_int.of_int (64)), [B0])));
    z_set_Mcause_bits (zmcause, (zEXTZ ((Big_int.of_int (64)), [B0])));
    zmtval := (zEXTZ ((Big_int.of_int (64)), [B0]));
    zmscratch := (zEXTZ ((Big_int.of_int (64)), [B0]));
    zmcycle := (zEXTZ ((Big_int.of_int (64)), [B0]));
    zmtime := (zEXTZ ((Big_int.of_int (64)), [B0]));
    z_set_Counteren_bits (zmcounteren, (zEXTZ ((Big_int.of_int (32)), [B0])));
    zminstret := (zEXTZ ((Big_int.of_int (64)), [B0]));
    zminstret_written := false;
    zinit_regs ();
    Platform.print_reg (concat_str ("CSR mstatus <- ", (concat_str ((string_of_bits (z_get_Mstatus_bits !zmstatus)), (concat_str (" (input: ", (concat_str ((string_of_bits (zEXTZ ((Big_int.of_int (64)), [B0]))), ")"))))))))
  end)

type 'za zMemoryOpResult = | ZMemValue of 'za | ZMemException of zExceptionType;;

let string_of_zMemoryOpResult _ = "VARIANT";;

let rec zundefined_MemoryOpResult : 'za. ('za) -> ('za) zMemoryOpResult = fun ztyp_a -> sail_call (fun r ->
  let zu_0 = (zundefined_ExceptionType ()) in
  let zu_1 = ztyp_a in
  internal_pick [ZMemValue zu_1; ZMemException zu_0])

and zphys_mem_segments (() : (unit)) : (((bit) list * (bit) list)) list = sail_call (fun r ->
  (Platform.rom_base (), Platform.rom_size ()) :: (Platform.dram_base (), Platform.dram_size ()) :: [])

and zwithin_phys_mem ((zaddr, zwidth) : (zxlenbits * Big_int.num)) : bool = sail_call (fun r ->
  let zram_base = (Platform.dram_base ()) in
  let zrom_base = (Platform.rom_base ()) in
  let zram_sizze = (Platform.dram_size ()) in
  let zrom_sizze = (Platform.rom_size ()) in
  if ((zz8operatorz0zIzJ_uz9 (zram_base, zaddr)) && (zz8operatorz0zIzJ_uz9 ((add_vec_int (zaddr, (z__id zwidth))), (add_vec (zram_base, zram_sizze))))) then true else (if ((zz8operatorz0zIzJ_uz9 (zrom_base, zaddr)) && (zz8operatorz0zIzJ_uz9 ((add_vec_int (zaddr, (z__id zwidth))), (add_vec (zrom_base, zrom_sizze))))) then true else (begin
    Platform.print_platform (concat_str ("within_phys_mem: ", (concat_str ((string_of_bits zaddr), " not within phys-mem:"))));
    Platform.print_platform (concat_str ("  plat_rom_base: ", (string_of_bits zrom_base)));
    Platform.print_platform (concat_str ("  plat_rom_size: ", (string_of_bits zrom_sizze)));
    Platform.print_platform (concat_str ("  plat_ram_base: ", (string_of_bits zram_base)));
    Platform.print_platform (concat_str ("  plat_ram_size: ", (string_of_bits zram_sizze)));
    false
  end)))

and zwithin_clint ((zaddr, zwidth) : (zxlenbits * Big_int.num)) : bool = sail_call (fun r ->
  (zz8operatorz0zIzJ_uz9 ((Platform.clint_base ()), zaddr)) && (zz8operatorz0zIzJ_uz9 ((add_vec_int (zaddr, (z__id zwidth))), (add_vec ((Platform.clint_base ()), (Platform.clint_size ()))))))

and zwithin_htif_writable ((zaddr, zwidth) : (zxlenbits * Big_int.num)) : bool = sail_call (fun r ->
  eq_list ((Platform.htif_tohost ()), zaddr))

and zwithin_htif_readable ((zaddr, zwidth) : (zxlenbits * Big_int.num)) : bool = sail_call (fun r ->
  eq_list ((Platform.htif_tohost ()), zaddr))

let zmtimecmp : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let zMSIP_BASE = [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0];;

let zMTIMECMP_BASE = [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B1; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0];;

let zMTIME_BASE = [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B1; B0; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B0; B0; B0];;

let rec zclint_load ((zaddr, zwidth) : ((bit) list * Big_int.num)) : ((bit) list) zMemoryOpResult = sail_call (fun r ->
  let zaddr = (sub_vec (zaddr, (Platform.clint_base ()))) in
  if ((eq_list (zaddr, zMSIP_BASE)) && ((eq_int ((z__id zwidth), (Big_int.of_int (8)))) || (eq_int ((z__id zwidth), (Big_int.of_int (4)))))) then (begin
    Platform.print_platform (concat_str ("clint[", (concat_str ((string_of_bits zaddr), (concat_str ("] -> ", (string_of_bits (z_get_Minterrupts_MSI !zmip))))))));
    ZMemValue (zero_extend ((z_get_Minterrupts_MSI !zmip), (mult ((Big_int.of_int (8)), (z__id zwidth)))))
  end) else (if ((eq_list (zaddr, zMTIMECMP_BASE)) && (eq_int ((z__id zwidth), (Big_int.of_int (8))))) then (begin
    Platform.print_platform (concat_str ("clint[", (concat_str ((string_of_bits zaddr), (concat_str ("] -> ", (string_of_bits !zmtimecmp)))))));
    ZMemValue (zero_extend (!zmtimecmp, (Big_int.of_int (64))))
  end) else (if ((eq_list (zaddr, zMTIME_BASE)) && (eq_int ((z__id zwidth), (Big_int.of_int (8))))) then (begin
    Platform.print_platform (concat_str ("clint[", (concat_str ((string_of_bits zaddr), (concat_str ("] -> ", (string_of_bits !zmtime)))))));
    ZMemValue (zero_extend (!zmtime, (Big_int.of_int (64))))
  end) else (begin
    Platform.print_platform (concat_str ("clint[", (concat_str ((string_of_bits zaddr), "] -> <not-mapped>"))));
    ZMemException ZE_Load_Access_Fault
  end))))

and zclint_dispatch (() : (unit)) : unit = sail_call (fun r ->
  begin
    Platform.print_platform (concat_str ("clint::tick mtime <- ", (string_of_bits !zmtime)));
    z_set_Minterrupts_MTI (zmip, (zbool_to_bits false));
    if (zz8operatorz0zIzJ_uz9 (!zmtimecmp, !zmtime)) then (begin
      Platform.print_platform (concat_str (" clint timer pending at mtime ", (string_of_bits !zmtime)));
      z_set_Minterrupts_MTI (zmip, (zbool_to_bits true))
    end) else ()
  end)

and zclint_store ((zaddr, zwidth, zdata) : ((bit) list * Big_int.num * (bit) list)) : (bool) zMemoryOpResult = sail_call (fun r ->
  let zaddr = (sub_vec (zaddr, (Platform.clint_base ()))) in
  if ((eq_list (zaddr, zMSIP_BASE)) && ((eq_int ((z__id zwidth), (Big_int.of_int (8)))) || (eq_int ((z__id zwidth), (Big_int.of_int (4)))))) then (begin
    Platform.print_platform (concat_str ("clint[", (concat_str ((string_of_bits zaddr), (concat_str ("] <- ", (concat_str ((string_of_bits zdata), (concat_str (" (mip.MSI <- ", (concat_str ((string_of_bits (zcast_unit_vec (access (zdata, Big_int.zero)))), ")"))))))))))));
    z_set_Minterrupts_MSI (zmip, (zbool_to_bits (eq_list ((zcast_unit_vec (access (zdata, Big_int.zero))), [B1]))));
    zclint_dispatch ();
    ZMemValue true
  end) else (if ((eq_list (zaddr, zMTIMECMP_BASE)) && (eq_int ((z__id zwidth), (Big_int.of_int (8))))) then (begin
    Platform.print_platform (concat_str ("clint[", (concat_str ((string_of_bits zaddr), (concat_str ("] <- ", (concat_str ((string_of_bits zdata), " (mtimecmp)"))))))));
    zmtimecmp := (zero_extend (zdata, (Big_int.of_int (64))));
    zclint_dispatch ();
    ZMemValue true
  end) else (begin
    Platform.print_platform (concat_str ("clint[", (concat_str ((string_of_bits zaddr), (concat_str ("] <- ", (concat_str ((string_of_bits zdata), " (<unmapped>)"))))))));
    ZMemException ZE_SAMO_Access_Fault
  end)))

and ztick_clock (() : (unit)) : unit = sail_call (fun r ->
  begin
    zmcycle := (add_vec_int (!zmcycle, (Big_int.of_int (1))));
    zmtime := (add_vec_int (!zmtime, (Big_int.of_int (1))));
    zclint_dispatch ()
  end)

type  zhtif_cmd = { zhtif_cmd_chunk_0 : (bit) list
};;

let string_of_zhtif_cmd (gs4206 : zhtif_cmd) =
  "{htif_cmd_chunk_0 = " ^ string_of_bits gs4206.zhtif_cmd_chunk_0 ^ "}";;

let rec zundefined_htif_cmd (() : (unit)) : zhtif_cmd = sail_call (fun r ->
  {zhtif_cmd_chunk_0 = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

and zMk_htif_cmd (zv : ((bit) list)) : zhtif_cmd = sail_call (fun r ->
  {zhtif_cmd_chunk_0 = subrange (zv, (Big_int.of_int (63)), Big_int.zero)})

and z_get_htif_cmd_bits (zv : (zhtif_cmd)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zhtif_cmd_chunk_0), (Big_int.of_int (63)), Big_int.zero))

and z_set_htif_cmd_bits ((zr_ref, zv) : ((zhtif_cmd) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zhtif_cmd) in
  begin
    zr := ({!zr with zhtif_cmd_chunk_0 = update_subrange ((!zr.zhtif_cmd_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zv, (Big_int.of_int (63)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_htif_cmd_bits ((zv, zx) : (zhtif_cmd * (bit) list)) : zhtif_cmd = sail_call (fun r ->
  let zv = ({zv with zhtif_cmd_chunk_0 = update_subrange ((zv.zhtif_cmd_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zx, (Big_int.of_int (63)), Big_int.zero)))}) in
  zv)

and z_get_htif_cmd_device (zv : (zhtif_cmd)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zhtif_cmd_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (56))))

and z_set_htif_cmd_device ((zr_ref, zv) : ((zhtif_cmd) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zhtif_cmd) in
  begin
    zr := ({!zr with zhtif_cmd_chunk_0 = update_subrange ((!zr.zhtif_cmd_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (56)), (subrange (zv, (Big_int.of_int (7)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_htif_cmd_device ((zv, zx) : (zhtif_cmd * (bit) list)) : zhtif_cmd = sail_call (fun r ->
  let zv = ({zv with zhtif_cmd_chunk_0 = update_subrange ((zv.zhtif_cmd_chunk_0), (Big_int.of_int (63)), (Big_int.of_int (56)), (subrange (zx, (Big_int.of_int (7)), Big_int.zero)))}) in
  zv)

and z_get_htif_cmd_cmd (zv : (zhtif_cmd)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zhtif_cmd_chunk_0), (Big_int.of_int (55)), (Big_int.of_int (48))))

and z_set_htif_cmd_cmd ((zr_ref, zv) : ((zhtif_cmd) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zhtif_cmd) in
  begin
    zr := ({!zr with zhtif_cmd_chunk_0 = update_subrange ((!zr.zhtif_cmd_chunk_0), (Big_int.of_int (55)), (Big_int.of_int (48)), (subrange (zv, (Big_int.of_int (7)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_htif_cmd_cmd ((zv, zx) : (zhtif_cmd * (bit) list)) : zhtif_cmd = sail_call (fun r ->
  let zv = ({zv with zhtif_cmd_chunk_0 = update_subrange ((zv.zhtif_cmd_chunk_0), (Big_int.of_int (55)), (Big_int.of_int (48)), (subrange (zx, (Big_int.of_int (7)), Big_int.zero)))}) in
  zv)

and z_get_htif_cmd_payload (zv : (zhtif_cmd)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zhtif_cmd_chunk_0), (Big_int.of_int (47)), Big_int.zero))

and z_set_htif_cmd_payload ((zr_ref, zv) : ((zhtif_cmd) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zhtif_cmd) in
  begin
    zr := ({!zr with zhtif_cmd_chunk_0 = update_subrange ((!zr.zhtif_cmd_chunk_0), (Big_int.of_int (47)), Big_int.zero, (subrange (zv, (Big_int.of_int (47)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_htif_cmd_payload ((zv, zx) : (zhtif_cmd * (bit) list)) : zhtif_cmd = sail_call (fun r ->
  let zv = ({zv with zhtif_cmd_chunk_0 = update_subrange ((zv.zhtif_cmd_chunk_0), (Big_int.of_int (47)), Big_int.zero, (subrange (zx, (Big_int.of_int (47)), Big_int.zero)))}) in
  zv)

let zhtif_tohost : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let zhtif_done : (bool) ref = ref (undefined_bool ());;

let zhtif_exit_code : (zxlenbits) ref = ref (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));;

let rec zhtif_load ((zaddr, zwidth) : ((bit) list * Big_int.num)) : ((bit) list) zMemoryOpResult = sail_call (fun r ->
  begin
    Platform.print_platform (concat_str ("htif[", (concat_str ((string_of_bits zaddr), (concat_str ("] -> ", (string_of_bits !zhtif_tohost)))))));
    if (eq_int (zwidth, (Big_int.of_int (8)))) then (ZMemValue (zero_extend (!zhtif_tohost, (Big_int.of_int (64))))) else (ZMemException ZE_Load_Access_Fault)
  end)

and zhtif_store ((zaddr, zwidth, zdata) : ((bit) list * Big_int.num * (bit) list)) : (bool) zMemoryOpResult = sail_call (fun r ->
  begin
    Platform.print_platform (concat_str ("htif[", (concat_str ((string_of_bits zaddr), (concat_str ("] <- ", (string_of_bits zdata)))))));
    let zcbits = (zEXTZ ((Big_int.of_int (64)), zdata)) in
    begin
      zhtif_tohost := zcbits;
      let zcmd = (zMk_htif_cmd zcbits) in
      begin
        begin
          match (z_get_htif_cmd_device zcmd) with
          | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (7)))) in
          let zp1z3 = (access (zb__0, (Big_int.of_int (6)))) in
          let zp2z3 = (access (zb__0, (Big_int.of_int (5)))) in
          let zp3z3 = (access (zb__0, (Big_int.of_int (4)))) in
          let zp4z3 = (access (zb__0, (Big_int.of_int (3)))) in
          let zp5z3 = (access (zb__0, (Big_int.of_int (2)))) in
          let zp6z3 = (access (zb__0, (Big_int.of_int (1)))) in
          let zp7z3 = (access (zb__0, Big_int.zero)) in
          (((((((eq_bit (zp7z3, B0)) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
            begin
              Platform.print_platform (concat_str ("htif-syscall-proxy cmd: ", (string_of_bits (z_get_htif_cmd_payload zcmd))));
              if (eq_list ((zcast_unit_vec (access ((z_get_htif_cmd_payload zcmd), Big_int.zero))), [B1])) then (begin
                zhtif_done := true;
                zhtif_exit_code := (shiftr ((zero_extend ((z_get_htif_cmd_payload zcmd), zxlen)), (Big_int.of_int (1))))
              end) else ()
            end
          | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (7)))) in
          let zp1z3 = (access (zb__1, (Big_int.of_int (6)))) in
          let zp2z3 = (access (zb__1, (Big_int.of_int (5)))) in
          let zp3z3 = (access (zb__1, (Big_int.of_int (4)))) in
          let zp4z3 = (access (zb__1, (Big_int.of_int (3)))) in
          let zp5z3 = (access (zb__1, (Big_int.of_int (2)))) in
          let zp6z3 = (access (zb__1, (Big_int.of_int (1)))) in
          let zp7z3 = (access (zb__1, Big_int.zero)) in
          (((((((eq_bit (zp7z3, B1)) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
            let zp0z3 = (access (zb__1, (Big_int.of_int (7)))) in
            let zp1z3 = (access (zb__1, (Big_int.of_int (6)))) in
            let zp2z3 = (access (zb__1, (Big_int.of_int (5)))) in
            let zp3z3 = (access (zb__1, (Big_int.of_int (4)))) in
            let zp4z3 = (access (zb__1, (Big_int.of_int (3)))) in
            let zp5z3 = (access (zb__1, (Big_int.of_int (2)))) in
            let zp6z3 = (access (zb__1, (Big_int.of_int (1)))) in
            let zp7z3 = (access (zb__1, Big_int.zero)) in
            begin
              Platform.print_platform (concat_str ("htif-term cmd: ", (string_of_bits (z_get_htif_cmd_payload zcmd))));
              begin
                match (z_get_htif_cmd_cmd zcmd) with
                | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (7)))) in
                let zp1z3 = (access (zb__2, (Big_int.of_int (6)))) in
                let zp2z3 = (access (zb__2, (Big_int.of_int (5)))) in
                let zp3z3 = (access (zb__2, (Big_int.of_int (4)))) in
                let zp4z3 = (access (zb__2, (Big_int.of_int (3)))) in
                let zp5z3 = (access (zb__2, (Big_int.of_int (2)))) in
                let zp6z3 = (access (zb__2, (Big_int.of_int (1)))) in
                let zp7z3 = (access (zb__2, Big_int.zero)) in
                (((((((eq_bit (zp7z3, B0)) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
                  ()
                | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (7)))) in
                let zp1z3 = (access (zb__3, (Big_int.of_int (6)))) in
                let zp2z3 = (access (zb__3, (Big_int.of_int (5)))) in
                let zp3z3 = (access (zb__3, (Big_int.of_int (4)))) in
                let zp4z3 = (access (zb__3, (Big_int.of_int (3)))) in
                let zp5z3 = (access (zb__3, (Big_int.of_int (2)))) in
                let zp6z3 = (access (zb__3, (Big_int.of_int (1)))) in
                let zp7z3 = (access (zb__3, Big_int.zero)) in
                (((((((eq_bit (zp7z3, B1)) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
                  Platform.term_write (subrange ((z_get_htif_cmd_payload zcmd), (Big_int.of_int (7)), Big_int.zero))
                | zc ->
                  print_endline (concat_str ("Unknown term cmd: ", (string_of_bits zc)))
              end
            end
          | zd ->
            print_endline (concat_str ("htif-???? cmd: ", (string_of_bits zdata)))
        end;
        ZMemValue true
      end
    end
  end)

and zhtif_tick (() : (unit)) : unit = sail_call (fun r ->
  begin
    Platform.print_platform (concat_str ("htif::tick ", (string_of_bits !zhtif_tohost)));
    zhtif_tohost := (zEXTZ ((Big_int.of_int (64)), [B0]))
  end)

and zwithin_mmio_readable ((zaddr, zwidth) : (zxlenbits * Big_int.num)) : bool = sail_call (fun r ->
  (zwithin_clint (zaddr, zwidth)) || ((zwithin_htif_readable (zaddr, zwidth)) && (lteq ((Big_int.of_int (1)), (z__id zwidth)))))

and zwithin_mmio_writable ((zaddr, zwidth) : (zxlenbits * Big_int.num)) : bool = sail_call (fun r ->
  (zwithin_clint (zaddr, zwidth)) || ((zwithin_htif_writable (zaddr, zwidth)) && (lteq ((z__id zwidth), (Big_int.of_int (8))))))

and zmmio_read ((zaddr, zwidth) : (zxlenbits * Big_int.num)) : (zbits) zMemoryOpResult = sail_call (fun r ->
  if (zwithin_clint (zaddr, zwidth)) then (zclint_load (zaddr, zwidth)) else (if ((zwithin_htif_readable (zaddr, zwidth)) && (lteq ((Big_int.of_int (1)), (z__id zwidth)))) then (zhtif_load (zaddr, zwidth)) else (ZMemException ZE_Load_Access_Fault)))

and zmmio_write ((zaddr, zwidth, zdata) : (zxlenbits * Big_int.num * zbits)) : (bool) zMemoryOpResult = sail_call (fun r ->
  if (zwithin_clint (zaddr, zwidth)) then (zclint_store (zaddr, zwidth, zdata)) else (if ((zwithin_htif_writable (zaddr, zwidth)) && (lteq ((z__id zwidth), (Big_int.of_int (8))))) then (zhtif_store (zaddr, zwidth, zdata)) else (ZMemException ZE_SAMO_Access_Fault)))

and zinit_platform (() : (unit)) : unit = sail_call (fun r ->
  begin
    zhtif_tohost := (zEXTZ ((Big_int.of_int (64)), [B0]));
    zhtif_done := false;
    zhtif_exit_code := (zEXTZ ((Big_int.of_int (64)), [B0]))
  end)

and ztick_platform (() : (unit)) : unit = sail_call (fun r -> zhtif_tick ())

and zhandle_illegal (() : (unit)) : unit = sail_call (fun r ->
  let zinfo = (if (Platform.mtval_has_illegal_inst_bits ()) then (ZSome !zinstbits) else (ZNone ())) in
  let zt = ({ztrap = ZE_Illegal_Instr; zexcinfo = zinfo; zccause = ZNone ()}) in
  znextPC := (zhandle_exception (!zcur_privilege, (ZCTL_TRAP zt), !zPC)))

and zplatform_wfi (() : (unit)) : unit = sail_call (fun r ->
  begin
    Platform.cancel_reservation ();
    if (zz8operatorz0zI_uz9 (!zmtime, !zmtimecmp)) then (begin
      zmtime := !zmtimecmp;
      zmcycle := !zmtimecmp
    end) else ()
  end)

and zis_aligned_addr ((zaddr, zwidth) : (zxlenbits * Big_int.num)) : bool = sail_call (fun r ->
  eq_int ((modulus ((uint zaddr), zwidth)), Big_int.zero))

and zphys_mem_read ((zt, zaddr, zwidth, zaq, zrl, zres) : (zReadType * zxlenbits * Big_int.num * bool * bool * bool)) : (zbits) zMemoryOpResult = sail_call (fun r ->
  begin
    match (zt, z__RISCV_read (zaddr, zwidth, zaq, zrl, zres)) with
    | (ZInstruction, ZNone (())) -> ZMemException ZE_Fetch_Access_Fault
    | (ZData, ZNone (())) -> ZMemException ZE_Load_Access_Fault
    | (_, ZSome (zv)) ->
      begin
        Platform.print_mem_access (concat_str ("mem[", (concat_str ((zreadType_to_str zt), (concat_str (",", (concat_str ((string_of_bits zaddr), (concat_str ("] -> ", (string_of_bits zv)))))))))));
        ZMemValue zv
      end
  end)

and zchecked_mem_read ((zt, zaddr, zwidth, zaq, zrl, zres) : (zReadType * zxlenbits * Big_int.num * bool * bool * bool)) : (zbits) zMemoryOpResult = sail_call (fun r ->
  if ((eq_string ((zreadType_to_str zt), (zreadType_to_str ZData))) && (zwithin_mmio_readable (zaddr, zwidth))) then (zmmio_read (zaddr, zwidth)) else (if (zwithin_phys_mem (zaddr, zwidth)) then (zphys_mem_read (zt, zaddr, zwidth, zaq, zrl, zres)) else (ZMemException ZE_Load_Access_Fault)))

and zMEMr ((zaddr, zwidth) : ((bit) list * Big_int.num)) : ((bit) list) zMemoryOpResult = sail_call (fun r ->
  zchecked_mem_read (ZData, zaddr, zwidth, false, false, false))

and zMEMr_acquire ((zaddr, zwidth) : ((bit) list * Big_int.num)) : ((bit) list) zMemoryOpResult = sail_call (fun r ->
  zchecked_mem_read (ZData, zaddr, zwidth, true, false, false))

and zMEMr_strong_acquire ((zaddr, zwidth) : ((bit) list * Big_int.num)) : ((bit) list) zMemoryOpResult = sail_call (fun r ->
  zchecked_mem_read (ZData, zaddr, zwidth, true, true, false))

and zMEMr_reserved ((zaddr, zwidth) : ((bit) list * Big_int.num)) : ((bit) list) zMemoryOpResult = sail_call (fun r ->
  zchecked_mem_read (ZData, zaddr, zwidth, false, false, true))

and zMEMr_reserved_acquire ((zaddr, zwidth) : ((bit) list * Big_int.num)) : ((bit) list) zMemoryOpResult = sail_call (fun r ->
  zchecked_mem_read (ZData, zaddr, zwidth, true, false, true))

and zMEMr_reserved_strong_acquire ((zaddr, zwidth) : ((bit) list * Big_int.num)) : ((bit) list) zMemoryOpResult = sail_call (fun r ->
  zchecked_mem_read (ZData, zaddr, zwidth, true, true, true))

and zrvfi_read ((zaddr, zwidth, zvalue) : ((bit) list * Big_int.num * ((bit) list) zMemoryOpResult)) : unit = sail_call (fun r ->
  ())

and zmem_read ((zaddr, zwidth, zaq, zrl, zres) : ((bit) list * Big_int.num * bool * bool * bool)) : ((bit) list) zMemoryOpResult = sail_call (fun r ->
  let zresult = (if ((zaq || zres) && (not (zis_aligned_addr (zaddr, zwidth)))) then (ZMemException ZE_Load_Addr_Align) else (begin
    match (zaq, zrl, zres) with
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, false))) ->
      zchecked_mem_read (ZData, zaddr, zwidth, false, false, false)
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, true))) ->
      zMEMr_acquire (zaddr, zwidth)
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, false))) ->
      zMEMr_reserved (zaddr, zwidth)
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, true))) ->
      zMEMr_reserved_acquire (zaddr, zwidth)
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, false))) ->
      raise (ZError_not_implemented "load.rl")
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
      zMEMr_strong_acquire (zaddr, zwidth)
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, false))) ->
      raise (ZError_not_implemented "lr.rl")
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
      zMEMr_reserved_strong_acquire (zaddr, zwidth)
  end)) in
  begin zrvfi_read (zaddr, zwidth, zresult); zresult end)

and zmem_read_cap ((zaddr, zaq, zrl, zres) : ((bit) list * bool * bool * bool)) : (zCapability) zMemoryOpResult = sail_call (fun r ->
  let zresult = (if (not (zis_aligned_addr (zaddr, zcap_sizze))) then (ZMemException ZE_Load_Addr_Align) else (begin
    match (zaq, zrl, zres) with
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, false))) ->
      zchecked_mem_read (ZData, zaddr, zcap_sizze, false, false, false)
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, true))) ->
      zMEMr_acquire (zaddr, zcap_sizze)
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, false))) ->
      zMEMr_reserved (zaddr, zcap_sizze)
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, true))) ->
      zMEMr_reserved_acquire (zaddr, zcap_sizze)
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, false))) ->
      raise (ZError_not_implemented "load.rl")
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
      zMEMr_strong_acquire (zaddr, zcap_sizze)
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, false))) ->
      raise (ZError_not_implemented "lr.rl")
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
      zMEMr_reserved_strong_acquire (zaddr, zcap_sizze)
  end)) in
  let ztag = (read_tag_bool zaddr) in
  begin
    match zresult with
    | ZMemValue (zv) -> ZMemValue (zmemBitsToCapability (ztag, zv))
    | ZMemException (ze) -> ZMemException ze
  end)

and zmem_write_ea ((zaddr, zwidth, zaq, zrl, zcon) : ((bit) list * Big_int.num * bool * bool * bool)) : (unit) zMemoryOpResult = sail_call (fun r ->
  if ((zrl || zcon) && (not (zis_aligned_addr (zaddr, zwidth)))) then (ZMemException ZE_SAMO_Addr_Align) else (begin
    match (zaq, zrl, zcon) with
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, false))) ->
      ZMemValue (memea (zaddr, zwidth))
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, false))) ->
      ZMemValue (memea (zaddr, zwidth))
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, false))) ->
      ZMemValue (memea (zaddr, zwidth))
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, false))) ->
      ZMemValue (memea (zaddr, zwidth))
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, true))) ->
      raise (ZError_not_implemented "store.aq")
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
      ZMemValue (memea (zaddr, zwidth))
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, true))) ->
      raise (ZError_not_implemented "sc.aq")
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
      ZMemValue (memea (zaddr, zwidth))
  end))

and zmem_write_ea_cap ((zaddr, zaq, zrl, zcon) : ((bit) list * bool * bool * bool)) : (unit) zMemoryOpResult = sail_call (fun r ->
  if (not (zis_aligned_addr (zaddr, zcap_sizze))) then (ZMemException ZE_SAMO_Addr_Align) else (ZMemValue (memea (zaddr, zcap_sizze))))

and ztag_align_addr (zaddr : (zxlenbits)) : zxlenbits = sail_call (fun r ->
  update_subrange (zaddr, (Big_int.of_int (3)), Big_int.zero, [B0; B0; B0; B0]))

and zphys_mem_write ((zaddr, zwidth, ztag, zdata) : (zxlenbits * Big_int.num * bool * zbits)) : (bool) zMemoryOpResult = sail_call (fun r ->
  begin
    Platform.print_mem_access (concat_str ("mem[", (concat_str ((string_of_bits zaddr), (concat_str ("] <- ", (string_of_bits zdata)))))));
    let ztag_addr = (ztag_align_addr zaddr) in
    begin
      Platform.print_mem_access (concat_str ("tag[", (concat_str ((string_of_bits ztag_addr), (concat_str ("] <- ", (if ztag then "1" else "0")))))));
      write_tag_bool (ztag_addr, ztag);
      ZMemValue (z__RISCV_write (zaddr, zwidth, zdata))
    end
  end)

and zchecked_mem_write ((zaddr, zwidth, ztag, zdata) : (zxlenbits * Big_int.num * bool * zbits)) : (bool) zMemoryOpResult = sail_call (fun r ->
  if (zwithin_mmio_writable (zaddr, zwidth)) then (zmmio_write (zaddr, zwidth, zdata)) else (if (zwithin_phys_mem (zaddr, zwidth)) then (zphys_mem_write (zaddr, zwidth, ztag, zdata)) else (ZMemException ZE_SAMO_Access_Fault)))

and zrvfi_write ((zaddr, zwidth, zvalue) : ((bit) list * Big_int.num * (bit) list)) : unit = sail_call (fun r ->
  ())

and zmem_write_value ((zaddr, zwidth, zvalue, zaq, zrl, zcon) : ((bit) list * Big_int.num * (bit) list * bool * bool * bool)) : (bool) zMemoryOpResult = sail_call (fun r ->
  begin
    zrvfi_write (zaddr, zwidth, zvalue);
    if ((zrl || zcon) && (not (zis_aligned_addr (zaddr, zwidth)))) then (ZMemException ZE_SAMO_Addr_Align) else (begin
      match (zaq, zrl, zcon) with
      | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, false))) ->
        zchecked_mem_write (zaddr, zwidth, false, zvalue)
      | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, false))) ->
        zchecked_mem_write (zaddr, zwidth, false, zvalue)
      | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, false))) ->
        zchecked_mem_write (zaddr, zwidth, false, zvalue)
      | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, false))) ->
        zchecked_mem_write (zaddr, zwidth, false, zvalue)
      | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, true))) ->
        raise (ZError_not_implemented "store.aq")
      | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
        zchecked_mem_write (zaddr, zwidth, false, zvalue)
      | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, true))) ->
        raise (ZError_not_implemented "sc.aq")
      | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
        zchecked_mem_write (zaddr, zwidth, false, zvalue)
    end)
  end)

and zmem_write_cap ((zaddr, zcap, zaq, zrl, zcon) : ((bit) list * zCapability * bool * bool * bool)) : (bool) zMemoryOpResult = sail_call (fun r ->
  let zcap_bits = (zcapToMemBits zcap) in
  begin
    zrvfi_write (zaddr, zcap_sizze, zcap_bits);
    if (not (zis_aligned_addr (zaddr, zcap_sizze))) then (ZMemException ZE_SAMO_Addr_Align) else (zchecked_mem_write (zaddr, zcap_sizze, (zcap.ztag), zcap_bits))
  end)

let zPAGESIZE_BITS = (Big_int.of_int (12));;

type  zpteAttribs = zbits;;

let string_of_zpteAttribs (gs4463 : zpteAttribs) = string_of_zbits gs4463;;

let rec zundefined_PTE_Bits (() : (unit)) : zPTE_Bits = sail_call (fun r ->
  {zPTE_Bits_chunk_0 = undefined_vector ((Big_int.of_int (8)), (undefined_bit ()))})

and zMk_PTE_Bits (zv : ((bit) list)) : zPTE_Bits = sail_call (fun r ->
  {zPTE_Bits_chunk_0 = subrange (zv, (Big_int.of_int (7)), Big_int.zero)})

and z_get_PTE_Bits_bits (zv : (zPTE_Bits)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zPTE_Bits_chunk_0), (Big_int.of_int (7)), Big_int.zero))

and z_set_PTE_Bits_bits ((zr_ref, zv) : ((zPTE_Bits) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zPTE_Bits) in
  begin
    zr := ({!zr with zPTE_Bits_chunk_0 = update_subrange ((!zr.zPTE_Bits_chunk_0), (Big_int.of_int (7)), Big_int.zero, (subrange (zv, (Big_int.of_int (7)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_PTE_Bits_bits ((zv, zx) : (zPTE_Bits * (bit) list)) : zPTE_Bits = sail_call (fun r ->
  let zv = ({zv with zPTE_Bits_chunk_0 = update_subrange ((zv.zPTE_Bits_chunk_0), (Big_int.of_int (7)), Big_int.zero, (subrange (zx, (Big_int.of_int (7)), Big_int.zero)))}) in
  zv)

and z_get_PTE_Bits_D (zv : (zPTE_Bits)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zPTE_Bits_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7))))

and z_set_PTE_Bits_D ((zr_ref, zv) : ((zPTE_Bits) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zPTE_Bits) in
  begin
    zr := ({!zr with zPTE_Bits_chunk_0 = update_subrange ((!zr.zPTE_Bits_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_PTE_Bits_D ((zv, zx) : (zPTE_Bits * (bit) list)) : zPTE_Bits = sail_call (fun r ->
  let zv = ({zv with zPTE_Bits_chunk_0 = update_subrange ((zv.zPTE_Bits_chunk_0), (Big_int.of_int (7)), (Big_int.of_int (7)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_PTE_Bits_A (zv : (zPTE_Bits)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zPTE_Bits_chunk_0), (Big_int.of_int (6)), (Big_int.of_int (6))))

and z_set_PTE_Bits_A ((zr_ref, zv) : ((zPTE_Bits) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zPTE_Bits) in
  begin
    zr := ({!zr with zPTE_Bits_chunk_0 = update_subrange ((!zr.zPTE_Bits_chunk_0), (Big_int.of_int (6)), (Big_int.of_int (6)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_PTE_Bits_A ((zv, zx) : (zPTE_Bits * (bit) list)) : zPTE_Bits = sail_call (fun r ->
  let zv = ({zv with zPTE_Bits_chunk_0 = update_subrange ((zv.zPTE_Bits_chunk_0), (Big_int.of_int (6)), (Big_int.of_int (6)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_PTE_Bits_G (zv : (zPTE_Bits)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zPTE_Bits_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5))))

and z_set_PTE_Bits_G ((zr_ref, zv) : ((zPTE_Bits) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zPTE_Bits) in
  begin
    zr := ({!zr with zPTE_Bits_chunk_0 = update_subrange ((!zr.zPTE_Bits_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_PTE_Bits_G ((zv, zx) : (zPTE_Bits * (bit) list)) : zPTE_Bits = sail_call (fun r ->
  let zv = ({zv with zPTE_Bits_chunk_0 = update_subrange ((zv.zPTE_Bits_chunk_0), (Big_int.of_int (5)), (Big_int.of_int (5)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_PTE_Bits_U (zv : (zPTE_Bits)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zPTE_Bits_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4))))

and z_set_PTE_Bits_U ((zr_ref, zv) : ((zPTE_Bits) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zPTE_Bits) in
  begin
    zr := ({!zr with zPTE_Bits_chunk_0 = update_subrange ((!zr.zPTE_Bits_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_PTE_Bits_U ((zv, zx) : (zPTE_Bits * (bit) list)) : zPTE_Bits = sail_call (fun r ->
  let zv = ({zv with zPTE_Bits_chunk_0 = update_subrange ((zv.zPTE_Bits_chunk_0), (Big_int.of_int (4)), (Big_int.of_int (4)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_PTE_Bits_X (zv : (zPTE_Bits)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zPTE_Bits_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3))))

and z_set_PTE_Bits_X ((zr_ref, zv) : ((zPTE_Bits) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zPTE_Bits) in
  begin
    zr := ({!zr with zPTE_Bits_chunk_0 = update_subrange ((!zr.zPTE_Bits_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_PTE_Bits_X ((zv, zx) : (zPTE_Bits * (bit) list)) : zPTE_Bits = sail_call (fun r ->
  let zv = ({zv with zPTE_Bits_chunk_0 = update_subrange ((zv.zPTE_Bits_chunk_0), (Big_int.of_int (3)), (Big_int.of_int (3)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_PTE_Bits_W (zv : (zPTE_Bits)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zPTE_Bits_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2))))

and z_set_PTE_Bits_W ((zr_ref, zv) : ((zPTE_Bits) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zPTE_Bits) in
  begin
    zr := ({!zr with zPTE_Bits_chunk_0 = update_subrange ((!zr.zPTE_Bits_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_PTE_Bits_W ((zv, zx) : (zPTE_Bits * (bit) list)) : zPTE_Bits = sail_call (fun r ->
  let zv = ({zv with zPTE_Bits_chunk_0 = update_subrange ((zv.zPTE_Bits_chunk_0), (Big_int.of_int (2)), (Big_int.of_int (2)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_PTE_Bits_R (zv : (zPTE_Bits)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zPTE_Bits_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1))))

and z_set_PTE_Bits_R ((zr_ref, zv) : ((zPTE_Bits) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zPTE_Bits) in
  begin
    zr := ({!zr with zPTE_Bits_chunk_0 = update_subrange ((!zr.zPTE_Bits_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_PTE_Bits_R ((zv, zx) : (zPTE_Bits * (bit) list)) : zPTE_Bits = sail_call (fun r ->
  let zv = ({zv with zPTE_Bits_chunk_0 = update_subrange ((zv.zPTE_Bits_chunk_0), (Big_int.of_int (1)), (Big_int.of_int (1)), (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and z_get_PTE_Bits_V (zv : (zPTE_Bits)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zPTE_Bits_chunk_0), Big_int.zero, Big_int.zero))

and z_set_PTE_Bits_V ((zr_ref, zv) : ((zPTE_Bits) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zPTE_Bits) in
  begin
    zr := ({!zr with zPTE_Bits_chunk_0 = update_subrange ((!zr.zPTE_Bits_chunk_0), Big_int.zero, Big_int.zero, (subrange (zv, Big_int.zero, Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_PTE_Bits_V ((zv, zx) : (zPTE_Bits * (bit) list)) : zPTE_Bits = sail_call (fun r ->
  let zv = ({zv with zPTE_Bits_chunk_0 = update_subrange ((zv.zPTE_Bits_chunk_0), Big_int.zero, Big_int.zero, (subrange (zx, Big_int.zero, Big_int.zero)))}) in
  zv)

and zisPTEPtr (zp : (zpteAttribs)) : bool = sail_call (fun r ->
  let za = (zMk_PTE_Bits zp) in
  (eq_list ((z_get_PTE_Bits_R za), (zbool_to_bits false))) && ((eq_list ((z_get_PTE_Bits_W za), (zbool_to_bits false))) && (eq_list ((z_get_PTE_Bits_X za), (zbool_to_bits false)))))

and zisInvalidPTE (zp : (zpteAttribs)) : bool = sail_call (fun r ->
  let za = (zMk_PTE_Bits zp) in
  (eq_list ((z_get_PTE_Bits_V za), (zbool_to_bits false))) || ((eq_list ((z_get_PTE_Bits_W za), (zbool_to_bits true))) && (eq_list ((z_get_PTE_Bits_R za), (zbool_to_bits false)))))

and zcheckPTEPermission ((zac, zpriv, zmxr, zdo_sum, zp) : (zAccessType * zPrivilege * bool * bool * zPTE_Bits)) : bool = sail_call (fun r ->
  begin
    match (zac, zpriv) with
    | (ZRead, ZUser) ->
      (eq_list ((z_get_PTE_Bits_U zp), (zbool_to_bits true))) && ((eq_list ((z_get_PTE_Bits_R zp), (zbool_to_bits true))) || ((eq_list ((z_get_PTE_Bits_X zp), (zbool_to_bits true))) && zmxr))
    | (ZWrite, ZUser) ->
      (eq_list ((z_get_PTE_Bits_U zp), (zbool_to_bits true))) && (eq_list ((z_get_PTE_Bits_W zp), (zbool_to_bits true)))
    | (ZReadWrite, ZUser) ->
      (eq_list ((z_get_PTE_Bits_U zp), (zbool_to_bits true))) && ((eq_list ((z_get_PTE_Bits_W zp), (zbool_to_bits true))) && ((eq_list ((z_get_PTE_Bits_R zp), (zbool_to_bits true))) || ((eq_list ((z_get_PTE_Bits_X zp), (zbool_to_bits true))) && zmxr)))
    | (ZExecute, ZUser) ->
      (eq_list ((z_get_PTE_Bits_U zp), (zbool_to_bits true))) && (eq_list ((z_get_PTE_Bits_X zp), (zbool_to_bits true)))
    | (ZRead, ZSupervisor) ->
      ((eq_list ((z_get_PTE_Bits_U zp), (zbool_to_bits false))) || zdo_sum) && ((eq_list ((z_get_PTE_Bits_R zp), (zbool_to_bits true))) || ((eq_list ((z_get_PTE_Bits_X zp), (zbool_to_bits true))) && zmxr))
    | (ZWrite, ZSupervisor) ->
      ((eq_list ((z_get_PTE_Bits_U zp), (zbool_to_bits false))) || zdo_sum) && (eq_list ((z_get_PTE_Bits_W zp), (zbool_to_bits true)))
    | (ZReadWrite, ZSupervisor) ->
      ((eq_list ((z_get_PTE_Bits_U zp), (zbool_to_bits false))) || zdo_sum) && ((eq_list ((z_get_PTE_Bits_W zp), (zbool_to_bits true))) && ((eq_list ((z_get_PTE_Bits_R zp), (zbool_to_bits true))) || ((eq_list ((z_get_PTE_Bits_X zp), (zbool_to_bits true))) && zmxr)))
    | (ZExecute, ZSupervisor) ->
      (eq_list ((z_get_PTE_Bits_U zp), (zbool_to_bits false))) && (eq_list ((z_get_PTE_Bits_X zp), (zbool_to_bits true)))
    | (_, ZMachine) -> zinternal_error "m-mode mem perm check"
  end)

and zupdate_PTE_Bits ((zp, za) : (zPTE_Bits * zAccessType)) : (zPTE_Bits) zoption = sail_call (fun r ->
  let zupdate_d = (((eq_string ((zaccessType_to_str za), (zaccessType_to_str ZWrite))) || (eq_string ((zaccessType_to_str za), (zaccessType_to_str ZReadWrite)))) && (eq_list ((z_get_PTE_Bits_D zp), (zbool_to_bits false)))) in
  let zupdate_a = (eq_list ((z_get_PTE_Bits_A zp), (zbool_to_bits false))) in
  if (zupdate_d || zupdate_a) then (let znp = (z_update_PTE_Bits_A (zp, (zbool_to_bits true))) in
  let znp = (if zupdate_d then (z_update_PTE_Bits_D (znp, (zbool_to_bits true))) else znp) in
  ZSome znp) else (ZNone ()))

type zPTW_Error =
  | ZPTW_Access
  | ZPTW_Invalid_PTE
  | ZPTW_No_Permission
  | ZPTW_Misaligned
  | ZPTW_PTE_Update;;

let string_of_zPTW_Error = function
  | ZPTW_Access -> "PTW_Access"
  | ZPTW_Invalid_PTE -> "PTW_Invalid_PTE"
  | ZPTW_No_Permission -> "PTW_No_Permission"
  | ZPTW_Misaligned -> "PTW_Misaligned"
  | ZPTW_PTE_Update -> "PTW_PTE_Update";;

let rec zPTW_Error_of_num (zargz3 : (Big_int.num)) : zPTW_Error = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__46 when (eq_int (zl__46, Big_int.zero)) -> ZPTW_Access
    | zl__47 when (eq_int (zl__47, (Big_int.of_int (1)))) -> ZPTW_Invalid_PTE
    | zl__48 when (eq_int (zl__48, (Big_int.of_int (2)))) -> ZPTW_No_Permission
    | zl__49 when (eq_int (zl__49, (Big_int.of_int (3)))) -> ZPTW_Misaligned
    | _ -> ZPTW_PTE_Update
  end)

and znum_of_PTW_Error (zargz3 : (zPTW_Error)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZPTW_Access -> Big_int.zero
    | ZPTW_Invalid_PTE -> (Big_int.of_int (1))
    | ZPTW_No_Permission -> (Big_int.of_int (2))
    | ZPTW_Misaligned -> (Big_int.of_int (3))
    | ZPTW_PTE_Update -> (Big_int.of_int (4))
  end)

and zundefined_PTW_Error (() : (unit)) : zPTW_Error = sail_call (fun r ->
  internal_pick [ZPTW_Access; ZPTW_Invalid_PTE; ZPTW_No_Permission; ZPTW_Misaligned; ZPTW_PTE_Update])

and zptw_error_to_str (ze : (zPTW_Error)) : string = sail_call (fun r ->
  begin
    match ze with
    | ZPTW_Access -> "mem-access-error"
    | ZPTW_Invalid_PTE -> "invalid-pte"
    | ZPTW_No_Permission -> "no-permission"
    | ZPTW_Misaligned -> "misaligned-superpage"
    | ZPTW_PTE_Update -> "pte-update-needed"
  end)

and ztranslationException ((za, zf) : (zAccessType * zPTW_Error)) : zExceptionType = sail_call (fun r ->
  let ze = (begin
    match (za, zf) with
    | (ZReadWrite, ZPTW_Access) -> ZE_SAMO_Access_Fault
    | (ZReadWrite, _) -> ZE_SAMO_Page_Fault
    | (ZRead, ZPTW_Access) -> ZE_Load_Access_Fault
    | (ZRead, _) -> ZE_Load_Page_Fault
    | (ZWrite, ZPTW_Access) -> ZE_SAMO_Access_Fault
    | (ZWrite, _) -> ZE_SAMO_Page_Fault
    | (zFetch, ZPTW_Access) -> ZE_Fetch_Access_Fault
    | (zFetch, _) -> ZE_Fetch_Page_Fault
  end) in
  ze)

let zSV39_LEVEL_BITS = (Big_int.of_int (9));;

let zSV39_LEVELS = (Big_int.of_int (3));;

let zPTE39_LOG_SIZE = (Big_int.of_int (3));;

let zPTE39_SIZE = (Big_int.of_int (8));;

type  zvaddr39 = zbits;;

let string_of_zvaddr39 (gs4640 : zvaddr39) = string_of_zbits gs4640;;

type  zpaddr39 = zbits;;

let string_of_zpaddr39 (gs4641 : zpaddr39) = string_of_zbits gs4641;;

type  zpte39 = zxlenbits;;

let string_of_zpte39 (gs4642 : zpte39) = string_of_zxlenbits gs4642;;

type  zSV39_Vaddr = { zSV39_Vaddr_chunk_0 : (bit) list
};;

let string_of_zSV39_Vaddr (gs4643 : zSV39_Vaddr) =
  "{SV39_Vaddr_chunk_0 = " ^ string_of_bits gs4643.zSV39_Vaddr_chunk_0 ^ "}";;

let rec zundefined_SV39_Vaddr (() : (unit)) : zSV39_Vaddr = sail_call (fun r ->
  {zSV39_Vaddr_chunk_0 = undefined_vector ((Big_int.of_int (39)), (undefined_bit ()))})

and zMk_SV39_Vaddr (zv : ((bit) list)) : zSV39_Vaddr = sail_call (fun r ->
  {zSV39_Vaddr_chunk_0 = subrange (zv, (Big_int.of_int (38)), Big_int.zero)})

and z_get_SV39_Vaddr_bits (zv : (zSV39_Vaddr)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSV39_Vaddr_chunk_0), (Big_int.of_int (38)), Big_int.zero))

and z_set_SV39_Vaddr_bits ((zr_ref, zv) : ((zSV39_Vaddr) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSV39_Vaddr) in
  begin
    zr := ({!zr with zSV39_Vaddr_chunk_0 = update_subrange ((!zr.zSV39_Vaddr_chunk_0), (Big_int.of_int (38)), Big_int.zero, (subrange (zv, (Big_int.of_int (38)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_SV39_Vaddr_bits ((zv, zx) : (zSV39_Vaddr * (bit) list)) : zSV39_Vaddr = sail_call (fun r ->
  let zv = ({zv with zSV39_Vaddr_chunk_0 = update_subrange ((zv.zSV39_Vaddr_chunk_0), (Big_int.of_int (38)), Big_int.zero, (subrange (zx, (Big_int.of_int (38)), Big_int.zero)))}) in
  zv)

and z_get_SV39_Vaddr_VPNi (zv : (zSV39_Vaddr)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSV39_Vaddr_chunk_0), (Big_int.of_int (38)), (Big_int.of_int (12))))

and z_set_SV39_Vaddr_VPNi ((zr_ref, zv) : ((zSV39_Vaddr) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSV39_Vaddr) in
  begin
    zr := ({!zr with zSV39_Vaddr_chunk_0 = update_subrange ((!zr.zSV39_Vaddr_chunk_0), (Big_int.of_int (38)), (Big_int.of_int (12)), (subrange (zv, (Big_int.of_int (26)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_SV39_Vaddr_VPNi ((zv, zx) : (zSV39_Vaddr * (bit) list)) : zSV39_Vaddr = sail_call (fun r ->
  let zv = ({zv with zSV39_Vaddr_chunk_0 = update_subrange ((zv.zSV39_Vaddr_chunk_0), (Big_int.of_int (38)), (Big_int.of_int (12)), (subrange (zx, (Big_int.of_int (26)), Big_int.zero)))}) in
  zv)

and z_get_SV39_Vaddr_PgOfs (zv : (zSV39_Vaddr)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSV39_Vaddr_chunk_0), (Big_int.of_int (11)), Big_int.zero))

and z_set_SV39_Vaddr_PgOfs ((zr_ref, zv) : ((zSV39_Vaddr) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSV39_Vaddr) in
  begin
    zr := ({!zr with zSV39_Vaddr_chunk_0 = update_subrange ((!zr.zSV39_Vaddr_chunk_0), (Big_int.of_int (11)), Big_int.zero, (subrange (zv, (Big_int.of_int (11)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_SV39_Vaddr_PgOfs ((zv, zx) : (zSV39_Vaddr * (bit) list)) : zSV39_Vaddr = sail_call (fun r ->
  let zv = ({zv with zSV39_Vaddr_chunk_0 = update_subrange ((zv.zSV39_Vaddr_chunk_0), (Big_int.of_int (11)), Big_int.zero, (subrange (zx, (Big_int.of_int (11)), Big_int.zero)))}) in
  zv)

type  zSV39_Paddr = { zSV39_Paddr_chunk_0 : (bit) list
};;

let string_of_zSV39_Paddr (gs4694 : zSV39_Paddr) =
  "{SV39_Paddr_chunk_0 = " ^ string_of_bits gs4694.zSV39_Paddr_chunk_0 ^ "}";;

let rec zundefined_SV39_Paddr (() : (unit)) : zSV39_Paddr = sail_call (fun r ->
  {zSV39_Paddr_chunk_0 = undefined_vector ((Big_int.of_int (56)), (undefined_bit ()))})

and zMk_SV39_Paddr (zv : ((bit) list)) : zSV39_Paddr = sail_call (fun r ->
  {zSV39_Paddr_chunk_0 = subrange (zv, (Big_int.of_int (55)), Big_int.zero)})

and z_get_SV39_Paddr_bits (zv : (zSV39_Paddr)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSV39_Paddr_chunk_0), (Big_int.of_int (55)), Big_int.zero))

and z_set_SV39_Paddr_bits ((zr_ref, zv) : ((zSV39_Paddr) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSV39_Paddr) in
  begin
    zr := ({!zr with zSV39_Paddr_chunk_0 = update_subrange ((!zr.zSV39_Paddr_chunk_0), (Big_int.of_int (55)), Big_int.zero, (subrange (zv, (Big_int.of_int (55)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_SV39_Paddr_bits ((zv, zx) : (zSV39_Paddr * (bit) list)) : zSV39_Paddr = sail_call (fun r ->
  let zv = ({zv with zSV39_Paddr_chunk_0 = update_subrange ((zv.zSV39_Paddr_chunk_0), (Big_int.of_int (55)), Big_int.zero, (subrange (zx, (Big_int.of_int (55)), Big_int.zero)))}) in
  zv)

and z_get_SV39_Paddr_PPNi (zv : (zSV39_Paddr)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSV39_Paddr_chunk_0), (Big_int.of_int (55)), (Big_int.of_int (12))))

and z_set_SV39_Paddr_PPNi ((zr_ref, zv) : ((zSV39_Paddr) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSV39_Paddr) in
  begin
    zr := ({!zr with zSV39_Paddr_chunk_0 = update_subrange ((!zr.zSV39_Paddr_chunk_0), (Big_int.of_int (55)), (Big_int.of_int (12)), (subrange (zv, (Big_int.of_int (43)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_SV39_Paddr_PPNi ((zv, zx) : (zSV39_Paddr * (bit) list)) : zSV39_Paddr = sail_call (fun r ->
  let zv = ({zv with zSV39_Paddr_chunk_0 = update_subrange ((zv.zSV39_Paddr_chunk_0), (Big_int.of_int (55)), (Big_int.of_int (12)), (subrange (zx, (Big_int.of_int (43)), Big_int.zero)))}) in
  zv)

and z_get_SV39_Paddr_PgOfs (zv : (zSV39_Paddr)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSV39_Paddr_chunk_0), (Big_int.of_int (11)), Big_int.zero))

and z_set_SV39_Paddr_PgOfs ((zr_ref, zv) : ((zSV39_Paddr) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSV39_Paddr) in
  begin
    zr := ({!zr with zSV39_Paddr_chunk_0 = update_subrange ((!zr.zSV39_Paddr_chunk_0), (Big_int.of_int (11)), Big_int.zero, (subrange (zv, (Big_int.of_int (11)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_SV39_Paddr_PgOfs ((zv, zx) : (zSV39_Paddr * (bit) list)) : zSV39_Paddr = sail_call (fun r ->
  let zv = ({zv with zSV39_Paddr_chunk_0 = update_subrange ((zv.zSV39_Paddr_chunk_0), (Big_int.of_int (11)), Big_int.zero, (subrange (zx, (Big_int.of_int (11)), Big_int.zero)))}) in
  zv)

and zundefined_SV39_PTE (() : (unit)) : zSV39_PTE = sail_call (fun r ->
  {zSV39_PTE_chunk_0 = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

and zMk_SV39_PTE (zv : ((bit) list)) : zSV39_PTE = sail_call (fun r ->
  {zSV39_PTE_chunk_0 = subrange (zv, (Big_int.of_int (63)), Big_int.zero)})

and z_get_SV39_PTE_bits (zv : (zSV39_PTE)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSV39_PTE_chunk_0), (Big_int.of_int (63)), Big_int.zero))

and z_set_SV39_PTE_bits ((zr_ref, zv) : ((zSV39_PTE) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSV39_PTE) in
  begin
    zr := ({!zr with zSV39_PTE_chunk_0 = update_subrange ((!zr.zSV39_PTE_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zv, (Big_int.of_int (63)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_SV39_PTE_bits ((zv, zx) : (zSV39_PTE * (bit) list)) : zSV39_PTE = sail_call (fun r ->
  let zv = ({zv with zSV39_PTE_chunk_0 = update_subrange ((zv.zSV39_PTE_chunk_0), (Big_int.of_int (63)), Big_int.zero, (subrange (zx, (Big_int.of_int (63)), Big_int.zero)))}) in
  zv)

and z_get_SV39_PTE_PPNi (zv : (zSV39_PTE)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSV39_PTE_chunk_0), (Big_int.of_int (53)), (Big_int.of_int (10))))

and z_set_SV39_PTE_PPNi ((zr_ref, zv) : ((zSV39_PTE) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSV39_PTE) in
  begin
    zr := ({!zr with zSV39_PTE_chunk_0 = update_subrange ((!zr.zSV39_PTE_chunk_0), (Big_int.of_int (53)), (Big_int.of_int (10)), (subrange (zv, (Big_int.of_int (43)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_SV39_PTE_PPNi ((zv, zx) : (zSV39_PTE * (bit) list)) : zSV39_PTE = sail_call (fun r ->
  let zv = ({zv with zSV39_PTE_chunk_0 = update_subrange ((zv.zSV39_PTE_chunk_0), (Big_int.of_int (53)), (Big_int.of_int (10)), (subrange (zx, (Big_int.of_int (43)), Big_int.zero)))}) in
  zv)

and z_get_SV39_PTE_RSW (zv : (zSV39_PTE)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSV39_PTE_chunk_0), (Big_int.of_int (9)), (Big_int.of_int (8))))

and z_set_SV39_PTE_RSW ((zr_ref, zv) : ((zSV39_PTE) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSV39_PTE) in
  begin
    zr := ({!zr with zSV39_PTE_chunk_0 = update_subrange ((!zr.zSV39_PTE_chunk_0), (Big_int.of_int (9)), (Big_int.of_int (8)), (subrange (zv, (Big_int.of_int (1)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_SV39_PTE_RSW ((zv, zx) : (zSV39_PTE * (bit) list)) : zSV39_PTE = sail_call (fun r ->
  let zv = ({zv with zSV39_PTE_chunk_0 = update_subrange ((zv.zSV39_PTE_chunk_0), (Big_int.of_int (9)), (Big_int.of_int (8)), (subrange (zx, (Big_int.of_int (1)), Big_int.zero)))}) in
  zv)

and z_get_SV39_PTE_BITS (zv : (zSV39_PTE)) : (bit) list = sail_call (fun r ->
  subrange ((zv.zSV39_PTE_chunk_0), (Big_int.of_int (7)), Big_int.zero))

and z_set_SV39_PTE_BITS ((zr_ref, zv) : ((zSV39_PTE) ref * (bit) list)) : unit = sail_call (fun r ->
  let zr = ref ((reg_deref zr_ref) : zSV39_PTE) in
  begin
    zr := ({!zr with zSV39_PTE_chunk_0 = update_subrange ((!zr.zSV39_PTE_chunk_0), (Big_int.of_int (7)), Big_int.zero, (subrange (zv, (Big_int.of_int (7)), Big_int.zero)))});
    zr_ref := (!zr)
  end)

and z_update_SV39_PTE_BITS ((zv, zx) : (zSV39_PTE * (bit) list)) : zSV39_PTE = sail_call (fun r ->
  let zv = ({zv with zSV39_PTE_chunk_0 = update_subrange ((zv.zSV39_PTE_chunk_0), (Big_int.of_int (7)), Big_int.zero, (subrange (zx, (Big_int.of_int (7)), Big_int.zero)))}) in
  zv)

type  zasid64 = zbits;;

let string_of_zasid64 (gs4809 : zasid64) = string_of_zbits gs4809;;

let rec zcurAsid64 (() : (unit)) : zasid64 = sail_call (fun r ->
  let zsatp64 = (zMk_Satp64 !zsatp) in
  z_get_Satp64_Asid zsatp64)

and zcurPTB39 (() : (unit)) : zpaddr39 = sail_call (fun r ->
  let zsatp64 = (zMk_Satp64 !zsatp) in
  zEXTZ ((Big_int.of_int (56)), (shiftl ((z_get_Satp64_PPN zsatp64), zPAGESIZE_BITS))))

type  zPTW_Result =
  | ZPTW_Success of (zpaddr39 * zSV39_PTE * zpaddr39 * Big_int.num * bool)
  | ZPTW_Failure of zPTW_Error;;

let string_of_zPTW_Result _ = "VARIANT";;

let rec zundefined_PTW_Result (() : (unit)) : zPTW_Result = sail_call (fun r ->
  let zu_0 = (zundefined_PTW_Error ()) in
  let zu_1 = (zundefined_SV39_PTE ()) in
  let zu_2 = (undefined_bool ()) in
  let zu_3 = (undefined_nat ()) in
  let zu_5 = (undefined_vector ((Big_int.of_int (56)), (undefined_bit ()))) in
  let zu_4 = (undefined_vector ((Big_int.of_int (56)), (undefined_bit ()))) in
  internal_pick [ZPTW_Success (zu_5, zu_1, zu_4, zu_3, zu_2); ZPTW_Failure zu_0])

and zwalk39 ((zvaddr, zac, zpriv, zmxr, zdo_sum, zptb, zlevel, zglobal) : ((bit) list * zAccessType * zPrivilege * bool * bool * (bit) list * Big_int.num * bool)) : zPTW_Result = sail_call (fun r ->
  let zva = (zMk_SV39_Vaddr zvaddr) in
  let zpt_ofs = (shiftl ((zEXTZ ((Big_int.of_int (56)), (subrange ((shiftr ((z_get_SV39_Vaddr_VPNi zva), (mult (zlevel, zSV39_LEVEL_BITS)))), (sub_int (zSV39_LEVEL_BITS, (Big_int.of_int (1)))), Big_int.zero)))), zPTE39_LOG_SIZE)) in
  let zpte_addr = (add_vec (zptb, zpt_ofs)) in
  begin
    match (zphys_mem_read (ZData, (zEXTZ ((Big_int.of_int (64)), zpte_addr)), (Big_int.of_int (8)), false, false, false)) with
    | ZMemException (_) -> ZPTW_Failure ZPTW_Access
    | ZMemValue (zv) ->
      let zpte = (zMk_SV39_PTE zv) in
      let zpbits = (z_get_SV39_PTE_BITS zpte) in
      let zpattr = (zMk_PTE_Bits zpbits) in
      let zis_global = (zglobal || (eq_list ((z_get_PTE_Bits_G zpattr), (zbool_to_bits true)))) in
      if (zisInvalidPTE zpbits) then (ZPTW_Failure ZPTW_Invalid_PTE) else (if (zisPTEPtr zpbits) then (if (eq_int (zlevel, Big_int.zero)) then (ZPTW_Failure ZPTW_Invalid_PTE) else (zwalk39 (zvaddr, zac, zpriv, zmxr, zdo_sum, (zEXTZ ((Big_int.of_int (56)), (shiftl ((z_get_SV39_PTE_PPNi zpte), zPAGESIZE_BITS)))), (sub_int (zlevel, (Big_int.of_int (1)))), zis_global))) else (if (not (zcheckPTEPermission (zac, zpriv, zmxr, zdo_sum, zpattr))) then (ZPTW_Failure ZPTW_No_Permission) else (if (gt (zlevel, Big_int.zero)) then (let zmask = (sub_vec_int ((shiftl ((xor_vec ((z_get_SV39_PTE_PPNi zpte), (xor_vec ((z_get_SV39_PTE_PPNi zpte), (zEXTZ ((Big_int.of_int (44)), [B1])))))), (mult (zlevel, zSV39_LEVEL_BITS)))), (Big_int.of_int (1)))) in
      if (zneq_vec ((and_vec ((z_get_SV39_PTE_PPNi zpte), zmask)), (zEXTZ ((Big_int.of_int (44)), [B0])))) then (ZPTW_Failure ZPTW_Misaligned) else (let zppn = (or_vec ((z_get_SV39_PTE_PPNi zpte), (and_vec ((zEXTZ ((Big_int.of_int (44)), (z_get_SV39_Vaddr_VPNi zva))), zmask)))) in
      ZPTW_Success (append (zppn, (z_get_SV39_Vaddr_PgOfs zva)), zpte, zpte_addr, zlevel, zis_global))) else (ZPTW_Success (append ((z_get_SV39_PTE_PPNi zpte), (z_get_SV39_Vaddr_PgOfs zva)), zpte, zpte_addr, zlevel, zis_global)))))
  end)

type  zTLB39_Entry = {
  zasid : zasid64;
  zglobal : bool;
  zvAddr : zvaddr39;
  zpAddr : zpaddr39;
  zvMatchMask : zvaddr39;
  zvAddrMask : zvaddr39;
  zpte : zSV39_PTE;
  zpteAddr : zpaddr39;
  zage : zxlenbits
};;

let string_of_zTLB39_Entry (gs4833 : zTLB39_Entry) =
  "{asid = " ^ string_of_zasid64 gs4833.zasid
  ^ ", global = " ^ string_of_zbool gs4833.zglobal
  ^ ", vAddr = " ^ string_of_zvaddr39 gs4833.zvAddr
  ^ ", pAddr = " ^ string_of_zpaddr39 gs4833.zpAddr
  ^ ", vMatchMask = " ^ string_of_zvaddr39 gs4833.zvMatchMask
  ^ ", vAddrMask = " ^ string_of_zvaddr39 gs4833.zvAddrMask
  ^ ", pte = " ^ string_of_zSV39_PTE gs4833.zpte
  ^ ", pteAddr = " ^ string_of_zpaddr39 gs4833.zpteAddr
  ^ ", age = " ^ string_of_zxlenbits gs4833.zage ^ "}";;

let rec zundefined_TLB39_Entry (() : (unit)) : zTLB39_Entry = sail_call (fun r ->
  {zasid = undefined_vector ((Big_int.of_int (16)), (undefined_bit ()));
  zglobal = undefined_bool ();
  zvAddr = undefined_vector ((Big_int.of_int (39)), (undefined_bit ()));
  zpAddr = undefined_vector ((Big_int.of_int (56)), (undefined_bit ()));
  zvMatchMask = undefined_vector ((Big_int.of_int (39)), (undefined_bit ()));
  zvAddrMask = undefined_vector ((Big_int.of_int (39)), (undefined_bit ()));
  zpte = zundefined_SV39_PTE ();
  zpteAddr = undefined_vector ((Big_int.of_int (56)), (undefined_bit ()));
  zage = undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))})

and zmake_TLB39_Entry ((zasid, zglobal, zvAddr, zpAddr, zpte, zlevel, zpteAddr) : ((bit) list * bool * (bit) list * (bit) list * zSV39_PTE * Big_int.num * (bit) list)) : zTLB39_Entry = sail_call (fun r ->
  let zshift = (add_int (zPAGESIZE_BITS, (mult (zlevel, zSV39_LEVEL_BITS)))) in
  let zvAddrMask = (sub_vec_int ((shiftl ((xor_vec (zvAddr, (xor_vec (zvAddr, (zEXTZ ((Big_int.of_int (39)), [B1])))))), zshift)), (Big_int.of_int (1)))) in
  let zvMatchMask = (not_vec zvAddrMask) in
  {zasid = zasid;
  zglobal = zglobal;
  zpte = zpte;
  zpteAddr = zpteAddr;
  zvAddrMask = zvAddrMask;
  zvMatchMask = zvMatchMask;
  zvAddr = and_vec (zvAddr, zvMatchMask);
  zpAddr = shiftl ((shiftr (zpAddr, zshift)), zshift);
  zage = !zmcycle})

let ztlb39 : ((zTLB39_Entry) zoption) ref = ref (zundefined_option (zundefined_TLB39_Entry ()));;

let rec zlookupTLB39 ((zasid, zvaddr) : ((bit) list * (bit) list)) : ((Big_int.num * zTLB39_Entry)) zoption = sail_call (fun r ->
  begin
    match !ztlb39 with
    | ZNone (()) -> ZNone ()
    | ZSome (ze) ->
      if (((ze.zglobal) || (eq_list ((ze.zasid), zasid))) && (eq_list ((ze.zvAddr), (and_vec ((ze.zvMatchMask), zvaddr))))) then (ZSome (Big_int.zero, ze)) else (ZNone ())
  end)

and zaddToTLB39 ((zasid, zvAddr, zpAddr, zpte, zpteAddr, zlevel, zglobal) : ((bit) list * (bit) list * (bit) list * zSV39_PTE * (bit) list * Big_int.num * bool)) : unit = sail_call (fun r ->
  let zent = (zmake_TLB39_Entry (zasid, zglobal, zvAddr, zpAddr, zpte, zlevel, zpteAddr)) in
  ztlb39 := (ZSome zent))

and zwriteTLB39 ((zidx, zent) : (Big_int.num * zTLB39_Entry)) : unit = sail_call (fun r ->
  ztlb39 := (ZSome zent))

and zflushTLB ((zasid, zaddr) : (((bit) list) zoption * ((bit) list) zoption)) : unit = sail_call (fun r ->
  let zent = (begin
    match (!ztlb39, zasid, zaddr) with
    | (ZNone (()), _, _) -> ZNone ()
    | (ZSome (ze), ZNone (()), ZNone (())) -> ZNone ()
    | (ZSome (ze), ZNone (()), ZSome (za)) ->
      if (eq_list ((ze.zvAddr), (and_vec ((ze.zvMatchMask), za)))) then (ZNone ()) else (ZSome ze)
    | (ZSome (ze), ZSome (zi), ZNone (())) ->
      if ((eq_list ((ze.zasid), zi)) && (not (ze.zglobal))) then (ZNone ()) else (ZSome ze)
    | (ZSome (ze), ZSome (zi), ZSome (za)) ->
      if ((eq_list ((ze.zasid), zi)) && ((eq_list ((ze.zvAddr), (and_vec (za, (ze.zvMatchMask))))) && (not (ze.zglobal)))) then (ZNone ()) else (ZSome ze)
  end) in
  ztlb39 := zent)

type  zTR39_Result = | ZTR39_Address of zpaddr39 | ZTR39_Failure of zPTW_Error;;

let string_of_zTR39_Result _ = "VARIANT";;

let rec zundefined_TR39_Result (() : (unit)) : zTR39_Result = sail_call (fun r ->
  let zu_0 = (zundefined_PTW_Error ()) in
  let zu_1 = (undefined_vector ((Big_int.of_int (56)), (undefined_bit ()))) in
  internal_pick [ZTR39_Address zu_1; ZTR39_Failure zu_0])

and ztranslate39 ((zvAddr, zac, zpriv, zmxr, zdo_sum, zlevel) : ((bit) list * zAccessType * zPrivilege * bool * bool * Big_int.num)) : zTR39_Result = sail_call (fun r ->
  let zasid = (zcurAsid64 ()) in
  begin
    match (zlookupTLB39 (zasid, zvAddr)) with
    | ZSome (zidx, zent) ->
      let zpteBits = (zMk_PTE_Bits (z_get_SV39_PTE_BITS (zent.zpte))) in
      if (not (zcheckPTEPermission (zac, zpriv, zmxr, zdo_sum, zpteBits))) then (ZTR39_Failure ZPTW_No_Permission) else (begin
        match (zupdate_PTE_Bits (zpteBits, zac)) with
        | ZNone (()) ->
          ZTR39_Address (or_vec ((zent.zpAddr), (zEXTZ ((Big_int.of_int (56)), (and_vec (zvAddr, (zent.zvAddrMask)))))))
        | ZSome (zpbits) ->
          if (not (Platform.enable_dirty_update ())) then (ZTR39_Failure ZPTW_PTE_Update) else (let zn_ent = ref (zent : zTLB39_Entry) in
          begin
            zn_ent := ({!zn_ent with zpte = z_update_SV39_PTE_BITS ((zent.zpte), (z_get_PTE_Bits_bits zpbits))});
            zwriteTLB39 (zidx, !zn_ent);
            begin
              match (zchecked_mem_write ((zEXTZ ((Big_int.of_int (64)), (zent.zpteAddr))), (Big_int.of_int (8)), false, (z_get_SV39_PTE_bits (zent.zpte)))) with
              | ZMemValue (_) -> ()
              | ZMemException (ze) ->
                zinternal_error "invalid physical address in TLB"
            end;
            ZTR39_Address (or_vec ((zent.zpAddr), (zEXTZ ((Big_int.of_int (56)), (and_vec (zvAddr, (zent.zvAddrMask)))))))
          end)
      end)
    | ZNone (()) ->
      begin
        match (zwalk39 (zvAddr, zac, zpriv, zmxr, zdo_sum, (zcurPTB39 ()), zlevel, false)) with
        | ZPTW_Failure (zf) -> ZTR39_Failure zf
        | ZPTW_Success (zpAddr, zpte, zpteAddr, zlevel, zglobal) ->
          begin
            match (zupdate_PTE_Bits ((zMk_PTE_Bits (z_get_SV39_PTE_BITS zpte)), zac)) with
            | ZNone (()) ->
              begin
                zaddToTLB39 (zasid, zvAddr, zpAddr, zpte, zpteAddr, zlevel, zglobal);
                ZTR39_Address zpAddr
              end
            | ZSome (zpbits) ->
              if (not (Platform.enable_dirty_update ())) then (ZTR39_Failure ZPTW_PTE_Update) else (let zw_pte = ref ((z_update_SV39_PTE_BITS (zpte, (z_get_PTE_Bits_bits zpbits))) : zSV39_PTE) in
              begin
                match (zchecked_mem_write ((zEXTZ ((Big_int.of_int (64)), zpteAddr)), (Big_int.of_int (8)), false, (z_get_SV39_PTE_bits !zw_pte))) with
                | ZMemValue (_) ->
                  begin
                    zaddToTLB39 (zasid, zvAddr, zpAddr, !zw_pte, zpteAddr, zlevel, zglobal);
                    ZTR39_Address zpAddr
                  end
                | ZMemException (ze) -> ZTR39_Failure ZPTW_Access
              end)
          end
      end
  end)

and ztranslationMode (zpriv : (zPrivilege)) : zSATPMode = sail_call (fun r ->
  if (eq_list ((zprivLevel_to_bits zpriv), (zprivLevel_to_bits ZMachine))) then ZSbare else (let zarch = (zarchitecture (z_get_Mstatus_SXL !zmstatus)) in
  begin
    match zarch with
    | ZSome (ZRV64) ->
      let zmbits = (z_get_Satp64_Mode (zMk_Satp64 !zsatp)) in
      begin
        match (zsatpMode_of_bits (ZRV64, zmbits)) with
        | ZSome (zm) -> zm
        | ZNone (()) -> zinternal_error "invalid RV64 translation mode in satp"
      end
    | _ -> zinternal_error "unsupported address translation arch"
  end))

type  zTR_Result = | ZTR_Address of zxlenbits | ZTR_Failure of zExceptionType;;

let string_of_zTR_Result _ = "VARIANT";;

let rec zundefined_TR_Result (() : (unit)) : zTR_Result = sail_call (fun r ->
  let zu_0 = (zundefined_ExceptionType ()) in
  let zu_1 = (undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))) in
  internal_pick [ZTR_Address zu_1; ZTR_Failure zu_0])

and ztranslateAddr ((zvAddr, zac, zrt) : ((bit) list * zAccessType * zReadType)) : zTR_Result = sail_call (fun r ->
  let zeffPriv = (begin
    match zrt with
    | ZInstruction -> !zcur_privilege
    | ZData ->
      if (eq_list ((z_get_Mstatus_MPRV !zmstatus), (zbool_to_bits true))) then (zprivLevel_of_bits (z_get_Mstatus_MPP !zmstatus)) else !zcur_privilege
  end) in
  let zmxr = (eq_list ((z_get_Mstatus_MXR !zmstatus), (zbool_to_bits true))) in
  let zdo_sum = (eq_list ((z_get_Mstatus_SUM !zmstatus), (zbool_to_bits true))) in
  let zmode = (ztranslationMode zeffPriv) in
  begin
    match zmode with
    | ZSbare -> ZTR_Address zvAddr
    | zSV39 ->
      begin
        match (ztranslate39 ((subrange (zvAddr, (Big_int.of_int (38)), Big_int.zero)), zac, zeffPriv, zmxr, zdo_sum, (sub_int (zSV39_LEVELS, (Big_int.of_int (1)))))) with
        | ZTR39_Address (zpa) ->
          ZTR_Address (zEXTZ ((Big_int.of_int (64)), zpa))
        | ZTR39_Failure (zf) -> ZTR_Failure (ztranslationException (zac, zf))
      end
    | _ -> zinternal_error "unsupported address translation scheme"
  end)

type  zast =
  | ZUTYPE of (zbits * zregbits * zuop)
  | ZRISCV_JAL of (zbits * zregbits)
  | ZRISCV_JALR of (zbits * zregbits * zregbits)
  | ZBTYPE of (zbits * zregbits * zregbits * zbop)
  | ZITYPE of (zbits * zregbits * zregbits * ziop)
  | ZSHIFTIOP of (zbits * zregbits * zregbits * zsop)
  | ZRTYPE of (zregbits * zregbits * zregbits * zrop)
  | ZLOAD of (zbits * zregbits * zregbits * bool * zword_width * bool * bool)
  | ZSTORE of (zbits * zregbits * zregbits * zword_width * bool * bool)
  | ZADDIW of (zbits * zregbits * zregbits)
  | ZSHIFTW of (zbits * zregbits * zregbits * zsop)
  | ZRTYPEW of (zregbits * zregbits * zregbits * zropw)
  | ZSHIFTIWOP of (zbits * zregbits * zregbits * zsopw)
  | ZFENCE of (zbits * zbits)
  | ZFENCE_TSO of (zbits * zbits)
  | ZFENCEI of unit
  | ZECALL of unit
  | ZMRET of unit
  | ZSRET of unit
  | ZEBREAK of unit
  | ZWFI of unit
  | ZSFENCE_VMA of (zregbits * zregbits)
  | ZLOADRES of (bool * bool * zregbits * zword_width * zregbits)
  | ZSTORECON of (bool * bool * zregbits * zregbits * zword_width * zregbits)
  | ZAMO of (zamoop * bool * bool * zregbits * zregbits * zword_width * zregbits)
  | ZC_NOP of unit
  | ZC_ADDI4SPN of (zcregbits * zbits)
  | ZC_LW of (zbits * zcregbits * zcregbits)
  | ZC_LD of (zbits * zcregbits * zcregbits)
  | ZC_SW of (zbits * zcregbits * zcregbits)
  | ZC_SD of (zbits * zcregbits * zcregbits)
  | ZC_ADDI of (zbits * zregbits)
  | ZC_JAL of zbits
  | ZC_ADDIW of (zbits * zregbits)
  | ZC_LI of (zbits * zregbits)
  | ZC_ADDI16SP of zbits
  | ZC_LUI of (zbits * zregbits)
  | ZC_SRLI of (zbits * zcregbits)
  | ZC_SRAI of (zbits * zcregbits)
  | ZC_ANDI of (zbits * zcregbits)
  | ZC_SUB of (zcregbits * zcregbits)
  | ZC_XOR of (zcregbits * zcregbits)
  | ZC_OR of (zcregbits * zcregbits)
  | ZC_AND of (zcregbits * zcregbits)
  | ZC_SUBW of (zcregbits * zcregbits)
  | ZC_ADDW of (zcregbits * zcregbits)
  | ZC_J of zbits
  | ZC_BEQZ of (zbits * zcregbits)
  | ZC_BNEZ of (zbits * zcregbits)
  | ZC_SLLI of (zbits * zregbits)
  | ZC_LWSP of (zbits * zregbits)
  | ZC_LDSP of (zbits * zregbits)
  | ZC_SWSP of (zbits * zregbits)
  | ZC_SDSP of (zbits * zregbits)
  | ZC_JR of zregbits
  | ZC_JALR of zregbits
  | ZC_MV of (zregbits * zregbits)
  | ZC_EBREAK of unit
  | ZC_ADD of (zregbits * zregbits)
  | ZMUL of (zregbits * zregbits * zregbits * bool * bool * bool)
  | ZDIV of (zregbits * zregbits * zregbits * bool)
  | ZREM of (zregbits * zregbits * zregbits * bool)
  | ZMULW of (zregbits * zregbits * zregbits)
  | ZDIVW of (zregbits * zregbits * zregbits * bool)
  | ZREMW of (zregbits * zregbits * zregbits * bool)
  | ZCSR of (zbits * zregbits * zregbits * bool * zcsrop)
  | ZCGetPerm of (zregbits * zregbits)
  | ZCGetType of (zregbits * zregbits)
  | ZCGetBase of (zregbits * zregbits)
  | ZCGetLen of (zregbits * zregbits)
  | ZCGetTag of (zregbits * zregbits)
  | ZCGetSealed of (zregbits * zregbits)
  | ZCGetOffset of (zregbits * zregbits)
  | ZCGetAddr of (zregbits * zregbits)
  | ZCSpecialRW of (zregbits * zregbits * zregbits)
  | ZCAndPerm of (zregbits * zregbits * zregbits)
  | ZCToPtr of (zregbits * zregbits * zregbits)
  | ZCIncOffset of (zregbits * zregbits * zregbits)
  | ZCIncOffsetImmediate of (zregbits * zregbits * zbits)
  | ZCSetOffset of (zregbits * zregbits * zregbits)
  | ZCSetBounds of (zregbits * zregbits * zregbits)
  | ZCSetBoundsImmediate of (zregbits * zregbits * zbits)
  | ZCSetBoundsExact of (zregbits * zregbits * zregbits)
  | ZCClearTag of (zregbits * zregbits)
  | ZCMove of (zregbits * zregbits)
  | ZClearRegs of (zClearRegSet * zbits * zbits)
  | ZCFromPtr of (zregbits * zregbits * zregbits)
  | ZCBuildCap of (zregbits * zregbits * zregbits)
  | ZCCopyType of (zregbits * zregbits * zregbits)
  | ZCCheckPerm of (zregbits * zregbits)
  | ZCCheckType of (zregbits * zregbits)
  | ZCCheckTag of zregbits
  | ZCTestSubset of (zregbits * zregbits * zregbits)
  | ZCSeal of (zregbits * zregbits * zregbits)
  | ZCCSeal of (zregbits * zregbits * zregbits)
  | ZCUnseal of (zregbits * zregbits * zregbits)
  | ZCCall of (zregbits * zregbits * zregbits)
  | ZCJALR of (zregbits * zregbits)
  | ZCLoadDDC of (zregbits * zregbits * bool * zword_width)
  | ZCLoadCap of (zregbits * zregbits * bool * zword_width)
  | ZCLoadCapDDC of (zregbits * zregbits)
  | ZCLoadCapCap of (zregbits * zregbits)
  | ZCStoreDDC of (zregbits * zregbits * zword_width)
  | ZCStoreCap of (zregbits * zregbits * zword_width)
  | ZCStoreCapDDC of (zregbits * zregbits)
  | ZCStoreCapCap of (zregbits * zregbits)
  | ZILLEGAL of zword
  | ZC_ILLEGAL of zhalf;;

let string_of_zast _ = "VARIANT";;

let rec zencdec_uop_forwards (zargz3 : (zuop)) : (bit) list = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_LUI -> [B0; B1; B1; B0; B1; B1; B1]
    | ZRISCV_AUIPC -> [B0; B0; B1; B0; B1; B1; B1]
  end)

and zencdec_uop_backwards (zargz3 : ((bit) list)) : zuop = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (6)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (5)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp4z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp5z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zb__0, Big_int.zero)) in
    ((((((eq_bit (zp6z3, B1)) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      ZRISCV_LUI
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (6)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (5)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp4z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp5z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zb__1, Big_int.zero)) in
    ((((((eq_bit (zp6z3, B1)) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZRISCV_AUIPC
  end)

and zencdec_uop_forwards_matches (zargz3 : (zuop)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_LUI -> true
    | ZRISCV_AUIPC -> true
    | _ -> false
  end)

and zencdec_uop_backwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (6)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (5)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp4z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp5z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zb__0, Big_int.zero)) in
    ((((((eq_bit (zp6z3, B1)) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (6)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (5)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp4z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp5z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zb__1, Big_int.zero)) in
    ((((((eq_bit (zp6z3, B1)) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | _ -> false
  end)

and zutype_mnemonic_forwards (zargz3 : (zuop)) : string = sail_call (fun r ->
  begin match zargz3 with | ZRISCV_LUI -> "lui" | ZRISCV_AUIPC -> "auipc" end)

and zutype_mnemonic_backwards (zargz3 : (string)) : zuop = sail_call (fun r ->
  begin match zargz3 with | "lui" -> ZRISCV_LUI | "auipc" -> ZRISCV_AUIPC end)

and zutype_mnemonic_forwards_matches (zargz3 : (zuop)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_LUI -> true
    | ZRISCV_AUIPC -> true
    | _ -> false
  end)

and zutype_mnemonic_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin match zargz3 with | "lui" -> true | "auipc" -> true | _ -> false end)

and z_s496z3 (z_s497z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s497z3 with
    | z_s498z3 when (string_startswith (z_s498z3, "auipc")) ->
      begin
        match (string_drop (z_s498z3, (string_length "auipc"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s492z3 (z_s493z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s493z3 with
    | z_s494z3 when (string_startswith (z_s494z3, "lui")) ->
      begin
        match (string_drop (z_s494z3, (string_length "lui"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zutype_mnemonic_matches_prefix (zargz3 : (string)) : ((zuop * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s495z3 when (begin
      match (z_s492z3 z_s495z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s492z3 z_s495z3) in
      ZSome (ZRISCV_LUI, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s499z3 when (begin
      match (z_s496z3 z_s499z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s496z3 z_s499z3) in
      ZSome (ZRISCV_AUIPC, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zencdec_bop_forwards (zargz3 : (zbop)) : (bit) list = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_BEQ -> [B0; B0; B0]
    | ZRISCV_BNE -> [B0; B0; B1]
    | ZRISCV_BLT -> [B1; B0; B0]
    | ZRISCV_BGE -> [B1; B0; B1]
    | ZRISCV_BLTU -> [B1; B1; B0]
    | ZRISCV_BGEU -> [B1; B1; B1]
  end)

and zencdec_bop_backwards (zargz3 : ((bit) list)) : zbop = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__0, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZRISCV_BEQ
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__1, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZRISCV_BNE
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__2, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      ZRISCV_BLT
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__3, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      ZRISCV_BGE
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__4, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      ZRISCV_BLTU
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__5, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      ZRISCV_BGEU
  end)

and zencdec_bop_forwards_matches (zargz3 : (zbop)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_BEQ -> true
    | ZRISCV_BNE -> true
    | ZRISCV_BLT -> true
    | ZRISCV_BGE -> true
    | ZRISCV_BLTU -> true
    | ZRISCV_BGEU -> true
    | _ -> false
  end)

and zencdec_bop_backwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__0, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__1, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__2, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__3, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__4, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__5, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | _ -> false
  end)

and zbtype_mnemonic_forwards (zargz3 : (zbop)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_BEQ -> "beq"
    | ZRISCV_BNE -> "bne"
    | ZRISCV_BLT -> "blt"
    | ZRISCV_BGE -> "bge"
    | ZRISCV_BLTU -> "bltu"
    | ZRISCV_BGEU -> "bgeu"
  end)

and zbtype_mnemonic_backwards (zargz3 : (string)) : zbop = sail_call (fun r ->
  begin
    match zargz3 with
    | "beq" -> ZRISCV_BEQ
    | "bne" -> ZRISCV_BNE
    | "blt" -> ZRISCV_BLT
    | "bge" -> ZRISCV_BGE
    | "bltu" -> ZRISCV_BLTU
    | "bgeu" -> ZRISCV_BGEU
  end)

and zbtype_mnemonic_forwards_matches (zargz3 : (zbop)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_BEQ -> true
    | ZRISCV_BNE -> true
    | ZRISCV_BLT -> true
    | ZRISCV_BGE -> true
    | ZRISCV_BLTU -> true
    | ZRISCV_BGEU -> true
    | _ -> false
  end)

and zbtype_mnemonic_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | "beq" -> true
    | "bne" -> true
    | "blt" -> true
    | "bge" -> true
    | "bltu" -> true
    | "bgeu" -> true
    | _ -> false
  end)

and z_s520z3 (z_s521z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s521z3 with
    | z_s522z3 when (string_startswith (z_s522z3, "bgeu")) ->
      begin
        match (string_drop (z_s522z3, (string_length "bgeu"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s516z3 (z_s517z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s517z3 with
    | z_s518z3 when (string_startswith (z_s518z3, "bltu")) ->
      begin
        match (string_drop (z_s518z3, (string_length "bltu"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s512z3 (z_s513z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s513z3 with
    | z_s514z3 when (string_startswith (z_s514z3, "bge")) ->
      begin
        match (string_drop (z_s514z3, (string_length "bge"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s508z3 (z_s509z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s509z3 with
    | z_s510z3 when (string_startswith (z_s510z3, "blt")) ->
      begin
        match (string_drop (z_s510z3, (string_length "blt"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s504z3 (z_s505z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s505z3 with
    | z_s506z3 when (string_startswith (z_s506z3, "bne")) ->
      begin
        match (string_drop (z_s506z3, (string_length "bne"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s500z3 (z_s501z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s501z3 with
    | z_s502z3 when (string_startswith (z_s502z3, "beq")) ->
      begin
        match (string_drop (z_s502z3, (string_length "beq"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zbtype_mnemonic_matches_prefix (zargz3 : (string)) : ((zbop * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s503z3 when (begin
      match (z_s500z3 z_s503z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s500z3 z_s503z3) in
      ZSome (ZRISCV_BEQ, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s507z3 when (begin
      match (z_s504z3 z_s507z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s504z3 z_s507z3) in
      ZSome (ZRISCV_BNE, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s511z3 when (begin
      match (z_s508z3 z_s511z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s508z3 z_s511z3) in
      ZSome (ZRISCV_BLT, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s515z3 when (begin
      match (z_s512z3 z_s515z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s512z3 z_s515z3) in
      ZSome (ZRISCV_BGE, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s519z3 when (begin
      match (z_s516z3 z_s519z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s516z3 z_s519z3) in
      ZSome (ZRISCV_BLTU, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s523z3 when (begin
      match (z_s520z3 z_s523z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s520z3 z_s523z3) in
      ZSome (ZRISCV_BGEU, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zencdec_iop_forwards (zargz3 : (ziop)) : (bit) list = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_ADDI -> [B0; B0; B0]
    | ZRISCV_SLTI -> [B0; B1; B0]
    | ZRISCV_SLTIU -> [B0; B1; B1]
    | ZRISCV_ANDI -> [B1; B1; B1]
    | ZRISCV_ORI -> [B1; B1; B0]
    | ZRISCV_XORI -> [B1; B0; B0]
  end)

and zencdec_iop_backwards (zargz3 : ((bit) list)) : ziop = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__0, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZRISCV_ADDI
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__1, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      ZRISCV_SLTI
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__2, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      ZRISCV_SLTIU
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__3, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      ZRISCV_ANDI
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__4, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      ZRISCV_ORI
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__5, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      ZRISCV_XORI
  end)

and zencdec_iop_forwards_matches (zargz3 : (ziop)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_ADDI -> true
    | ZRISCV_SLTI -> true
    | ZRISCV_SLTIU -> true
    | ZRISCV_ANDI -> true
    | ZRISCV_ORI -> true
    | ZRISCV_XORI -> true
    | _ -> false
  end)

and zencdec_iop_backwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__0, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__1, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__2, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__3, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__4, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__5, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | _ -> false
  end)

and zitype_mnemonic_forwards (zargz3 : (ziop)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_ADDI -> "addi"
    | ZRISCV_SLTI -> "slti"
    | ZRISCV_SLTIU -> "sltiu"
    | ZRISCV_XORI -> "xori"
    | ZRISCV_ORI -> "ori"
    | ZRISCV_ANDI -> "andi"
  end)

and zitype_mnemonic_backwards (zargz3 : (string)) : ziop = sail_call (fun r ->
  begin
    match zargz3 with
    | "addi" -> ZRISCV_ADDI
    | "slti" -> ZRISCV_SLTI
    | "sltiu" -> ZRISCV_SLTIU
    | "xori" -> ZRISCV_XORI
    | "ori" -> ZRISCV_ORI
    | "andi" -> ZRISCV_ANDI
  end)

and zitype_mnemonic_forwards_matches (zargz3 : (ziop)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_ADDI -> true
    | ZRISCV_SLTI -> true
    | ZRISCV_SLTIU -> true
    | ZRISCV_XORI -> true
    | ZRISCV_ORI -> true
    | ZRISCV_ANDI -> true
    | _ -> false
  end)

and zitype_mnemonic_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | "addi" -> true
    | "slti" -> true
    | "sltiu" -> true
    | "xori" -> true
    | "ori" -> true
    | "andi" -> true
    | _ -> false
  end)

and z_s544z3 (z_s545z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s545z3 with
    | z_s546z3 when (string_startswith (z_s546z3, "andi")) ->
      begin
        match (string_drop (z_s546z3, (string_length "andi"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s540z3 (z_s541z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s541z3 with
    | z_s542z3 when (string_startswith (z_s542z3, "ori")) ->
      begin
        match (string_drop (z_s542z3, (string_length "ori"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s536z3 (z_s537z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s537z3 with
    | z_s538z3 when (string_startswith (z_s538z3, "xori")) ->
      begin
        match (string_drop (z_s538z3, (string_length "xori"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s532z3 (z_s533z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s533z3 with
    | z_s534z3 when (string_startswith (z_s534z3, "sltiu")) ->
      begin
        match (string_drop (z_s534z3, (string_length "sltiu"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s528z3 (z_s529z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s529z3 with
    | z_s530z3 when (string_startswith (z_s530z3, "slti")) ->
      begin
        match (string_drop (z_s530z3, (string_length "slti"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s524z3 (z_s525z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s525z3 with
    | z_s526z3 when (string_startswith (z_s526z3, "addi")) ->
      begin
        match (string_drop (z_s526z3, (string_length "addi"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zitype_mnemonic_matches_prefix (zargz3 : (string)) : ((ziop * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s527z3 when (begin
      match (z_s524z3 z_s527z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s524z3 z_s527z3) in
      ZSome (ZRISCV_ADDI, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s531z3 when (begin
      match (z_s528z3 z_s531z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s528z3 z_s531z3) in
      ZSome (ZRISCV_SLTI, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s535z3 when (begin
      match (z_s532z3 z_s535z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s532z3 z_s535z3) in
      ZSome (ZRISCV_SLTIU, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s539z3 when (begin
      match (z_s536z3 z_s539z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s536z3 z_s539z3) in
      ZSome (ZRISCV_XORI, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s543z3 when (begin
      match (z_s540z3 z_s543z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s540z3 z_s543z3) in
      ZSome (ZRISCV_ORI, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s547z3 when (begin
      match (z_s544z3 z_s547z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s544z3 z_s547z3) in
      ZSome (ZRISCV_ANDI, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zencdec_sop_forwards (zargz3 : (zsop)) : (bit) list = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_SLLI -> [B0; B0; B1]
    | ZRISCV_SRLI -> [B1; B0; B1]
    | ZRISCV_SRAI -> [B1; B0; B1]
  end)

and zencdec_sop_backwards (zargz3 : ((bit) list)) : zsop = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__0, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZRISCV_SLLI
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__1, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      ZRISCV_SRLI
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__2, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      ZRISCV_SRAI
  end)

and zencdec_sop_forwards_matches (zargz3 : (zsop)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_SLLI -> true
    | ZRISCV_SRLI -> true
    | ZRISCV_SRAI -> true
    | _ -> false
  end)

and zencdec_sop_backwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__0, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__1, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__2, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | _ -> false
  end)

and zshiftiop_mnemonic_forwards (zargz3 : (zsop)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_SLLI -> "slli"
    | ZRISCV_SRLI -> "srli"
    | ZRISCV_SRAI -> "srai"
  end)

and zshiftiop_mnemonic_backwards (zargz3 : (string)) : zsop = sail_call (fun r ->
  begin
    match zargz3 with
    | "slli" -> ZRISCV_SLLI
    | "srli" -> ZRISCV_SRLI
    | "srai" -> ZRISCV_SRAI
  end)

and zshiftiop_mnemonic_forwards_matches (zargz3 : (zsop)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_SLLI -> true
    | ZRISCV_SRLI -> true
    | ZRISCV_SRAI -> true
    | _ -> false
  end)

and zshiftiop_mnemonic_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | "slli" -> true
    | "srli" -> true
    | "srai" -> true
    | _ -> false
  end)

and z_s556z3 (z_s557z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s557z3 with
    | z_s558z3 when (string_startswith (z_s558z3, "srai")) ->
      begin
        match (string_drop (z_s558z3, (string_length "srai"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s552z3 (z_s553z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s553z3 with
    | z_s554z3 when (string_startswith (z_s554z3, "srli")) ->
      begin
        match (string_drop (z_s554z3, (string_length "srli"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s548z3 (z_s549z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s549z3 with
    | z_s550z3 when (string_startswith (z_s550z3, "slli")) ->
      begin
        match (string_drop (z_s550z3, (string_length "slli"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zshiftiop_mnemonic_matches_prefix (zargz3 : (string)) : ((zsop * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s551z3 when (begin
      match (z_s548z3 z_s551z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s548z3 z_s551z3) in
      ZSome (ZRISCV_SLLI, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s555z3 when (begin
      match (z_s552z3 z_s555z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s552z3 z_s555z3) in
      ZSome (ZRISCV_SRLI, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s559z3 when (begin
      match (z_s556z3 z_s559z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s556z3 z_s559z3) in
      ZSome (ZRISCV_SRAI, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zrtype_mnemonic_forwards (zargz3 : (zrop)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_ADD -> "add"
    | ZRISCV_SLT -> "slt"
    | ZRISCV_SLTU -> "sltu"
    | ZRISCV_AND -> "and"
    | ZRISCV_OR -> "or"
    | ZRISCV_XOR -> "xor"
    | ZRISCV_SLL -> "sll"
    | ZRISCV_SRL -> "srl"
    | ZRISCV_SUB -> "sub"
    | ZRISCV_SRA -> "sra"
  end)

and zrtype_mnemonic_backwards (zargz3 : (string)) : zrop = sail_call (fun r ->
  begin
    match zargz3 with
    | "add" -> ZRISCV_ADD
    | "slt" -> ZRISCV_SLT
    | "sltu" -> ZRISCV_SLTU
    | "and" -> ZRISCV_AND
    | "or" -> ZRISCV_OR
    | "xor" -> ZRISCV_XOR
    | "sll" -> ZRISCV_SLL
    | "srl" -> ZRISCV_SRL
    | "sub" -> ZRISCV_SUB
    | "sra" -> ZRISCV_SRA
  end)

and zrtype_mnemonic_forwards_matches (zargz3 : (zrop)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_ADD -> true
    | ZRISCV_SLT -> true
    | ZRISCV_SLTU -> true
    | ZRISCV_AND -> true
    | ZRISCV_OR -> true
    | ZRISCV_XOR -> true
    | ZRISCV_SLL -> true
    | ZRISCV_SRL -> true
    | ZRISCV_SUB -> true
    | ZRISCV_SRA -> true
    | _ -> false
  end)

and zrtype_mnemonic_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | "add" -> true
    | "slt" -> true
    | "sltu" -> true
    | "and" -> true
    | "or" -> true
    | "xor" -> true
    | "sll" -> true
    | "srl" -> true
    | "sub" -> true
    | "sra" -> true
    | _ -> false
  end)

and z_s596z3 (z_s597z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s597z3 with
    | z_s598z3 when (string_startswith (z_s598z3, "sra")) ->
      begin
        match (string_drop (z_s598z3, (string_length "sra"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s592z3 (z_s593z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s593z3 with
    | z_s594z3 when (string_startswith (z_s594z3, "sub")) ->
      begin
        match (string_drop (z_s594z3, (string_length "sub"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s588z3 (z_s589z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s589z3 with
    | z_s590z3 when (string_startswith (z_s590z3, "srl")) ->
      begin
        match (string_drop (z_s590z3, (string_length "srl"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s584z3 (z_s585z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s585z3 with
    | z_s586z3 when (string_startswith (z_s586z3, "sll")) ->
      begin
        match (string_drop (z_s586z3, (string_length "sll"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s580z3 (z_s581z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s581z3 with
    | z_s582z3 when (string_startswith (z_s582z3, "xor")) ->
      begin
        match (string_drop (z_s582z3, (string_length "xor"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s576z3 (z_s577z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s577z3 with
    | z_s578z3 when (string_startswith (z_s578z3, "or")) ->
      begin
        match (string_drop (z_s578z3, (string_length "or"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s572z3 (z_s573z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s573z3 with
    | z_s574z3 when (string_startswith (z_s574z3, "and")) ->
      begin
        match (string_drop (z_s574z3, (string_length "and"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s568z3 (z_s569z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s569z3 with
    | z_s570z3 when (string_startswith (z_s570z3, "sltu")) ->
      begin
        match (string_drop (z_s570z3, (string_length "sltu"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s564z3 (z_s565z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s565z3 with
    | z_s566z3 when (string_startswith (z_s566z3, "slt")) ->
      begin
        match (string_drop (z_s566z3, (string_length "slt"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s560z3 (z_s561z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s561z3 with
    | z_s562z3 when (string_startswith (z_s562z3, "add")) ->
      begin
        match (string_drop (z_s562z3, (string_length "add"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zrtype_mnemonic_matches_prefix (zargz3 : (string)) : ((zrop * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s563z3 when (begin
      match (z_s560z3 z_s563z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s560z3 z_s563z3) in
      ZSome (ZRISCV_ADD, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s567z3 when (begin
      match (z_s564z3 z_s567z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s564z3 z_s567z3) in
      ZSome (ZRISCV_SLT, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s571z3 when (begin
      match (z_s568z3 z_s571z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s568z3 z_s571z3) in
      ZSome (ZRISCV_SLTU, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s575z3 when (begin
      match (z_s572z3 z_s575z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s572z3 z_s575z3) in
      ZSome (ZRISCV_AND, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s579z3 when (begin
      match (z_s576z3 z_s579z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s576z3 z_s579z3) in
      ZSome (ZRISCV_OR, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s583z3 when (begin
      match (z_s580z3 z_s583z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s580z3 z_s583z3) in
      ZSome (ZRISCV_XOR, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s587z3 when (begin
      match (z_s584z3 z_s587z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s584z3 z_s587z3) in
      ZSome (ZRISCV_SLL, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s591z3 when (begin
      match (z_s588z3 z_s591z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s588z3 z_s591z3) in
      ZSome (ZRISCV_SRL, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s595z3 when (begin
      match (z_s592z3 z_s595z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s592z3 z_s595z3) in
      ZSome (ZRISCV_SUB, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s599z3 when (begin
      match (z_s596z3 z_s599z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s596z3 z_s599z3) in
      ZSome (ZRISCV_SRA, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zextend_value ((zis_unsigned, zvalue) : (bool * ((bit) list) zMemoryOpResult)) : ((bit) list) zMemoryOpResult = sail_call (fun r ->
  begin
    match zvalue with
    | ZMemValue (zv) ->
      ZMemValue (if zis_unsigned then (zEXTZ ((Big_int.of_int (64)), zv)) else (zEXTS ((Big_int.of_int (64)), zv)))
    | ZMemException (ze) -> ZMemException ze
  end)

and zprocess_load ((zrd, zaddr, zvalue, zis_unsigned) : ((bit) list * (bit) list * ((bit) list) zMemoryOpResult * bool)) : bool = sail_call (fun r ->
  begin
    match (zextend_value (zis_unsigned, zvalue)) with
    | ZMemValue (zresult) ->
      begin zwX ((zregbits_to_regno zrd), zresult); true end
    | ZMemException (ze) -> begin zhandle_mem_exception (zaddr, ze); false end
  end)

and zcheck_misaligned ((zvaddr, zwidth) : (zxlenbits * zword_width)) : bool = sail_call (fun r ->
  if (Platform.enable_misaligned_access ()) then false else (begin
    match zwidth with
    | ZBYTE -> false
    | ZHALF -> eq_bool ((zbit_to_bool (access (zvaddr, Big_int.zero))), true)
    | ZWORD ->
      (eq_bool ((zbit_to_bool (access (zvaddr, Big_int.zero))), true)) || (eq_bool ((zbit_to_bool (access (zvaddr, (Big_int.of_int (1))))), true))
    | ZDOUBLE ->
      (eq_bool ((zbit_to_bool (access (zvaddr, Big_int.zero))), true)) || ((eq_bool ((zbit_to_bool (access (zvaddr, (Big_int.of_int (1))))), true)) || (eq_bool ((zbit_to_bool (access (zvaddr, (Big_int.of_int (2))))), true)))
  end))

and zmaybe_aq_forwards (zargz3 : (bool)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | zp0z3 when (eq_bool (zp0z3, true)) -> ".aq"
    | zp0z3 when (eq_bool (zp0z3, false)) -> ""
  end)

and zmaybe_aq_backwards (zargz3 : (string)) : bool = sail_call (fun r ->
  begin match zargz3 with | ".aq" -> true | "" -> false end)

and zmaybe_aq_forwards_matches (zargz3 : (bool)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zp0z3 when (eq_bool (zp0z3, true)) -> true
    | zp0z3 when (eq_bool (zp0z3, false)) -> true
    | _ -> false
  end)

and zmaybe_aq_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin match zargz3 with | ".aq" -> true | "" -> true | _ -> false end)

and z_s604z3 (z_s605z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s605z3 with
    | z_s606z3 when (string_startswith (z_s606z3, "")) ->
      begin
        match (string_drop (z_s606z3, (string_length ""))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s600z3 (z_s601z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s601z3 with
    | z_s602z3 when (string_startswith (z_s602z3, ".aq")) ->
      begin
        match (string_drop (z_s602z3, (string_length ".aq"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zmaybe_aq_matches_prefix (zargz3 : (string)) : ((bool * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s603z3 when (begin
      match (z_s600z3 z_s603z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s600z3 z_s603z3) in
      ZSome (true, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s607z3 when (begin
      match (z_s604z3 z_s607z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s604z3 z_s607z3) in
      ZSome (false, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zmaybe_rl_forwards (zargz3 : (bool)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | zp0z3 when (eq_bool (zp0z3, true)) -> ".rl"
    | zp0z3 when (eq_bool (zp0z3, false)) -> ""
  end)

and zmaybe_rl_backwards (zargz3 : (string)) : bool = sail_call (fun r ->
  begin match zargz3 with | ".rl" -> true | "" -> false end)

and zmaybe_rl_forwards_matches (zargz3 : (bool)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zp0z3 when (eq_bool (zp0z3, true)) -> true
    | zp0z3 when (eq_bool (zp0z3, false)) -> true
    | _ -> false
  end)

and zmaybe_rl_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin match zargz3 with | ".rl" -> true | "" -> true | _ -> false end)

and z_s612z3 (z_s613z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s613z3 with
    | z_s614z3 when (string_startswith (z_s614z3, "")) ->
      begin
        match (string_drop (z_s614z3, (string_length ""))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s608z3 (z_s609z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s609z3 with
    | z_s610z3 when (string_startswith (z_s610z3, ".rl")) ->
      begin
        match (string_drop (z_s610z3, (string_length ".rl"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zmaybe_rl_matches_prefix (zargz3 : (string)) : ((bool * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s611z3 when (begin
      match (z_s608z3 z_s611z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s608z3 z_s611z3) in
      ZSome (true, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s615z3 when (begin
      match (z_s612z3 z_s615z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s612z3 z_s615z3) in
      ZSome (false, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zmaybe_u_forwards (zargz3 : (bool)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | zp0z3 when (eq_bool (zp0z3, true)) -> "u"
    | zp0z3 when (eq_bool (zp0z3, false)) -> ""
  end)

and zmaybe_u_backwards (zargz3 : (string)) : bool = sail_call (fun r ->
  begin match zargz3 with | "u" -> true | "" -> false end)

and zmaybe_u_forwards_matches (zargz3 : (bool)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zp0z3 when (eq_bool (zp0z3, true)) -> true
    | zp0z3 when (eq_bool (zp0z3, false)) -> true
    | _ -> false
  end)

and zmaybe_u_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin match zargz3 with | "u" -> true | "" -> true | _ -> false end)

and z_s620z3 (z_s621z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s621z3 with
    | z_s622z3 when (string_startswith (z_s622z3, "")) ->
      begin
        match (string_drop (z_s622z3, (string_length ""))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s616z3 (z_s617z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s617z3 with
    | z_s618z3 when (string_startswith (z_s618z3, "u")) ->
      begin
        match (string_drop (z_s618z3, (string_length "u"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zmaybe_u_matches_prefix (zargz3 : (string)) : ((bool * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s619z3 when (begin
      match (z_s616z3 z_s619z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s616z3 z_s619z3) in
      ZSome (true, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s623z3 when (begin
      match (z_s620z3 z_s623z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s620z3 z_s623z3) in
      ZSome (false, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zshiftw_mnemonic_forwards (zargz3 : (zsop)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_SLLI -> "slli"
    | ZRISCV_SRLI -> "srli"
    | ZRISCV_SRAI -> "srai"
  end)

and zshiftw_mnemonic_backwards (zargz3 : (string)) : zsop = sail_call (fun r ->
  begin
    match zargz3 with
    | "slli" -> ZRISCV_SLLI
    | "srli" -> ZRISCV_SRLI
    | "srai" -> ZRISCV_SRAI
  end)

and zshiftw_mnemonic_forwards_matches (zargz3 : (zsop)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_SLLI -> true
    | ZRISCV_SRLI -> true
    | ZRISCV_SRAI -> true
    | _ -> false
  end)

and zshiftw_mnemonic_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | "slli" -> true
    | "srli" -> true
    | "srai" -> true
    | _ -> false
  end)

and z_s632z3 (z_s633z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s633z3 with
    | z_s634z3 when (string_startswith (z_s634z3, "srai")) ->
      begin
        match (string_drop (z_s634z3, (string_length "srai"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s628z3 (z_s629z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s629z3 with
    | z_s630z3 when (string_startswith (z_s630z3, "srli")) ->
      begin
        match (string_drop (z_s630z3, (string_length "srli"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s624z3 (z_s625z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s625z3 with
    | z_s626z3 when (string_startswith (z_s626z3, "slli")) ->
      begin
        match (string_drop (z_s626z3, (string_length "slli"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zshiftw_mnemonic_matches_prefix (zargz3 : (string)) : ((zsop * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s627z3 when (begin
      match (z_s624z3 z_s627z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s624z3 z_s627z3) in
      ZSome (ZRISCV_SLLI, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s631z3 when (begin
      match (z_s628z3 z_s631z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s628z3 z_s631z3) in
      ZSome (ZRISCV_SRLI, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s635z3 when (begin
      match (z_s632z3 z_s635z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s632z3 z_s635z3) in
      ZSome (ZRISCV_SRAI, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zrtypew_mnemonic_forwards (zargz3 : (zropw)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_ADDW -> "addw"
    | ZRISCV_SUBW -> "subw"
    | ZRISCV_SLLW -> "sllw"
    | ZRISCV_SRLW -> "srlw"
    | ZRISCV_SRAW -> "sraw"
  end)

and zrtypew_mnemonic_backwards (zargz3 : (string)) : zropw = sail_call (fun r ->
  begin
    match zargz3 with
    | "addw" -> ZRISCV_ADDW
    | "subw" -> ZRISCV_SUBW
    | "sllw" -> ZRISCV_SLLW
    | "srlw" -> ZRISCV_SRLW
    | "sraw" -> ZRISCV_SRAW
  end)

and zrtypew_mnemonic_forwards_matches (zargz3 : (zropw)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_ADDW -> true
    | ZRISCV_SUBW -> true
    | ZRISCV_SLLW -> true
    | ZRISCV_SRLW -> true
    | ZRISCV_SRAW -> true
    | _ -> false
  end)

and zrtypew_mnemonic_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | "addw" -> true
    | "subw" -> true
    | "sllw" -> true
    | "srlw" -> true
    | "sraw" -> true
    | _ -> false
  end)

and z_s652z3 (z_s653z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s653z3 with
    | z_s654z3 when (string_startswith (z_s654z3, "sraw")) ->
      begin
        match (string_drop (z_s654z3, (string_length "sraw"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s648z3 (z_s649z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s649z3 with
    | z_s650z3 when (string_startswith (z_s650z3, "srlw")) ->
      begin
        match (string_drop (z_s650z3, (string_length "srlw"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s644z3 (z_s645z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s645z3 with
    | z_s646z3 when (string_startswith (z_s646z3, "sllw")) ->
      begin
        match (string_drop (z_s646z3, (string_length "sllw"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s640z3 (z_s641z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s641z3 with
    | z_s642z3 when (string_startswith (z_s642z3, "subw")) ->
      begin
        match (string_drop (z_s642z3, (string_length "subw"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s636z3 (z_s637z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s637z3 with
    | z_s638z3 when (string_startswith (z_s638z3, "addw")) ->
      begin
        match (string_drop (z_s638z3, (string_length "addw"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zrtypew_mnemonic_matches_prefix (zargz3 : (string)) : ((zropw * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s639z3 when (begin
      match (z_s636z3 z_s639z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s636z3 z_s639z3) in
      ZSome (ZRISCV_ADDW, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s643z3 when (begin
      match (z_s640z3 z_s643z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s640z3 z_s643z3) in
      ZSome (ZRISCV_SUBW, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s647z3 when (begin
      match (z_s644z3 z_s647z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s644z3 z_s647z3) in
      ZSome (ZRISCV_SLLW, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s651z3 when (begin
      match (z_s648z3 z_s651z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s648z3 z_s651z3) in
      ZSome (ZRISCV_SRLW, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s655z3 when (begin
      match (z_s652z3 z_s655z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s652z3 z_s655z3) in
      ZSome (ZRISCV_SRAW, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zshiftiwop_mnemonic_forwards (zargz3 : (zsopw)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_SLLIW -> "slliw"
    | ZRISCV_SRLIW -> "srliw"
    | ZRISCV_SRAIW -> "sraiw"
  end)

and zshiftiwop_mnemonic_backwards (zargz3 : (string)) : zsopw = sail_call (fun r ->
  begin
    match zargz3 with
    | "slliw" -> ZRISCV_SLLIW
    | "srliw" -> ZRISCV_SRLIW
    | "sraiw" -> ZRISCV_SRAIW
  end)

and zshiftiwop_mnemonic_forwards_matches (zargz3 : (zsopw)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRISCV_SLLIW -> true
    | ZRISCV_SRLIW -> true
    | ZRISCV_SRAIW -> true
    | _ -> false
  end)

and zshiftiwop_mnemonic_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | "slliw" -> true
    | "srliw" -> true
    | "sraiw" -> true
    | _ -> false
  end)

and z_s664z3 (z_s665z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s665z3 with
    | z_s666z3 when (string_startswith (z_s666z3, "sraiw")) ->
      begin
        match (string_drop (z_s666z3, (string_length "sraiw"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s660z3 (z_s661z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s661z3 with
    | z_s662z3 when (string_startswith (z_s662z3, "srliw")) ->
      begin
        match (string_drop (z_s662z3, (string_length "srliw"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s656z3 (z_s657z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s657z3 with
    | z_s658z3 when (string_startswith (z_s658z3, "slliw")) ->
      begin
        match (string_drop (z_s658z3, (string_length "slliw"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zshiftiwop_mnemonic_matches_prefix (zargz3 : (string)) : ((zsopw * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s659z3 when (begin
      match (z_s656z3 z_s659z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s656z3 z_s659z3) in
      ZSome (ZRISCV_SLLIW, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s663z3 when (begin
      match (z_s660z3 z_s663z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s660z3 z_s663z3) in
      ZSome (ZRISCV_SRLIW, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s667z3 when (begin
      match (z_s664z3 z_s667z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s664z3 z_s667z3) in
      ZSome (ZRISCV_SRAIW, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zbit_maybe_r_forwards (zargz3 : ((bit) list)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, Big_int.zero)) in
    eq_bit (zp0z3, B1)) ->
      "r"
    | zb__1 when (let zp0z3 = (access (zb__1, Big_int.zero)) in
    eq_bit (zp0z3, B0)) ->
      ""
  end)

and zbit_maybe_r_backwards (zargz3 : (string)) : (bit) list = sail_call (fun r ->
  begin match zargz3 with | "r" -> [B1] | "" -> [B0] end)

and zbit_maybe_r_forwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, Big_int.zero)) in
    eq_bit (zp0z3, B1)) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, Big_int.zero)) in
    eq_bit (zp0z3, B0)) ->
      true
    | _ -> false
  end)

and zbit_maybe_r_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin match zargz3 with | "r" -> true | "" -> true | _ -> false end)

and z_s672z3 (z_s673z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s673z3 with
    | z_s674z3 when (string_startswith (z_s674z3, "")) ->
      begin
        match (string_drop (z_s674z3, (string_length ""))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s668z3 (z_s669z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s669z3 with
    | z_s670z3 when (string_startswith (z_s670z3, "r")) ->
      begin
        match (string_drop (z_s670z3, (string_length "r"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zbit_maybe_r_matches_prefix (zargz3 : (string)) : (((bit) list * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s671z3 when (begin
      match (z_s668z3 z_s671z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s668z3 z_s671z3) in
      ZSome ([B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s675z3 when (begin
      match (z_s672z3 z_s675z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s672z3 z_s675z3) in
      ZSome ([B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zbit_maybe_w_forwards (zargz3 : ((bit) list)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, Big_int.zero)) in
    eq_bit (zp0z3, B1)) ->
      "w"
    | zb__1 when (let zp0z3 = (access (zb__1, Big_int.zero)) in
    eq_bit (zp0z3, B0)) ->
      ""
  end)

and zbit_maybe_w_backwards (zargz3 : (string)) : (bit) list = sail_call (fun r ->
  begin match zargz3 with | "w" -> [B1] | "" -> [B0] end)

and zbit_maybe_w_forwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, Big_int.zero)) in
    eq_bit (zp0z3, B1)) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, Big_int.zero)) in
    eq_bit (zp0z3, B0)) ->
      true
    | _ -> false
  end)

and zbit_maybe_w_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin match zargz3 with | "w" -> true | "" -> true | _ -> false end)

and z_s680z3 (z_s681z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s681z3 with
    | z_s682z3 when (string_startswith (z_s682z3, "")) ->
      begin
        match (string_drop (z_s682z3, (string_length ""))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s676z3 (z_s677z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s677z3 with
    | z_s678z3 when (string_startswith (z_s678z3, "w")) ->
      begin
        match (string_drop (z_s678z3, (string_length "w"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zbit_maybe_w_matches_prefix (zargz3 : (string)) : (((bit) list * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s679z3 when (begin
      match (z_s676z3 z_s679z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s676z3 z_s679z3) in
      ZSome ([B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s683z3 when (begin
      match (z_s680z3 z_s683z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s680z3 z_s683z3) in
      ZSome ([B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zbit_maybe_i_forwards (zargz3 : ((bit) list)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, Big_int.zero)) in
    eq_bit (zp0z3, B1)) ->
      "i"
    | zb__1 when (let zp0z3 = (access (zb__1, Big_int.zero)) in
    eq_bit (zp0z3, B0)) ->
      ""
  end)

and zbit_maybe_i_backwards (zargz3 : (string)) : (bit) list = sail_call (fun r ->
  begin match zargz3 with | "i" -> [B1] | "" -> [B0] end)

and zbit_maybe_i_forwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, Big_int.zero)) in
    eq_bit (zp0z3, B1)) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, Big_int.zero)) in
    eq_bit (zp0z3, B0)) ->
      true
    | _ -> false
  end)

and zbit_maybe_i_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin match zargz3 with | "i" -> true | "" -> true | _ -> false end)

and z_s688z3 (z_s689z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s689z3 with
    | z_s690z3 when (string_startswith (z_s690z3, "")) ->
      begin
        match (string_drop (z_s690z3, (string_length ""))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s684z3 (z_s685z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s685z3 with
    | z_s686z3 when (string_startswith (z_s686z3, "i")) ->
      begin
        match (string_drop (z_s686z3, (string_length "i"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zbit_maybe_i_matches_prefix (zargz3 : (string)) : (((bit) list * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s687z3 when (begin
      match (z_s684z3 z_s687z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s684z3 z_s687z3) in
      ZSome ([B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s691z3 when (begin
      match (z_s688z3 z_s691z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s688z3 z_s691z3) in
      ZSome ([B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zbit_maybe_o_forwards (zargz3 : ((bit) list)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, Big_int.zero)) in
    eq_bit (zp0z3, B1)) ->
      "o"
    | zb__1 when (let zp0z3 = (access (zb__1, Big_int.zero)) in
    eq_bit (zp0z3, B0)) ->
      ""
  end)

and zbit_maybe_o_backwards (zargz3 : (string)) : (bit) list = sail_call (fun r ->
  begin match zargz3 with | "o" -> [B1] | "" -> [B0] end)

and zbit_maybe_o_forwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, Big_int.zero)) in
    eq_bit (zp0z3, B1)) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, Big_int.zero)) in
    eq_bit (zp0z3, B0)) ->
      true
    | _ -> false
  end)

and zbit_maybe_o_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin match zargz3 with | "o" -> true | "" -> true | _ -> false end)

and z_s696z3 (z_s697z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s697z3 with
    | z_s698z3 when (string_startswith (z_s698z3, "")) ->
      begin
        match (string_drop (z_s698z3, (string_length ""))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s692z3 (z_s693z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s693z3 with
    | z_s694z3 when (string_startswith (z_s694z3, "o")) ->
      begin
        match (string_drop (z_s694z3, (string_length "o"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zbit_maybe_o_matches_prefix (zargz3 : (string)) : (((bit) list * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s695z3 when (begin
      match (z_s692z3 z_s695z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s692z3 z_s695z3) in
      ZSome ([B1], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s699z3 when (begin
      match (z_s696z3 z_s699z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s696z3 z_s699z3) in
      ZSome ([B0], (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zfence_bits_forwards (zargz3 : ((bit) list)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | zv__0 ->
      let zi = (subrange (zv__0, (Big_int.of_int (3)), (Big_int.of_int (3)))) in
      let zw = (subrange (zv__0, Big_int.zero, Big_int.zero)) in
      let zr = (subrange (zv__0, (Big_int.of_int (1)), (Big_int.of_int (1)))) in
      let zo = (subrange (zv__0, (Big_int.of_int (2)), (Big_int.of_int (2)))) in
      let zi = (subrange (zv__0, (Big_int.of_int (3)), (Big_int.of_int (3)))) in
      string_append ((zbit_maybe_i_forwards zi), (string_append ((zbit_maybe_o_forwards zo), (string_append ((zbit_maybe_r_forwards zr), (string_append ((zbit_maybe_w_forwards zw), "")))))))
  end)

and z_s700z3 (z_s701z3 : (string)) : (((bit) list * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s701z3 with
    | z_s702z3 ->
      begin
        match (zbit_maybe_i_matches_prefix z_s702z3) with
        | ZSome (zi, z_s703z3) ->
          begin
            match (string_drop (z_s702z3, z_s703z3)) with
            | z_s704z3 ->
              begin
                match (zbit_maybe_o_matches_prefix z_s704z3) with
                | ZSome (zo, z_s705z3) ->
                  begin
                    match (string_drop (z_s704z3, z_s705z3)) with
                    | z_s706z3 ->
                      begin
                        match (zbit_maybe_r_matches_prefix z_s706z3) with
                        | ZSome (zr, z_s707z3) ->
                          begin
                            match (string_drop (z_s706z3, z_s707z3)) with
                            | z_s708z3 ->
                              begin
                                match (zbit_maybe_w_matches_prefix z_s708z3) with
                                | ZSome (zw, z_s709z3) ->
                                  begin
                                    match (string_drop (z_s708z3, z_s709z3)) with
                                    | "" -> ZSome (zi, zo, zr, zw)
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zfence_bits_backwards (zargz3 : (string)) : (bit) list = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s710z3 when (begin
      match (z_s700z3 z_s710z3) with
      | ZSome (zi, zo, zr, zw) -> true
      | _ -> false
    end) ->
      let ZSome (zi, zo, zr, zw) = (z_s700z3 z_s710z3) in
      append ((zi), (append ((zo), (append ((zr), (zw))))))
  end)

and zfence_bits_forwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin match zargz3 with | zv__1 -> true | _ -> false end)

and z_s711z3 (z_s712z3 : (string)) : (((bit) list * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s712z3 with
    | z_s713z3 ->
      begin
        match (zbit_maybe_i_matches_prefix z_s713z3) with
        | ZSome (zi, z_s714z3) ->
          begin
            match (string_drop (z_s713z3, z_s714z3)) with
            | z_s715z3 ->
              begin
                match (zbit_maybe_o_matches_prefix z_s715z3) with
                | ZSome (zo, z_s716z3) ->
                  begin
                    match (string_drop (z_s715z3, z_s716z3)) with
                    | z_s717z3 ->
                      begin
                        match (zbit_maybe_r_matches_prefix z_s717z3) with
                        | ZSome (zr, z_s718z3) ->
                          begin
                            match (string_drop (z_s717z3, z_s718z3)) with
                            | z_s719z3 ->
                              begin
                                match (zbit_maybe_w_matches_prefix z_s719z3) with
                                | ZSome (zw, z_s720z3) ->
                                  begin
                                    match (string_drop (z_s719z3, z_s720z3)) with
                                    | "" -> ZSome (zi, zo, zr, zw)
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zfence_bits_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s721z3 when (begin
      match (z_s711z3 z_s721z3) with
      | ZSome (zi, zo, zr, zw) -> true
      | _ -> false
    end) ->
      let ZSome (zi, zo, zr, zw) = (z_s711z3 z_s721z3) in true
    | _ -> false
  end)

and z_s722z3 (z_s723z3 : (string)) : (((bit) list * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s723z3 with
    | z_s724z3 ->
      begin
        match (zbit_maybe_i_matches_prefix z_s724z3) with
        | ZSome (zi, z_s725z3) ->
          begin
            match (string_drop (z_s724z3, z_s725z3)) with
            | z_s726z3 ->
              begin
                match (zbit_maybe_o_matches_prefix z_s726z3) with
                | ZSome (zo, z_s727z3) ->
                  begin
                    match (string_drop (z_s726z3, z_s727z3)) with
                    | z_s728z3 ->
                      begin
                        match (zbit_maybe_r_matches_prefix z_s728z3) with
                        | ZSome (zr, z_s729z3) ->
                          begin
                            match (string_drop (z_s728z3, z_s729z3)) with
                            | z_s730z3 ->
                              begin
                                match (zbit_maybe_w_matches_prefix z_s730z3) with
                                | ZSome (zw, z_s731z3) ->
                                  begin
                                    match (string_drop (z_s730z3, z_s731z3)) with
                                    | zsz3 -> ZSome (zi, zo, zr, zw, zsz3)
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zfence_bits_matches_prefix (zargz3 : (string)) : (((bit) list * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s732z3 when (begin
      match (z_s722z3 z_s732z3) with
      | ZSome (zi, zo, zr, zw, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zi, zo, zr, zw, zsz3) = (z_s722z3 z_s732z3) in
      ZSome (append ((zi), (append ((zo), (append ((zr), (zw)))))), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zaqrl_str ((zaq, zrl) : (bool * bool)) : string = sail_call (fun r ->
  begin
    match (zaq, zrl) with
    | (zp0z3, zp1z3) when ((eq_bool (zp1z3, false)) && (eq_bool (zp0z3, false))) ->
      ""
    | (zp0z3, zp1z3) when ((eq_bool (zp1z3, true)) && (eq_bool (zp0z3, false))) ->
      ".rl"
    | (zp0z3, zp1z3) when ((eq_bool (zp1z3, false)) && (eq_bool (zp0z3, true))) ->
      ".aq"
    | (zp0z3, zp1z3) when ((eq_bool (zp1z3, true)) && (eq_bool (zp0z3, true))) ->
      ".aqrl"
  end)

and zlrsc_width_str (zwidth : (zword_width)) : string = sail_call (fun r ->
  begin
    match zwidth with
    | ZBYTE -> ".b"
    | ZHALF -> ".h"
    | ZWORD -> ".w"
    | ZDOUBLE -> ".d"
  end)

and zprocess_loadres ((zrd, zaddr, zvalue, zis_unsigned) : ((bit) list * (bit) list * ((bit) list) zMemoryOpResult * bool)) : bool = sail_call (fun r ->
  begin
    match (zextend_value (zis_unsigned, zvalue)) with
    | ZMemValue (zresult) ->
      begin
        Platform.load_reservation zaddr;
        zwX ((zregbits_to_regno zrd), zresult);
        true
      end
    | ZMemException (ze) -> begin zhandle_mem_exception (zaddr, ze); false end
  end)

and zencdec_amoop_forwards (zargz3 : (zamoop)) : (bit) list = sail_call (fun r ->
  begin
    match zargz3 with
    | ZAMOSWAP -> [B0; B0; B0; B0; B1]
    | ZAMOADD -> [B0; B0; B0; B0; B0]
    | ZAMOXOR -> [B0; B0; B1; B0; B0]
    | ZAMOAND -> [B0; B1; B1; B0; B0]
    | ZAMOOR -> [B0; B1; B0; B0; B0]
    | ZAMOMIN -> [B1; B0; B0; B0; B0]
    | ZAMOMAX -> [B1; B0; B1; B0; B0]
    | ZAMOMINU -> [B1; B1; B0; B0; B0]
    | ZAMOMAXU -> [B1; B1; B1; B0; B0]
  end)

and zencdec_amoop_backwards (zargz3 : ((bit) list)) : zamoop = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__0, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZAMOSWAP
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__1, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZAMOADD
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__2, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZAMOXOR
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__3, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      ZAMOAND
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__4, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      ZAMOOR
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__5, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      ZAMOMIN
    | zb__6 when (let zp0z3 = (access (zb__6, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__6, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__6, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__6, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__6, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      ZAMOMAX
    | zb__7 when (let zp0z3 = (access (zb__7, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__7, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__7, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__7, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__7, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      ZAMOMINU
    | zb__8 when (let zp0z3 = (access (zb__8, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__8, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__8, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__8, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__8, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      ZAMOMAXU
  end)

and zencdec_amoop_forwards_matches (zargz3 : (zamoop)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZAMOSWAP -> true
    | ZAMOADD -> true
    | ZAMOXOR -> true
    | ZAMOAND -> true
    | ZAMOOR -> true
    | ZAMOMIN -> true
    | ZAMOMAX -> true
    | ZAMOMINU -> true
    | ZAMOMAXU -> true
    | _ -> false
  end)

and zencdec_amoop_backwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__0, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__1, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__2, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__3, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__4, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__5, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__6 when (let zp0z3 = (access (zb__6, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__6, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__6, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__6, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__6, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__7 when (let zp0z3 = (access (zb__7, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__7, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__7, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__7, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__7, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__8 when (let zp0z3 = (access (zb__8, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__8, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__8, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__8, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__8, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | _ -> false
  end)

and zamo_mnemonic_forwards (zargz3 : (zamoop)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | ZAMOSWAP -> "amoswap"
    | ZAMOADD -> "amoadd"
    | ZAMOXOR -> "amoxor"
    | ZAMOAND -> "amoand"
    | ZAMOOR -> "amoor"
    | ZAMOMIN -> "amomin"
    | ZAMOMAX -> "amomax"
    | ZAMOMINU -> "amominu"
    | ZAMOMAXU -> "amomaxu"
  end)

and zamo_mnemonic_backwards (zargz3 : (string)) : zamoop = sail_call (fun r ->
  begin
    match zargz3 with
    | "amoswap" -> ZAMOSWAP
    | "amoadd" -> ZAMOADD
    | "amoxor" -> ZAMOXOR
    | "amoand" -> ZAMOAND
    | "amoor" -> ZAMOOR
    | "amomin" -> ZAMOMIN
    | "amomax" -> ZAMOMAX
    | "amominu" -> ZAMOMINU
    | "amomaxu" -> ZAMOMAXU
  end)

and zamo_mnemonic_forwards_matches (zargz3 : (zamoop)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZAMOSWAP -> true
    | ZAMOADD -> true
    | ZAMOXOR -> true
    | ZAMOAND -> true
    | ZAMOOR -> true
    | ZAMOMIN -> true
    | ZAMOMAX -> true
    | ZAMOMINU -> true
    | ZAMOMAXU -> true
    | _ -> false
  end)

and zamo_mnemonic_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | "amoswap" -> true
    | "amoadd" -> true
    | "amoxor" -> true
    | "amoand" -> true
    | "amoor" -> true
    | "amomin" -> true
    | "amomax" -> true
    | "amominu" -> true
    | "amomaxu" -> true
    | _ -> false
  end)

and z_s765z3 (z_s766z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s766z3 with
    | z_s767z3 when (string_startswith (z_s767z3, "amomaxu")) ->
      begin
        match (string_drop (z_s767z3, (string_length "amomaxu"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s761z3 (z_s762z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s762z3 with
    | z_s763z3 when (string_startswith (z_s763z3, "amominu")) ->
      begin
        match (string_drop (z_s763z3, (string_length "amominu"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s757z3 (z_s758z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s758z3 with
    | z_s759z3 when (string_startswith (z_s759z3, "amomax")) ->
      begin
        match (string_drop (z_s759z3, (string_length "amomax"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s753z3 (z_s754z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s754z3 with
    | z_s755z3 when (string_startswith (z_s755z3, "amomin")) ->
      begin
        match (string_drop (z_s755z3, (string_length "amomin"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s749z3 (z_s750z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s750z3 with
    | z_s751z3 when (string_startswith (z_s751z3, "amoor")) ->
      begin
        match (string_drop (z_s751z3, (string_length "amoor"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s745z3 (z_s746z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s746z3 with
    | z_s747z3 when (string_startswith (z_s747z3, "amoand")) ->
      begin
        match (string_drop (z_s747z3, (string_length "amoand"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s741z3 (z_s742z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s742z3 with
    | z_s743z3 when (string_startswith (z_s743z3, "amoxor")) ->
      begin
        match (string_drop (z_s743z3, (string_length "amoxor"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s737z3 (z_s738z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s738z3 with
    | z_s739z3 when (string_startswith (z_s739z3, "amoadd")) ->
      begin
        match (string_drop (z_s739z3, (string_length "amoadd"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s733z3 (z_s734z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s734z3 with
    | z_s735z3 when (string_startswith (z_s735z3, "amoswap")) ->
      begin
        match (string_drop (z_s735z3, (string_length "amoswap"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zamo_mnemonic_matches_prefix (zargz3 : (string)) : ((zamoop * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s736z3 when (begin
      match (z_s733z3 z_s736z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s733z3 z_s736z3) in
      ZSome (ZAMOSWAP, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s740z3 when (begin
      match (z_s737z3 z_s740z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s737z3 z_s740z3) in
      ZSome (ZAMOADD, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s744z3 when (begin
      match (z_s741z3 z_s744z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s741z3 z_s744z3) in
      ZSome (ZAMOXOR, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s748z3 when (begin
      match (z_s745z3 z_s748z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s745z3 z_s748z3) in
      ZSome (ZAMOAND, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s752z3 when (begin
      match (z_s749z3 z_s752z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s749z3 z_s752z3) in
      ZSome (ZAMOOR, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s756z3 when (begin
      match (z_s753z3 z_s756z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s753z3 z_s756z3) in
      ZSome (ZAMOMIN, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s760z3 when (begin
      match (z_s757z3 z_s760z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s757z3 z_s760z3) in
      ZSome (ZAMOMAX, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s764z3 when (begin
      match (z_s761z3 z_s764z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s761z3 z_s764z3) in
      ZSome (ZAMOMINU, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s768z3 when (begin
      match (z_s765z3 z_s768z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s765z3 z_s768z3) in
      ZSome (ZAMOMAXU, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zencdec_mul_op_forwards (zargz3 : ((bool * bool * bool))) : (bit) list = sail_call (fun r ->
  begin
    match zargz3 with
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, false))) ->
      [B0; B0; B0]
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
      [B0; B0; B1]
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
      [B0; B1; B0]
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, true))) ->
      [B0; B1; B1]
  end)

and zencdec_mul_op_backwards (zargz3 : ((bit) list)) : (bool * bool * bool) = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__0, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      (false, true, true)
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__1, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      (true, true, true)
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__2, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      (true, true, false)
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__3, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      (true, false, false)
  end)

and zencdec_mul_op_forwards_matches (zargz3 : ((bool * bool * bool))) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, false))) ->
      true
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
      true
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
      true
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, true))) ->
      true
    | _ -> false
  end)

and zencdec_mul_op_backwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__0, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__1, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__2, Big_int.zero)) in
    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp2z3 = (access (zb__3, Big_int.zero)) in
    ((eq_bit (zp2z3, B1)) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | _ -> false
  end)

and zmul_mnemonic_forwards (zargz3 : ((bool * bool * bool))) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, false))) ->
      "mul"
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
      "mulh"
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
      "mulhsu"
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, true))) ->
      "mulhu"
  end)

and zmul_mnemonic_backwards (zargz3 : (string)) : (bool * bool * bool) = sail_call (fun r ->
  begin
    match zargz3 with
    | "mul" -> (false, true, true)
    | "mulh" -> (true, true, true)
    | "mulhsu" -> (true, true, false)
    | "mulhu" -> (true, false, false)
  end)

and zmul_mnemonic_forwards_matches (zargz3 : ((bool * bool * bool))) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, false))) ->
      true
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, true)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
      true
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, true))) && (eq_bool (zp0z3, true))) ->
      true
    | (zp0z3, zp1z3, zp2z3) when (((eq_bool (zp2z3, false)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, true))) ->
      true
    | _ -> false
  end)

and zmul_mnemonic_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | "mul" -> true
    | "mulh" -> true
    | "mulhsu" -> true
    | "mulhu" -> true
    | _ -> false
  end)

and z_s781z3 (z_s782z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s782z3 with
    | z_s783z3 when (string_startswith (z_s783z3, "mulhu")) ->
      begin
        match (string_drop (z_s783z3, (string_length "mulhu"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s777z3 (z_s778z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s778z3 with
    | z_s779z3 when (string_startswith (z_s779z3, "mulhsu")) ->
      begin
        match (string_drop (z_s779z3, (string_length "mulhsu"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s773z3 (z_s774z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s774z3 with
    | z_s775z3 when (string_startswith (z_s775z3, "mulh")) ->
      begin
        match (string_drop (z_s775z3, (string_length "mulh"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s769z3 (z_s770z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s770z3 with
    | z_s771z3 when (string_startswith (z_s771z3, "mul")) ->
      begin
        match (string_drop (z_s771z3, (string_length "mul"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zmul_mnemonic_matches_prefix (zargz3 : (string)) : (((bool * bool * bool) * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s772z3 when (begin
      match (z_s769z3 z_s772z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s769z3 z_s772z3) in
      ZSome ((false, true, true), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s776z3 when (begin
      match (z_s773z3 z_s776z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s773z3 z_s776z3) in
      ZSome ((true, true, true), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s780z3 when (begin
      match (z_s777z3 z_s780z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s777z3 z_s780z3) in
      ZSome ((true, true, false), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s784z3 when (begin
      match (z_s781z3 z_s784z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s781z3 z_s784z3) in
      ZSome ((true, false, false), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zmaybe_not_u_forwards (zargz3 : (bool)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | zp0z3 when (eq_bool (zp0z3, false)) -> "u"
    | zp0z3 when (eq_bool (zp0z3, true)) -> ""
  end)

and zmaybe_not_u_backwards (zargz3 : (string)) : bool = sail_call (fun r ->
  begin match zargz3 with | "u" -> false | "" -> true end)

and zmaybe_not_u_forwards_matches (zargz3 : (bool)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zp0z3 when (eq_bool (zp0z3, false)) -> true
    | zp0z3 when (eq_bool (zp0z3, true)) -> true
    | _ -> false
  end)

and zmaybe_not_u_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin match zargz3 with | "u" -> true | "" -> true | _ -> false end)

and z_s789z3 (z_s790z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s790z3 with
    | z_s791z3 when (string_startswith (z_s791z3, "")) ->
      begin
        match (string_drop (z_s791z3, (string_length ""))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s785z3 (z_s786z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s786z3 with
    | z_s787z3 when (string_startswith (z_s787z3, "u")) ->
      begin
        match (string_drop (z_s787z3, (string_length "u"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zmaybe_not_u_matches_prefix (zargz3 : (string)) : ((bool * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s788z3 when (begin
      match (z_s785z3 z_s788z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s785z3 z_s788z3) in
      ZSome (false, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s792z3 when (begin
      match (z_s789z3 z_s792z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s789z3 z_s792z3) in
      ZSome (true, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zencdec_csrop_forwards (zargz3 : (zcsrop)) : (bit) list = sail_call (fun r ->
  begin
    match zargz3 with
    | ZCSRRW -> [B0; B1]
    | ZCSRRS -> [B1; B0]
    | ZCSRRC -> [B1; B1]
  end)

and zencdec_csrop_backwards (zargz3 : ((bit) list)) : zcsrop = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__0, Big_int.zero)) in
    (eq_bit (zp1z3, B1)) && (eq_bit (zp0z3, B0))) ->
      ZCSRRW
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__1, Big_int.zero)) in
    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B1))) ->
      ZCSRRS
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__2, Big_int.zero)) in
    (eq_bit (zp1z3, B1)) && (eq_bit (zp0z3, B1))) ->
      ZCSRRC
  end)

and zencdec_csrop_forwards_matches (zargz3 : (zcsrop)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZCSRRW -> true
    | ZCSRRS -> true
    | ZCSRRC -> true
    | _ -> false
  end)

and zencdec_csrop_backwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__0, Big_int.zero)) in
    (eq_bit (zp1z3, B1)) && (eq_bit (zp0z3, B0))) ->
      true
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__1, Big_int.zero)) in
    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B1))) ->
      true
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp1z3 = (access (zb__2, Big_int.zero)) in
    (eq_bit (zp1z3, B1)) && (eq_bit (zp0z3, B1))) ->
      true
    | _ -> false
  end)

and zreadCSR (zcsr : (zcsreg)) : zxlenbits = sail_call (fun r ->
  let zres = (begin
    match zcsr with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__0, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__0, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__0, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__0, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      !zmvendorid
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__1, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__1, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__1, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__1, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      !zmarchid
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__2, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__2, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__2, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__2, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      !zmimpid
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__3, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__3, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__3, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__3, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      !zmhartid
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__4, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__4, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__4, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__4, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__4, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__4, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__4, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__4, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      z_get_Mstatus_bits !zmstatus
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__5, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__5, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__5, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__5, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__5, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__5, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__5, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__5, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      z_get_Misa_bits !zmisa
    | zb__6 when (let zp0z3 = (access (zb__6, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__6, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__6, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__6, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__6, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__6, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__6, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__6, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__6, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__6, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__6, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__6, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      z_get_Medeleg_bits !zmedeleg
    | zb__7 when (let zp0z3 = (access (zb__7, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__7, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__7, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__7, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__7, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__7, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__7, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__7, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__7, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__7, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__7, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__7, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      z_get_Minterrupts_bits !zmideleg
    | zb__8 when (let zp0z3 = (access (zb__8, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__8, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__8, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__8, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__8, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__8, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__8, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__8, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__8, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__8, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__8, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__8, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      z_get_Minterrupts_bits !zmie
    | zb__9 when (let zp0z3 = (access (zb__9, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__9, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__9, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__9, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__9, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__9, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__9, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__9, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__9, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__9, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__9, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__9, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      zgetCapOffsetBits !zMTCC
    | zb__10 when (let zp0z3 = (access (zb__10, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__10, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__10, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__10, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__10, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__10, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__10, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__10, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__10, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__10, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__10, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__10, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      zEXTZ ((Big_int.of_int (64)), (z_get_Counteren_bits !zmcounteren))
    | zb__11 when (let zp0z3 = (access (zb__11, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__11, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__11, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__11, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__11, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__11, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__11, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__11, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__11, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__11, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__11, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__11, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      !zmscratch
    | zb__12 when (let zp0z3 = (access (zb__12, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__12, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__12, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__12, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__12, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__12, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__12, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__12, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__12, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__12, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__12, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__12, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      and_vec ((zgetCapOffsetBits !zMEPCC), (zpc_alignment_mask ()))
    | zb__13 when (let zp0z3 = (access (zb__13, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__13, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__13, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__13, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__13, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__13, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__13, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__13, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__13, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__13, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__13, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__13, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      z_get_Mcause_bits !zmcause
    | zb__14 when (let zp0z3 = (access (zb__14, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__14, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__14, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__14, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__14, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__14, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__14, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__14, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__14, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__14, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__14, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__14, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      !zmtval
    | zb__15 when (let zp0z3 = (access (zb__15, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__15, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__15, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__15, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__15, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__15, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__15, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__15, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__15, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__15, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__15, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__15, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      z_get_Minterrupts_bits !zmip
    | zb__16 when (let zp0z3 = (access (zb__16, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__16, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__16, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__16, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__16, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__16, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__16, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__16, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__16, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__16, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__16, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__16, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      !zpmpcfg0
    | zb__17 when (let zp0z3 = (access (zb__17, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__17, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__17, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__17, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__17, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__17, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__17, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__17, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__17, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__17, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__17, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__17, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      !zpmpaddr0
    | zb__18 when (let zp0z3 = (access (zb__18, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__18, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__18, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__18, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__18, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__18, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__18, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__18, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__18, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__18, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__18, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__18, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      z_get_Sstatus_bits (zlower_mstatus !zmstatus)
    | zb__19 when (let zp0z3 = (access (zb__19, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__19, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__19, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__19, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__19, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__19, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__19, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__19, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__19, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__19, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__19, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__19, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      z_get_Sedeleg_bits !zsedeleg
    | zb__20 when (let zp0z3 = (access (zb__20, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__20, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__20, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__20, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__20, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__20, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__20, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__20, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__20, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__20, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__20, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__20, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      z_get_Sinterrupts_bits !zsideleg
    | zb__21 when (let zp0z3 = (access (zb__21, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__21, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__21, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__21, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__21, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__21, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__21, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__21, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__21, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__21, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__21, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__21, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      z_get_Sinterrupts_bits (zlower_mie (!zmie, !zmideleg))
    | zb__22 when (let zp0z3 = (access (zb__22, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__22, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__22, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__22, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__22, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__22, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__22, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__22, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__22, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__22, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__22, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__22, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      zgetCapOffsetBits !zSTCC
    | zb__23 when (let zp0z3 = (access (zb__23, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__23, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__23, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__23, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__23, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__23, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__23, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__23, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__23, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__23, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__23, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__23, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      zEXTZ ((Big_int.of_int (64)), (z_get_Counteren_bits !zscounteren))
    | zb__24 when (let zp0z3 = (access (zb__24, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__24, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__24, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__24, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__24, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__24, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__24, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__24, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__24, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__24, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__24, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__24, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      !zsscratch
    | zb__25 when (let zp0z3 = (access (zb__25, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__25, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__25, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__25, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__25, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__25, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__25, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__25, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__25, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__25, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__25, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__25, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      and_vec ((zgetCapOffsetBits !zSEPCC), (zpc_alignment_mask ()))
    | zb__26 when (let zp0z3 = (access (zb__26, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__26, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__26, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__26, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__26, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__26, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__26, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__26, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__26, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__26, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__26, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__26, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      z_get_Mcause_bits !zscause
    | zb__27 when (let zp0z3 = (access (zb__27, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__27, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__27, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__27, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__27, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__27, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__27, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__27, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__27, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__27, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__27, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__27, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      !zstval
    | zb__28 when (let zp0z3 = (access (zb__28, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__28, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__28, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__28, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__28, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__28, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__28, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__28, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__28, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__28, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__28, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__28, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      z_get_Sinterrupts_bits (zlower_mip (!zmip, !zmideleg))
    | zb__29 when (let zp0z3 = (access (zb__29, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__29, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__29, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__29, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__29, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__29, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__29, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__29, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__29, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__29, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__29, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__29, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      !zsatp
    | zb__30 when (let zp0z3 = (access (zb__30, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__30, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__30, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__30, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__30, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__30, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__30, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__30, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__30, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__30, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__30, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__30, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      !zmcycle
    | zb__31 when (let zp0z3 = (access (zb__31, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__31, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__31, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__31, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__31, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__31, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__31, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__31, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__31, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__31, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__31, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__31, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      !zmtime
    | zb__32 when (let zp0z3 = (access (zb__32, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__32, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__32, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__32, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__32, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__32, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__32, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__32, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__32, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__32, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__32, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__32, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      !zminstret
    | zb__33 when (let zp0z3 = (access (zb__33, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__33, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__33, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__33, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__33, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__33, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__33, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__33, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__33, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__33, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__33, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__33, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      not_vec !ztselect
    | _ ->
      begin
        match (zread_UExt_CSR zcsr) with
        | ZSome (zres) -> zres
        | ZNone (()) ->
          begin
            print_bits ("unhandled read to CSR ", zcsr);
            [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0]
          end
      end
  end) in
  begin
    Platform.print_reg (concat_str ("CSR ", (concat_str ((zcsr_name zcsr), (concat_str (" -> ", (string_of_bits zres)))))));
    zres
  end)

and zwriteCSR ((zcsr, zvalue) : (zcsreg * zxlenbits)) : unit = sail_call (fun r ->
  let zres = (begin
    match zcsr with
    | zb__0 when (let zp0z3 = (access (zb__0, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__0, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__0, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__0, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__0, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        zmstatus := (zlegalizze_mstatus (!zmstatus, zvalue));
        ZSome (z_get_Mstatus_bits !zmstatus)
      end
    | zb__1 when (let zp0z3 = (access (zb__1, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__1, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__1, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__1, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__1, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        zmisa := (zlegalizze_misa (!zmisa, zvalue));
        ZSome (z_get_Misa_bits !zmisa)
      end
    | zb__2 when (let zp0z3 = (access (zb__2, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__2, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__2, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__2, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__2, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        zmedeleg := (zlegalizze_medeleg (!zmedeleg, zvalue));
        ZSome (z_get_Medeleg_bits !zmedeleg)
      end
    | zb__3 when (let zp0z3 = (access (zb__3, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__3, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__3, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__3, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__3, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        zmideleg := (zlegalizze_mideleg (!zmideleg, zvalue));
        ZSome (z_get_Minterrupts_bits !zmideleg)
      end
    | zb__4 when (let zp0z3 = (access (zb__4, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__4, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__4, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__4, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__4, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__4, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__4, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__4, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__4, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__4, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__4, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__4, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        zmie := (zlegalizze_mie (!zmie, zvalue));
        ZSome (z_get_Minterrupts_bits !zmie)
      end
    | zb__5 when (let zp0z3 = (access (zb__5, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__5, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__5, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__5, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__5, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__5, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__5, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__5, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__5, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__5, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__5, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__5, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zmtvec = (zlegalizze_tvec ((zMk_Mtvec (zgetCapOffsetBits !zMTCC)), zvalue)) in
      begin
        zMTCC := (zsetCapOffsetOrNull (!zMTCC, (z_get_Mtvec_bits zmtvec)));
        ZSome (z_get_Mtvec_bits zmtvec)
      end
    | zb__6 when (let zp0z3 = (access (zb__6, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__6, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__6, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__6, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__6, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__6, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__6, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__6, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__6, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__6, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__6, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__6, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        zmcounteren := (zlegalizze_mcounteren (!zmcounteren, zvalue));
        ZSome (zEXTZ ((Big_int.of_int (64)), (z_get_Counteren_bits !zmcounteren)))
      end
    | zb__7 when (let zp0z3 = (access (zb__7, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__7, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__7, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__7, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__7, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__7, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__7, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__7, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__7, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__7, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__7, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__7, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin zmscratch := zvalue; ZSome !zmscratch end
    | zb__8 when (let zp0z3 = (access (zb__8, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__8, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__8, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__8, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__8, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__8, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__8, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__8, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__8, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__8, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__8, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__8, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zmepc = (zlegalizze_xepc zvalue) in
      begin zMEPCC := (zsetCapOffsetOrNull (!zMEPCC, zmepc)); ZSome zmepc end
    | zb__9 when (let zp0z3 = (access (zb__9, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__9, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__9, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__9, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__9, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__9, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__9, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__9, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__9, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__9, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__9, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__9, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        z_set_Mcause_bits (zmcause, zvalue);
        ZSome (z_get_Mcause_bits !zmcause)
      end
    | zb__10 when (let zp0z3 = (access (zb__10, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__10, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__10, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__10, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__10, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__10, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__10, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__10, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__10, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__10, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__10, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__10, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin zmtval := zvalue; ZSome !zmtval end
    | zb__11 when (let zp0z3 = (access (zb__11, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__11, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__11, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__11, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__11, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__11, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__11, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__11, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__11, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__11, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__11, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__11, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        zmip := (zlegalizze_mip (!zmip, zvalue));
        ZSome (z_get_Minterrupts_bits !zmip)
      end
    | zb__12 when (let zp0z3 = (access (zb__12, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__12, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__12, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__12, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__12, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__12, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__12, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__12, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__12, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__12, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__12, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__12, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin zpmpcfg0 := zvalue; ZSome !zpmpcfg0 end
    | zb__13 when (let zp0z3 = (access (zb__13, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__13, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__13, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__13, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__13, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__13, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__13, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__13, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__13, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__13, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__13, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__13, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin zpmpaddr0 := zvalue; ZSome !zpmpaddr0 end
    | zb__14 when (let zp0z3 = (access (zb__14, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__14, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__14, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__14, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__14, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__14, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__14, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__14, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__14, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__14, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__14, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__14, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        zmstatus := (zlegalizze_sstatus (!zmstatus, zvalue));
        ZSome (z_get_Mstatus_bits !zmstatus)
      end
    | zb__15 when (let zp0z3 = (access (zb__15, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__15, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__15, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__15, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__15, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__15, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__15, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__15, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__15, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__15, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__15, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__15, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        zsedeleg := (zlegalizze_sedeleg (!zsedeleg, zvalue));
        ZSome (z_get_Sedeleg_bits !zsedeleg)
      end
    | zb__16 when (let zp0z3 = (access (zb__16, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__16, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__16, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__16, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__16, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__16, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__16, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__16, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__16, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__16, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__16, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__16, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        z_set_Sinterrupts_bits (zsideleg, zvalue);
        ZSome (z_get_Sinterrupts_bits !zsideleg)
      end
    | zb__17 when (let zp0z3 = (access (zb__17, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__17, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__17, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__17, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__17, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__17, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__17, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__17, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__17, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__17, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__17, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__17, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        zmie := (zlegalizze_sie (!zmie, !zmideleg, zvalue));
        ZSome (z_get_Minterrupts_bits !zmie)
      end
    | zb__18 when (let zp0z3 = (access (zb__18, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__18, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__18, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__18, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__18, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__18, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__18, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__18, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__18, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__18, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__18, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__18, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zstvec = (zlegalizze_tvec ((zMk_Mtvec (zgetCapOffsetBits !zSTCC)), zvalue)) in
      begin
        zSTCC := (zsetCapOffsetOrNull (!zSTCC, (z_get_Mtvec_bits zstvec)));
        ZSome (z_get_Mtvec_bits zstvec)
      end
    | zb__19 when (let zp0z3 = (access (zb__19, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__19, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__19, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__19, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__19, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__19, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__19, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__19, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__19, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__19, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__19, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__19, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        zscounteren := (zlegalizze_scounteren (!zscounteren, zvalue));
        ZSome (zEXTZ ((Big_int.of_int (64)), (z_get_Counteren_bits !zscounteren)))
      end
    | zb__20 when (let zp0z3 = (access (zb__20, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__20, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__20, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__20, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__20, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__20, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__20, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__20, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__20, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__20, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__20, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__20, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin zsscratch := zvalue; ZSome !zsscratch end
    | zb__21 when (let zp0z3 = (access (zb__21, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__21, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__21, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__21, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__21, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__21, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__21, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__21, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__21, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__21, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__21, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__21, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zsepc = (zlegalizze_xepc zvalue) in
      begin zSEPCC := (zsetCapOffsetOrNull (!zSEPCC, zsepc)); ZSome zsepc end
    | zb__22 when (let zp0z3 = (access (zb__22, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__22, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__22, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__22, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__22, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__22, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__22, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__22, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__22, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__22, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__22, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__22, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        z_set_Mcause_bits (zscause, zvalue);
        ZSome (z_get_Mcause_bits !zscause)
      end
    | zb__23 when (let zp0z3 = (access (zb__23, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__23, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__23, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__23, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__23, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__23, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__23, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__23, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__23, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__23, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__23, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__23, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B1)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin zstval := zvalue; ZSome !zstval end
    | zb__24 when (let zp0z3 = (access (zb__24, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__24, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__24, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__24, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__24, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__24, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__24, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__24, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__24, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__24, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__24, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__24, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        zmip := (zlegalizze_sip (!zmip, !zmideleg, zvalue));
        ZSome (z_get_Minterrupts_bits !zmip)
      end
    | zb__25 when (let zp0z3 = (access (zb__25, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__25, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__25, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__25, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__25, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__25, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__25, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__25, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__25, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__25, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__25, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__25, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      begin
        zsatp := (zlegalizze_satp ((zcur_Architecture ()), !zsatp, zvalue));
        ZSome !zsatp
      end
    | zb__26 when (let zp0z3 = (access (zb__26, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__26, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__26, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__26, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__26, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__26, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__26, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__26, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__26, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__26, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__26, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__26, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      begin ztselect := zvalue; ZSome !ztselect end
    | zb__27 when (let zp0z3 = (access (zb__27, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__27, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__27, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__27, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__27, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__27, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__27, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__27, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__27, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__27, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__27, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__27, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      begin zmcycle := zvalue; ZSome !zmcycle end
    | zb__28 when (let zp0z3 = (access (zb__28, (Big_int.of_int (11)))) in
    let zp1z3 = (access (zb__28, (Big_int.of_int (10)))) in
    let zp2z3 = (access (zb__28, (Big_int.of_int (9)))) in
    let zp3z3 = (access (zb__28, (Big_int.of_int (8)))) in
    let zp4z3 = (access (zb__28, (Big_int.of_int (7)))) in
    let zp5z3 = (access (zb__28, (Big_int.of_int (6)))) in
    let zp6z3 = (access (zb__28, (Big_int.of_int (5)))) in
    let zp7z3 = (access (zb__28, (Big_int.of_int (4)))) in
    let zp8z3 = (access (zb__28, (Big_int.of_int (3)))) in
    let zp9z3 = (access (zb__28, (Big_int.of_int (2)))) in
    let zp10z3 = (access (zb__28, (Big_int.of_int (1)))) in
    let zp11z3 = (access (zb__28, Big_int.zero)) in
    (((((((((((eq_bit (zp11z3, B0)) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      begin zminstret := zvalue; zminstret_written := true; ZSome !zminstret end
    | _ -> ZNone ()
  end) in
  begin
    match zres with
    | ZSome (zv) ->
      Platform.print_reg (concat_str ("CSR ", (concat_str ((zcsr_name zcsr), (concat_str (" <- ", (concat_str ((string_of_bits zv), (concat_str (" (input: ", (concat_str ((string_of_bits zvalue), ")"))))))))))))
    | ZNone (()) ->
      if (zwrite_UExt_CSR (zcsr, zvalue)) then () else (print_bits ("unhandled write to CSR ", zcsr))
  end)

and zmaybe_i_forwards (zargz3 : (bool)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | zp0z3 when (eq_bool (zp0z3, true)) -> "i"
    | zp0z3 when (eq_bool (zp0z3, false)) -> ""
  end)

and zmaybe_i_backwards (zargz3 : (string)) : bool = sail_call (fun r ->
  begin match zargz3 with | "i" -> true | "" -> false end)

and zmaybe_i_forwards_matches (zargz3 : (bool)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zp0z3 when (eq_bool (zp0z3, true)) -> true
    | zp0z3 when (eq_bool (zp0z3, false)) -> true
    | _ -> false
  end)

and zmaybe_i_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin match zargz3 with | "i" -> true | "" -> true | _ -> false end)

and z_s797z3 (z_s798z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s798z3 with
    | z_s799z3 when (string_startswith (z_s799z3, "")) ->
      begin
        match (string_drop (z_s799z3, (string_length ""))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s793z3 (z_s794z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s794z3 with
    | z_s795z3 when (string_startswith (z_s795z3, "i")) ->
      begin
        match (string_drop (z_s795z3, (string_length "i"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zmaybe_i_matches_prefix (zargz3 : (string)) : ((bool * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s796z3 when (begin
      match (z_s793z3 z_s796z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s793z3 z_s796z3) in
      ZSome (true, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s800z3 when (begin
      match (z_s797z3 z_s800z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s797z3 z_s800z3) in
      ZSome (false, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zcsr_mnemonic_forwards (zargz3 : (zcsrop)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | ZCSRRW -> "csrrw"
    | ZCSRRS -> "csrrs"
    | ZCSRRC -> "csrrc"
  end)

and zcsr_mnemonic_backwards (zargz3 : (string)) : zcsrop = sail_call (fun r ->
  begin
    match zargz3 with
    | "csrrw" -> ZCSRRW
    | "csrrs" -> ZCSRRS
    | "csrrc" -> ZCSRRC
  end)

and zcsr_mnemonic_forwards_matches (zargz3 : (zcsrop)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZCSRRW -> true
    | ZCSRRS -> true
    | ZCSRRC -> true
    | _ -> false
  end)

and zcsr_mnemonic_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | "csrrw" -> true
    | "csrrs" -> true
    | "csrrc" -> true
    | _ -> false
  end)

and z_s809z3 (z_s810z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s810z3 with
    | z_s811z3 when (string_startswith (z_s811z3, "csrrc")) ->
      begin
        match (string_drop (z_s811z3, (string_length "csrrc"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s805z3 (z_s806z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s806z3 with
    | z_s807z3 when (string_startswith (z_s807z3, "csrrs")) ->
      begin
        match (string_drop (z_s807z3, (string_length "csrrs"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s801z3 (z_s802z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s802z3 with
    | z_s803z3 when (string_startswith (z_s803z3, "csrrw")) ->
      begin
        match (string_drop (z_s803z3, (string_length "csrrw"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zcsr_mnemonic_matches_prefix (zargz3 : (string)) : ((zcsrop * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s804z3 when (begin
      match (z_s801z3 z_s804z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s801z3 z_s804z3) in
      ZSome (ZCSRRW, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s808z3 when (begin
      match (z_s805z3 z_s808z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s805z3 z_s808z3) in
      ZSome (ZCSRRS, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s812z3 when (begin
      match (z_s809z3 z_s812z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s809z3 z_s812z3) in
      ZSome (ZCSRRC, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zraise_c2_exception6 ((zcapEx, zregnum) : (zCapEx * (bit) list)) : bool = sail_call (fun r ->
  begin
    print_endline (concat_str ("CHERI ", (concat_str ((zstring_of_capex zcapEx), (concat_str (" Reg=", (string_of_bits zregnum)))))));
    let zcause = ({zcap_idx = zregnum; zcapEx = zcapEx}) in
    let zt = ({ztrap = ZE_CHERI; zexcinfo = ZNone (); zccause = ZSome zcause}) in
    begin
      znextPC := (zhandle_exception (!zcur_privilege, (ZCTL_TRAP zt), !zPC));
      false
    end
  end)

and zraise_c2_exception ((zcapEx, zregnum) : (zCapEx * (bit) list)) : bool = sail_call (fun r ->
  let zreg6 = (append ([B0], zregnum)) in
  zraise_c2_exception6 (zcapEx, zreg6))

and zraise_c2_exception_pcc (zcapEx : (zCapEx)) : bool = sail_call (fun r ->
  zraise_c2_exception6 (zcapEx, [B1; B0; B0; B0; B0; B0]))

and zpcc_access_system_regs (() : (unit)) : bool = sail_call (fun r ->
  !zPCC.zaccess_system_regs)

and zexecute_branch (zpc : ((bit) list)) : bool = sail_call (fun r ->
  let zlen = (zgetCapLength !zPCC) in
  if (gt ((add_int ((uint zpc), (Big_int.of_int (4)))), zlen)) then (zraise_c2_exception_pcc ZCapEx_LengthViolation) else (begin
    znextPC := zpc;
    false
  end))

and zexecute_branch_pcc (znewPCC : (zCapability)) : unit = sail_call (fun r ->
  begin
    znextPC := (zto_bits ((Big_int.of_int (64)), (zgetCapOffset znewPCC)));
    znextPCC := znewPCC
  end)

and zhandle_load_data_via_cap ((zrd, zcs, zcap_val, zvaddr, zis_unsigned, zwidth) : ((bit) list * (bit) list * zCapability * Big_int.num * bool * zword_width)) : bool = sail_call (fun r ->
  let (zbase, ztop) = (zgetCapBounds zcap_val) in
  let zvaddrBits = (zto_bits (zxlen, zvaddr)) in
  let zsizze = (zword_width_bytes zwidth) in
  let zaq = false in
  let zrl = false in
  if (not (zcap_val.ztag)) then (zraise_c2_exception6 (ZCapEx_TagViolation, zcs)) else (if (zcap_val.zsealed) then (zraise_c2_exception6 (ZCapEx_SealViolation, zcs)) else (if (not (zcap_val.zpermit_load)) then (zraise_c2_exception6 (ZCapEx_PermitLoadViolation, zcs)) else (if (gt ((add_int (zvaddr, zsizze)), ztop)) then (zraise_c2_exception6 (ZCapEx_LengthViolation, zcs)) else (if (lt (zvaddr, zbase)) then (zraise_c2_exception6 (ZCapEx_LengthViolation, zcs)) else (if (zcheck_misaligned (zvaddrBits, zwidth)) then (begin
    zhandle_mem_exception (zvaddrBits, ZE_Load_Addr_Align);
    false
  end) else (begin
    match (ztranslateAddr (zvaddrBits, ZRead, ZData)) with
    | ZTR_Failure (ze) ->
      begin zhandle_mem_exception (zvaddrBits, ze); false end
    | ZTR_Address (zaddr) ->
      zprocess_load (zrd, zvaddrBits, (zmem_read (zaddr, zsizze, zaq, zrl, false)), zis_unsigned)
  end)))))))

and zhandle_load_cap_via_cap ((zrd, zcs, zcap_val, zvaddr) : ((bit) list * (bit) list * zCapability * Big_int.num)) : bool = sail_call (fun r ->
  let (zbase, ztop) = (zgetCapBounds zcap_val) in
  let zvaddrBits = (zto_bits (zxlen, zvaddr)) in
  let zaq = false in
  let zrl = false in
  if (not (zcap_val.ztag)) then (zraise_c2_exception6 (ZCapEx_TagViolation, zcs)) else (if (zcap_val.zsealed) then (zraise_c2_exception6 (ZCapEx_SealViolation, zcs)) else (if (not (zcap_val.zpermit_load)) then (zraise_c2_exception6 (ZCapEx_PermitLoadViolation, zcs)) else (if (gt ((add_int (zvaddr, zcap_sizze)), ztop)) then (zraise_c2_exception6 (ZCapEx_LengthViolation, zcs)) else (if (lt (zvaddr, zbase)) then (zraise_c2_exception6 (ZCapEx_LengthViolation, zcs)) else (if (not (zis_aligned_addr (zvaddrBits, zcap_sizze))) then (begin
    zhandle_mem_exception (zvaddrBits, ZE_Load_Addr_Align);
    false
  end) else (begin
    match (ztranslateAddr (zvaddrBits, ZRead, ZData)) with
    | ZTR_Failure (ze) ->
      begin zhandle_mem_exception (zvaddrBits, ze); false end
    | ZTR_Address (zaddr) ->
      let zc = (zmem_read_cap (zaddr, zaq, zrl, false)) in
      begin
        match zc with
        | ZMemValue (zv) ->
          begin zwriteCapReg ((zregbits_to_regno zrd), zv); true end
        | ZMemException (ze) ->
          begin zhandle_mem_exception (zvaddrBits, ze); false end
      end
  end)))))))

and zhandle_store_data_via_cap ((zrs, zcs, zcap_val, zvaddr, zwidth) : ((bit) list * (bit) list * zCapability * Big_int.num * zword_width)) : bool = sail_call (fun r ->
  let (zbase, ztop) = (zgetCapBounds zcap_val) in
  let zvaddrBits = (zto_bits (zxlen, zvaddr)) in
  let zsizze = (zword_width_bytes zwidth) in
  let zaq = false in
  let zrl = false in
  if (not (zcap_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcs)) else (if (zcap_val.zsealed) then (zraise_c2_exception (ZCapEx_SealViolation, zcs)) else (if (not (zcap_val.zpermit_store)) then (zraise_c2_exception (ZCapEx_PermitStoreViolation, zcs)) else (if (gt ((add_int (zvaddr, zsizze)), ztop)) then (zraise_c2_exception (ZCapEx_LengthViolation, zcs)) else (if (lt (zvaddr, zbase)) then (zraise_c2_exception (ZCapEx_LengthViolation, zcs)) else (if (zcheck_misaligned (zvaddrBits, zwidth)) then (begin
    zhandle_mem_exception (zvaddrBits, ZE_SAMO_Addr_Align);
    false
  end) else (begin
    match (ztranslateAddr (zvaddrBits, ZWrite, ZData)) with
    | ZTR_Failure (ze) ->
      begin zhandle_mem_exception (zvaddrBits, ze); false end
    | ZTR_Address (zaddr) ->
      let zeares = (zmem_write_ea (zaddr, zsizze, zaq, zrl, false)) in
      begin
        match zeares with
        | ZMemException (ze) ->
          begin zhandle_mem_exception (zaddr, ze); false end
        | ZMemValue (_) ->
          let zrs_val = (zrX (zregbits_to_regno zrs)) in
          let zres = (begin
            match zwidth with
            | ZBYTE ->
              zmem_write_value (zaddr, (Big_int.of_int (1)), (subrange (zrs_val, (Big_int.of_int (7)), Big_int.zero)), zaq, zrl, false)
            | ZHALF ->
              zmem_write_value (zaddr, (Big_int.of_int (2)), (subrange (zrs_val, (Big_int.of_int (15)), Big_int.zero)), zaq, zrl, false)
            | ZWORD ->
              zmem_write_value (zaddr, (Big_int.of_int (4)), (subrange (zrs_val, (Big_int.of_int (31)), Big_int.zero)), zaq, zrl, false)
            | ZDOUBLE ->
              zmem_write_value (zaddr, (Big_int.of_int (8)), zrs_val, zaq, zrl, false)
          end) in
          begin
            match zres with
            | ZMemValue (zp0z3) when (eq_bool (zp0z3, true)) -> true
            | ZMemValue (zp0z3) when (eq_bool (zp0z3, false)) ->
              zinternal_error "store got false from mem_write_value"
            | ZMemException (ze) ->
              begin zhandle_mem_exception (zaddr, ze); false end
          end
      end
  end)))))))

and zhandle_store_cap_via_cap ((zrs, zcs, zcap_val, zvaddr) : ((bit) list * (bit) list * zCapability * Big_int.num)) : bool = sail_call (fun r ->
  let (zbase, ztop) = (zgetCapBounds zcap_val) in
  let zvaddrBits = (zto_bits (zxlen, zvaddr)) in
  let zaq = false in
  let zrl = false in
  if (not (zcap_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcs)) else (if (zcap_val.zsealed) then (zraise_c2_exception (ZCapEx_SealViolation, zcs)) else (if (not (zcap_val.zpermit_store)) then (zraise_c2_exception (ZCapEx_PermitStoreViolation, zcs)) else (if (gt ((add_int (zvaddr, zcap_sizze)), ztop)) then (zraise_c2_exception (ZCapEx_LengthViolation, zcs)) else (if (lt (zvaddr, zbase)) then (zraise_c2_exception (ZCapEx_LengthViolation, zcs)) else (if (not (zis_aligned_addr (zvaddrBits, zcap_sizze))) then (begin
    zhandle_mem_exception (zvaddrBits, ZE_SAMO_Addr_Align);
    false
  end) else (begin
    match (ztranslateAddr (zvaddrBits, ZWrite, ZData)) with
    | ZTR_Failure (ze) ->
      begin zhandle_mem_exception (zvaddrBits, ze); false end
    | ZTR_Address (zaddr) ->
      let zeares = (zmem_write_ea_cap (zaddr, zaq, zrl, false)) in
      begin
        match zeares with
        | ZMemException (ze) ->
          begin zhandle_mem_exception (zaddr, ze); false end
        | ZMemValue (_) ->
          let zrs_val = (zreadCapReg (zregbits_to_regno zrs)) in
          let zres = (zmem_write_cap (zaddr, zrs_val, zaq, zrl, false)) in
          begin
            match zres with
            | ZMemValue (zp0z3) when (eq_bool (zp0z3, true)) -> true
            | ZMemValue (zp0z3) when (eq_bool (zp0z3, false)) ->
              zinternal_error "store got false from mem_write_value"
            | ZMemException (ze) ->
              begin zhandle_mem_exception (zaddr, ze); false end
          end
      end
  end)))))))

and zencdec_forwards (zargz3 : (zast)) : (bit) list = sail_call (fun r ->
  begin
    match zargz3 with
    | ZUTYPE (zimm, zrd, zop) ->
      append ((zimm), (append ((zrd), (zencdec_uop_forwards zop))))
    | ZRISCV_JAL (zv__2, zrd) when (let zp0z3 = (access (zv__2, Big_int.zero)) in
    eq_bit (zp0z3, B0)) ->
      let zimm_19 = (subrange (zv__2, (Big_int.of_int (20)), (Big_int.of_int (20)))) in
      let zimm_8 = (subrange (zv__2, (Big_int.of_int (11)), (Big_int.of_int (11)))) in
      let zimm_7_0 = (subrange (zv__2, (Big_int.of_int (19)), (Big_int.of_int (12)))) in
      let zimm_19 = (subrange (zv__2, (Big_int.of_int (20)), (Big_int.of_int (20)))) in
      let zimm_18_13 = (subrange (zv__2, (Big_int.of_int (10)), (Big_int.of_int (5)))) in
      let zimm_12_9 = (subrange (zv__2, (Big_int.of_int (4)), (Big_int.of_int (1)))) in
      append ((zimm_19), (append ((zimm_18_13), (append ((zimm_12_9), (append ((zimm_8), (append ((zimm_7_0), (append ((zrd), [B1; B1; B0; B1; B1; B1; B1])))))))))))
    | ZRISCV_JALR (zimm, zrs1, zrd) ->
      append ((zimm), (append ((zrs1), (append ([B0; B0; B0], (append ((zrd), [B1; B1; B0; B0; B1; B1; B1])))))))
    | ZBTYPE (zv__4, zrs2, zrs1, zop) when (let zp0z3 = (access (zv__4, Big_int.zero)) in
    eq_bit (zp0z3, B0)) ->
      let zimm7_6 = (subrange (zv__4, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zimm7_6 = (subrange (zv__4, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zimm7_5_0 = (subrange (zv__4, (Big_int.of_int (10)), (Big_int.of_int (5)))) in
      let zimm5_4_1 = (subrange (zv__4, (Big_int.of_int (4)), (Big_int.of_int (1)))) in
      let zimm5_0 = (subrange (zv__4, (Big_int.of_int (11)), (Big_int.of_int (11)))) in
      append ((zimm7_6), (append ((zimm7_5_0), (append ((zrs2), (append ((zrs1), (append ((zencdec_bop_forwards zop), (append ((zimm5_4_1), (append ((zimm5_0), [B1; B1; B0; B0; B0; B1; B1])))))))))))))
    | ZITYPE (zimm, zrs1, zrd, zop) ->
      append ((zimm), (append ((zrs1), (append ((zencdec_iop_forwards zop), (append ((zrd), [B0; B0; B1; B0; B0; B1; B1])))))))
    | ZSHIFTIOP (zshamt, zrs1, zrd, ZRISCV_SLLI) ->
      append ([B0; B0; B0; B0; B0; B0], (append ((zshamt), (append ((zrs1), (append ([B0; B0; B1], (append ((zrd), [B0; B0; B1; B0; B0; B1; B1])))))))))
    | ZSHIFTIOP (zshamt, zrs1, zrd, ZRISCV_SRLI) ->
      append ([B0; B0; B0; B0; B0; B0], (append ((zshamt), (append ((zrs1), (append ([B1; B0; B1], (append ((zrd), [B0; B0; B1; B0; B0; B1; B1])))))))))
    | ZSHIFTIOP (zshamt, zrs1, zrd, ZRISCV_SRAI) ->
      append ([B0; B1; B0; B0; B0; B0], (append ((zshamt), (append ((zrs1), (append ([B1; B0; B1], (append ((zrd), [B0; B0; B1; B0; B0; B1; B1])))))))))
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_ADD) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ((zrs2), (append ((zrs1), (append ([B0; B0; B0], (append ((zrd), [B0; B1; B1; B0; B0; B1; B1])))))))))
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SLT) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ((zrs2), (append ((zrs1), (append ([B0; B1; B0], (append ((zrd), [B0; B1; B1; B0; B0; B1; B1])))))))))
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SLTU) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ((zrs2), (append ((zrs1), (append ([B0; B1; B1], (append ((zrd), [B0; B1; B1; B0; B0; B1; B1])))))))))
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_AND) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ((zrs2), (append ((zrs1), (append ([B1; B1; B1], (append ((zrd), [B0; B1; B1; B0; B0; B1; B1])))))))))
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_OR) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ((zrs2), (append ((zrs1), (append ([B1; B1; B0], (append ((zrd), [B0; B1; B1; B0; B0; B1; B1])))))))))
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_XOR) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ((zrs2), (append ((zrs1), (append ([B1; B0; B0], (append ((zrd), [B0; B1; B1; B0; B0; B1; B1])))))))))
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SLL) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ((zrs2), (append ((zrs1), (append ([B0; B0; B1], (append ((zrd), [B0; B1; B1; B0; B0; B1; B1])))))))))
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SRL) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ((zrs2), (append ((zrs1), (append ([B1; B0; B1], (append ((zrd), [B0; B1; B1; B0; B0; B1; B1])))))))))
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SUB) ->
      append ([B0; B1; B0; B0; B0; B0; B0], (append ((zrs2), (append ((zrs1), (append ([B0; B0; B0], (append ((zrd), [B0; B1; B1; B0; B0; B1; B1])))))))))
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SRA) ->
      append ([B0; B1; B0; B0; B0; B0; B0], (append ((zrs2), (append ((zrs1), (append ([B1; B0; B1], (append ((zrd), [B0; B1; B1; B0; B0; B1; B1])))))))))
    | ZLOAD (zimm, zrs1, zrd, zis_unsigned, zsizze, zp0z3, zp1z3) when ((((zneq_vec ((zsizze_bits_forwards zsizze), [B1; B1])) || (not zis_unsigned)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, false))) ->
      append ((zimm), (append ((zrs1), (append ((zbool_bits_forwards zis_unsigned), (append ((zsizze_bits_forwards zsizze), (append ((zrd), [B0; B0; B0; B0; B0; B1; B1])))))))))
    | ZSTORE (zv__6, zrs2, zrs1, zsizze, zp0z3, zp1z3) when ((eq_bool (zp1z3, false)) && (eq_bool (zp0z3, false))) ->
      let zimm7 = (subrange (zv__6, (Big_int.of_int (11)), (Big_int.of_int (5)))) in
      let zimm7 = (subrange (zv__6, (Big_int.of_int (11)), (Big_int.of_int (5)))) in
      let zimm5 = (subrange (zv__6, (Big_int.of_int (4)), Big_int.zero)) in
      append ((zimm7), (append ((zrs2), (append ((zrs1), (append ([B0], (append ((zsizze_bits_forwards zsizze), (append ((zimm5), [B0; B1; B0; B0; B0; B1; B1])))))))))))
    | ZADDIW (zimm, zrs1, zrd) ->
      append ((zimm), (append ((zrs1), (append ([B0; B0; B0], (append ((zrd), [B0; B0; B1; B1; B0; B1; B1])))))))
    | ZSHIFTW (zshamt, zrs1, zrd, ZRISCV_SLLI) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ((zshamt), (append ((zrs1), (append ([B0; B0; B1], (append ((zrd), [B0; B0; B1; B1; B0; B1; B1])))))))))
    | ZSHIFTW (zshamt, zrs1, zrd, ZRISCV_SRLI) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ((zshamt), (append ((zrs1), (append ([B1; B0; B1], (append ((zrd), [B0; B0; B1; B1; B0; B1; B1])))))))))
    | ZSHIFTW (zshamt, zrs1, zrd, ZRISCV_SRAI) ->
      append ([B0; B1; B0; B0; B0; B0; B0], (append ((zshamt), (append ((zrs1), (append ([B1; B0; B1], (append ((zrd), [B0; B0; B1; B1; B0; B1; B1])))))))))
    | ZRTYPEW (zrs2, zrs1, zrd, ZRISCV_ADDW) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ((zrs2), (append ((zrs1), (append ([B0; B0; B0], (append ((zrd), [B0; B1; B1; B1; B0; B1; B1])))))))))
    | ZRTYPEW (zrs2, zrs1, zrd, ZRISCV_SUBW) ->
      append ([B0; B1; B0; B0; B0; B0; B0], (append ((zrs2), (append ((zrs1), (append ([B0; B0; B0], (append ((zrd), [B0; B1; B1; B1; B0; B1; B1])))))))))
    | ZRTYPEW (zrs2, zrs1, zrd, ZRISCV_SLLW) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ((zrs2), (append ((zrs1), (append ([B0; B0; B1], (append ((zrd), [B0; B1; B1; B1; B0; B1; B1])))))))))
    | ZRTYPEW (zrs2, zrs1, zrd, ZRISCV_SRLW) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ((zrs2), (append ((zrs1), (append ([B1; B0; B1], (append ((zrd), [B0; B1; B1; B1; B0; B1; B1])))))))))
    | ZRTYPEW (zrs2, zrs1, zrd, ZRISCV_SRAW) ->
      append ([B0; B1; B0; B0; B0; B0; B0], (append ((zrs2), (append ((zrs1), (append ([B1; B0; B1], (append ((zrd), [B0; B1; B1; B1; B0; B1; B1])))))))))
    | ZSHIFTIWOP (zshamt, zrs1, zrd, ZRISCV_SLLIW) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ((zshamt), (append ((zrs1), (append ([B0; B0; B1], (append ((zrd), [B0; B0; B1; B1; B0; B1; B1])))))))))
    | ZSHIFTIWOP (zshamt, zrs1, zrd, ZRISCV_SRLIW) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ((zshamt), (append ((zrs1), (append ([B1; B0; B1], (append ((zrd), [B0; B0; B1; B1; B0; B1; B1])))))))))
    | ZSHIFTIWOP (zshamt, zrs1, zrd, ZRISCV_SRAIW) ->
      append ([B0; B1; B0; B0; B0; B0; B0], (append ((zshamt), (append ((zrs1), (append ([B1; B0; B1], (append ((zrd), [B0; B0; B1; B1; B0; B1; B1])))))))))
    | ZFENCE (zpred, zsucc) ->
      append ([B0; B0; B0; B0], (append ((zpred), (append ((zsucc), (append ([B0; B0; B0; B0; B0], (append ([B0; B0; B0], (append ([B0; B0; B0; B0; B0], [B0; B0; B0; B1; B1; B1; B1])))))))))))
    | ZFENCE_TSO (zpred, zsucc) ->
      append ([B1; B0; B0; B0], (append ((zpred), (append ((zsucc), (append ([B0; B0; B0; B0; B0], (append ([B0; B0; B0], (append ([B0; B0; B0; B0; B0], [B0; B0; B0; B1; B1; B1; B1])))))))))))
    | ZFENCEI (()) ->
      append ([B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0], (append ([B0; B0; B0; B0; B0], (append ([B0; B0; B1], (append ([B0; B0; B0; B0; B0], [B0; B0; B0; B1; B1; B1; B1])))))))
    | ZECALL (()) ->
      append ([B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0], (append ([B0; B0; B0; B0; B0], (append ([B0; B0; B0], (append ([B0; B0; B0; B0; B0], [B1; B1; B1; B0; B0; B1; B1])))))))
    | ZMRET (()) ->
      append ([B0; B0; B1; B1; B0; B0; B0], (append ([B0; B0; B0; B1; B0], (append ([B0; B0; B0; B0; B0], (append ([B0; B0; B0], (append ([B0; B0; B0; B0; B0], [B1; B1; B1; B0; B0; B1; B1])))))))))
    | ZSRET (()) ->
      append ([B0; B0; B0; B1; B0; B0; B0], (append ([B0; B0; B0; B1; B0], (append ([B0; B0; B0; B0; B0], (append ([B0; B0; B0], (append ([B0; B0; B0; B0; B0], [B1; B1; B1; B0; B0; B1; B1])))))))))
    | ZEBREAK (()) ->
      append ([B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B1], (append ([B0; B0; B0; B0; B0], (append ([B0; B0; B0], (append ([B0; B0; B0; B0; B0], [B1; B1; B1; B0; B0; B1; B1])))))))
    | ZWFI (()) ->
      append ([B0; B0; B0; B1; B0; B0; B0; B0; B0; B1; B0; B1], (append ([B0; B0; B0; B0; B0], (append ([B0; B0; B0], (append ([B0; B0; B0; B0; B0], [B1; B1; B1; B0; B0; B1; B1])))))))
    | ZSFENCE_VMA (zrs1, zrs2) ->
      append ([B0; B0; B0; B1; B0; B0; B1], (append ((zrs2), (append ((zrs1), (append ([B0; B0; B0], (append ([B0; B0; B0; B0; B0], [B1; B1; B1; B0; B0; B1; B1])))))))))
    | ZLOADRES (zaq, zrl, zrs1, zsizze, zrd) ->
      append ([B0; B0; B0; B1; B0], (append ((zbool_bits_forwards zaq), (append ((zbool_bits_forwards zrl), (append ([B0; B0; B0; B0; B0], (append ((zrs1), (append ([B0], (append ((zsizze_bits_forwards zsizze), (append ((zrd), [B0; B1; B0; B1; B1; B1; B1])))))))))))))))
    | ZSTORECON (zaq, zrl, zrs2, zrs1, zsizze, zrd) ->
      append ([B0; B0; B0; B1; B1], (append ((zbool_bits_forwards zaq), (append ((zbool_bits_forwards zrl), (append ((zrs2), (append ((zrs1), (append ([B0], (append ((zsizze_bits_forwards zsizze), (append ((zrd), [B0; B1; B0; B1; B1; B1; B1])))))))))))))))
    | ZAMO (zop, zaq, zrl, zrs2, zrs1, zsizze, zrd) ->
      append ((zencdec_amoop_forwards zop), (append ((zbool_bits_forwards zaq), (append ((zbool_bits_forwards zrl), (append ((zrs2), (append ((zrs1), (append ([B0], (append ((zsizze_bits_forwards zsizze), (append ((zrd), [B0; B1; B0; B1; B1; B1; B1])))))))))))))))
    | ZMUL (zrs2, zrs1, zrd, zhigh, zsigned1, zsigned2) ->
      append ([B0; B0; B0; B0; B0; B0; B1], (append ((zrs2), (append ((zrs1), (append ((zencdec_mul_op_forwards (zhigh, zsigned1, zsigned2)), (append ((zrd), [B0; B1; B1; B0; B0; B1; B1])))))))))
    | ZDIV (zrs2, zrs1, zrd, zs) ->
      append ([B0; B0; B0; B0; B0; B0; B1], (append ((zrs2), (append ((zrs1), (append ([B1; B0], (append ((zbool_not_bits_forwards zs), (append ((zrd), [B0; B1; B1; B0; B0; B1; B1])))))))))))
    | ZREM (zrs2, zrs1, zrd, zs) ->
      append ([B0; B0; B0; B0; B0; B0; B1], (append ((zrs2), (append ((zrs1), (append ([B1; B1], (append ((zbool_not_bits_forwards zs), (append ((zrd), [B0; B1; B1; B0; B0; B1; B1])))))))))))
    | ZMULW (zrs2, zrs1, zrd) ->
      append ([B0; B0; B0; B0; B0; B0; B1], (append ((zrs2), (append ((zrs1), (append ([B0; B0; B0], (append ((zrd), [B0; B1; B1; B1; B0; B1; B1])))))))))
    | ZDIVW (zrs2, zrs1, zrd, zs) ->
      append ([B0; B0; B0; B0; B0; B0; B1], (append ((zrs2), (append ((zrs1), (append ([B1; B0], (append ((zbool_not_bits_forwards zs), (append ((zrd), [B0; B1; B1; B1; B0; B1; B1])))))))))))
    | ZREMW (zrs2, zrs1, zrd, zs) ->
      append ([B0; B0; B0; B0; B0; B0; B1], (append ((zrs2), (append ((zrs1), (append ([B1; B1], (append ((zbool_not_bits_forwards zs), (append ((zrd), [B0; B1; B1; B1; B0; B1; B1])))))))))))
    | ZCSR (zcsr, zrs1, zrd, zis_imm, zop) ->
      append ((zcsr), (append ((zrs1), (append ((zbool_bits_forwards zis_imm), (append ((zencdec_csrop_forwards zop), (append ((zrd), [B1; B1; B1; B0; B0; B1; B1])))))))))
    | ZCGetPerm (zrd, zcb) ->
      append ([B1; B1; B1; B1; B1; B1; B1], (append ([B0; B0; B0; B0; B0], (append ((zcb), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCGetType (zrd, zcb) ->
      append ([B1; B1; B1; B1; B1; B1; B1], (append ([B0; B0; B0; B0; B1], (append ((zcb), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCGetBase (zrd, zcb) ->
      append ([B1; B1; B1; B1; B1; B1; B1], (append ([B0; B0; B0; B1; B0], (append ((zcb), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCGetLen (zrd, zcb) ->
      append ([B1; B1; B1; B1; B1; B1; B1], (append ([B0; B0; B0; B1; B1], (append ((zcb), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCGetTag (zrd, zcb) ->
      append ([B1; B1; B1; B1; B1; B1; B1], (append ([B0; B0; B1; B0; B0], (append ((zcb), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCGetSealed (zrd, zcb) ->
      append ([B1; B1; B1; B1; B1; B1; B1], (append ([B0; B0; B1; B0; B1], (append ((zcb), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCGetOffset (zrd, zcb) ->
      append ([B1; B1; B1; B1; B1; B1; B1], (append ([B0; B0; B1; B1; B0], (append ((zcb), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCGetAddr (zrd, zcb) ->
      append ([B1; B1; B1; B1; B1; B1; B1], (append ([B0; B1; B1; B1; B1], (append ((zcb), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCMove (zcd, zcs) ->
      append ([B1; B1; B1; B1; B1; B1; B1], (append ([B0; B1; B0; B1; B0], (append ((zcs), (append ([B0; B0; B0], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCClearTag (zcd, zcs) ->
      append ([B1; B1; B1; B1; B1; B1; B1], (append ([B0; B1; B0; B1; B1], (append ((zcs), (append ([B0; B0; B0], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCJALR (zcd, zcb) ->
      append ([B1; B1; B1; B1; B1; B1; B1], (append ([B0; B1; B1; B0; B0], (append ((zcb), (append ([B0; B0; B0], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCCheckPerm (zcs, zrt) ->
      append ([B1; B1; B1; B1; B1; B1; B1], (append ([B0; B1; B0; B0; B0], (append ((zrt), (append ([B0; B0; B0], (append ((zcs), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCCheckType (zcs, zcb) ->
      append ([B1; B1; B1; B1; B1; B1; B1], (append ([B0; B1; B0; B0; B1], (append ((zcb), (append ([B0; B0; B0], (append ((zcs), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZClearRegs (ZGPRegs, zq, zv__7) ->
      let zm3 = (subrange (zv__7, (Big_int.of_int (7)), (Big_int.of_int (5)))) in
      let zm5 = (subrange (zv__7, (Big_int.of_int (4)), Big_int.zero)) in
      let zm3 = (subrange (zv__7, (Big_int.of_int (7)), (Big_int.of_int (5)))) in
      append ([B1; B1; B1; B1; B1; B1; B1], (append ([B0; B1; B1; B0; B1], (append ((zq), (append ((zm3), (append ([B0; B0; B0], (append ((zm5), [B1; B0; B1; B1; B0; B1; B1])))))))))))
    | ZClearRegs (ZFPRegs, zq, zv__8) ->
      let zm3 = (subrange (zv__8, (Big_int.of_int (7)), (Big_int.of_int (5)))) in
      let zm5 = (subrange (zv__8, (Big_int.of_int (4)), Big_int.zero)) in
      let zm3 = (subrange (zv__8, (Big_int.of_int (7)), (Big_int.of_int (5)))) in
      append ([B1; B1; B1; B1; B1; B1; B1], (append ([B1; B0; B0; B0; B0], (append ((zq), (append ((zm3), (append ([B0; B0; B0], (append ((zm5), [B1; B0; B1; B1; B0; B1; B1])))))))))))
    | ZCSeal (zcd, zcs, zct) ->
      append ([B0; B0; B0; B1; B0; B1; B1], (append ((zct), (append ((zcs), (append ([B0; B0; B0], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCUnseal (zcd, zcs, zct) ->
      append ([B0; B0; B0; B1; B1; B0; B0], (append ((zct), (append ((zcs), (append ([B0; B0; B0], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCAndPerm (zcd, zcs, zrt) ->
      append ([B0; B0; B0; B1; B1; B0; B1], (append ((zrt), (append ((zcs), (append ([B0; B0; B0], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCSetOffset (zcd, zcs, zrt) ->
      append ([B0; B0; B0; B1; B1; B1; B1], (append ((zrt), (append ((zcs), (append ([B0; B0; B0], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCIncOffset (zcd, zcs, zrt) ->
      append ([B0; B0; B1; B0; B0; B0; B1], (append ((zrt), (append ((zcs), (append ([B0; B0; B0], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCSetBounds (zcd, zcs, zrt) ->
      append ([B0; B0; B0; B1; B0; B0; B0], (append ((zrt), (append ((zcs), (append ([B0; B0; B0], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCSetBoundsExact (zcd, zcs, zrt) ->
      append ([B0; B0; B0; B1; B0; B0; B1], (append ((zrt), (append ((zcs), (append ([B0; B0; B0], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCBuildCap (zcd, zcb, zct) ->
      append ([B0; B0; B1; B1; B1; B0; B1], (append ((zct), (append ((zcb), (append ([B0; B0; B0], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCCopyType (zcd, zcb, zct) ->
      append ([B0; B0; B1; B1; B1; B1; B0], (append ((zct), (append ((zcb), (append ([B0; B0; B0], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCCSeal (zcd, zcs, zct) ->
      append ([B0; B0; B1; B1; B1; B1; B1], (append ((zct), (append ((zcs), (append ([B0; B0; B0], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCToPtr (zrd, zcb, zcs) ->
      append ([B0; B0; B1; B0; B0; B1; B0], (append ((zcs), (append ((zcb), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCFromPtr (zcd, zcb, zrs) ->
      append ([B0; B0; B1; B0; B0; B1; B1], (append ((zrs), (append ((zcb), (append ([B0; B0; B0], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCCall (zcs, zcb, zb__0) when (let zp0z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__0, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      append ([B1; B1; B1; B1; B1; B1; B0], (append ([B0; B0; B0; B0; B0], (append ((zcb), (append ([B0; B0; B0], (append ((zcs), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCCall (zcs, zcb, zb__1) when (let zp0z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__1, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      append ([B1; B1; B1; B1; B1; B1; B0], (append ([B0; B0; B0; B0; B1], (append ((zcb), (append ([B0; B0; B0], (append ((zcs), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCCall (zcs, zcb, zb__2) when (let zp0z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__2, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      append ([B1; B1; B1; B1; B1; B1; B0], (append ([B1; B1; B1; B1; B1], (append ((zcb), (append ([B0; B0; B0], (append ((zcs), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCTestSubset (zrd, zcb, zct) ->
      append ([B0; B1; B0; B0; B0; B0; B0], (append ((zct), (append ((zcb), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCSpecialRW (zcd, zcs, zidx) ->
      append ([B0; B0; B0; B0; B0; B0; B1], (append ((zidx), (append ((zcs), (append ([B0; B0; B0], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCIncOffsetImmediate (zcd, zcb, zimm12) ->
      append ((zimm12), (append ((zcb), (append ([B0; B0; B1], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))
    | ZCSetBoundsImmediate (zcd, zcb, zimm12) ->
      append ((zimm12), (append ((zcb), (append ([B0; B1; B0], (append ((zcd), [B1; B0; B1; B1; B0; B1; B1])))))))
    | ZCLoadDDC (zrd, zrs, zp0z3, ZBYTE) when (eq_bool (zp0z3, false)) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B0; B0; B0; B0; B0], (append ((zrs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadDDC (zrd, zrs, zp0z3, ZHALF) when (eq_bool (zp0z3, false)) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B0; B0; B0; B0; B1], (append ((zrs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadDDC (zrd, zrs, zp0z3, ZWORD) when (eq_bool (zp0z3, false)) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B0; B0; B0; B1; B0], (append ((zrs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadDDC (zrd, zrs, zp0z3, ZDOUBLE) when (eq_bool (zp0z3, false)) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B0; B0; B0; B1; B1], (append ((zrs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadDDC (zrd, zrs, zp0z3, ZBYTE) when (eq_bool (zp0z3, true)) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B0; B0; B1; B0; B0], (append ((zrs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadDDC (zrd, zrs, zp0z3, ZHALF) when (eq_bool (zp0z3, true)) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B0; B0; B1; B0; B1], (append ((zrs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadDDC (zrd, zrs, zp0z3, ZWORD) when (eq_bool (zp0z3, true)) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B0; B0; B1; B1; B0], (append ((zrs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadDDC (zrd, zrs, zp0z3, ZDOUBLE) when (eq_bool (zp0z3, true)) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B0; B0; B1; B1; B1], (append ((zrs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCStoreDDC (zrd, zrs, ZBYTE) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B0; B1; B0; B0; B0], (append ((zrs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCStoreDDC (zrd, zrs, ZHALF) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B0; B1; B0; B0; B1], (append ((zrs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCStoreDDC (zrd, zrs, ZWORD) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B0; B1; B0; B1; B0], (append ((zrs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCStoreDDC (zrd, zrs, ZDOUBLE) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B0; B1; B0; B1; B1], (append ((zrs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCStoreCapDDC (zrd, zrs) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B0; B1; B1; B0; B0], (append ((zrs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadCapDDC (zrd, zrs) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B0; B1; B1; B0; B1], (append ((zrs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadCap (zrd, zcs, zp0z3, ZBYTE) when (eq_bool (zp0z3, false)) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B1; B0; B0; B0; B0], (append ((zcs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadCap (zrd, zcs, zp0z3, ZHALF) when (eq_bool (zp0z3, false)) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B1; B0; B0; B0; B1], (append ((zcs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadCap (zrd, zcs, zp0z3, ZWORD) when (eq_bool (zp0z3, false)) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B1; B0; B0; B1; B0], (append ((zcs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadCap (zrd, zcs, zp0z3, ZDOUBLE) when (eq_bool (zp0z3, false)) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B1; B0; B0; B1; B1], (append ((zcs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadCap (zrd, zcs, zp0z3, ZBYTE) when (eq_bool (zp0z3, true)) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B1; B0; B1; B0; B0], (append ((zcs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadCap (zrd, zcs, zp0z3, ZHALF) when (eq_bool (zp0z3, true)) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B1; B0; B1; B0; B1], (append ((zcs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadCap (zrd, zcs, zp0z3, ZWORD) when (eq_bool (zp0z3, true)) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B1; B0; B1; B1; B0], (append ((zcs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadCap (zrd, zcs, zp0z3, ZDOUBLE) when (eq_bool (zp0z3, true)) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B1; B0; B1; B1; B1], (append ((zcs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCStoreCap (zrd, zcs, ZBYTE) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B1; B1; B0; B0; B0], (append ((zcs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCStoreCap (zrd, zcs, ZHALF) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B1; B1; B0; B0; B1], (append ((zcs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCStoreCap (zrd, zcs, ZWORD) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B1; B1; B0; B1; B0], (append ((zcs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCStoreCap (zrd, zcs, ZDOUBLE) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B1; B1; B0; B1; B1], (append ((zcs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCStoreCapCap (zrd, zcs) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B1; B1; B1; B0; B0], (append ((zcs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZCLoadCapCap (zrd, zcs) ->
      append ([B0; B0; B0; B0; B0; B0; B0], (append ([B1; B1; B1; B0; B1], (append ((zcs), (append ([B0; B0; B0], (append ((zrd), [B1; B0; B1; B1; B0; B1; B1])))))))))
    | ZILLEGAL (zs) -> zs
  end)

and zencdec_backwards (zargz3 : ((bit) list)) : zast = sail_call (fun r ->
  begin
    match zargz3 with
    | zv__9 when (let z_mappingpatterns_23z3 = (subrange (zv__9, (Big_int.of_int (6)), Big_int.zero)) in
    (zencdec_uop_backwards_matches z_mappingpatterns_23z3) && (if (zencdec_uop_backwards_matches z_mappingpatterns_23z3) then (let zop = (zencdec_uop_backwards z_mappingpatterns_23z3) in
    true) else false)) ->
      let zimm = (subrange (zv__9, (Big_int.of_int (31)), (Big_int.of_int (12)))) in
      let zrd = (subrange (zv__9, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zimm = (subrange (zv__9, (Big_int.of_int (31)), (Big_int.of_int (12)))) in
      let z_mappingpatterns_23z3 = (subrange (zv__9, (Big_int.of_int (6)), Big_int.zero)) in
      let zop = (zencdec_uop_backwards z_mappingpatterns_23z3) in
      ZUTYPE (zimm, zrd, zop)
    | zv__10 when (let zp0z3 = (access (zv__10, (Big_int.of_int (6)))) in
    let zp1z3 = (access (zv__10, (Big_int.of_int (5)))) in
    let zp2z3 = (access (zv__10, (Big_int.of_int (4)))) in
    let zp3z3 = (access (zv__10, (Big_int.of_int (3)))) in
    let zp4z3 = (access (zv__10, (Big_int.of_int (2)))) in
    let zp5z3 = (access (zv__10, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zv__10, Big_int.zero)) in
    ((((((eq_bit (zp6z3, B1)) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zimm_19 = (subrange (zv__10, (Big_int.of_int (31)), (Big_int.of_int (31)))) in
      let zrd = (subrange (zv__10, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zimm_8 = (subrange (zv__10, (Big_int.of_int (20)), (Big_int.of_int (20)))) in
      let zimm_7_0 = (subrange (zv__10, (Big_int.of_int (19)), (Big_int.of_int (12)))) in
      let zimm_19 = (subrange (zv__10, (Big_int.of_int (31)), (Big_int.of_int (31)))) in
      let zimm_18_13 = (subrange (zv__10, (Big_int.of_int (30)), (Big_int.of_int (25)))) in
      let zimm_12_9 = (subrange (zv__10, (Big_int.of_int (24)), (Big_int.of_int (21)))) in
      ZRISCV_JAL (append ((zimm_19), (append ((zimm_7_0), (append ((zimm_8), (append ((zimm_18_13), (append ((zimm_12_9), [B0]))))))))), zrd)
    | zv__12 when (let zp0z3 = (access (zv__12, (Big_int.of_int (14)))) in
    let zp1z3 = (access (zv__12, (Big_int.of_int (13)))) in
    let zp2z3 = (access (zv__12, (Big_int.of_int (12)))) in
    let zp3z3 = (access (zv__12, (Big_int.of_int (6)))) in
    let zp4z3 = (access (zv__12, (Big_int.of_int (5)))) in
    let zp5z3 = (access (zv__12, (Big_int.of_int (4)))) in
    let zp6z3 = (access (zv__12, (Big_int.of_int (3)))) in
    let zp7z3 = (access (zv__12, (Big_int.of_int (2)))) in
    let zp8z3 = (access (zv__12, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__12, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zimm = (subrange (zv__12, (Big_int.of_int (31)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__12, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__12, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zimm = (subrange (zv__12, (Big_int.of_int (31)), (Big_int.of_int (20)))) in
      ZRISCV_JALR (zimm, zrs1, zrd)
    | zv__15 when (let zp0z3 = (access (zv__15, (Big_int.of_int (6)))) in
    let zp1z3 = (access (zv__15, (Big_int.of_int (5)))) in
    let zp2z3 = (access (zv__15, (Big_int.of_int (4)))) in
    let zp3z3 = (access (zv__15, (Big_int.of_int (3)))) in
    let zp4z3 = (access (zv__15, (Big_int.of_int (2)))) in
    let zp5z3 = (access (zv__15, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zv__15, Big_int.zero)) in
    let z_mappingpatterns_24z3 = (subrange (zv__15, (Big_int.of_int (14)), (Big_int.of_int (12)))) in
    ((((((((zencdec_bop_backwards_matches z_mappingpatterns_24z3) && (if (zencdec_bop_backwards_matches z_mappingpatterns_24z3) then (let zop = (zencdec_bop_backwards z_mappingpatterns_24z3) in
    true) else false)) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zimm7_6 = (subrange (zv__15, (Big_int.of_int (31)), (Big_int.of_int (31)))) in
      let zrs2 = (subrange (zv__15, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__15, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zimm7_6 = (subrange (zv__15, (Big_int.of_int (31)), (Big_int.of_int (31)))) in
      let zimm7_5_0 = (subrange (zv__15, (Big_int.of_int (30)), (Big_int.of_int (25)))) in
      let zimm5_4_1 = (subrange (zv__15, (Big_int.of_int (11)), (Big_int.of_int (8)))) in
      let zimm5_0 = (subrange (zv__15, (Big_int.of_int (7)), (Big_int.of_int (7)))) in
      let z_mappingpatterns_24z3 = (subrange (zv__15, (Big_int.of_int (14)), (Big_int.of_int (12)))) in
      let zop = (zencdec_bop_backwards z_mappingpatterns_24z3) in
      ZBTYPE (append ((zimm7_6), (append ((zimm5_0), (append ((zimm7_5_0), (append ((zimm5_4_1), [B0]))))))), zrs2, zrs1, zop)
    | zv__17 when (let zp0z3 = (access (zv__17, (Big_int.of_int (6)))) in
    let zp1z3 = (access (zv__17, (Big_int.of_int (5)))) in
    let zp2z3 = (access (zv__17, (Big_int.of_int (4)))) in
    let zp3z3 = (access (zv__17, (Big_int.of_int (3)))) in
    let zp4z3 = (access (zv__17, (Big_int.of_int (2)))) in
    let zp5z3 = (access (zv__17, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zv__17, Big_int.zero)) in
    let z_mappingpatterns_25z3 = (subrange (zv__17, (Big_int.of_int (14)), (Big_int.of_int (12)))) in
    ((((((((zencdec_iop_backwards_matches z_mappingpatterns_25z3) && (if (zencdec_iop_backwards_matches z_mappingpatterns_25z3) then (let zop = (zencdec_iop_backwards z_mappingpatterns_25z3) in
    true) else false)) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zimm = (subrange (zv__17, (Big_int.of_int (31)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__17, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__17, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zimm = (subrange (zv__17, (Big_int.of_int (31)), (Big_int.of_int (20)))) in
      let z_mappingpatterns_25z3 = (subrange (zv__17, (Big_int.of_int (14)), (Big_int.of_int (12)))) in
      let zop = (zencdec_iop_backwards z_mappingpatterns_25z3) in
      ZITYPE (zimm, zrs1, zrd, zop)
    | zv__19 when (let zp0z3 = (access (zv__19, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__19, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__19, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__19, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__19, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__19, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__19, (Big_int.of_int (14)))) in
    let zp7z3 = (access (zv__19, (Big_int.of_int (13)))) in
    let zp8z3 = (access (zv__19, (Big_int.of_int (12)))) in
    let zp9z3 = (access (zv__19, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__19, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__19, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__19, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__19, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__19, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__19, Big_int.zero)) in
    (((((((((((((((eq_bit (zp15z3, B1)) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zshamt = (subrange (zv__19, (Big_int.of_int (25)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__19, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__19, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZSHIFTIOP (zshamt, zrs1, zrd, ZRISCV_SLLI)
    | zv__23 when (let zp0z3 = (access (zv__23, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__23, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__23, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__23, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__23, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__23, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__23, (Big_int.of_int (14)))) in
    let zp7z3 = (access (zv__23, (Big_int.of_int (13)))) in
    let zp8z3 = (access (zv__23, (Big_int.of_int (12)))) in
    let zp9z3 = (access (zv__23, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__23, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__23, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__23, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__23, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__23, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__23, Big_int.zero)) in
    (((((((((((((((eq_bit (zp15z3, B1)) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zshamt = (subrange (zv__23, (Big_int.of_int (25)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__23, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__23, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZSHIFTIOP (zshamt, zrs1, zrd, ZRISCV_SRLI)
    | zv__27 when (let zp0z3 = (access (zv__27, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__27, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__27, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__27, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__27, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__27, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__27, (Big_int.of_int (14)))) in
    let zp7z3 = (access (zv__27, (Big_int.of_int (13)))) in
    let zp8z3 = (access (zv__27, (Big_int.of_int (12)))) in
    let zp9z3 = (access (zv__27, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__27, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__27, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__27, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__27, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__27, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__27, Big_int.zero)) in
    (((((((((((((((eq_bit (zp15z3, B1)) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      let zshamt = (subrange (zv__27, (Big_int.of_int (25)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__27, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__27, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZSHIFTIOP (zshamt, zrs1, zrd, ZRISCV_SRAI)
    | zv__31 when (let zp0z3 = (access (zv__31, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__31, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__31, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__31, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__31, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__31, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__31, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__31, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__31, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__31, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__31, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__31, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__31, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__31, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__31, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__31, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__31, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__31, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__31, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__31, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZRTYPE (zrs2, zrs1, zrd, ZRISCV_ADD)
    | zv__35 when (let zp0z3 = (access (zv__35, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__35, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__35, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__35, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__35, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__35, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__35, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__35, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__35, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__35, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__35, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__35, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__35, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__35, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__35, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__35, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__35, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__35, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__35, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__35, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SLT)
    | zv__39 when (let zp0z3 = (access (zv__39, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__39, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__39, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__39, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__39, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__39, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__39, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__39, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__39, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__39, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__39, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__39, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__39, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__39, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__39, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__39, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__39, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__39, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__39, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__39, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SLTU)
    | zv__43 when (let zp0z3 = (access (zv__43, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__43, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__43, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__43, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__43, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__43, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__43, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__43, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__43, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__43, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__43, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__43, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__43, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__43, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__43, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__43, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__43, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__43, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__43, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__43, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZRTYPE (zrs2, zrs1, zrd, ZRISCV_AND)
    | zv__47 when (let zp0z3 = (access (zv__47, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__47, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__47, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__47, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__47, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__47, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__47, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__47, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__47, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__47, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__47, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__47, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__47, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__47, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__47, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__47, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__47, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__47, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__47, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__47, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZRTYPE (zrs2, zrs1, zrd, ZRISCV_OR)
    | zv__51 when (let zp0z3 = (access (zv__51, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__51, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__51, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__51, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__51, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__51, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__51, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__51, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__51, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__51, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__51, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__51, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__51, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__51, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__51, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__51, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__51, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__51, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__51, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__51, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZRTYPE (zrs2, zrs1, zrd, ZRISCV_XOR)
    | zv__55 when (let zp0z3 = (access (zv__55, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__55, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__55, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__55, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__55, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__55, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__55, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__55, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__55, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__55, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__55, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__55, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__55, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__55, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__55, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__55, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__55, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__55, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__55, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__55, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SLL)
    | zv__59 when (let zp0z3 = (access (zv__59, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__59, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__59, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__59, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__59, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__59, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__59, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__59, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__59, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__59, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__59, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__59, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__59, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__59, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__59, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__59, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__59, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__59, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__59, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__59, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SRL)
    | zv__63 when (let zp0z3 = (access (zv__63, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__63, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__63, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__63, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__63, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__63, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__63, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__63, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__63, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__63, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__63, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__63, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__63, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__63, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__63, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__63, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__63, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__63, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__63, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__63, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SUB)
    | zv__67 when (let zp0z3 = (access (zv__67, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__67, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__67, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__67, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__67, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__67, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__67, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__67, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__67, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__67, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__67, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__67, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__67, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__67, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__67, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__67, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__67, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__67, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__67, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__67, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SRA)
    | zv__71 when (let zp0z3 = (access (zv__71, (Big_int.of_int (6)))) in
    let zp1z3 = (access (zv__71, (Big_int.of_int (5)))) in
    let zp2z3 = (access (zv__71, (Big_int.of_int (4)))) in
    let zp3z3 = (access (zv__71, (Big_int.of_int (3)))) in
    let zp4z3 = (access (zv__71, (Big_int.of_int (2)))) in
    let zp5z3 = (access (zv__71, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zv__71, Big_int.zero)) in
    let z_mappingpatterns_27z3 = (subrange (zv__71, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
    let z_mappingpatterns_26z3 = (subrange (zv__71, (Big_int.of_int (14)), (Big_int.of_int (14)))) in
    ((((((((zsizze_bits_backwards_matches z_mappingpatterns_27z3) && (if (zsizze_bits_backwards_matches z_mappingpatterns_27z3) then (let zsizze = (zsizze_bits_backwards z_mappingpatterns_27z3) in
    (zbool_bits_backwards_matches z_mappingpatterns_26z3) && (if (zbool_bits_backwards_matches z_mappingpatterns_26z3) then (let zis_unsigned = (zbool_bits_backwards z_mappingpatterns_26z3) in
    (zneq_vec ((zsizze_bits_forwards zsizze), [B1; B1])) || (not zis_unsigned)) else false)) else false)) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zimm = (subrange (zv__71, (Big_int.of_int (31)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__71, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__71, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zimm = (subrange (zv__71, (Big_int.of_int (31)), (Big_int.of_int (20)))) in
      let z_mappingpatterns_27z3 = (subrange (zv__71, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
      let z_mappingpatterns_26z3 = (subrange (zv__71, (Big_int.of_int (14)), (Big_int.of_int (14)))) in
      let zsizze = (zsizze_bits_backwards z_mappingpatterns_27z3) in
      let zis_unsigned = (zbool_bits_backwards z_mappingpatterns_26z3) in
      ZLOAD (zimm, zrs1, zrd, zis_unsigned, zsizze, false, false)
    | zv__73 when (let zp0z3 = (access (zv__73, (Big_int.of_int (14)))) in
    let zp1z3 = (access (zv__73, (Big_int.of_int (6)))) in
    let zp2z3 = (access (zv__73, (Big_int.of_int (5)))) in
    let zp3z3 = (access (zv__73, (Big_int.of_int (4)))) in
    let zp4z3 = (access (zv__73, (Big_int.of_int (3)))) in
    let zp5z3 = (access (zv__73, (Big_int.of_int (2)))) in
    let zp6z3 = (access (zv__73, (Big_int.of_int (1)))) in
    let zp7z3 = (access (zv__73, Big_int.zero)) in
    let z_mappingpatterns_28z3 = (subrange (zv__73, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
    (((((((((zsizze_bits_backwards_matches z_mappingpatterns_28z3) && (if (zsizze_bits_backwards_matches z_mappingpatterns_28z3) then (let zsizze = (zsizze_bits_backwards z_mappingpatterns_28z3) in
    true) else false)) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zimm7 = (subrange (zv__73, (Big_int.of_int (31)), (Big_int.of_int (25)))) in
      let zrs2 = (subrange (zv__73, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__73, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zimm7 = (subrange (zv__73, (Big_int.of_int (31)), (Big_int.of_int (25)))) in
      let zimm5 = (subrange (zv__73, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let z_mappingpatterns_28z3 = (subrange (zv__73, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
      let zsizze = (zsizze_bits_backwards z_mappingpatterns_28z3) in
      ZSTORE (append ((zimm7), (zimm5)), zrs2, zrs1, zsizze, false, false)
    | zv__76 when (let zp0z3 = (access (zv__76, (Big_int.of_int (14)))) in
    let zp1z3 = (access (zv__76, (Big_int.of_int (13)))) in
    let zp2z3 = (access (zv__76, (Big_int.of_int (12)))) in
    let zp3z3 = (access (zv__76, (Big_int.of_int (6)))) in
    let zp4z3 = (access (zv__76, (Big_int.of_int (5)))) in
    let zp5z3 = (access (zv__76, (Big_int.of_int (4)))) in
    let zp6z3 = (access (zv__76, (Big_int.of_int (3)))) in
    let zp7z3 = (access (zv__76, (Big_int.of_int (2)))) in
    let zp8z3 = (access (zv__76, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__76, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zimm = (subrange (zv__76, (Big_int.of_int (31)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__76, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__76, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zimm = (subrange (zv__76, (Big_int.of_int (31)), (Big_int.of_int (20)))) in
      ZADDIW (zimm, zrs1, zrd)
    | zv__79 when (let zp0z3 = (access (zv__79, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__79, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__79, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__79, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__79, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__79, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__79, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__79, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__79, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__79, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__79, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__79, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__79, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__79, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__79, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__79, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__79, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zshamt = (subrange (zv__79, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__79, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__79, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZSHIFTW (zshamt, zrs1, zrd, ZRISCV_SLLI)
    | zv__83 when (let zp0z3 = (access (zv__83, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__83, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__83, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__83, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__83, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__83, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__83, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__83, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__83, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__83, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__83, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__83, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__83, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__83, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__83, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__83, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__83, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zshamt = (subrange (zv__83, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__83, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__83, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZSHIFTW (zshamt, zrs1, zrd, ZRISCV_SRLI)
    | zv__87 when (let zp0z3 = (access (zv__87, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__87, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__87, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__87, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__87, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__87, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__87, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__87, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__87, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__87, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__87, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__87, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__87, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__87, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__87, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__87, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__87, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      let zshamt = (subrange (zv__87, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__87, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__87, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZSHIFTW (zshamt, zrs1, zrd, ZRISCV_SRAI)
    | zv__91 when (let zp0z3 = (access (zv__91, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__91, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__91, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__91, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__91, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__91, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__91, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__91, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__91, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__91, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__91, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__91, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__91, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__91, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__91, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__91, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__91, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__91, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__91, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__91, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZRTYPEW (zrs2, zrs1, zrd, ZRISCV_ADDW)
    | zv__95 when (let zp0z3 = (access (zv__95, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__95, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__95, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__95, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__95, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__95, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__95, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__95, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__95, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__95, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__95, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__95, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__95, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__95, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__95, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__95, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__95, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__95, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__95, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__95, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZRTYPEW (zrs2, zrs1, zrd, ZRISCV_SUBW)
    | zv__99 when (let zp0z3 = (access (zv__99, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__99, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__99, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__99, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__99, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__99, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__99, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__99, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__99, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__99, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__99, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__99, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__99, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__99, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__99, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__99, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__99, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__99, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__99, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__99, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZRTYPEW (zrs2, zrs1, zrd, ZRISCV_SLLW)
    | zv__103 when (let zp0z3 = (access (zv__103, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__103, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__103, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__103, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__103, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__103, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__103, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__103, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__103, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__103, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__103, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__103, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__103, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__103, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__103, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__103, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__103, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__103, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__103, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__103, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZRTYPEW (zrs2, zrs1, zrd, ZRISCV_SRLW)
    | zv__107 when (let zp0z3 = (access (zv__107, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__107, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__107, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__107, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__107, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__107, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__107, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__107, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__107, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__107, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__107, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__107, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__107, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__107, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__107, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__107, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__107, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__107, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__107, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__107, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZRTYPEW (zrs2, zrs1, zrd, ZRISCV_SRAW)
    | zv__111 when (let zp0z3 = (access (zv__111, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__111, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__111, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__111, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__111, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__111, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__111, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__111, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__111, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__111, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__111, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__111, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__111, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__111, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__111, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__111, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__111, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zshamt = (subrange (zv__111, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__111, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__111, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZSHIFTIWOP (zshamt, zrs1, zrd, ZRISCV_SLLIW)
    | zv__115 when (let zp0z3 = (access (zv__115, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__115, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__115, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__115, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__115, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__115, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__115, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__115, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__115, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__115, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__115, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__115, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__115, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__115, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__115, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__115, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__115, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zshamt = (subrange (zv__115, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__115, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__115, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZSHIFTIWOP (zshamt, zrs1, zrd, ZRISCV_SRLIW)
    | zv__119 when (let zp0z3 = (access (zv__119, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__119, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__119, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__119, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__119, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__119, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__119, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__119, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__119, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__119, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__119, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__119, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__119, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__119, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__119, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__119, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__119, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      let zshamt = (subrange (zv__119, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__119, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__119, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZSHIFTIWOP (zshamt, zrs1, zrd, ZRISCV_SRAIW)
    | zv__123 when (let zp0z3 = (access (zv__123, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__123, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__123, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__123, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__123, (Big_int.of_int (19)))) in
    let zp5z3 = (access (zv__123, (Big_int.of_int (18)))) in
    let zp6z3 = (access (zv__123, (Big_int.of_int (17)))) in
    let zp7z3 = (access (zv__123, (Big_int.of_int (16)))) in
    let zp8z3 = (access (zv__123, (Big_int.of_int (15)))) in
    let zp9z3 = (access (zv__123, (Big_int.of_int (14)))) in
    let zp10z3 = (access (zv__123, (Big_int.of_int (13)))) in
    let zp11z3 = (access (zv__123, (Big_int.of_int (12)))) in
    let zp12z3 = (access (zv__123, (Big_int.of_int (11)))) in
    let zp13z3 = (access (zv__123, (Big_int.of_int (10)))) in
    let zp14z3 = (access (zv__123, (Big_int.of_int (9)))) in
    let zp15z3 = (access (zv__123, (Big_int.of_int (8)))) in
    let zp16z3 = (access (zv__123, (Big_int.of_int (7)))) in
    let zp17z3 = (access (zv__123, (Big_int.of_int (6)))) in
    let zp18z3 = (access (zv__123, (Big_int.of_int (5)))) in
    let zp19z3 = (access (zv__123, (Big_int.of_int (4)))) in
    let zp20z3 = (access (zv__123, (Big_int.of_int (3)))) in
    let zp21z3 = (access (zv__123, (Big_int.of_int (2)))) in
    let zp22z3 = (access (zv__123, (Big_int.of_int (1)))) in
    let zp23z3 = (access (zv__123, Big_int.zero)) in
    (((((((((((((((((((((((eq_bit (zp23z3, B1)) && (eq_bit (zp22z3, B1))) && (eq_bit (zp21z3, B1))) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B0))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B0))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zsucc = (subrange (zv__123, (Big_int.of_int (23)), (Big_int.of_int (20)))) in
      let zpred = (subrange (zv__123, (Big_int.of_int (27)), (Big_int.of_int (24)))) in
      ZFENCE (zpred, zsucc)
    | zv__129 when (let zp0z3 = (access (zv__129, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__129, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__129, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__129, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__129, (Big_int.of_int (19)))) in
    let zp5z3 = (access (zv__129, (Big_int.of_int (18)))) in
    let zp6z3 = (access (zv__129, (Big_int.of_int (17)))) in
    let zp7z3 = (access (zv__129, (Big_int.of_int (16)))) in
    let zp8z3 = (access (zv__129, (Big_int.of_int (15)))) in
    let zp9z3 = (access (zv__129, (Big_int.of_int (14)))) in
    let zp10z3 = (access (zv__129, (Big_int.of_int (13)))) in
    let zp11z3 = (access (zv__129, (Big_int.of_int (12)))) in
    let zp12z3 = (access (zv__129, (Big_int.of_int (11)))) in
    let zp13z3 = (access (zv__129, (Big_int.of_int (10)))) in
    let zp14z3 = (access (zv__129, (Big_int.of_int (9)))) in
    let zp15z3 = (access (zv__129, (Big_int.of_int (8)))) in
    let zp16z3 = (access (zv__129, (Big_int.of_int (7)))) in
    let zp17z3 = (access (zv__129, (Big_int.of_int (6)))) in
    let zp18z3 = (access (zv__129, (Big_int.of_int (5)))) in
    let zp19z3 = (access (zv__129, (Big_int.of_int (4)))) in
    let zp20z3 = (access (zv__129, (Big_int.of_int (3)))) in
    let zp21z3 = (access (zv__129, (Big_int.of_int (2)))) in
    let zp22z3 = (access (zv__129, (Big_int.of_int (1)))) in
    let zp23z3 = (access (zv__129, Big_int.zero)) in
    (((((((((((((((((((((((eq_bit (zp23z3, B1)) && (eq_bit (zp22z3, B1))) && (eq_bit (zp21z3, B1))) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B0))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B0))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      let zsucc = (subrange (zv__129, (Big_int.of_int (23)), (Big_int.of_int (20)))) in
      let zpred = (subrange (zv__129, (Big_int.of_int (27)), (Big_int.of_int (24)))) in
      ZFENCE_TSO (zpred, zsucc)
    | zv__135 when (let zp0z3 = (access (zv__135, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__135, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__135, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__135, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__135, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__135, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__135, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__135, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__135, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__135, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__135, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__135, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__135, (Big_int.of_int (19)))) in
    let zp13z3 = (access (zv__135, (Big_int.of_int (18)))) in
    let zp14z3 = (access (zv__135, (Big_int.of_int (17)))) in
    let zp15z3 = (access (zv__135, (Big_int.of_int (16)))) in
    let zp16z3 = (access (zv__135, (Big_int.of_int (15)))) in
    let zp17z3 = (access (zv__135, (Big_int.of_int (14)))) in
    let zp18z3 = (access (zv__135, (Big_int.of_int (13)))) in
    let zp19z3 = (access (zv__135, (Big_int.of_int (12)))) in
    let zp20z3 = (access (zv__135, (Big_int.of_int (11)))) in
    let zp21z3 = (access (zv__135, (Big_int.of_int (10)))) in
    let zp22z3 = (access (zv__135, (Big_int.of_int (9)))) in
    let zp23z3 = (access (zv__135, (Big_int.of_int (8)))) in
    let zp24z3 = (access (zv__135, (Big_int.of_int (7)))) in
    let zp25z3 = (access (zv__135, (Big_int.of_int (6)))) in
    let zp26z3 = (access (zv__135, (Big_int.of_int (5)))) in
    let zp27z3 = (access (zv__135, (Big_int.of_int (4)))) in
    let zp28z3 = (access (zv__135, (Big_int.of_int (3)))) in
    let zp29z3 = (access (zv__135, (Big_int.of_int (2)))) in
    let zp30z3 = (access (zv__135, (Big_int.of_int (1)))) in
    let zp31z3 = (access (zv__135, Big_int.zero)) in
    (((((((((((((((((((((((((((((((eq_bit (zp31z3, B1)) && (eq_bit (zp30z3, B1))) && (eq_bit (zp29z3, B1))) && (eq_bit (zp28z3, B1))) && (eq_bit (zp27z3, B0))) && (eq_bit (zp26z3, B0))) && (eq_bit (zp25z3, B0))) && (eq_bit (zp24z3, B0))) && (eq_bit (zp23z3, B0))) && (eq_bit (zp22z3, B0))) && (eq_bit (zp21z3, B0))) && (eq_bit (zp20z3, B0))) && (eq_bit (zp19z3, B1))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B0))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B0))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZFENCEI ()
    | zv__141 when (let zp0z3 = (access (zv__141, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__141, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__141, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__141, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__141, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__141, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__141, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__141, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__141, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__141, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__141, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__141, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__141, (Big_int.of_int (19)))) in
    let zp13z3 = (access (zv__141, (Big_int.of_int (18)))) in
    let zp14z3 = (access (zv__141, (Big_int.of_int (17)))) in
    let zp15z3 = (access (zv__141, (Big_int.of_int (16)))) in
    let zp16z3 = (access (zv__141, (Big_int.of_int (15)))) in
    let zp17z3 = (access (zv__141, (Big_int.of_int (14)))) in
    let zp18z3 = (access (zv__141, (Big_int.of_int (13)))) in
    let zp19z3 = (access (zv__141, (Big_int.of_int (12)))) in
    let zp20z3 = (access (zv__141, (Big_int.of_int (11)))) in
    let zp21z3 = (access (zv__141, (Big_int.of_int (10)))) in
    let zp22z3 = (access (zv__141, (Big_int.of_int (9)))) in
    let zp23z3 = (access (zv__141, (Big_int.of_int (8)))) in
    let zp24z3 = (access (zv__141, (Big_int.of_int (7)))) in
    let zp25z3 = (access (zv__141, (Big_int.of_int (6)))) in
    let zp26z3 = (access (zv__141, (Big_int.of_int (5)))) in
    let zp27z3 = (access (zv__141, (Big_int.of_int (4)))) in
    let zp28z3 = (access (zv__141, (Big_int.of_int (3)))) in
    let zp29z3 = (access (zv__141, (Big_int.of_int (2)))) in
    let zp30z3 = (access (zv__141, (Big_int.of_int (1)))) in
    let zp31z3 = (access (zv__141, Big_int.zero)) in
    (((((((((((((((((((((((((((((((eq_bit (zp31z3, B1)) && (eq_bit (zp30z3, B1))) && (eq_bit (zp29z3, B0))) && (eq_bit (zp28z3, B0))) && (eq_bit (zp27z3, B1))) && (eq_bit (zp26z3, B1))) && (eq_bit (zp25z3, B1))) && (eq_bit (zp24z3, B0))) && (eq_bit (zp23z3, B0))) && (eq_bit (zp22z3, B0))) && (eq_bit (zp21z3, B0))) && (eq_bit (zp20z3, B0))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B0))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B0))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZECALL ()
    | zv__147 when (let zp0z3 = (access (zv__147, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__147, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__147, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__147, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__147, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__147, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__147, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__147, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__147, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__147, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__147, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__147, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__147, (Big_int.of_int (19)))) in
    let zp13z3 = (access (zv__147, (Big_int.of_int (18)))) in
    let zp14z3 = (access (zv__147, (Big_int.of_int (17)))) in
    let zp15z3 = (access (zv__147, (Big_int.of_int (16)))) in
    let zp16z3 = (access (zv__147, (Big_int.of_int (15)))) in
    let zp17z3 = (access (zv__147, (Big_int.of_int (14)))) in
    let zp18z3 = (access (zv__147, (Big_int.of_int (13)))) in
    let zp19z3 = (access (zv__147, (Big_int.of_int (12)))) in
    let zp20z3 = (access (zv__147, (Big_int.of_int (11)))) in
    let zp21z3 = (access (zv__147, (Big_int.of_int (10)))) in
    let zp22z3 = (access (zv__147, (Big_int.of_int (9)))) in
    let zp23z3 = (access (zv__147, (Big_int.of_int (8)))) in
    let zp24z3 = (access (zv__147, (Big_int.of_int (7)))) in
    let zp25z3 = (access (zv__147, (Big_int.of_int (6)))) in
    let zp26z3 = (access (zv__147, (Big_int.of_int (5)))) in
    let zp27z3 = (access (zv__147, (Big_int.of_int (4)))) in
    let zp28z3 = (access (zv__147, (Big_int.of_int (3)))) in
    let zp29z3 = (access (zv__147, (Big_int.of_int (2)))) in
    let zp30z3 = (access (zv__147, (Big_int.of_int (1)))) in
    let zp31z3 = (access (zv__147, Big_int.zero)) in
    (((((((((((((((((((((((((((((((eq_bit (zp31z3, B1)) && (eq_bit (zp30z3, B1))) && (eq_bit (zp29z3, B0))) && (eq_bit (zp28z3, B0))) && (eq_bit (zp27z3, B1))) && (eq_bit (zp26z3, B1))) && (eq_bit (zp25z3, B1))) && (eq_bit (zp24z3, B0))) && (eq_bit (zp23z3, B0))) && (eq_bit (zp22z3, B0))) && (eq_bit (zp21z3, B0))) && (eq_bit (zp20z3, B0))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B0))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B0))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZMRET ()
    | zv__154 when (let zp0z3 = (access (zv__154, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__154, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__154, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__154, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__154, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__154, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__154, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__154, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__154, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__154, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__154, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__154, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__154, (Big_int.of_int (19)))) in
    let zp13z3 = (access (zv__154, (Big_int.of_int (18)))) in
    let zp14z3 = (access (zv__154, (Big_int.of_int (17)))) in
    let zp15z3 = (access (zv__154, (Big_int.of_int (16)))) in
    let zp16z3 = (access (zv__154, (Big_int.of_int (15)))) in
    let zp17z3 = (access (zv__154, (Big_int.of_int (14)))) in
    let zp18z3 = (access (zv__154, (Big_int.of_int (13)))) in
    let zp19z3 = (access (zv__154, (Big_int.of_int (12)))) in
    let zp20z3 = (access (zv__154, (Big_int.of_int (11)))) in
    let zp21z3 = (access (zv__154, (Big_int.of_int (10)))) in
    let zp22z3 = (access (zv__154, (Big_int.of_int (9)))) in
    let zp23z3 = (access (zv__154, (Big_int.of_int (8)))) in
    let zp24z3 = (access (zv__154, (Big_int.of_int (7)))) in
    let zp25z3 = (access (zv__154, (Big_int.of_int (6)))) in
    let zp26z3 = (access (zv__154, (Big_int.of_int (5)))) in
    let zp27z3 = (access (zv__154, (Big_int.of_int (4)))) in
    let zp28z3 = (access (zv__154, (Big_int.of_int (3)))) in
    let zp29z3 = (access (zv__154, (Big_int.of_int (2)))) in
    let zp30z3 = (access (zv__154, (Big_int.of_int (1)))) in
    let zp31z3 = (access (zv__154, Big_int.zero)) in
    (((((((((((((((((((((((((((((((eq_bit (zp31z3, B1)) && (eq_bit (zp30z3, B1))) && (eq_bit (zp29z3, B0))) && (eq_bit (zp28z3, B0))) && (eq_bit (zp27z3, B1))) && (eq_bit (zp26z3, B1))) && (eq_bit (zp25z3, B1))) && (eq_bit (zp24z3, B0))) && (eq_bit (zp23z3, B0))) && (eq_bit (zp22z3, B0))) && (eq_bit (zp21z3, B0))) && (eq_bit (zp20z3, B0))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B0))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B0))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZSRET ()
    | zv__161 when (let zp0z3 = (access (zv__161, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__161, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__161, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__161, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__161, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__161, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__161, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__161, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__161, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__161, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__161, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__161, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__161, (Big_int.of_int (19)))) in
    let zp13z3 = (access (zv__161, (Big_int.of_int (18)))) in
    let zp14z3 = (access (zv__161, (Big_int.of_int (17)))) in
    let zp15z3 = (access (zv__161, (Big_int.of_int (16)))) in
    let zp16z3 = (access (zv__161, (Big_int.of_int (15)))) in
    let zp17z3 = (access (zv__161, (Big_int.of_int (14)))) in
    let zp18z3 = (access (zv__161, (Big_int.of_int (13)))) in
    let zp19z3 = (access (zv__161, (Big_int.of_int (12)))) in
    let zp20z3 = (access (zv__161, (Big_int.of_int (11)))) in
    let zp21z3 = (access (zv__161, (Big_int.of_int (10)))) in
    let zp22z3 = (access (zv__161, (Big_int.of_int (9)))) in
    let zp23z3 = (access (zv__161, (Big_int.of_int (8)))) in
    let zp24z3 = (access (zv__161, (Big_int.of_int (7)))) in
    let zp25z3 = (access (zv__161, (Big_int.of_int (6)))) in
    let zp26z3 = (access (zv__161, (Big_int.of_int (5)))) in
    let zp27z3 = (access (zv__161, (Big_int.of_int (4)))) in
    let zp28z3 = (access (zv__161, (Big_int.of_int (3)))) in
    let zp29z3 = (access (zv__161, (Big_int.of_int (2)))) in
    let zp30z3 = (access (zv__161, (Big_int.of_int (1)))) in
    let zp31z3 = (access (zv__161, Big_int.zero)) in
    (((((((((((((((((((((((((((((((eq_bit (zp31z3, B1)) && (eq_bit (zp30z3, B1))) && (eq_bit (zp29z3, B0))) && (eq_bit (zp28z3, B0))) && (eq_bit (zp27z3, B1))) && (eq_bit (zp26z3, B1))) && (eq_bit (zp25z3, B1))) && (eq_bit (zp24z3, B0))) && (eq_bit (zp23z3, B0))) && (eq_bit (zp22z3, B0))) && (eq_bit (zp21z3, B0))) && (eq_bit (zp20z3, B0))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B0))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B0))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZEBREAK ()
    | zv__167 when (let zp0z3 = (access (zv__167, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__167, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__167, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__167, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__167, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__167, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__167, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__167, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__167, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__167, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__167, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__167, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__167, (Big_int.of_int (19)))) in
    let zp13z3 = (access (zv__167, (Big_int.of_int (18)))) in
    let zp14z3 = (access (zv__167, (Big_int.of_int (17)))) in
    let zp15z3 = (access (zv__167, (Big_int.of_int (16)))) in
    let zp16z3 = (access (zv__167, (Big_int.of_int (15)))) in
    let zp17z3 = (access (zv__167, (Big_int.of_int (14)))) in
    let zp18z3 = (access (zv__167, (Big_int.of_int (13)))) in
    let zp19z3 = (access (zv__167, (Big_int.of_int (12)))) in
    let zp20z3 = (access (zv__167, (Big_int.of_int (11)))) in
    let zp21z3 = (access (zv__167, (Big_int.of_int (10)))) in
    let zp22z3 = (access (zv__167, (Big_int.of_int (9)))) in
    let zp23z3 = (access (zv__167, (Big_int.of_int (8)))) in
    let zp24z3 = (access (zv__167, (Big_int.of_int (7)))) in
    let zp25z3 = (access (zv__167, (Big_int.of_int (6)))) in
    let zp26z3 = (access (zv__167, (Big_int.of_int (5)))) in
    let zp27z3 = (access (zv__167, (Big_int.of_int (4)))) in
    let zp28z3 = (access (zv__167, (Big_int.of_int (3)))) in
    let zp29z3 = (access (zv__167, (Big_int.of_int (2)))) in
    let zp30z3 = (access (zv__167, (Big_int.of_int (1)))) in
    let zp31z3 = (access (zv__167, Big_int.zero)) in
    (((((((((((((((((((((((((((((((eq_bit (zp31z3, B1)) && (eq_bit (zp30z3, B1))) && (eq_bit (zp29z3, B0))) && (eq_bit (zp28z3, B0))) && (eq_bit (zp27z3, B1))) && (eq_bit (zp26z3, B1))) && (eq_bit (zp25z3, B1))) && (eq_bit (zp24z3, B0))) && (eq_bit (zp23z3, B0))) && (eq_bit (zp22z3, B0))) && (eq_bit (zp21z3, B0))) && (eq_bit (zp20z3, B0))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B0))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B0))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZWFI ()
    | zv__173 when (let zp0z3 = (access (zv__173, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__173, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__173, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__173, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__173, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__173, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__173, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__173, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__173, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__173, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__173, (Big_int.of_int (11)))) in
    let zp11z3 = (access (zv__173, (Big_int.of_int (10)))) in
    let zp12z3 = (access (zv__173, (Big_int.of_int (9)))) in
    let zp13z3 = (access (zv__173, (Big_int.of_int (8)))) in
    let zp14z3 = (access (zv__173, (Big_int.of_int (7)))) in
    let zp15z3 = (access (zv__173, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__173, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__173, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__173, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__173, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__173, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__173, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B1))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__173, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__173, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZSFENCE_VMA (zrs1, zrs2)
    | zv__178 when (let zp0z3 = (access (zv__178, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__178, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__178, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__178, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__178, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__178, (Big_int.of_int (24)))) in
    let zp6z3 = (access (zv__178, (Big_int.of_int (23)))) in
    let zp7z3 = (access (zv__178, (Big_int.of_int (22)))) in
    let zp8z3 = (access (zv__178, (Big_int.of_int (21)))) in
    let zp9z3 = (access (zv__178, (Big_int.of_int (20)))) in
    let zp10z3 = (access (zv__178, (Big_int.of_int (14)))) in
    let zp11z3 = (access (zv__178, (Big_int.of_int (6)))) in
    let zp12z3 = (access (zv__178, (Big_int.of_int (5)))) in
    let zp13z3 = (access (zv__178, (Big_int.of_int (4)))) in
    let zp14z3 = (access (zv__178, (Big_int.of_int (3)))) in
    let zp15z3 = (access (zv__178, (Big_int.of_int (2)))) in
    let zp16z3 = (access (zv__178, (Big_int.of_int (1)))) in
    let zp17z3 = (access (zv__178, Big_int.zero)) in
    let z_mappingpatterns_31z3 = (subrange (zv__178, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
    let z_mappingpatterns_30z3 = (subrange (zv__178, (Big_int.of_int (25)), (Big_int.of_int (25)))) in
    let z_mappingpatterns_29z3 = (subrange (zv__178, (Big_int.of_int (26)), (Big_int.of_int (26)))) in
    (((((((((((((((((((zsizze_bits_backwards_matches z_mappingpatterns_31z3) && (if (zsizze_bits_backwards_matches z_mappingpatterns_31z3) then (let zsizze = (zsizze_bits_backwards z_mappingpatterns_31z3) in
    (zbool_bits_backwards_matches z_mappingpatterns_30z3) && (if (zbool_bits_backwards_matches z_mappingpatterns_30z3) then (let zrl = (zbool_bits_backwards z_mappingpatterns_30z3) in
    (zbool_bits_backwards_matches z_mappingpatterns_29z3) && (if (zbool_bits_backwards_matches z_mappingpatterns_29z3) then (let zaq = (zbool_bits_backwards z_mappingpatterns_29z3) in
    true) else false)) else false)) else false)) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B1))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs1 = (subrange (zv__178, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__178, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let z_mappingpatterns_31z3 = (subrange (zv__178, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
      let z_mappingpatterns_30z3 = (subrange (zv__178, (Big_int.of_int (25)), (Big_int.of_int (25)))) in
      let z_mappingpatterns_29z3 = (subrange (zv__178, (Big_int.of_int (26)), (Big_int.of_int (26)))) in
      let zsizze = (zsizze_bits_backwards z_mappingpatterns_31z3) in
      let zrl = (zbool_bits_backwards z_mappingpatterns_30z3) in
      let zaq = (zbool_bits_backwards z_mappingpatterns_29z3) in
      ZLOADRES (zaq, zrl, zrs1, zsizze, zrd)
    | zv__183 when (let zp0z3 = (access (zv__183, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__183, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__183, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__183, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__183, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__183, (Big_int.of_int (14)))) in
    let zp6z3 = (access (zv__183, (Big_int.of_int (6)))) in
    let zp7z3 = (access (zv__183, (Big_int.of_int (5)))) in
    let zp8z3 = (access (zv__183, (Big_int.of_int (4)))) in
    let zp9z3 = (access (zv__183, (Big_int.of_int (3)))) in
    let zp10z3 = (access (zv__183, (Big_int.of_int (2)))) in
    let zp11z3 = (access (zv__183, (Big_int.of_int (1)))) in
    let zp12z3 = (access (zv__183, Big_int.zero)) in
    let z_mappingpatterns_34z3 = (subrange (zv__183, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
    let z_mappingpatterns_33z3 = (subrange (zv__183, (Big_int.of_int (25)), (Big_int.of_int (25)))) in
    let z_mappingpatterns_32z3 = (subrange (zv__183, (Big_int.of_int (26)), (Big_int.of_int (26)))) in
    ((((((((((((((zsizze_bits_backwards_matches z_mappingpatterns_34z3) && (if (zsizze_bits_backwards_matches z_mappingpatterns_34z3) then (let zsizze = (zsizze_bits_backwards z_mappingpatterns_34z3) in
    (zbool_bits_backwards_matches z_mappingpatterns_33z3) && (if (zbool_bits_backwards_matches z_mappingpatterns_33z3) then (let zrl = (zbool_bits_backwards z_mappingpatterns_33z3) in
    (zbool_bits_backwards_matches z_mappingpatterns_32z3) && (if (zbool_bits_backwards_matches z_mappingpatterns_32z3) then (let zaq = (zbool_bits_backwards z_mappingpatterns_32z3) in
    true) else false)) else false)) else false)) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__183, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__183, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__183, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let z_mappingpatterns_34z3 = (subrange (zv__183, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
      let z_mappingpatterns_33z3 = (subrange (zv__183, (Big_int.of_int (25)), (Big_int.of_int (25)))) in
      let z_mappingpatterns_32z3 = (subrange (zv__183, (Big_int.of_int (26)), (Big_int.of_int (26)))) in
      let zsizze = (zsizze_bits_backwards z_mappingpatterns_34z3) in
      let zrl = (zbool_bits_backwards z_mappingpatterns_33z3) in
      let zaq = (zbool_bits_backwards z_mappingpatterns_32z3) in
      ZSTORECON (zaq, zrl, zrs2, zrs1, zsizze, zrd)
    | zv__187 when (let zp0z3 = (access (zv__187, (Big_int.of_int (14)))) in
    let zp1z3 = (access (zv__187, (Big_int.of_int (6)))) in
    let zp2z3 = (access (zv__187, (Big_int.of_int (5)))) in
    let zp3z3 = (access (zv__187, (Big_int.of_int (4)))) in
    let zp4z3 = (access (zv__187, (Big_int.of_int (3)))) in
    let zp5z3 = (access (zv__187, (Big_int.of_int (2)))) in
    let zp6z3 = (access (zv__187, (Big_int.of_int (1)))) in
    let zp7z3 = (access (zv__187, Big_int.zero)) in
    let z_mappingpatterns_35z3 = (subrange (zv__187, (Big_int.of_int (31)), (Big_int.of_int (27)))) in
    let z_mappingpatterns_38z3 = (subrange (zv__187, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
    let z_mappingpatterns_37z3 = (subrange (zv__187, (Big_int.of_int (25)), (Big_int.of_int (25)))) in
    let z_mappingpatterns_36z3 = (subrange (zv__187, (Big_int.of_int (26)), (Big_int.of_int (26)))) in
    let z_mappingpatterns_35z3 = (subrange (zv__187, (Big_int.of_int (31)), (Big_int.of_int (27)))) in
    (((((((((zsizze_bits_backwards_matches z_mappingpatterns_38z3) && (if (zsizze_bits_backwards_matches z_mappingpatterns_38z3) then (let zsizze = (zsizze_bits_backwards z_mappingpatterns_38z3) in
    (zbool_bits_backwards_matches z_mappingpatterns_37z3) && (if (zbool_bits_backwards_matches z_mappingpatterns_37z3) then (let zrl = (zbool_bits_backwards z_mappingpatterns_37z3) in
    (zbool_bits_backwards_matches z_mappingpatterns_36z3) && (if (zbool_bits_backwards_matches z_mappingpatterns_36z3) then (let zaq = (zbool_bits_backwards z_mappingpatterns_36z3) in
    (zencdec_amoop_backwards_matches z_mappingpatterns_35z3) && (if (zencdec_amoop_backwards_matches z_mappingpatterns_35z3) then (let zop = (zencdec_amoop_backwards z_mappingpatterns_35z3) in
    true) else false)) else false)) else false)) else false)) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let z_mappingpatterns_35z3 = (subrange (zv__187, (Big_int.of_int (31)), (Big_int.of_int (27)))) in
      let zrs2 = (subrange (zv__187, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__187, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__187, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let z_mappingpatterns_38z3 = (subrange (zv__187, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
      let z_mappingpatterns_37z3 = (subrange (zv__187, (Big_int.of_int (25)), (Big_int.of_int (25)))) in
      let z_mappingpatterns_36z3 = (subrange (zv__187, (Big_int.of_int (26)), (Big_int.of_int (26)))) in
      let z_mappingpatterns_35z3 = (subrange (zv__187, (Big_int.of_int (31)), (Big_int.of_int (27)))) in
      let zsizze = (zsizze_bits_backwards z_mappingpatterns_38z3) in
      let zrl = (zbool_bits_backwards z_mappingpatterns_37z3) in
      let zaq = (zbool_bits_backwards z_mappingpatterns_36z3) in
      let zop = (zencdec_amoop_backwards z_mappingpatterns_35z3) in
      ZAMO (zop, zaq, zrl, zrs2, zrs1, zsizze, zrd)
    | zv__190 when (let zp0z3 = (access (zv__190, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__190, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__190, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__190, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__190, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__190, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__190, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__190, (Big_int.of_int (6)))) in
    let zp8z3 = (access (zv__190, (Big_int.of_int (5)))) in
    let zp9z3 = (access (zv__190, (Big_int.of_int (4)))) in
    let zp10z3 = (access (zv__190, (Big_int.of_int (3)))) in
    let zp11z3 = (access (zv__190, (Big_int.of_int (2)))) in
    let zp12z3 = (access (zv__190, (Big_int.of_int (1)))) in
    let zp13z3 = (access (zv__190, Big_int.zero)) in
    let z_mappingpatterns_39z3 = (subrange (zv__190, (Big_int.of_int (14)), (Big_int.of_int (12)))) in
    (((((((((((((((zencdec_mul_op_backwards_matches z_mappingpatterns_39z3) && (if (zencdec_mul_op_backwards_matches z_mappingpatterns_39z3) then (let (zhigh, zsigned1, zsigned2) = (zencdec_mul_op_backwards z_mappingpatterns_39z3) in
    true) else false)) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__190, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__190, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__190, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let z_mappingpatterns_39z3 = (subrange (zv__190, (Big_int.of_int (14)), (Big_int.of_int (12)))) in
      let (zhigh, zsigned1, zsigned2) = (zencdec_mul_op_backwards z_mappingpatterns_39z3) in
      ZMUL (zrs2, zrs1, zrd, zhigh, zsigned1, zsigned2)
    | zv__193 when (let zp0z3 = (access (zv__193, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__193, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__193, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__193, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__193, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__193, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__193, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__193, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__193, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__193, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__193, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__193, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__193, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__193, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__193, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__193, Big_int.zero)) in
    let z_mappingpatterns_40z3 = (subrange (zv__193, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    (((((((((((((((((zbool_not_bits_backwards_matches z_mappingpatterns_40z3) && (if (zbool_not_bits_backwards_matches z_mappingpatterns_40z3) then (let zs = (zbool_not_bits_backwards z_mappingpatterns_40z3) in
    true) else false)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__193, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__193, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__193, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let z_mappingpatterns_40z3 = (subrange (zv__193, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zs = (zbool_not_bits_backwards z_mappingpatterns_40z3) in
      ZDIV (zrs2, zrs1, zrd, zs)
    | zv__197 when (let zp0z3 = (access (zv__197, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__197, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__197, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__197, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__197, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__197, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__197, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__197, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__197, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__197, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__197, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__197, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__197, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__197, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__197, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__197, Big_int.zero)) in
    let z_mappingpatterns_41z3 = (subrange (zv__197, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    (((((((((((((((((zbool_not_bits_backwards_matches z_mappingpatterns_41z3) && (if (zbool_not_bits_backwards_matches z_mappingpatterns_41z3) then (let zs = (zbool_not_bits_backwards z_mappingpatterns_41z3) in
    true) else false)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__197, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__197, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__197, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let z_mappingpatterns_41z3 = (subrange (zv__197, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zs = (zbool_not_bits_backwards z_mappingpatterns_41z3) in
      ZREM (zrs2, zrs1, zrd, zs)
    | zv__201 when (let zp0z3 = (access (zv__201, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__201, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__201, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__201, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__201, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__201, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__201, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__201, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__201, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__201, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__201, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__201, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__201, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__201, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__201, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__201, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__201, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__201, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__201, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__201, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZMULW (zrs2, zrs1, zrd)
    | zv__205 when (let zp0z3 = (access (zv__205, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__205, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__205, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__205, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__205, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__205, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__205, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__205, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__205, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__205, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__205, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__205, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__205, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__205, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__205, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__205, Big_int.zero)) in
    let z_mappingpatterns_42z3 = (subrange (zv__205, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    (((((((((((((((((zbool_not_bits_backwards_matches z_mappingpatterns_42z3) && (if (zbool_not_bits_backwards_matches z_mappingpatterns_42z3) then (let zs = (zbool_not_bits_backwards z_mappingpatterns_42z3) in
    true) else false)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__205, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__205, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__205, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let z_mappingpatterns_42z3 = (subrange (zv__205, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zs = (zbool_not_bits_backwards z_mappingpatterns_42z3) in
      ZDIVW (zrs2, zrs1, zrd, zs)
    | zv__209 when (let zp0z3 = (access (zv__209, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__209, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__209, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__209, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__209, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__209, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__209, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__209, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__209, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__209, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__209, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__209, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__209, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__209, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__209, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__209, Big_int.zero)) in
    let z_mappingpatterns_43z3 = (subrange (zv__209, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    (((((((((((((((((zbool_not_bits_backwards_matches z_mappingpatterns_43z3) && (if (zbool_not_bits_backwards_matches z_mappingpatterns_43z3) then (let zs = (zbool_not_bits_backwards z_mappingpatterns_43z3) in
    true) else false)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs2 = (subrange (zv__209, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__209, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__209, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let z_mappingpatterns_43z3 = (subrange (zv__209, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zs = (zbool_not_bits_backwards z_mappingpatterns_43z3) in
      ZREMW (zrs2, zrs1, zrd, zs)
    | zv__213 when (let zp0z3 = (access (zv__213, (Big_int.of_int (6)))) in
    let zp1z3 = (access (zv__213, (Big_int.of_int (5)))) in
    let zp2z3 = (access (zv__213, (Big_int.of_int (4)))) in
    let zp3z3 = (access (zv__213, (Big_int.of_int (3)))) in
    let zp4z3 = (access (zv__213, (Big_int.of_int (2)))) in
    let zp5z3 = (access (zv__213, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zv__213, Big_int.zero)) in
    let z_mappingpatterns_45z3 = (subrange (zv__213, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
    let z_mappingpatterns_44z3 = (subrange (zv__213, (Big_int.of_int (14)), (Big_int.of_int (14)))) in
    ((((((((zencdec_csrop_backwards_matches z_mappingpatterns_45z3) && (if (zencdec_csrop_backwards_matches z_mappingpatterns_45z3) then (let zop = (zencdec_csrop_backwards z_mappingpatterns_45z3) in
    (zbool_bits_backwards_matches z_mappingpatterns_44z3) && (if (zbool_bits_backwards_matches z_mappingpatterns_44z3) then (let zis_imm = (zbool_bits_backwards z_mappingpatterns_44z3) in
    true) else false)) else false)) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zcsr = (subrange (zv__213, (Big_int.of_int (31)), (Big_int.of_int (20)))) in
      let zrs1 = (subrange (zv__213, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__213, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcsr = (subrange (zv__213, (Big_int.of_int (31)), (Big_int.of_int (20)))) in
      let z_mappingpatterns_45z3 = (subrange (zv__213, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
      let z_mappingpatterns_44z3 = (subrange (zv__213, (Big_int.of_int (14)), (Big_int.of_int (14)))) in
      let zop = (zencdec_csrop_backwards z_mappingpatterns_45z3) in
      let zis_imm = (zbool_bits_backwards z_mappingpatterns_44z3) in
      ZCSR (zcsr, zrs1, zrd, zis_imm, zop)
    | zv__215 when (let zp0z3 = (access (zv__215, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__215, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__215, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__215, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__215, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__215, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__215, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__215, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__215, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__215, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__215, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__215, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__215, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__215, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__215, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__215, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__215, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__215, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__215, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__215, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__215, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__215, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zrd = (subrange (zv__215, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__215, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCGetPerm (zrd, zcb)
    | zv__220 when (let zp0z3 = (access (zv__220, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__220, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__220, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__220, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__220, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__220, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__220, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__220, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__220, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__220, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__220, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__220, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__220, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__220, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__220, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__220, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__220, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__220, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__220, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__220, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__220, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__220, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zrd = (subrange (zv__220, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__220, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCGetType (zrd, zcb)
    | zv__225 when (let zp0z3 = (access (zv__225, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__225, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__225, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__225, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__225, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__225, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__225, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__225, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__225, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__225, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__225, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__225, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__225, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__225, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__225, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__225, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__225, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__225, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__225, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__225, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__225, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__225, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zrd = (subrange (zv__225, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__225, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCGetBase (zrd, zcb)
    | zv__230 when (let zp0z3 = (access (zv__230, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__230, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__230, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__230, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__230, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__230, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__230, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__230, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__230, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__230, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__230, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__230, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__230, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__230, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__230, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__230, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__230, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__230, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__230, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__230, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__230, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__230, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zrd = (subrange (zv__230, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__230, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCGetLen (zrd, zcb)
    | zv__235 when (let zp0z3 = (access (zv__235, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__235, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__235, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__235, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__235, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__235, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__235, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__235, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__235, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__235, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__235, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__235, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__235, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__235, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__235, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__235, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__235, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__235, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__235, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__235, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__235, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__235, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zrd = (subrange (zv__235, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__235, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCGetTag (zrd, zcb)
    | zv__240 when (let zp0z3 = (access (zv__240, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__240, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__240, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__240, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__240, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__240, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__240, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__240, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__240, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__240, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__240, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__240, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__240, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__240, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__240, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__240, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__240, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__240, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__240, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__240, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__240, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__240, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zrd = (subrange (zv__240, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__240, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCGetSealed (zrd, zcb)
    | zv__245 when (let zp0z3 = (access (zv__245, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__245, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__245, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__245, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__245, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__245, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__245, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__245, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__245, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__245, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__245, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__245, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__245, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__245, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__245, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__245, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__245, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__245, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__245, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__245, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__245, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__245, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zrd = (subrange (zv__245, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__245, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCGetOffset (zrd, zcb)
    | zv__250 when (let zp0z3 = (access (zv__250, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__250, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__250, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__250, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__250, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__250, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__250, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__250, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__250, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__250, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__250, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__250, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__250, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__250, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__250, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__250, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__250, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__250, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__250, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__250, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__250, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__250, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zrd = (subrange (zv__250, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__250, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCGetAddr (zrd, zcb)
    | zv__255 when (let zp0z3 = (access (zv__255, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__255, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__255, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__255, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__255, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__255, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__255, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__255, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__255, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__255, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__255, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__255, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__255, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__255, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__255, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__255, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__255, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__255, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__255, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__255, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__255, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__255, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zcs = (subrange (zv__255, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zcd = (subrange (zv__255, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCMove (zcd, zcs)
    | zv__260 when (let zp0z3 = (access (zv__260, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__260, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__260, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__260, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__260, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__260, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__260, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__260, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__260, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__260, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__260, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__260, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__260, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__260, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__260, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__260, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__260, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__260, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__260, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__260, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__260, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__260, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zcs = (subrange (zv__260, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zcd = (subrange (zv__260, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCClearTag (zcd, zcs)
    | zv__265 when (let zp0z3 = (access (zv__265, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__265, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__265, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__265, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__265, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__265, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__265, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__265, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__265, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__265, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__265, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__265, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__265, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__265, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__265, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__265, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__265, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__265, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__265, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__265, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__265, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__265, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zcd = (subrange (zv__265, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__265, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCJALR (zcd, zcb)
    | zv__270 when (let zp0z3 = (access (zv__270, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__270, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__270, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__270, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__270, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__270, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__270, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__270, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__270, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__270, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__270, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__270, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__270, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__270, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__270, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__270, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__270, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__270, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__270, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__270, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__270, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__270, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zrt = (subrange (zv__270, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zcs = (subrange (zv__270, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCCheckPerm (zcs, zrt)
    | zv__275 when (let zp0z3 = (access (zv__275, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__275, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__275, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__275, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__275, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__275, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__275, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__275, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__275, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__275, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__275, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__275, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__275, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__275, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__275, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__275, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__275, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__275, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__275, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__275, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__275, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__275, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zcs = (subrange (zv__275, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__275, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCCheckType (zcs, zcb)
    | zv__280 when (let zp0z3 = (access (zv__280, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__280, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__280, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__280, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__280, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__280, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__280, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__280, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__280, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__280, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__280, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__280, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__280, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__280, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__280, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__280, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__280, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__280, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__280, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__280, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__280, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__280, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zq = (subrange (zv__280, (Big_int.of_int (19)), (Big_int.of_int (18)))) in
      let zm5 = (subrange (zv__280, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zm3 = (subrange (zv__280, (Big_int.of_int (17)), (Big_int.of_int (15)))) in
      ZClearRegs (ZGPRegs, zq, append ((zm3), (zm5)))
    | zv__285 when (let zp0z3 = (access (zv__285, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__285, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__285, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__285, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__285, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__285, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__285, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__285, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__285, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__285, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__285, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__285, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__285, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__285, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__285, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__285, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__285, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__285, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__285, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__285, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__285, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__285, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zq = (subrange (zv__285, (Big_int.of_int (19)), (Big_int.of_int (18)))) in
      let zm5 = (subrange (zv__285, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zm3 = (subrange (zv__285, (Big_int.of_int (17)), (Big_int.of_int (15)))) in
      ZClearRegs (ZFPRegs, zq, append ((zm3), (zm5)))
    | zv__290 when (let zp0z3 = (access (zv__290, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__290, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__290, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__290, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__290, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__290, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__290, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__290, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__290, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__290, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__290, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__290, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__290, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__290, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__290, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__290, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__290, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zct = (subrange (zv__290, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zcs = (subrange (zv__290, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zcd = (subrange (zv__290, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCSeal (zcd, zcs, zct)
    | zv__294 when (let zp0z3 = (access (zv__294, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__294, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__294, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__294, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__294, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__294, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__294, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__294, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__294, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__294, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__294, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__294, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__294, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__294, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__294, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__294, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__294, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zct = (subrange (zv__294, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zcs = (subrange (zv__294, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zcd = (subrange (zv__294, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCUnseal (zcd, zcs, zct)
    | zv__298 when (let zp0z3 = (access (zv__298, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__298, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__298, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__298, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__298, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__298, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__298, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__298, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__298, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__298, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__298, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__298, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__298, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__298, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__298, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__298, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__298, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrt = (subrange (zv__298, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zcs = (subrange (zv__298, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zcd = (subrange (zv__298, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCAndPerm (zcd, zcs, zrt)
    | zv__302 when (let zp0z3 = (access (zv__302, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__302, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__302, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__302, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__302, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__302, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__302, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__302, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__302, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__302, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__302, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__302, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__302, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__302, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__302, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__302, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__302, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrt = (subrange (zv__302, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zcs = (subrange (zv__302, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zcd = (subrange (zv__302, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCSetOffset (zcd, zcs, zrt)
    | zv__306 when (let zp0z3 = (access (zv__306, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__306, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__306, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__306, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__306, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__306, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__306, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__306, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__306, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__306, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__306, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__306, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__306, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__306, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__306, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__306, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__306, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrt = (subrange (zv__306, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zcs = (subrange (zv__306, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zcd = (subrange (zv__306, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCIncOffset (zcd, zcs, zrt)
    | zv__310 when (let zp0z3 = (access (zv__310, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__310, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__310, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__310, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__310, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__310, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__310, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__310, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__310, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__310, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__310, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__310, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__310, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__310, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__310, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__310, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__310, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrt = (subrange (zv__310, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zcs = (subrange (zv__310, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zcd = (subrange (zv__310, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCSetBounds (zcd, zcs, zrt)
    | zv__314 when (let zp0z3 = (access (zv__314, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__314, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__314, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__314, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__314, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__314, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__314, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__314, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__314, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__314, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__314, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__314, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__314, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__314, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__314, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__314, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__314, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrt = (subrange (zv__314, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zcs = (subrange (zv__314, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zcd = (subrange (zv__314, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCSetBoundsExact (zcd, zcs, zrt)
    | zv__318 when (let zp0z3 = (access (zv__318, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__318, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__318, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__318, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__318, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__318, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__318, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__318, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__318, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__318, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__318, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__318, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__318, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__318, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__318, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__318, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__318, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zct = (subrange (zv__318, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zcd = (subrange (zv__318, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__318, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCBuildCap (zcd, zcb, zct)
    | zv__322 when (let zp0z3 = (access (zv__322, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__322, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__322, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__322, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__322, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__322, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__322, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__322, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__322, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__322, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__322, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__322, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__322, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__322, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__322, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__322, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__322, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zct = (subrange (zv__322, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zcd = (subrange (zv__322, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__322, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCCopyType (zcd, zcb, zct)
    | zv__326 when (let zp0z3 = (access (zv__326, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__326, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__326, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__326, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__326, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__326, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__326, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__326, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__326, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__326, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__326, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__326, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__326, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__326, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__326, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__326, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__326, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zct = (subrange (zv__326, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zcs = (subrange (zv__326, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zcd = (subrange (zv__326, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCCSeal (zcd, zcs, zct)
    | zv__330 when (let zp0z3 = (access (zv__330, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__330, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__330, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__330, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__330, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__330, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__330, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__330, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__330, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__330, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__330, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__330, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__330, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__330, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__330, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__330, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__330, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__330, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcs = (subrange (zv__330, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zcb = (subrange (zv__330, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCToPtr (zrd, zcb, zcs)
    | zv__334 when (let zp0z3 = (access (zv__334, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__334, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__334, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__334, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__334, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__334, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__334, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__334, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__334, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__334, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__334, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__334, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__334, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__334, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__334, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__334, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__334, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs = (subrange (zv__334, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zcd = (subrange (zv__334, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__334, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCFromPtr (zcd, zcb, zrs)
    | zv__338 when (let zp0z3 = (access (zv__338, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__338, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__338, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__338, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__338, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__338, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__338, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__338, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__338, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__338, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__338, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__338, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__338, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__338, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__338, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__338, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__338, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__338, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__338, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__338, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__338, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__338, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zcs = (subrange (zv__338, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__338, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCCall (zcs, zcb, [B0; B0; B0; B0; B0])
    | zv__343 when (let zp0z3 = (access (zv__343, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__343, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__343, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__343, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__343, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__343, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__343, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__343, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__343, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__343, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__343, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__343, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__343, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__343, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__343, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__343, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__343, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__343, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__343, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__343, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__343, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__343, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zcs = (subrange (zv__343, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__343, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCCall (zcs, zcb, [B0; B0; B0; B0; B1])
    | zv__348 when (let zp0z3 = (access (zv__348, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__348, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__348, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__348, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__348, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__348, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__348, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__348, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__348, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__348, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__348, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__348, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__348, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__348, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__348, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__348, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__348, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__348, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__348, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__348, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__348, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__348, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zcs = (subrange (zv__348, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__348, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCCall (zcs, zcb, [B1; B1; B1; B1; B1])
    | zv__353 when (let zp0z3 = (access (zv__353, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__353, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__353, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__353, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__353, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__353, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__353, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__353, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__353, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__353, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__353, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__353, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__353, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__353, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__353, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__353, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__353, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__353, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zct = (subrange (zv__353, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zcb = (subrange (zv__353, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCTestSubset (zrd, zcb, zct)
    | zv__357 when (let zp0z3 = (access (zv__357, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__357, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__357, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__357, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__357, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__357, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__357, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__357, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__357, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__357, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__357, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__357, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__357, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__357, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__357, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__357, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__357, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zidx = (subrange (zv__357, (Big_int.of_int (24)), (Big_int.of_int (20)))) in
      let zcs = (subrange (zv__357, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zcd = (subrange (zv__357, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCSpecialRW (zcd, zcs, zidx)
    | zv__361 when (let zp0z3 = (access (zv__361, (Big_int.of_int (14)))) in
    let zp1z3 = (access (zv__361, (Big_int.of_int (13)))) in
    let zp2z3 = (access (zv__361, (Big_int.of_int (12)))) in
    let zp3z3 = (access (zv__361, (Big_int.of_int (6)))) in
    let zp4z3 = (access (zv__361, (Big_int.of_int (5)))) in
    let zp5z3 = (access (zv__361, (Big_int.of_int (4)))) in
    let zp6z3 = (access (zv__361, (Big_int.of_int (3)))) in
    let zp7z3 = (access (zv__361, (Big_int.of_int (2)))) in
    let zp8z3 = (access (zv__361, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__361, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zimm12 = (subrange (zv__361, (Big_int.of_int (31)), (Big_int.of_int (20)))) in
      let zimm12 = (subrange (zv__361, (Big_int.of_int (31)), (Big_int.of_int (20)))) in
      let zcd = (subrange (zv__361, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__361, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCIncOffsetImmediate (zcd, zcb, zimm12)
    | zv__364 when (let zp0z3 = (access (zv__364, (Big_int.of_int (14)))) in
    let zp1z3 = (access (zv__364, (Big_int.of_int (13)))) in
    let zp2z3 = (access (zv__364, (Big_int.of_int (12)))) in
    let zp3z3 = (access (zv__364, (Big_int.of_int (6)))) in
    let zp4z3 = (access (zv__364, (Big_int.of_int (5)))) in
    let zp5z3 = (access (zv__364, (Big_int.of_int (4)))) in
    let zp6z3 = (access (zv__364, (Big_int.of_int (3)))) in
    let zp7z3 = (access (zv__364, (Big_int.of_int (2)))) in
    let zp8z3 = (access (zv__364, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__364, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      let zimm12 = (subrange (zv__364, (Big_int.of_int (31)), (Big_int.of_int (20)))) in
      let zimm12 = (subrange (zv__364, (Big_int.of_int (31)), (Big_int.of_int (20)))) in
      let zcd = (subrange (zv__364, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcb = (subrange (zv__364, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCSetBoundsImmediate (zcd, zcb, zimm12)
    | zv__367 when (let zp0z3 = (access (zv__367, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__367, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__367, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__367, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__367, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__367, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__367, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__367, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__367, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__367, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__367, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__367, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__367, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__367, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__367, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__367, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__367, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__367, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__367, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__367, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__367, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__367, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs = (subrange (zv__367, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__367, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCLoadDDC (zrd, zrs, false, ZBYTE)
    | zv__372 when (let zp0z3 = (access (zv__372, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__372, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__372, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__372, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__372, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__372, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__372, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__372, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__372, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__372, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__372, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__372, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__372, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__372, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__372, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__372, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__372, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__372, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__372, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__372, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__372, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__372, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs = (subrange (zv__372, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__372, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCLoadDDC (zrd, zrs, false, ZHALF)
    | zv__377 when (let zp0z3 = (access (zv__377, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__377, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__377, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__377, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__377, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__377, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__377, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__377, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__377, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__377, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__377, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__377, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__377, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__377, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__377, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__377, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__377, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__377, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__377, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__377, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__377, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__377, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs = (subrange (zv__377, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__377, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCLoadDDC (zrd, zrs, false, ZWORD)
    | zv__382 when (let zp0z3 = (access (zv__382, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__382, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__382, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__382, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__382, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__382, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__382, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__382, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__382, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__382, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__382, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__382, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__382, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__382, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__382, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__382, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__382, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__382, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__382, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__382, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__382, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__382, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs = (subrange (zv__382, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__382, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCLoadDDC (zrd, zrs, false, ZDOUBLE)
    | zv__387 when (let zp0z3 = (access (zv__387, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__387, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__387, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__387, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__387, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__387, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__387, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__387, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__387, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__387, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__387, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__387, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__387, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__387, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__387, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__387, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__387, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__387, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__387, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__387, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__387, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__387, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs = (subrange (zv__387, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__387, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCLoadDDC (zrd, zrs, true, ZBYTE)
    | zv__392 when (let zp0z3 = (access (zv__392, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__392, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__392, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__392, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__392, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__392, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__392, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__392, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__392, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__392, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__392, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__392, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__392, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__392, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__392, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__392, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__392, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__392, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__392, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__392, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__392, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__392, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs = (subrange (zv__392, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__392, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCLoadDDC (zrd, zrs, true, ZHALF)
    | zv__397 when (let zp0z3 = (access (zv__397, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__397, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__397, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__397, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__397, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__397, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__397, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__397, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__397, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__397, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__397, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__397, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__397, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__397, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__397, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__397, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__397, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__397, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__397, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__397, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__397, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__397, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs = (subrange (zv__397, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__397, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCLoadDDC (zrd, zrs, true, ZWORD)
    | zv__402 when (let zp0z3 = (access (zv__402, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__402, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__402, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__402, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__402, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__402, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__402, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__402, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__402, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__402, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__402, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__402, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__402, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__402, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__402, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__402, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__402, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__402, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__402, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__402, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__402, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__402, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs = (subrange (zv__402, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__402, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCLoadDDC (zrd, zrs, true, ZDOUBLE)
    | zv__407 when (let zp0z3 = (access (zv__407, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__407, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__407, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__407, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__407, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__407, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__407, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__407, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__407, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__407, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__407, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__407, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__407, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__407, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__407, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__407, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__407, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__407, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__407, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__407, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__407, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__407, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs = (subrange (zv__407, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__407, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCStoreDDC (zrd, zrs, ZBYTE)
    | zv__412 when (let zp0z3 = (access (zv__412, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__412, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__412, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__412, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__412, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__412, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__412, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__412, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__412, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__412, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__412, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__412, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__412, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__412, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__412, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__412, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__412, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__412, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__412, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__412, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__412, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__412, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs = (subrange (zv__412, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__412, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCStoreDDC (zrd, zrs, ZHALF)
    | zv__417 when (let zp0z3 = (access (zv__417, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__417, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__417, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__417, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__417, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__417, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__417, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__417, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__417, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__417, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__417, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__417, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__417, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__417, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__417, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__417, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__417, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__417, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__417, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__417, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__417, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__417, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs = (subrange (zv__417, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__417, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCStoreDDC (zrd, zrs, ZWORD)
    | zv__422 when (let zp0z3 = (access (zv__422, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__422, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__422, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__422, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__422, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__422, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__422, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__422, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__422, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__422, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__422, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__422, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__422, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__422, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__422, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__422, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__422, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__422, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__422, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__422, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__422, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__422, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs = (subrange (zv__422, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__422, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCStoreDDC (zrd, zrs, ZDOUBLE)
    | zv__427 when (let zp0z3 = (access (zv__427, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__427, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__427, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__427, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__427, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__427, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__427, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__427, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__427, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__427, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__427, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__427, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__427, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__427, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__427, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__427, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__427, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__427, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__427, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__427, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__427, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__427, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs = (subrange (zv__427, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__427, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCStoreCapDDC (zrd, zrs)
    | zv__432 when (let zp0z3 = (access (zv__432, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__432, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__432, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__432, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__432, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__432, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__432, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__432, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__432, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__432, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__432, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__432, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__432, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__432, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__432, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__432, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__432, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__432, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__432, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__432, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__432, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__432, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrs = (subrange (zv__432, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      let zrd = (subrange (zv__432, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZCLoadCapDDC (zrd, zrs)
    | zv__437 when (let zp0z3 = (access (zv__437, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__437, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__437, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__437, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__437, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__437, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__437, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__437, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__437, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__437, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__437, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__437, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__437, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__437, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__437, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__437, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__437, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__437, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__437, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__437, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__437, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__437, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__437, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcs = (subrange (zv__437, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCLoadCap (zrd, zcs, false, ZBYTE)
    | zv__442 when (let zp0z3 = (access (zv__442, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__442, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__442, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__442, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__442, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__442, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__442, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__442, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__442, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__442, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__442, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__442, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__442, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__442, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__442, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__442, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__442, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__442, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__442, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__442, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__442, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__442, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__442, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcs = (subrange (zv__442, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCLoadCap (zrd, zcs, false, ZHALF)
    | zv__447 when (let zp0z3 = (access (zv__447, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__447, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__447, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__447, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__447, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__447, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__447, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__447, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__447, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__447, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__447, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__447, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__447, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__447, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__447, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__447, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__447, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__447, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__447, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__447, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__447, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__447, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__447, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcs = (subrange (zv__447, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCLoadCap (zrd, zcs, false, ZWORD)
    | zv__452 when (let zp0z3 = (access (zv__452, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__452, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__452, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__452, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__452, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__452, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__452, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__452, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__452, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__452, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__452, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__452, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__452, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__452, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__452, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__452, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__452, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__452, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__452, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__452, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__452, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__452, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__452, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcs = (subrange (zv__452, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCLoadCap (zrd, zcs, false, ZDOUBLE)
    | zv__457 when (let zp0z3 = (access (zv__457, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__457, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__457, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__457, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__457, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__457, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__457, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__457, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__457, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__457, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__457, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__457, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__457, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__457, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__457, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__457, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__457, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__457, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__457, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__457, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__457, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__457, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__457, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcs = (subrange (zv__457, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCLoadCap (zrd, zcs, true, ZBYTE)
    | zv__462 when (let zp0z3 = (access (zv__462, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__462, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__462, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__462, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__462, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__462, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__462, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__462, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__462, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__462, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__462, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__462, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__462, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__462, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__462, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__462, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__462, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__462, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__462, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__462, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__462, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__462, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__462, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcs = (subrange (zv__462, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCLoadCap (zrd, zcs, true, ZHALF)
    | zv__467 when (let zp0z3 = (access (zv__467, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__467, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__467, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__467, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__467, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__467, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__467, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__467, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__467, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__467, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__467, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__467, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__467, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__467, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__467, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__467, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__467, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__467, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__467, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__467, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__467, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__467, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__467, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcs = (subrange (zv__467, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCLoadCap (zrd, zcs, true, ZWORD)
    | zv__472 when (let zp0z3 = (access (zv__472, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__472, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__472, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__472, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__472, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__472, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__472, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__472, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__472, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__472, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__472, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__472, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__472, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__472, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__472, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__472, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__472, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__472, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__472, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__472, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__472, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__472, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__472, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcs = (subrange (zv__472, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCLoadCap (zrd, zcs, true, ZDOUBLE)
    | zv__477 when (let zp0z3 = (access (zv__477, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__477, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__477, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__477, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__477, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__477, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__477, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__477, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__477, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__477, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__477, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__477, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__477, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__477, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__477, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__477, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__477, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__477, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__477, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__477, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__477, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__477, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__477, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcs = (subrange (zv__477, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCStoreCap (zrd, zcs, ZBYTE)
    | zv__482 when (let zp0z3 = (access (zv__482, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__482, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__482, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__482, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__482, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__482, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__482, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__482, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__482, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__482, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__482, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__482, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__482, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__482, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__482, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__482, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__482, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__482, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__482, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__482, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__482, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__482, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__482, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcs = (subrange (zv__482, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCStoreCap (zrd, zcs, ZHALF)
    | zv__487 when (let zp0z3 = (access (zv__487, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__487, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__487, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__487, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__487, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__487, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__487, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__487, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__487, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__487, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__487, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__487, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__487, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__487, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__487, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__487, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__487, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__487, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__487, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__487, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__487, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__487, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__487, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcs = (subrange (zv__487, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCStoreCap (zrd, zcs, ZWORD)
    | zv__492 when (let zp0z3 = (access (zv__492, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__492, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__492, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__492, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__492, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__492, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__492, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__492, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__492, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__492, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__492, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__492, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__492, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__492, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__492, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__492, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__492, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__492, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__492, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__492, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__492, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__492, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__492, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcs = (subrange (zv__492, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCStoreCap (zrd, zcs, ZDOUBLE)
    | zv__497 when (let zp0z3 = (access (zv__497, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__497, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__497, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__497, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__497, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__497, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__497, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__497, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__497, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__497, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__497, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__497, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__497, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__497, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__497, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__497, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__497, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__497, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__497, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__497, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__497, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__497, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__497, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcs = (subrange (zv__497, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCStoreCapCap (zrd, zcs)
    | zv__502 when (let zp0z3 = (access (zv__502, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__502, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__502, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__502, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__502, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__502, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__502, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__502, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__502, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__502, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__502, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__502, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__502, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__502, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__502, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__502, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__502, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__502, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__502, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__502, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__502, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__502, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__502, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zcs = (subrange (zv__502, (Big_int.of_int (19)), (Big_int.of_int (15)))) in
      ZCLoadCapCap (zrd, zcs)
    | zs -> ZILLEGAL zs
  end)

and zencdec_forwards_matches (zargz3 : (zast)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZUTYPE (zimm, zrd, zop) -> true
    | ZRISCV_JAL (zv__507, zrd) when (let zp0z3 = (access (zv__507, Big_int.zero)) in
    eq_bit (zp0z3, B0)) ->
      true
    | ZRISCV_JALR (zimm, zrs1, zrd) -> true
    | ZBTYPE (zv__509, zrs2, zrs1, zop) when (let zp0z3 = (access (zv__509, Big_int.zero)) in
    eq_bit (zp0z3, B0)) ->
      true
    | ZITYPE (zimm, zrs1, zrd, zop) -> true
    | ZSHIFTIOP (zshamt, zrs1, zrd, ZRISCV_SLLI) -> true
    | ZSHIFTIOP (zshamt, zrs1, zrd, ZRISCV_SRLI) -> true
    | ZSHIFTIOP (zshamt, zrs1, zrd, ZRISCV_SRAI) -> true
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_ADD) -> true
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SLT) -> true
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SLTU) -> true
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_AND) -> true
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_OR) -> true
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_XOR) -> true
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SLL) -> true
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SRL) -> true
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SUB) -> true
    | ZRTYPE (zrs2, zrs1, zrd, ZRISCV_SRA) -> true
    | ZLOAD (zimm, zrs1, zrd, zis_unsigned, zsizze, zp0z3, zp1z3) when ((((zneq_vec ((zsizze_bits_forwards zsizze), [B1; B1])) || (not zis_unsigned)) && (eq_bool (zp1z3, false))) && (eq_bool (zp0z3, false))) ->
      true
    | ZSTORE (zv__511, zrs2, zrs1, zsizze, zp0z3, zp1z3) when ((eq_bool (zp1z3, false)) && (eq_bool (zp0z3, false))) ->
      true
    | ZADDIW (zimm, zrs1, zrd) -> true
    | ZSHIFTW (zshamt, zrs1, zrd, ZRISCV_SLLI) -> true
    | ZSHIFTW (zshamt, zrs1, zrd, ZRISCV_SRLI) -> true
    | ZSHIFTW (zshamt, zrs1, zrd, ZRISCV_SRAI) -> true
    | ZRTYPEW (zrs2, zrs1, zrd, ZRISCV_ADDW) -> true
    | ZRTYPEW (zrs2, zrs1, zrd, ZRISCV_SUBW) -> true
    | ZRTYPEW (zrs2, zrs1, zrd, ZRISCV_SLLW) -> true
    | ZRTYPEW (zrs2, zrs1, zrd, ZRISCV_SRLW) -> true
    | ZRTYPEW (zrs2, zrs1, zrd, ZRISCV_SRAW) -> true
    | ZSHIFTIWOP (zshamt, zrs1, zrd, ZRISCV_SLLIW) -> true
    | ZSHIFTIWOP (zshamt, zrs1, zrd, ZRISCV_SRLIW) -> true
    | ZSHIFTIWOP (zshamt, zrs1, zrd, ZRISCV_SRAIW) -> true
    | ZFENCE (zpred, zsucc) -> true
    | ZFENCE_TSO (zpred, zsucc) -> true
    | ZFENCEI (()) -> true
    | ZECALL (()) -> true
    | ZMRET (()) -> true
    | ZSRET (()) -> true
    | ZEBREAK (()) -> true
    | ZWFI (()) -> true
    | ZSFENCE_VMA (zrs1, zrs2) -> true
    | ZLOADRES (zaq, zrl, zrs1, zsizze, zrd) -> true
    | ZSTORECON (zaq, zrl, zrs2, zrs1, zsizze, zrd) -> true
    | ZAMO (zop, zaq, zrl, zrs2, zrs1, zsizze, zrd) -> true
    | ZMUL (zrs2, zrs1, zrd, zhigh, zsigned1, zsigned2) -> true
    | ZDIV (zrs2, zrs1, zrd, zs) -> true
    | ZREM (zrs2, zrs1, zrd, zs) -> true
    | ZMULW (zrs2, zrs1, zrd) -> true
    | ZDIVW (zrs2, zrs1, zrd, zs) -> true
    | ZREMW (zrs2, zrs1, zrd, zs) -> true
    | ZCSR (zcsr, zrs1, zrd, zis_imm, zop) -> true
    | ZCGetPerm (zrd, zcb) -> true
    | ZCGetType (zrd, zcb) -> true
    | ZCGetBase (zrd, zcb) -> true
    | ZCGetLen (zrd, zcb) -> true
    | ZCGetTag (zrd, zcb) -> true
    | ZCGetSealed (zrd, zcb) -> true
    | ZCGetOffset (zrd, zcb) -> true
    | ZCGetAddr (zrd, zcb) -> true
    | ZCMove (zcd, zcs) -> true
    | ZCClearTag (zcd, zcs) -> true
    | ZCJALR (zcd, zcb) -> true
    | ZCCheckPerm (zcs, zrt) -> true
    | ZCCheckType (zcs, zcb) -> true
    | ZClearRegs (ZGPRegs, zq, zv__512) -> true
    | ZClearRegs (ZFPRegs, zq, zv__513) -> true
    | ZCSeal (zcd, zcs, zct) -> true
    | ZCUnseal (zcd, zcs, zct) -> true
    | ZCAndPerm (zcd, zcs, zrt) -> true
    | ZCSetOffset (zcd, zcs, zrt) -> true
    | ZCIncOffset (zcd, zcs, zrt) -> true
    | ZCSetBounds (zcd, zcs, zrt) -> true
    | ZCSetBoundsExact (zcd, zcs, zrt) -> true
    | ZCBuildCap (zcd, zcb, zct) -> true
    | ZCCopyType (zcd, zcb, zct) -> true
    | ZCCSeal (zcd, zcs, zct) -> true
    | ZCToPtr (zrd, zcb, zcs) -> true
    | ZCFromPtr (zcd, zcb, zrs) -> true
    | ZCCall (zcs, zcb, zb__0) when (let zp0z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__0, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | ZCCall (zcs, zcb, zb__1) when (let zp0z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__1, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | ZCCall (zcs, zcb, zb__2) when (let zp0z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__2, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | ZCTestSubset (zrd, zcb, zct) -> true
    | ZCSpecialRW (zcd, zcs, zidx) -> true
    | ZCIncOffsetImmediate (zcd, zcb, zimm12) -> true
    | ZCSetBoundsImmediate (zcd, zcb, zimm12) -> true
    | ZCLoadDDC (zrd, zrs, zp0z3, ZBYTE) when (eq_bool (zp0z3, false)) -> true
    | ZCLoadDDC (zrd, zrs, zp0z3, ZHALF) when (eq_bool (zp0z3, false)) -> true
    | ZCLoadDDC (zrd, zrs, zp0z3, ZWORD) when (eq_bool (zp0z3, false)) -> true
    | ZCLoadDDC (zrd, zrs, zp0z3, ZDOUBLE) when (eq_bool (zp0z3, false)) -> true
    | ZCLoadDDC (zrd, zrs, zp0z3, ZBYTE) when (eq_bool (zp0z3, true)) -> true
    | ZCLoadDDC (zrd, zrs, zp0z3, ZHALF) when (eq_bool (zp0z3, true)) -> true
    | ZCLoadDDC (zrd, zrs, zp0z3, ZWORD) when (eq_bool (zp0z3, true)) -> true
    | ZCLoadDDC (zrd, zrs, zp0z3, ZDOUBLE) when (eq_bool (zp0z3, true)) -> true
    | ZCStoreDDC (zrd, zrs, ZBYTE) -> true
    | ZCStoreDDC (zrd, zrs, ZHALF) -> true
    | ZCStoreDDC (zrd, zrs, ZWORD) -> true
    | ZCStoreDDC (zrd, zrs, ZDOUBLE) -> true
    | ZCStoreCapDDC (zrd, zrs) -> true
    | ZCLoadCapDDC (zrd, zrs) -> true
    | ZCLoadCap (zrd, zcs, zp0z3, ZBYTE) when (eq_bool (zp0z3, false)) -> true
    | ZCLoadCap (zrd, zcs, zp0z3, ZHALF) when (eq_bool (zp0z3, false)) -> true
    | ZCLoadCap (zrd, zcs, zp0z3, ZWORD) when (eq_bool (zp0z3, false)) -> true
    | ZCLoadCap (zrd, zcs, zp0z3, ZDOUBLE) when (eq_bool (zp0z3, false)) -> true
    | ZCLoadCap (zrd, zcs, zp0z3, ZBYTE) when (eq_bool (zp0z3, true)) -> true
    | ZCLoadCap (zrd, zcs, zp0z3, ZHALF) when (eq_bool (zp0z3, true)) -> true
    | ZCLoadCap (zrd, zcs, zp0z3, ZWORD) when (eq_bool (zp0z3, true)) -> true
    | ZCLoadCap (zrd, zcs, zp0z3, ZDOUBLE) when (eq_bool (zp0z3, true)) -> true
    | ZCStoreCap (zrd, zcs, ZBYTE) -> true
    | ZCStoreCap (zrd, zcs, ZHALF) -> true
    | ZCStoreCap (zrd, zcs, ZWORD) -> true
    | ZCStoreCap (zrd, zcs, ZDOUBLE) -> true
    | ZCStoreCapCap (zrd, zcs) -> true
    | ZCLoadCapCap (zrd, zcs) -> true
    | ZILLEGAL (zs) -> true
    | _ -> false
  end)

and zencdec_backwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zv__514 when (let z_mappingpatterns_0z3 = (subrange (zv__514, (Big_int.of_int (6)), Big_int.zero)) in
    (zencdec_uop_backwards_matches z_mappingpatterns_0z3) && (if (zencdec_uop_backwards_matches z_mappingpatterns_0z3) then (let zop = (zencdec_uop_backwards z_mappingpatterns_0z3) in
    true) else false)) ->
      let z_mappingpatterns_0z3 = (subrange (zv__514, (Big_int.of_int (6)), Big_int.zero)) in
      let zop = (zencdec_uop_backwards z_mappingpatterns_0z3) in
      true
    | zv__515 when (let zp0z3 = (access (zv__515, (Big_int.of_int (6)))) in
    let zp1z3 = (access (zv__515, (Big_int.of_int (5)))) in
    let zp2z3 = (access (zv__515, (Big_int.of_int (4)))) in
    let zp3z3 = (access (zv__515, (Big_int.of_int (3)))) in
    let zp4z3 = (access (zv__515, (Big_int.of_int (2)))) in
    let zp5z3 = (access (zv__515, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zv__515, Big_int.zero)) in
    ((((((eq_bit (zp6z3, B1)) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__517 when (let zp0z3 = (access (zv__517, (Big_int.of_int (14)))) in
    let zp1z3 = (access (zv__517, (Big_int.of_int (13)))) in
    let zp2z3 = (access (zv__517, (Big_int.of_int (12)))) in
    let zp3z3 = (access (zv__517, (Big_int.of_int (6)))) in
    let zp4z3 = (access (zv__517, (Big_int.of_int (5)))) in
    let zp5z3 = (access (zv__517, (Big_int.of_int (4)))) in
    let zp6z3 = (access (zv__517, (Big_int.of_int (3)))) in
    let zp7z3 = (access (zv__517, (Big_int.of_int (2)))) in
    let zp8z3 = (access (zv__517, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__517, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__520 when (let zp0z3 = (access (zv__520, (Big_int.of_int (6)))) in
    let zp1z3 = (access (zv__520, (Big_int.of_int (5)))) in
    let zp2z3 = (access (zv__520, (Big_int.of_int (4)))) in
    let zp3z3 = (access (zv__520, (Big_int.of_int (3)))) in
    let zp4z3 = (access (zv__520, (Big_int.of_int (2)))) in
    let zp5z3 = (access (zv__520, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zv__520, Big_int.zero)) in
    let z_mappingpatterns_1z3 = (subrange (zv__520, (Big_int.of_int (14)), (Big_int.of_int (12)))) in
    ((((((((zencdec_bop_backwards_matches z_mappingpatterns_1z3) && (if (zencdec_bop_backwards_matches z_mappingpatterns_1z3) then (let zop = (zencdec_bop_backwards z_mappingpatterns_1z3) in
    true) else false)) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let z_mappingpatterns_1z3 = (subrange (zv__520, (Big_int.of_int (14)), (Big_int.of_int (12)))) in
      let zop = (zencdec_bop_backwards z_mappingpatterns_1z3) in
      true
    | zv__522 when (let zp0z3 = (access (zv__522, (Big_int.of_int (6)))) in
    let zp1z3 = (access (zv__522, (Big_int.of_int (5)))) in
    let zp2z3 = (access (zv__522, (Big_int.of_int (4)))) in
    let zp3z3 = (access (zv__522, (Big_int.of_int (3)))) in
    let zp4z3 = (access (zv__522, (Big_int.of_int (2)))) in
    let zp5z3 = (access (zv__522, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zv__522, Big_int.zero)) in
    let z_mappingpatterns_2z3 = (subrange (zv__522, (Big_int.of_int (14)), (Big_int.of_int (12)))) in
    ((((((((zencdec_iop_backwards_matches z_mappingpatterns_2z3) && (if (zencdec_iop_backwards_matches z_mappingpatterns_2z3) then (let zop = (zencdec_iop_backwards z_mappingpatterns_2z3) in
    true) else false)) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let z_mappingpatterns_2z3 = (subrange (zv__522, (Big_int.of_int (14)), (Big_int.of_int (12)))) in
      let zop = (zencdec_iop_backwards z_mappingpatterns_2z3) in
      true
    | zv__524 when (let zp0z3 = (access (zv__524, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__524, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__524, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__524, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__524, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__524, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__524, (Big_int.of_int (14)))) in
    let zp7z3 = (access (zv__524, (Big_int.of_int (13)))) in
    let zp8z3 = (access (zv__524, (Big_int.of_int (12)))) in
    let zp9z3 = (access (zv__524, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__524, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__524, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__524, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__524, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__524, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__524, Big_int.zero)) in
    (((((((((((((((eq_bit (zp15z3, B1)) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__528 when (let zp0z3 = (access (zv__528, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__528, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__528, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__528, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__528, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__528, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__528, (Big_int.of_int (14)))) in
    let zp7z3 = (access (zv__528, (Big_int.of_int (13)))) in
    let zp8z3 = (access (zv__528, (Big_int.of_int (12)))) in
    let zp9z3 = (access (zv__528, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__528, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__528, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__528, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__528, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__528, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__528, Big_int.zero)) in
    (((((((((((((((eq_bit (zp15z3, B1)) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__532 when (let zp0z3 = (access (zv__532, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__532, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__532, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__532, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__532, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__532, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__532, (Big_int.of_int (14)))) in
    let zp7z3 = (access (zv__532, (Big_int.of_int (13)))) in
    let zp8z3 = (access (zv__532, (Big_int.of_int (12)))) in
    let zp9z3 = (access (zv__532, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__532, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__532, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__532, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__532, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__532, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__532, Big_int.zero)) in
    (((((((((((((((eq_bit (zp15z3, B1)) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__536 when (let zp0z3 = (access (zv__536, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__536, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__536, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__536, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__536, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__536, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__536, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__536, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__536, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__536, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__536, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__536, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__536, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__536, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__536, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__536, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__536, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__540 when (let zp0z3 = (access (zv__540, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__540, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__540, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__540, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__540, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__540, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__540, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__540, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__540, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__540, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__540, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__540, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__540, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__540, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__540, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__540, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__540, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__544 when (let zp0z3 = (access (zv__544, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__544, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__544, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__544, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__544, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__544, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__544, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__544, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__544, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__544, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__544, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__544, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__544, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__544, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__544, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__544, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__544, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__548 when (let zp0z3 = (access (zv__548, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__548, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__548, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__548, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__548, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__548, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__548, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__548, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__548, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__548, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__548, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__548, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__548, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__548, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__548, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__548, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__548, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__552 when (let zp0z3 = (access (zv__552, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__552, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__552, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__552, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__552, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__552, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__552, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__552, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__552, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__552, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__552, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__552, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__552, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__552, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__552, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__552, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__552, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__556 when (let zp0z3 = (access (zv__556, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__556, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__556, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__556, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__556, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__556, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__556, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__556, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__556, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__556, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__556, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__556, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__556, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__556, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__556, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__556, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__556, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__560 when (let zp0z3 = (access (zv__560, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__560, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__560, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__560, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__560, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__560, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__560, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__560, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__560, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__560, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__560, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__560, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__560, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__560, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__560, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__560, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__560, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__564 when (let zp0z3 = (access (zv__564, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__564, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__564, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__564, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__564, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__564, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__564, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__564, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__564, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__564, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__564, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__564, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__564, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__564, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__564, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__564, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__564, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__568 when (let zp0z3 = (access (zv__568, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__568, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__568, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__568, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__568, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__568, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__568, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__568, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__568, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__568, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__568, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__568, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__568, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__568, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__568, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__568, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__568, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__572 when (let zp0z3 = (access (zv__572, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__572, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__572, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__572, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__572, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__572, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__572, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__572, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__572, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__572, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__572, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__572, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__572, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__572, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__572, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__572, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__572, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__576 when (let zp0z3 = (access (zv__576, (Big_int.of_int (6)))) in
    let zp1z3 = (access (zv__576, (Big_int.of_int (5)))) in
    let zp2z3 = (access (zv__576, (Big_int.of_int (4)))) in
    let zp3z3 = (access (zv__576, (Big_int.of_int (3)))) in
    let zp4z3 = (access (zv__576, (Big_int.of_int (2)))) in
    let zp5z3 = (access (zv__576, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zv__576, Big_int.zero)) in
    let z_mappingpatterns_4z3 = (subrange (zv__576, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
    let z_mappingpatterns_3z3 = (subrange (zv__576, (Big_int.of_int (14)), (Big_int.of_int (14)))) in
    ((((((((zsizze_bits_backwards_matches z_mappingpatterns_4z3) && (if (zsizze_bits_backwards_matches z_mappingpatterns_4z3) then (let zsizze = (zsizze_bits_backwards z_mappingpatterns_4z3) in
    (zbool_bits_backwards_matches z_mappingpatterns_3z3) && (if (zbool_bits_backwards_matches z_mappingpatterns_3z3) then (let zis_unsigned = (zbool_bits_backwards z_mappingpatterns_3z3) in
    (zneq_vec ((zsizze_bits_forwards zsizze), [B1; B1])) || (not zis_unsigned)) else false)) else false)) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let z_mappingpatterns_4z3 = (subrange (zv__576, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
      let z_mappingpatterns_3z3 = (subrange (zv__576, (Big_int.of_int (14)), (Big_int.of_int (14)))) in
      let zsizze = (zsizze_bits_backwards z_mappingpatterns_4z3) in
      let zis_unsigned = (zbool_bits_backwards z_mappingpatterns_3z3) in
      true
    | zv__578 when (let zp0z3 = (access (zv__578, (Big_int.of_int (14)))) in
    let zp1z3 = (access (zv__578, (Big_int.of_int (6)))) in
    let zp2z3 = (access (zv__578, (Big_int.of_int (5)))) in
    let zp3z3 = (access (zv__578, (Big_int.of_int (4)))) in
    let zp4z3 = (access (zv__578, (Big_int.of_int (3)))) in
    let zp5z3 = (access (zv__578, (Big_int.of_int (2)))) in
    let zp6z3 = (access (zv__578, (Big_int.of_int (1)))) in
    let zp7z3 = (access (zv__578, Big_int.zero)) in
    let z_mappingpatterns_5z3 = (subrange (zv__578, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
    (((((((((zsizze_bits_backwards_matches z_mappingpatterns_5z3) && (if (zsizze_bits_backwards_matches z_mappingpatterns_5z3) then (let zsizze = (zsizze_bits_backwards z_mappingpatterns_5z3) in
    true) else false)) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let z_mappingpatterns_5z3 = (subrange (zv__578, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
      let zsizze = (zsizze_bits_backwards z_mappingpatterns_5z3) in
      true
    | zv__581 when (let zp0z3 = (access (zv__581, (Big_int.of_int (14)))) in
    let zp1z3 = (access (zv__581, (Big_int.of_int (13)))) in
    let zp2z3 = (access (zv__581, (Big_int.of_int (12)))) in
    let zp3z3 = (access (zv__581, (Big_int.of_int (6)))) in
    let zp4z3 = (access (zv__581, (Big_int.of_int (5)))) in
    let zp5z3 = (access (zv__581, (Big_int.of_int (4)))) in
    let zp6z3 = (access (zv__581, (Big_int.of_int (3)))) in
    let zp7z3 = (access (zv__581, (Big_int.of_int (2)))) in
    let zp8z3 = (access (zv__581, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__581, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__584 when (let zp0z3 = (access (zv__584, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__584, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__584, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__584, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__584, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__584, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__584, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__584, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__584, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__584, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__584, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__584, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__584, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__584, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__584, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__584, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__584, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__588 when (let zp0z3 = (access (zv__588, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__588, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__588, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__588, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__588, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__588, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__588, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__588, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__588, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__588, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__588, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__588, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__588, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__588, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__588, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__588, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__588, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__592 when (let zp0z3 = (access (zv__592, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__592, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__592, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__592, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__592, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__592, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__592, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__592, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__592, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__592, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__592, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__592, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__592, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__592, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__592, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__592, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__592, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__596 when (let zp0z3 = (access (zv__596, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__596, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__596, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__596, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__596, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__596, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__596, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__596, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__596, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__596, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__596, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__596, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__596, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__596, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__596, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__596, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__596, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__600 when (let zp0z3 = (access (zv__600, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__600, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__600, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__600, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__600, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__600, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__600, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__600, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__600, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__600, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__600, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__600, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__600, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__600, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__600, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__600, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__600, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__604 when (let zp0z3 = (access (zv__604, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__604, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__604, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__604, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__604, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__604, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__604, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__604, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__604, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__604, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__604, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__604, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__604, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__604, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__604, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__604, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__604, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__608 when (let zp0z3 = (access (zv__608, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__608, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__608, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__608, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__608, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__608, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__608, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__608, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__608, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__608, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__608, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__608, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__608, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__608, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__608, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__608, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__608, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__612 when (let zp0z3 = (access (zv__612, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__612, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__612, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__612, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__612, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__612, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__612, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__612, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__612, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__612, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__612, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__612, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__612, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__612, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__612, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__612, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__612, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__616 when (let zp0z3 = (access (zv__616, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__616, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__616, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__616, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__616, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__616, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__616, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__616, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__616, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__616, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__616, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__616, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__616, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__616, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__616, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__616, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__616, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__620 when (let zp0z3 = (access (zv__620, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__620, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__620, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__620, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__620, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__620, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__620, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__620, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__620, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__620, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__620, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__620, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__620, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__620, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__620, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__620, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__620, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__624 when (let zp0z3 = (access (zv__624, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__624, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__624, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__624, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__624, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__624, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__624, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__624, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__624, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__624, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__624, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__624, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__624, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__624, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__624, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__624, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__624, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__628 when (let zp0z3 = (access (zv__628, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__628, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__628, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__628, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__628, (Big_int.of_int (19)))) in
    let zp5z3 = (access (zv__628, (Big_int.of_int (18)))) in
    let zp6z3 = (access (zv__628, (Big_int.of_int (17)))) in
    let zp7z3 = (access (zv__628, (Big_int.of_int (16)))) in
    let zp8z3 = (access (zv__628, (Big_int.of_int (15)))) in
    let zp9z3 = (access (zv__628, (Big_int.of_int (14)))) in
    let zp10z3 = (access (zv__628, (Big_int.of_int (13)))) in
    let zp11z3 = (access (zv__628, (Big_int.of_int (12)))) in
    let zp12z3 = (access (zv__628, (Big_int.of_int (11)))) in
    let zp13z3 = (access (zv__628, (Big_int.of_int (10)))) in
    let zp14z3 = (access (zv__628, (Big_int.of_int (9)))) in
    let zp15z3 = (access (zv__628, (Big_int.of_int (8)))) in
    let zp16z3 = (access (zv__628, (Big_int.of_int (7)))) in
    let zp17z3 = (access (zv__628, (Big_int.of_int (6)))) in
    let zp18z3 = (access (zv__628, (Big_int.of_int (5)))) in
    let zp19z3 = (access (zv__628, (Big_int.of_int (4)))) in
    let zp20z3 = (access (zv__628, (Big_int.of_int (3)))) in
    let zp21z3 = (access (zv__628, (Big_int.of_int (2)))) in
    let zp22z3 = (access (zv__628, (Big_int.of_int (1)))) in
    let zp23z3 = (access (zv__628, Big_int.zero)) in
    (((((((((((((((((((((((eq_bit (zp23z3, B1)) && (eq_bit (zp22z3, B1))) && (eq_bit (zp21z3, B1))) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B0))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B0))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__634 when (let zp0z3 = (access (zv__634, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__634, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__634, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__634, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__634, (Big_int.of_int (19)))) in
    let zp5z3 = (access (zv__634, (Big_int.of_int (18)))) in
    let zp6z3 = (access (zv__634, (Big_int.of_int (17)))) in
    let zp7z3 = (access (zv__634, (Big_int.of_int (16)))) in
    let zp8z3 = (access (zv__634, (Big_int.of_int (15)))) in
    let zp9z3 = (access (zv__634, (Big_int.of_int (14)))) in
    let zp10z3 = (access (zv__634, (Big_int.of_int (13)))) in
    let zp11z3 = (access (zv__634, (Big_int.of_int (12)))) in
    let zp12z3 = (access (zv__634, (Big_int.of_int (11)))) in
    let zp13z3 = (access (zv__634, (Big_int.of_int (10)))) in
    let zp14z3 = (access (zv__634, (Big_int.of_int (9)))) in
    let zp15z3 = (access (zv__634, (Big_int.of_int (8)))) in
    let zp16z3 = (access (zv__634, (Big_int.of_int (7)))) in
    let zp17z3 = (access (zv__634, (Big_int.of_int (6)))) in
    let zp18z3 = (access (zv__634, (Big_int.of_int (5)))) in
    let zp19z3 = (access (zv__634, (Big_int.of_int (4)))) in
    let zp20z3 = (access (zv__634, (Big_int.of_int (3)))) in
    let zp21z3 = (access (zv__634, (Big_int.of_int (2)))) in
    let zp22z3 = (access (zv__634, (Big_int.of_int (1)))) in
    let zp23z3 = (access (zv__634, Big_int.zero)) in
    (((((((((((((((((((((((eq_bit (zp23z3, B1)) && (eq_bit (zp22z3, B1))) && (eq_bit (zp21z3, B1))) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B0))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B0))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__640 when (let zp0z3 = (access (zv__640, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__640, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__640, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__640, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__640, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__640, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__640, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__640, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__640, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__640, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__640, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__640, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__640, (Big_int.of_int (19)))) in
    let zp13z3 = (access (zv__640, (Big_int.of_int (18)))) in
    let zp14z3 = (access (zv__640, (Big_int.of_int (17)))) in
    let zp15z3 = (access (zv__640, (Big_int.of_int (16)))) in
    let zp16z3 = (access (zv__640, (Big_int.of_int (15)))) in
    let zp17z3 = (access (zv__640, (Big_int.of_int (14)))) in
    let zp18z3 = (access (zv__640, (Big_int.of_int (13)))) in
    let zp19z3 = (access (zv__640, (Big_int.of_int (12)))) in
    let zp20z3 = (access (zv__640, (Big_int.of_int (11)))) in
    let zp21z3 = (access (zv__640, (Big_int.of_int (10)))) in
    let zp22z3 = (access (zv__640, (Big_int.of_int (9)))) in
    let zp23z3 = (access (zv__640, (Big_int.of_int (8)))) in
    let zp24z3 = (access (zv__640, (Big_int.of_int (7)))) in
    let zp25z3 = (access (zv__640, (Big_int.of_int (6)))) in
    let zp26z3 = (access (zv__640, (Big_int.of_int (5)))) in
    let zp27z3 = (access (zv__640, (Big_int.of_int (4)))) in
    let zp28z3 = (access (zv__640, (Big_int.of_int (3)))) in
    let zp29z3 = (access (zv__640, (Big_int.of_int (2)))) in
    let zp30z3 = (access (zv__640, (Big_int.of_int (1)))) in
    let zp31z3 = (access (zv__640, Big_int.zero)) in
    (((((((((((((((((((((((((((((((eq_bit (zp31z3, B1)) && (eq_bit (zp30z3, B1))) && (eq_bit (zp29z3, B1))) && (eq_bit (zp28z3, B1))) && (eq_bit (zp27z3, B0))) && (eq_bit (zp26z3, B0))) && (eq_bit (zp25z3, B0))) && (eq_bit (zp24z3, B0))) && (eq_bit (zp23z3, B0))) && (eq_bit (zp22z3, B0))) && (eq_bit (zp21z3, B0))) && (eq_bit (zp20z3, B0))) && (eq_bit (zp19z3, B1))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B0))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B0))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__646 when (let zp0z3 = (access (zv__646, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__646, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__646, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__646, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__646, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__646, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__646, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__646, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__646, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__646, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__646, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__646, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__646, (Big_int.of_int (19)))) in
    let zp13z3 = (access (zv__646, (Big_int.of_int (18)))) in
    let zp14z3 = (access (zv__646, (Big_int.of_int (17)))) in
    let zp15z3 = (access (zv__646, (Big_int.of_int (16)))) in
    let zp16z3 = (access (zv__646, (Big_int.of_int (15)))) in
    let zp17z3 = (access (zv__646, (Big_int.of_int (14)))) in
    let zp18z3 = (access (zv__646, (Big_int.of_int (13)))) in
    let zp19z3 = (access (zv__646, (Big_int.of_int (12)))) in
    let zp20z3 = (access (zv__646, (Big_int.of_int (11)))) in
    let zp21z3 = (access (zv__646, (Big_int.of_int (10)))) in
    let zp22z3 = (access (zv__646, (Big_int.of_int (9)))) in
    let zp23z3 = (access (zv__646, (Big_int.of_int (8)))) in
    let zp24z3 = (access (zv__646, (Big_int.of_int (7)))) in
    let zp25z3 = (access (zv__646, (Big_int.of_int (6)))) in
    let zp26z3 = (access (zv__646, (Big_int.of_int (5)))) in
    let zp27z3 = (access (zv__646, (Big_int.of_int (4)))) in
    let zp28z3 = (access (zv__646, (Big_int.of_int (3)))) in
    let zp29z3 = (access (zv__646, (Big_int.of_int (2)))) in
    let zp30z3 = (access (zv__646, (Big_int.of_int (1)))) in
    let zp31z3 = (access (zv__646, Big_int.zero)) in
    (((((((((((((((((((((((((((((((eq_bit (zp31z3, B1)) && (eq_bit (zp30z3, B1))) && (eq_bit (zp29z3, B0))) && (eq_bit (zp28z3, B0))) && (eq_bit (zp27z3, B1))) && (eq_bit (zp26z3, B1))) && (eq_bit (zp25z3, B1))) && (eq_bit (zp24z3, B0))) && (eq_bit (zp23z3, B0))) && (eq_bit (zp22z3, B0))) && (eq_bit (zp21z3, B0))) && (eq_bit (zp20z3, B0))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B0))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B0))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__652 when (let zp0z3 = (access (zv__652, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__652, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__652, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__652, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__652, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__652, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__652, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__652, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__652, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__652, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__652, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__652, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__652, (Big_int.of_int (19)))) in
    let zp13z3 = (access (zv__652, (Big_int.of_int (18)))) in
    let zp14z3 = (access (zv__652, (Big_int.of_int (17)))) in
    let zp15z3 = (access (zv__652, (Big_int.of_int (16)))) in
    let zp16z3 = (access (zv__652, (Big_int.of_int (15)))) in
    let zp17z3 = (access (zv__652, (Big_int.of_int (14)))) in
    let zp18z3 = (access (zv__652, (Big_int.of_int (13)))) in
    let zp19z3 = (access (zv__652, (Big_int.of_int (12)))) in
    let zp20z3 = (access (zv__652, (Big_int.of_int (11)))) in
    let zp21z3 = (access (zv__652, (Big_int.of_int (10)))) in
    let zp22z3 = (access (zv__652, (Big_int.of_int (9)))) in
    let zp23z3 = (access (zv__652, (Big_int.of_int (8)))) in
    let zp24z3 = (access (zv__652, (Big_int.of_int (7)))) in
    let zp25z3 = (access (zv__652, (Big_int.of_int (6)))) in
    let zp26z3 = (access (zv__652, (Big_int.of_int (5)))) in
    let zp27z3 = (access (zv__652, (Big_int.of_int (4)))) in
    let zp28z3 = (access (zv__652, (Big_int.of_int (3)))) in
    let zp29z3 = (access (zv__652, (Big_int.of_int (2)))) in
    let zp30z3 = (access (zv__652, (Big_int.of_int (1)))) in
    let zp31z3 = (access (zv__652, Big_int.zero)) in
    (((((((((((((((((((((((((((((((eq_bit (zp31z3, B1)) && (eq_bit (zp30z3, B1))) && (eq_bit (zp29z3, B0))) && (eq_bit (zp28z3, B0))) && (eq_bit (zp27z3, B1))) && (eq_bit (zp26z3, B1))) && (eq_bit (zp25z3, B1))) && (eq_bit (zp24z3, B0))) && (eq_bit (zp23z3, B0))) && (eq_bit (zp22z3, B0))) && (eq_bit (zp21z3, B0))) && (eq_bit (zp20z3, B0))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B0))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B0))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__659 when (let zp0z3 = (access (zv__659, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__659, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__659, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__659, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__659, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__659, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__659, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__659, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__659, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__659, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__659, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__659, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__659, (Big_int.of_int (19)))) in
    let zp13z3 = (access (zv__659, (Big_int.of_int (18)))) in
    let zp14z3 = (access (zv__659, (Big_int.of_int (17)))) in
    let zp15z3 = (access (zv__659, (Big_int.of_int (16)))) in
    let zp16z3 = (access (zv__659, (Big_int.of_int (15)))) in
    let zp17z3 = (access (zv__659, (Big_int.of_int (14)))) in
    let zp18z3 = (access (zv__659, (Big_int.of_int (13)))) in
    let zp19z3 = (access (zv__659, (Big_int.of_int (12)))) in
    let zp20z3 = (access (zv__659, (Big_int.of_int (11)))) in
    let zp21z3 = (access (zv__659, (Big_int.of_int (10)))) in
    let zp22z3 = (access (zv__659, (Big_int.of_int (9)))) in
    let zp23z3 = (access (zv__659, (Big_int.of_int (8)))) in
    let zp24z3 = (access (zv__659, (Big_int.of_int (7)))) in
    let zp25z3 = (access (zv__659, (Big_int.of_int (6)))) in
    let zp26z3 = (access (zv__659, (Big_int.of_int (5)))) in
    let zp27z3 = (access (zv__659, (Big_int.of_int (4)))) in
    let zp28z3 = (access (zv__659, (Big_int.of_int (3)))) in
    let zp29z3 = (access (zv__659, (Big_int.of_int (2)))) in
    let zp30z3 = (access (zv__659, (Big_int.of_int (1)))) in
    let zp31z3 = (access (zv__659, Big_int.zero)) in
    (((((((((((((((((((((((((((((((eq_bit (zp31z3, B1)) && (eq_bit (zp30z3, B1))) && (eq_bit (zp29z3, B0))) && (eq_bit (zp28z3, B0))) && (eq_bit (zp27z3, B1))) && (eq_bit (zp26z3, B1))) && (eq_bit (zp25z3, B1))) && (eq_bit (zp24z3, B0))) && (eq_bit (zp23z3, B0))) && (eq_bit (zp22z3, B0))) && (eq_bit (zp21z3, B0))) && (eq_bit (zp20z3, B0))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B0))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B0))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__666 when (let zp0z3 = (access (zv__666, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__666, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__666, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__666, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__666, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__666, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__666, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__666, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__666, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__666, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__666, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__666, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__666, (Big_int.of_int (19)))) in
    let zp13z3 = (access (zv__666, (Big_int.of_int (18)))) in
    let zp14z3 = (access (zv__666, (Big_int.of_int (17)))) in
    let zp15z3 = (access (zv__666, (Big_int.of_int (16)))) in
    let zp16z3 = (access (zv__666, (Big_int.of_int (15)))) in
    let zp17z3 = (access (zv__666, (Big_int.of_int (14)))) in
    let zp18z3 = (access (zv__666, (Big_int.of_int (13)))) in
    let zp19z3 = (access (zv__666, (Big_int.of_int (12)))) in
    let zp20z3 = (access (zv__666, (Big_int.of_int (11)))) in
    let zp21z3 = (access (zv__666, (Big_int.of_int (10)))) in
    let zp22z3 = (access (zv__666, (Big_int.of_int (9)))) in
    let zp23z3 = (access (zv__666, (Big_int.of_int (8)))) in
    let zp24z3 = (access (zv__666, (Big_int.of_int (7)))) in
    let zp25z3 = (access (zv__666, (Big_int.of_int (6)))) in
    let zp26z3 = (access (zv__666, (Big_int.of_int (5)))) in
    let zp27z3 = (access (zv__666, (Big_int.of_int (4)))) in
    let zp28z3 = (access (zv__666, (Big_int.of_int (3)))) in
    let zp29z3 = (access (zv__666, (Big_int.of_int (2)))) in
    let zp30z3 = (access (zv__666, (Big_int.of_int (1)))) in
    let zp31z3 = (access (zv__666, Big_int.zero)) in
    (((((((((((((((((((((((((((((((eq_bit (zp31z3, B1)) && (eq_bit (zp30z3, B1))) && (eq_bit (zp29z3, B0))) && (eq_bit (zp28z3, B0))) && (eq_bit (zp27z3, B1))) && (eq_bit (zp26z3, B1))) && (eq_bit (zp25z3, B1))) && (eq_bit (zp24z3, B0))) && (eq_bit (zp23z3, B0))) && (eq_bit (zp22z3, B0))) && (eq_bit (zp21z3, B0))) && (eq_bit (zp20z3, B0))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B0))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B0))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__672 when (let zp0z3 = (access (zv__672, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__672, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__672, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__672, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__672, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__672, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__672, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__672, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__672, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__672, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__672, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__672, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__672, (Big_int.of_int (19)))) in
    let zp13z3 = (access (zv__672, (Big_int.of_int (18)))) in
    let zp14z3 = (access (zv__672, (Big_int.of_int (17)))) in
    let zp15z3 = (access (zv__672, (Big_int.of_int (16)))) in
    let zp16z3 = (access (zv__672, (Big_int.of_int (15)))) in
    let zp17z3 = (access (zv__672, (Big_int.of_int (14)))) in
    let zp18z3 = (access (zv__672, (Big_int.of_int (13)))) in
    let zp19z3 = (access (zv__672, (Big_int.of_int (12)))) in
    let zp20z3 = (access (zv__672, (Big_int.of_int (11)))) in
    let zp21z3 = (access (zv__672, (Big_int.of_int (10)))) in
    let zp22z3 = (access (zv__672, (Big_int.of_int (9)))) in
    let zp23z3 = (access (zv__672, (Big_int.of_int (8)))) in
    let zp24z3 = (access (zv__672, (Big_int.of_int (7)))) in
    let zp25z3 = (access (zv__672, (Big_int.of_int (6)))) in
    let zp26z3 = (access (zv__672, (Big_int.of_int (5)))) in
    let zp27z3 = (access (zv__672, (Big_int.of_int (4)))) in
    let zp28z3 = (access (zv__672, (Big_int.of_int (3)))) in
    let zp29z3 = (access (zv__672, (Big_int.of_int (2)))) in
    let zp30z3 = (access (zv__672, (Big_int.of_int (1)))) in
    let zp31z3 = (access (zv__672, Big_int.zero)) in
    (((((((((((((((((((((((((((((((eq_bit (zp31z3, B1)) && (eq_bit (zp30z3, B1))) && (eq_bit (zp29z3, B0))) && (eq_bit (zp28z3, B0))) && (eq_bit (zp27z3, B1))) && (eq_bit (zp26z3, B1))) && (eq_bit (zp25z3, B1))) && (eq_bit (zp24z3, B0))) && (eq_bit (zp23z3, B0))) && (eq_bit (zp22z3, B0))) && (eq_bit (zp21z3, B0))) && (eq_bit (zp20z3, B0))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B0))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B0))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__678 when (let zp0z3 = (access (zv__678, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__678, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__678, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__678, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__678, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__678, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__678, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__678, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__678, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__678, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__678, (Big_int.of_int (11)))) in
    let zp11z3 = (access (zv__678, (Big_int.of_int (10)))) in
    let zp12z3 = (access (zv__678, (Big_int.of_int (9)))) in
    let zp13z3 = (access (zv__678, (Big_int.of_int (8)))) in
    let zp14z3 = (access (zv__678, (Big_int.of_int (7)))) in
    let zp15z3 = (access (zv__678, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__678, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__678, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__678, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__678, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__678, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__678, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B0))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B1))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__683 when (let zp0z3 = (access (zv__683, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__683, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__683, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__683, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__683, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__683, (Big_int.of_int (24)))) in
    let zp6z3 = (access (zv__683, (Big_int.of_int (23)))) in
    let zp7z3 = (access (zv__683, (Big_int.of_int (22)))) in
    let zp8z3 = (access (zv__683, (Big_int.of_int (21)))) in
    let zp9z3 = (access (zv__683, (Big_int.of_int (20)))) in
    let zp10z3 = (access (zv__683, (Big_int.of_int (14)))) in
    let zp11z3 = (access (zv__683, (Big_int.of_int (6)))) in
    let zp12z3 = (access (zv__683, (Big_int.of_int (5)))) in
    let zp13z3 = (access (zv__683, (Big_int.of_int (4)))) in
    let zp14z3 = (access (zv__683, (Big_int.of_int (3)))) in
    let zp15z3 = (access (zv__683, (Big_int.of_int (2)))) in
    let zp16z3 = (access (zv__683, (Big_int.of_int (1)))) in
    let zp17z3 = (access (zv__683, Big_int.zero)) in
    let z_mappingpatterns_8z3 = (subrange (zv__683, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
    let z_mappingpatterns_7z3 = (subrange (zv__683, (Big_int.of_int (25)), (Big_int.of_int (25)))) in
    let z_mappingpatterns_6z3 = (subrange (zv__683, (Big_int.of_int (26)), (Big_int.of_int (26)))) in
    (((((((((((((((((((zsizze_bits_backwards_matches z_mappingpatterns_8z3) && (if (zsizze_bits_backwards_matches z_mappingpatterns_8z3) then (let zsizze = (zsizze_bits_backwards z_mappingpatterns_8z3) in
    (zbool_bits_backwards_matches z_mappingpatterns_7z3) && (if (zbool_bits_backwards_matches z_mappingpatterns_7z3) then (let zrl = (zbool_bits_backwards z_mappingpatterns_7z3) in
    (zbool_bits_backwards_matches z_mappingpatterns_6z3) && (if (zbool_bits_backwards_matches z_mappingpatterns_6z3) then (let zaq = (zbool_bits_backwards z_mappingpatterns_6z3) in
    true) else false)) else false)) else false)) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B1))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let z_mappingpatterns_8z3 = (subrange (zv__683, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
      let z_mappingpatterns_7z3 = (subrange (zv__683, (Big_int.of_int (25)), (Big_int.of_int (25)))) in
      let z_mappingpatterns_6z3 = (subrange (zv__683, (Big_int.of_int (26)), (Big_int.of_int (26)))) in
      let zsizze = (zsizze_bits_backwards z_mappingpatterns_8z3) in
      let zrl = (zbool_bits_backwards z_mappingpatterns_7z3) in
      let zaq = (zbool_bits_backwards z_mappingpatterns_6z3) in
      true
    | zv__688 when (let zp0z3 = (access (zv__688, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__688, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__688, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__688, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__688, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__688, (Big_int.of_int (14)))) in
    let zp6z3 = (access (zv__688, (Big_int.of_int (6)))) in
    let zp7z3 = (access (zv__688, (Big_int.of_int (5)))) in
    let zp8z3 = (access (zv__688, (Big_int.of_int (4)))) in
    let zp9z3 = (access (zv__688, (Big_int.of_int (3)))) in
    let zp10z3 = (access (zv__688, (Big_int.of_int (2)))) in
    let zp11z3 = (access (zv__688, (Big_int.of_int (1)))) in
    let zp12z3 = (access (zv__688, Big_int.zero)) in
    let z_mappingpatterns_9z3 = (subrange (zv__688, (Big_int.of_int (26)), (Big_int.of_int (26)))) in
    let z_mappingpatterns_11z3 = (subrange (zv__688, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
    let z_mappingpatterns_10z3 = (subrange (zv__688, (Big_int.of_int (25)), (Big_int.of_int (25)))) in
    ((((((((((((((zsizze_bits_backwards_matches z_mappingpatterns_11z3) && (if (zsizze_bits_backwards_matches z_mappingpatterns_11z3) then (let zsizze = (zsizze_bits_backwards z_mappingpatterns_11z3) in
    (zbool_bits_backwards_matches z_mappingpatterns_10z3) && (if (zbool_bits_backwards_matches z_mappingpatterns_10z3) then (let zrl = (zbool_bits_backwards z_mappingpatterns_10z3) in
    (zbool_bits_backwards_matches z_mappingpatterns_9z3) && (if (zbool_bits_backwards_matches z_mappingpatterns_9z3) then (let zaq = (zbool_bits_backwards z_mappingpatterns_9z3) in
    true) else false)) else false)) else false)) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let z_mappingpatterns_9z3 = (subrange (zv__688, (Big_int.of_int (26)), (Big_int.of_int (26)))) in
      let z_mappingpatterns_11z3 = (subrange (zv__688, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
      let z_mappingpatterns_10z3 = (subrange (zv__688, (Big_int.of_int (25)), (Big_int.of_int (25)))) in
      let zsizze = (zsizze_bits_backwards z_mappingpatterns_11z3) in
      let zrl = (zbool_bits_backwards z_mappingpatterns_10z3) in
      let zaq = (zbool_bits_backwards z_mappingpatterns_9z3) in
      true
    | zv__692 when (let zp0z3 = (access (zv__692, (Big_int.of_int (14)))) in
    let zp1z3 = (access (zv__692, (Big_int.of_int (6)))) in
    let zp2z3 = (access (zv__692, (Big_int.of_int (5)))) in
    let zp3z3 = (access (zv__692, (Big_int.of_int (4)))) in
    let zp4z3 = (access (zv__692, (Big_int.of_int (3)))) in
    let zp5z3 = (access (zv__692, (Big_int.of_int (2)))) in
    let zp6z3 = (access (zv__692, (Big_int.of_int (1)))) in
    let zp7z3 = (access (zv__692, Big_int.zero)) in
    let z_mappingpatterns_12z3 = (subrange (zv__692, (Big_int.of_int (31)), (Big_int.of_int (27)))) in
    let z_mappingpatterns_15z3 = (subrange (zv__692, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
    let z_mappingpatterns_14z3 = (subrange (zv__692, (Big_int.of_int (25)), (Big_int.of_int (25)))) in
    let z_mappingpatterns_13z3 = (subrange (zv__692, (Big_int.of_int (26)), (Big_int.of_int (26)))) in
    let z_mappingpatterns_12z3 = (subrange (zv__692, (Big_int.of_int (31)), (Big_int.of_int (27)))) in
    (((((((((zsizze_bits_backwards_matches z_mappingpatterns_15z3) && (if (zsizze_bits_backwards_matches z_mappingpatterns_15z3) then (let zsizze = (zsizze_bits_backwards z_mappingpatterns_15z3) in
    (zbool_bits_backwards_matches z_mappingpatterns_14z3) && (if (zbool_bits_backwards_matches z_mappingpatterns_14z3) then (let zrl = (zbool_bits_backwards z_mappingpatterns_14z3) in
    (zbool_bits_backwards_matches z_mappingpatterns_13z3) && (if (zbool_bits_backwards_matches z_mappingpatterns_13z3) then (let zaq = (zbool_bits_backwards z_mappingpatterns_13z3) in
    (zencdec_amoop_backwards_matches z_mappingpatterns_12z3) && (if (zencdec_amoop_backwards_matches z_mappingpatterns_12z3) then (let zop = (zencdec_amoop_backwards z_mappingpatterns_12z3) in
    true) else false)) else false)) else false)) else false)) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let z_mappingpatterns_12z3 = (subrange (zv__692, (Big_int.of_int (31)), (Big_int.of_int (27)))) in
      let z_mappingpatterns_15z3 = (subrange (zv__692, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
      let z_mappingpatterns_14z3 = (subrange (zv__692, (Big_int.of_int (25)), (Big_int.of_int (25)))) in
      let z_mappingpatterns_13z3 = (subrange (zv__692, (Big_int.of_int (26)), (Big_int.of_int (26)))) in
      let z_mappingpatterns_12z3 = (subrange (zv__692, (Big_int.of_int (31)), (Big_int.of_int (27)))) in
      let zsizze = (zsizze_bits_backwards z_mappingpatterns_15z3) in
      let zrl = (zbool_bits_backwards z_mappingpatterns_14z3) in
      let zaq = (zbool_bits_backwards z_mappingpatterns_13z3) in
      let zop = (zencdec_amoop_backwards z_mappingpatterns_12z3) in
      true
    | zv__695 when (let zp0z3 = (access (zv__695, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__695, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__695, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__695, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__695, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__695, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__695, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__695, (Big_int.of_int (6)))) in
    let zp8z3 = (access (zv__695, (Big_int.of_int (5)))) in
    let zp9z3 = (access (zv__695, (Big_int.of_int (4)))) in
    let zp10z3 = (access (zv__695, (Big_int.of_int (3)))) in
    let zp11z3 = (access (zv__695, (Big_int.of_int (2)))) in
    let zp12z3 = (access (zv__695, (Big_int.of_int (1)))) in
    let zp13z3 = (access (zv__695, Big_int.zero)) in
    let z_mappingpatterns_16z3 = (subrange (zv__695, (Big_int.of_int (14)), (Big_int.of_int (12)))) in
    (((((((((((((((zencdec_mul_op_backwards_matches z_mappingpatterns_16z3) && (if (zencdec_mul_op_backwards_matches z_mappingpatterns_16z3) then (let (zhigh, zsigned1, zsigned2) = (zencdec_mul_op_backwards z_mappingpatterns_16z3) in
    true) else false)) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let z_mappingpatterns_16z3 = (subrange (zv__695, (Big_int.of_int (14)), (Big_int.of_int (12)))) in
      let (zhigh, zsigned1, zsigned2) = (zencdec_mul_op_backwards z_mappingpatterns_16z3) in
      true
    | zv__698 when (let zp0z3 = (access (zv__698, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__698, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__698, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__698, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__698, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__698, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__698, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__698, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__698, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__698, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__698, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__698, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__698, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__698, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__698, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__698, Big_int.zero)) in
    let z_mappingpatterns_17z3 = (subrange (zv__698, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    (((((((((((((((((zbool_not_bits_backwards_matches z_mappingpatterns_17z3) && (if (zbool_not_bits_backwards_matches z_mappingpatterns_17z3) then (let zs = (zbool_not_bits_backwards z_mappingpatterns_17z3) in
    true) else false)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let z_mappingpatterns_17z3 = (subrange (zv__698, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zs = (zbool_not_bits_backwards z_mappingpatterns_17z3) in
      true
    | zv__702 when (let zp0z3 = (access (zv__702, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__702, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__702, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__702, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__702, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__702, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__702, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__702, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__702, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__702, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__702, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__702, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__702, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__702, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__702, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__702, Big_int.zero)) in
    let z_mappingpatterns_18z3 = (subrange (zv__702, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    (((((((((((((((((zbool_not_bits_backwards_matches z_mappingpatterns_18z3) && (if (zbool_not_bits_backwards_matches z_mappingpatterns_18z3) then (let zs = (zbool_not_bits_backwards z_mappingpatterns_18z3) in
    true) else false)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let z_mappingpatterns_18z3 = (subrange (zv__702, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zs = (zbool_not_bits_backwards z_mappingpatterns_18z3) in
      true
    | zv__706 when (let zp0z3 = (access (zv__706, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__706, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__706, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__706, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__706, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__706, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__706, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__706, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__706, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__706, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__706, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__706, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__706, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__706, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__706, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__706, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__706, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__710 when (let zp0z3 = (access (zv__710, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__710, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__710, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__710, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__710, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__710, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__710, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__710, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__710, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__710, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__710, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__710, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__710, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__710, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__710, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__710, Big_int.zero)) in
    let z_mappingpatterns_19z3 = (subrange (zv__710, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    (((((((((((((((((zbool_not_bits_backwards_matches z_mappingpatterns_19z3) && (if (zbool_not_bits_backwards_matches z_mappingpatterns_19z3) then (let zs = (zbool_not_bits_backwards z_mappingpatterns_19z3) in
    true) else false)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let z_mappingpatterns_19z3 = (subrange (zv__710, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zs = (zbool_not_bits_backwards z_mappingpatterns_19z3) in
      true
    | zv__714 when (let zp0z3 = (access (zv__714, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__714, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__714, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__714, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__714, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__714, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__714, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__714, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__714, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__714, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__714, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__714, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__714, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__714, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__714, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__714, Big_int.zero)) in
    let z_mappingpatterns_20z3 = (subrange (zv__714, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    (((((((((((((((((zbool_not_bits_backwards_matches z_mappingpatterns_20z3) && (if (zbool_not_bits_backwards_matches z_mappingpatterns_20z3) then (let zs = (zbool_not_bits_backwards z_mappingpatterns_20z3) in
    true) else false)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let z_mappingpatterns_20z3 = (subrange (zv__714, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zs = (zbool_not_bits_backwards z_mappingpatterns_20z3) in
      true
    | zv__718 when (let zp0z3 = (access (zv__718, (Big_int.of_int (6)))) in
    let zp1z3 = (access (zv__718, (Big_int.of_int (5)))) in
    let zp2z3 = (access (zv__718, (Big_int.of_int (4)))) in
    let zp3z3 = (access (zv__718, (Big_int.of_int (3)))) in
    let zp4z3 = (access (zv__718, (Big_int.of_int (2)))) in
    let zp5z3 = (access (zv__718, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zv__718, Big_int.zero)) in
    let z_mappingpatterns_22z3 = (subrange (zv__718, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
    let z_mappingpatterns_21z3 = (subrange (zv__718, (Big_int.of_int (14)), (Big_int.of_int (14)))) in
    ((((((((zencdec_csrop_backwards_matches z_mappingpatterns_22z3) && (if (zencdec_csrop_backwards_matches z_mappingpatterns_22z3) then (let zop = (zencdec_csrop_backwards z_mappingpatterns_22z3) in
    (zbool_bits_backwards_matches z_mappingpatterns_21z3) && (if (zbool_bits_backwards_matches z_mappingpatterns_21z3) then (let zis_imm = (zbool_bits_backwards z_mappingpatterns_21z3) in
    true) else false)) else false)) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let z_mappingpatterns_22z3 = (subrange (zv__718, (Big_int.of_int (13)), (Big_int.of_int (12)))) in
      let z_mappingpatterns_21z3 = (subrange (zv__718, (Big_int.of_int (14)), (Big_int.of_int (14)))) in
      let zop = (zencdec_csrop_backwards z_mappingpatterns_22z3) in
      let zis_imm = (zbool_bits_backwards z_mappingpatterns_21z3) in
      true
    | zv__720 when (let zp0z3 = (access (zv__720, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__720, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__720, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__720, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__720, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__720, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__720, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__720, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__720, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__720, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__720, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__720, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__720, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__720, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__720, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__720, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__720, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__720, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__720, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__720, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__720, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__720, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__725 when (let zp0z3 = (access (zv__725, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__725, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__725, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__725, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__725, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__725, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__725, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__725, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__725, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__725, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__725, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__725, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__725, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__725, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__725, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__725, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__725, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__725, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__725, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__725, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__725, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__725, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__730 when (let zp0z3 = (access (zv__730, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__730, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__730, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__730, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__730, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__730, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__730, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__730, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__730, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__730, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__730, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__730, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__730, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__730, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__730, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__730, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__730, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__730, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__730, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__730, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__730, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__730, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__735 when (let zp0z3 = (access (zv__735, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__735, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__735, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__735, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__735, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__735, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__735, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__735, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__735, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__735, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__735, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__735, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__735, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__735, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__735, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__735, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__735, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__735, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__735, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__735, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__735, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__735, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__740 when (let zp0z3 = (access (zv__740, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__740, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__740, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__740, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__740, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__740, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__740, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__740, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__740, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__740, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__740, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__740, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__740, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__740, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__740, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__740, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__740, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__740, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__740, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__740, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__740, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__740, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__745 when (let zp0z3 = (access (zv__745, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__745, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__745, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__745, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__745, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__745, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__745, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__745, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__745, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__745, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__745, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__745, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__745, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__745, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__745, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__745, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__745, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__745, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__745, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__745, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__745, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__745, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__750 when (let zp0z3 = (access (zv__750, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__750, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__750, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__750, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__750, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__750, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__750, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__750, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__750, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__750, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__750, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__750, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__750, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__750, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__750, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__750, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__750, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__750, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__750, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__750, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__750, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__750, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__755 when (let zp0z3 = (access (zv__755, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__755, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__755, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__755, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__755, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__755, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__755, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__755, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__755, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__755, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__755, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__755, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__755, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__755, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__755, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__755, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__755, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__755, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__755, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__755, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__755, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__755, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__760 when (let zp0z3 = (access (zv__760, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__760, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__760, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__760, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__760, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__760, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__760, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__760, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__760, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__760, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__760, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__760, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__760, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__760, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__760, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__760, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__760, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__760, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__760, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__760, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__760, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__760, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__765 when (let zp0z3 = (access (zv__765, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__765, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__765, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__765, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__765, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__765, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__765, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__765, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__765, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__765, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__765, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__765, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__765, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__765, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__765, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__765, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__765, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__765, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__765, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__765, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__765, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__765, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__770 when (let zp0z3 = (access (zv__770, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__770, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__770, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__770, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__770, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__770, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__770, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__770, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__770, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__770, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__770, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__770, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__770, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__770, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__770, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__770, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__770, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__770, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__770, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__770, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__770, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__770, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__775 when (let zp0z3 = (access (zv__775, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__775, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__775, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__775, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__775, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__775, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__775, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__775, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__775, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__775, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__775, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__775, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__775, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__775, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__775, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__775, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__775, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__775, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__775, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__775, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__775, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__775, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__780 when (let zp0z3 = (access (zv__780, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__780, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__780, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__780, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__780, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__780, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__780, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__780, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__780, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__780, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__780, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__780, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__780, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__780, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__780, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__780, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__780, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__780, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__780, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__780, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__780, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__780, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__785 when (let zp0z3 = (access (zv__785, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__785, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__785, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__785, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__785, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__785, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__785, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__785, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__785, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__785, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__785, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__785, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__785, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__785, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__785, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__785, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__785, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__785, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__785, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__785, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__785, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__785, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__790 when (let zp0z3 = (access (zv__790, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__790, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__790, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__790, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__790, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__790, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__790, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__790, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__790, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__790, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__790, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__790, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__790, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__790, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__790, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__790, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__790, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__790, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__790, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__790, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__790, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__790, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__795 when (let zp0z3 = (access (zv__795, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__795, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__795, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__795, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__795, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__795, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__795, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__795, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__795, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__795, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__795, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__795, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__795, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__795, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__795, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__795, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__795, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__799 when (let zp0z3 = (access (zv__799, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__799, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__799, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__799, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__799, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__799, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__799, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__799, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__799, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__799, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__799, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__799, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__799, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__799, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__799, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__799, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__799, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__803 when (let zp0z3 = (access (zv__803, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__803, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__803, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__803, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__803, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__803, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__803, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__803, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__803, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__803, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__803, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__803, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__803, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__803, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__803, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__803, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__803, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__807 when (let zp0z3 = (access (zv__807, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__807, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__807, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__807, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__807, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__807, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__807, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__807, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__807, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__807, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__807, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__807, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__807, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__807, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__807, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__807, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__807, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__811 when (let zp0z3 = (access (zv__811, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__811, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__811, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__811, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__811, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__811, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__811, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__811, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__811, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__811, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__811, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__811, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__811, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__811, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__811, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__811, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__811, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__815 when (let zp0z3 = (access (zv__815, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__815, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__815, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__815, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__815, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__815, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__815, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__815, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__815, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__815, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__815, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__815, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__815, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__815, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__815, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__815, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__815, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__819 when (let zp0z3 = (access (zv__819, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__819, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__819, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__819, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__819, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__819, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__819, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__819, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__819, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__819, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__819, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__819, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__819, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__819, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__819, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__819, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__819, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__823 when (let zp0z3 = (access (zv__823, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__823, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__823, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__823, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__823, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__823, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__823, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__823, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__823, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__823, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__823, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__823, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__823, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__823, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__823, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__823, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__823, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__827 when (let zp0z3 = (access (zv__827, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__827, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__827, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__827, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__827, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__827, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__827, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__827, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__827, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__827, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__827, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__827, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__827, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__827, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__827, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__827, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__827, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__831 when (let zp0z3 = (access (zv__831, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__831, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__831, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__831, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__831, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__831, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__831, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__831, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__831, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__831, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__831, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__831, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__831, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__831, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__831, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__831, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__831, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__835 when (let zp0z3 = (access (zv__835, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__835, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__835, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__835, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__835, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__835, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__835, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__835, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__835, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__835, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__835, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__835, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__835, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__835, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__835, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__835, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__835, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__839 when (let zp0z3 = (access (zv__839, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__839, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__839, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__839, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__839, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__839, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__839, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__839, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__839, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__839, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__839, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__839, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__839, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__839, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__839, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__839, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__839, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__843 when (let zp0z3 = (access (zv__843, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__843, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__843, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__843, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__843, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__843, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__843, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__843, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__843, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__843, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__843, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__843, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__843, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__843, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__843, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__843, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__843, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__843, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__843, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__843, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__843, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__843, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__848 when (let zp0z3 = (access (zv__848, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__848, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__848, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__848, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__848, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__848, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__848, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__848, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__848, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__848, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__848, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__848, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__848, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__848, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__848, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__848, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__848, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__848, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__848, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__848, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__848, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__848, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__853 when (let zp0z3 = (access (zv__853, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__853, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__853, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__853, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__853, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__853, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__853, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__853, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__853, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__853, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__853, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__853, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__853, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__853, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__853, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__853, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__853, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__853, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__853, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__853, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__853, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__853, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__858 when (let zp0z3 = (access (zv__858, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__858, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__858, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__858, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__858, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__858, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__858, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__858, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__858, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__858, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__858, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__858, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__858, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__858, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__858, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__858, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__858, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__862 when (let zp0z3 = (access (zv__862, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__862, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__862, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__862, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__862, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__862, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__862, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__862, (Big_int.of_int (14)))) in
    let zp8z3 = (access (zv__862, (Big_int.of_int (13)))) in
    let zp9z3 = (access (zv__862, (Big_int.of_int (12)))) in
    let zp10z3 = (access (zv__862, (Big_int.of_int (6)))) in
    let zp11z3 = (access (zv__862, (Big_int.of_int (5)))) in
    let zp12z3 = (access (zv__862, (Big_int.of_int (4)))) in
    let zp13z3 = (access (zv__862, (Big_int.of_int (3)))) in
    let zp14z3 = (access (zv__862, (Big_int.of_int (2)))) in
    let zp15z3 = (access (zv__862, (Big_int.of_int (1)))) in
    let zp16z3 = (access (zv__862, Big_int.zero)) in
    ((((((((((((((((eq_bit (zp16z3, B1)) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B1))) && (eq_bit (zp12z3, B1))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__866 when (let zp0z3 = (access (zv__866, (Big_int.of_int (14)))) in
    let zp1z3 = (access (zv__866, (Big_int.of_int (13)))) in
    let zp2z3 = (access (zv__866, (Big_int.of_int (12)))) in
    let zp3z3 = (access (zv__866, (Big_int.of_int (6)))) in
    let zp4z3 = (access (zv__866, (Big_int.of_int (5)))) in
    let zp5z3 = (access (zv__866, (Big_int.of_int (4)))) in
    let zp6z3 = (access (zv__866, (Big_int.of_int (3)))) in
    let zp7z3 = (access (zv__866, (Big_int.of_int (2)))) in
    let zp8z3 = (access (zv__866, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__866, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__869 when (let zp0z3 = (access (zv__869, (Big_int.of_int (14)))) in
    let zp1z3 = (access (zv__869, (Big_int.of_int (13)))) in
    let zp2z3 = (access (zv__869, (Big_int.of_int (12)))) in
    let zp3z3 = (access (zv__869, (Big_int.of_int (6)))) in
    let zp4z3 = (access (zv__869, (Big_int.of_int (5)))) in
    let zp5z3 = (access (zv__869, (Big_int.of_int (4)))) in
    let zp6z3 = (access (zv__869, (Big_int.of_int (3)))) in
    let zp7z3 = (access (zv__869, (Big_int.of_int (2)))) in
    let zp8z3 = (access (zv__869, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__869, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__872 when (let zp0z3 = (access (zv__872, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__872, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__872, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__872, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__872, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__872, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__872, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__872, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__872, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__872, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__872, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__872, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__872, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__872, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__872, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__872, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__872, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__872, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__872, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__872, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__872, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__872, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__877 when (let zp0z3 = (access (zv__877, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__877, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__877, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__877, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__877, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__877, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__877, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__877, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__877, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__877, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__877, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__877, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__877, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__877, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__877, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__877, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__877, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__877, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__877, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__877, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__877, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__877, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__882 when (let zp0z3 = (access (zv__882, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__882, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__882, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__882, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__882, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__882, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__882, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__882, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__882, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__882, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__882, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__882, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__882, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__882, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__882, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__882, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__882, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__882, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__882, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__882, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__882, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__882, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__887 when (let zp0z3 = (access (zv__887, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__887, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__887, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__887, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__887, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__887, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__887, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__887, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__887, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__887, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__887, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__887, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__887, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__887, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__887, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__887, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__887, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__887, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__887, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__887, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__887, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__887, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__892 when (let zp0z3 = (access (zv__892, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__892, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__892, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__892, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__892, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__892, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__892, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__892, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__892, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__892, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__892, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__892, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__892, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__892, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__892, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__892, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__892, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__892, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__892, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__892, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__892, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__892, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__897 when (let zp0z3 = (access (zv__897, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__897, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__897, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__897, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__897, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__897, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__897, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__897, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__897, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__897, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__897, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__897, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__897, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__897, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__897, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__897, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__897, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__897, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__897, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__897, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__897, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__897, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__902 when (let zp0z3 = (access (zv__902, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__902, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__902, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__902, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__902, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__902, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__902, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__902, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__902, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__902, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__902, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__902, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__902, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__902, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__902, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__902, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__902, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__902, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__902, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__902, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__902, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__902, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__907 when (let zp0z3 = (access (zv__907, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__907, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__907, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__907, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__907, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__907, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__907, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__907, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__907, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__907, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__907, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__907, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__907, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__907, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__907, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__907, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__907, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__907, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__907, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__907, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__907, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__907, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__912 when (let zp0z3 = (access (zv__912, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__912, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__912, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__912, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__912, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__912, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__912, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__912, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__912, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__912, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__912, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__912, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__912, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__912, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__912, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__912, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__912, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__912, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__912, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__912, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__912, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__912, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__917 when (let zp0z3 = (access (zv__917, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__917, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__917, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__917, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__917, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__917, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__917, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__917, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__917, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__917, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__917, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__917, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__917, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__917, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__917, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__917, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__917, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__917, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__917, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__917, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__917, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__917, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__922 when (let zp0z3 = (access (zv__922, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__922, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__922, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__922, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__922, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__922, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__922, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__922, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__922, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__922, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__922, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__922, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__922, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__922, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__922, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__922, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__922, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__922, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__922, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__922, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__922, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__922, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__927 when (let zp0z3 = (access (zv__927, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__927, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__927, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__927, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__927, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__927, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__927, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__927, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__927, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__927, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__927, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__927, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__927, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__927, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__927, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__927, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__927, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__927, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__927, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__927, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__927, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__927, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__932 when (let zp0z3 = (access (zv__932, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__932, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__932, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__932, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__932, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__932, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__932, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__932, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__932, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__932, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__932, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__932, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__932, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__932, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__932, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__932, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__932, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__932, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__932, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__932, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__932, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__932, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__937 when (let zp0z3 = (access (zv__937, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__937, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__937, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__937, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__937, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__937, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__937, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__937, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__937, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__937, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__937, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__937, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__937, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__937, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__937, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__937, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__937, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__937, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__937, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__937, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__937, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__937, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__942 when (let zp0z3 = (access (zv__942, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__942, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__942, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__942, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__942, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__942, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__942, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__942, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__942, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__942, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__942, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__942, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__942, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__942, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__942, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__942, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__942, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__942, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__942, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__942, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__942, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__942, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__947 when (let zp0z3 = (access (zv__947, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__947, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__947, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__947, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__947, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__947, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__947, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__947, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__947, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__947, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__947, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__947, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__947, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__947, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__947, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__947, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__947, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__947, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__947, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__947, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__947, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__947, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__952 when (let zp0z3 = (access (zv__952, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__952, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__952, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__952, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__952, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__952, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__952, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__952, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__952, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__952, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__952, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__952, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__952, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__952, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__952, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__952, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__952, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__952, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__952, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__952, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__952, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__952, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__957 when (let zp0z3 = (access (zv__957, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__957, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__957, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__957, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__957, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__957, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__957, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__957, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__957, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__957, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__957, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__957, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__957, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__957, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__957, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__957, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__957, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__957, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__957, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__957, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__957, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__957, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__962 when (let zp0z3 = (access (zv__962, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__962, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__962, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__962, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__962, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__962, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__962, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__962, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__962, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__962, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__962, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__962, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__962, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__962, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__962, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__962, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__962, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__962, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__962, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__962, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__962, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__962, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__967 when (let zp0z3 = (access (zv__967, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__967, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__967, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__967, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__967, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__967, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__967, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__967, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__967, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__967, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__967, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__967, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__967, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__967, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__967, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__967, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__967, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__967, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__967, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__967, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__967, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__967, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__972 when (let zp0z3 = (access (zv__972, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__972, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__972, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__972, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__972, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__972, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__972, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__972, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__972, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__972, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__972, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__972, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__972, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__972, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__972, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__972, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__972, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__972, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__972, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__972, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__972, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__972, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__977 when (let zp0z3 = (access (zv__977, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__977, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__977, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__977, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__977, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__977, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__977, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__977, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__977, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__977, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__977, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__977, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__977, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__977, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__977, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__977, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__977, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__977, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__977, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__977, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__977, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__977, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__982 when (let zp0z3 = (access (zv__982, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__982, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__982, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__982, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__982, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__982, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__982, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__982, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__982, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__982, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__982, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__982, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__982, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__982, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__982, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__982, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__982, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__982, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__982, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__982, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__982, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__982, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__987 when (let zp0z3 = (access (zv__987, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__987, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__987, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__987, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__987, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__987, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__987, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__987, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__987, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__987, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__987, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__987, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__987, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__987, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__987, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__987, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__987, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__987, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__987, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__987, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__987, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__987, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__992 when (let zp0z3 = (access (zv__992, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__992, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__992, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__992, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__992, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__992, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__992, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__992, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__992, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__992, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__992, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__992, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__992, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__992, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__992, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__992, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__992, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__992, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__992, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__992, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__992, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__992, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__997 when (let zp0z3 = (access (zv__997, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__997, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__997, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__997, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__997, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__997, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__997, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__997, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__997, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__997, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__997, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__997, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__997, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__997, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__997, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__997, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__997, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__997, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__997, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__997, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__997, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__997, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B1))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__1002 when (let zp0z3 = (access (zv__1002, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__1002, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__1002, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__1002, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__1002, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__1002, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__1002, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__1002, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__1002, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__1002, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__1002, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__1002, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__1002, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__1002, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__1002, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__1002, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__1002, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__1002, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__1002, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__1002, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__1002, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__1002, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__1007 when (let zp0z3 = (access (zv__1007, (Big_int.of_int (31)))) in
    let zp1z3 = (access (zv__1007, (Big_int.of_int (30)))) in
    let zp2z3 = (access (zv__1007, (Big_int.of_int (29)))) in
    let zp3z3 = (access (zv__1007, (Big_int.of_int (28)))) in
    let zp4z3 = (access (zv__1007, (Big_int.of_int (27)))) in
    let zp5z3 = (access (zv__1007, (Big_int.of_int (26)))) in
    let zp6z3 = (access (zv__1007, (Big_int.of_int (25)))) in
    let zp7z3 = (access (zv__1007, (Big_int.of_int (24)))) in
    let zp8z3 = (access (zv__1007, (Big_int.of_int (23)))) in
    let zp9z3 = (access (zv__1007, (Big_int.of_int (22)))) in
    let zp10z3 = (access (zv__1007, (Big_int.of_int (21)))) in
    let zp11z3 = (access (zv__1007, (Big_int.of_int (20)))) in
    let zp12z3 = (access (zv__1007, (Big_int.of_int (14)))) in
    let zp13z3 = (access (zv__1007, (Big_int.of_int (13)))) in
    let zp14z3 = (access (zv__1007, (Big_int.of_int (12)))) in
    let zp15z3 = (access (zv__1007, (Big_int.of_int (6)))) in
    let zp16z3 = (access (zv__1007, (Big_int.of_int (5)))) in
    let zp17z3 = (access (zv__1007, (Big_int.of_int (4)))) in
    let zp18z3 = (access (zv__1007, (Big_int.of_int (3)))) in
    let zp19z3 = (access (zv__1007, (Big_int.of_int (2)))) in
    let zp20z3 = (access (zv__1007, (Big_int.of_int (1)))) in
    let zp21z3 = (access (zv__1007, Big_int.zero)) in
    (((((((((((((((((((((eq_bit (zp21z3, B1)) && (eq_bit (zp20z3, B1))) && (eq_bit (zp19z3, B0))) && (eq_bit (zp18z3, B1))) && (eq_bit (zp17z3, B1))) && (eq_bit (zp16z3, B0))) && (eq_bit (zp15z3, B1))) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B1))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B1))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zs -> true
    | _ -> false
  end)

and zencdec_compressed_forwards (zargz3 : (zast)) : (bit) list = sail_call (fun r ->
  begin
    match zargz3 with
    | ZC_NOP (()) ->
      append ([B0; B0; B0], (append ([B0], (append ([B0; B0; B0; B0; B0], (append ([B0; B0; B0; B0; B0], [B0; B1])))))))
    | ZC_ADDI4SPN (zrd, zv__1012) when (let znzz96 = (subrange (zv__1012, (Big_int.of_int (7)), (Big_int.of_int (4)))) in
    let znzz96 = (subrange (zv__1012, (Big_int.of_int (7)), (Big_int.of_int (4)))) in
    let znzz54 = (subrange (zv__1012, (Big_int.of_int (3)), (Big_int.of_int (2)))) in
    let znzz3 = (subrange (zv__1012, (Big_int.of_int (1)), (Big_int.of_int (1)))) in
    let znzz2 = (subrange (zv__1012, Big_int.zero, Big_int.zero)) in
    zneq_vec ((append (znzz96, (append (znzz54, (append (znzz3, znzz2)))))), [B0; B0; B0; B0; B0; B0; B0; B0])) ->
      let znzz96 = (subrange (zv__1012, (Big_int.of_int (7)), (Big_int.of_int (4)))) in
      let znzz96 = (subrange (zv__1012, (Big_int.of_int (7)), (Big_int.of_int (4)))) in
      let znzz54 = (subrange (zv__1012, (Big_int.of_int (3)), (Big_int.of_int (2)))) in
      let znzz3 = (subrange (zv__1012, (Big_int.of_int (1)), (Big_int.of_int (1)))) in
      let znzz2 = (subrange (zv__1012, Big_int.zero, Big_int.zero)) in
      append ([B0; B0; B0], (append ((znzz54), (append ((znzz96), (append ((znzz2), (append ((znzz3), (append ((zrd), [B0; B0])))))))))))
    | ZC_LW (zv__1013, zrs1, zrd) ->
      let zui6 = (subrange (zv__1013, (Big_int.of_int (4)), (Big_int.of_int (4)))) in
      let zui6 = (subrange (zv__1013, (Big_int.of_int (4)), (Big_int.of_int (4)))) in
      let zui53 = (subrange (zv__1013, (Big_int.of_int (3)), (Big_int.of_int (1)))) in
      let zui2 = (subrange (zv__1013, Big_int.zero, Big_int.zero)) in
      append ([B0; B1; B0], (append ((zui53), (append ((zrs1), (append ((zui2), (append ((zui6), (append ((zrd), [B0; B0])))))))))))
    | ZC_LD (zv__1014, zrs1, zrd) ->
      let zui76 = (subrange (zv__1014, (Big_int.of_int (4)), (Big_int.of_int (3)))) in
      let zui76 = (subrange (zv__1014, (Big_int.of_int (4)), (Big_int.of_int (3)))) in
      let zui53 = (subrange (zv__1014, (Big_int.of_int (2)), Big_int.zero)) in
      append ([B0; B1; B1], (append ((zui53), (append ((zrs1), (append ((zui76), (append ((zrd), [B0; B0])))))))))
    | ZC_SW (zv__1015, zrs1, zrs2) ->
      let zui6 = (subrange (zv__1015, (Big_int.of_int (4)), (Big_int.of_int (4)))) in
      let zui6 = (subrange (zv__1015, (Big_int.of_int (4)), (Big_int.of_int (4)))) in
      let zui53 = (subrange (zv__1015, (Big_int.of_int (3)), (Big_int.of_int (1)))) in
      let zui2 = (subrange (zv__1015, Big_int.zero, Big_int.zero)) in
      append ([B1; B1; B0], (append ((zui53), (append ((zrs1), (append ((zui2), (append ((zui6), (append ((zrs2), [B0; B0])))))))))))
    | ZC_SD (zv__1016, zrs1, zrs2) ->
      let zui76 = (subrange (zv__1016, (Big_int.of_int (4)), (Big_int.of_int (3)))) in
      let zui76 = (subrange (zv__1016, (Big_int.of_int (4)), (Big_int.of_int (3)))) in
      let zui53 = (subrange (zv__1016, (Big_int.of_int (2)), Big_int.zero)) in
      append ([B1; B1; B1], (append ((zui53), (append ((zrs1), (append ((zui76), (append ((zrs2), [B0; B0])))))))))
    | ZC_ADDI (zv__1017, zrsd) when (let znzzi5 = (subrange (zv__1017, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzi5 = (subrange (zv__1017, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzi40 = (subrange (zv__1017, (Big_int.of_int (4)), Big_int.zero)) in
    (zneq_vec ((append (znzzi5, znzzi40)), [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))) ->
      let znzzi5 = (subrange (zv__1017, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let znzzi5 = (subrange (zv__1017, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let znzzi40 = (subrange (zv__1017, (Big_int.of_int (4)), Big_int.zero)) in
      append ([B0; B0; B0], (append ((znzzi5), (append ((zrsd), (append ((znzzi40), [B0; B1])))))))
    | ZC_ADDIW (zv__1018, zrsd) when (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg))) ->
      let zimm5 = (subrange (zv__1018, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let zimm5 = (subrange (zv__1018, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let zimm40 = (subrange (zv__1018, (Big_int.of_int (4)), Big_int.zero)) in
      append ([B0; B0; B1], (append ((zimm5), (append ((zrsd), (append ((zimm40), [B0; B1])))))))
    | ZC_LI (zv__1019, zrd) when (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) ->
      let zimm5 = (subrange (zv__1019, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let zimm5 = (subrange (zv__1019, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let zimm40 = (subrange (zv__1019, (Big_int.of_int (4)), Big_int.zero)) in
      append ([B0; B1; B0], (append ((zimm5), (append ((zrd), (append ((zimm40), [B0; B1])))))))
    | ZC_ADDI16SP (zv__1020) when (let znzzi9 = (subrange (zv__1020, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzi9 = (subrange (zv__1020, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzi87 = (subrange (zv__1020, (Big_int.of_int (4)), (Big_int.of_int (3)))) in
    let znzzi6 = (subrange (zv__1020, (Big_int.of_int (2)), (Big_int.of_int (2)))) in
    let znzzi5 = (subrange (zv__1020, (Big_int.of_int (1)), (Big_int.of_int (1)))) in
    let znzzi4 = (subrange (zv__1020, Big_int.zero, Big_int.zero)) in
    zneq_vec ((append (znzzi9, (append (znzzi87, (append (znzzi6, (append (znzzi5, znzzi4)))))))), [B0; B0; B0; B0; B0; B0])) ->
      let znzzi9 = (subrange (zv__1020, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let znzzi9 = (subrange (zv__1020, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let znzzi87 = (subrange (zv__1020, (Big_int.of_int (4)), (Big_int.of_int (3)))) in
      let znzzi6 = (subrange (zv__1020, (Big_int.of_int (2)), (Big_int.of_int (2)))) in
      let znzzi5 = (subrange (zv__1020, (Big_int.of_int (1)), (Big_int.of_int (1)))) in
      let znzzi4 = (subrange (zv__1020, Big_int.zero, Big_int.zero)) in
      append ([B0; B1; B1], (append ((znzzi9), (append ([B0; B0; B0; B1; B0], (append ((znzzi4), (append ((znzzi6), (append ((znzzi87), (append ((znzzi5), [B0; B1])))))))))))))
    | ZC_LUI (zv__1021, zrd) when (let zimm17 = (subrange (zv__1021, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let zimm17 = (subrange (zv__1021, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let zimm1612 = (subrange (zv__1021, (Big_int.of_int (4)), Big_int.zero)) in
    (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && ((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zsp))) && (zneq_vec ((append (zimm17, zimm1612)), [B0; B0; B0; B0; B0; B0])))) ->
      let zimm17 = (subrange (zv__1021, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let zimm17 = (subrange (zv__1021, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let zimm1612 = (subrange (zv__1021, (Big_int.of_int (4)), Big_int.zero)) in
      append ([B0; B1; B1], (append ((zimm17), (append ((zrd), (append ((zimm1612), [B0; B1])))))))
    | ZC_SRLI (zv__1022, zrsd) when (let znzzui5 = (subrange (zv__1022, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzui5 = (subrange (zv__1022, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzui40 = (subrange (zv__1022, (Big_int.of_int (4)), Big_int.zero)) in
    zneq_vec ((append (znzzui5, znzzui40)), [B0; B0; B0; B0; B0; B0])) ->
      let znzzui5 = (subrange (zv__1022, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let znzzui5 = (subrange (zv__1022, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let znzzui40 = (subrange (zv__1022, (Big_int.of_int (4)), Big_int.zero)) in
      append ([B1; B0; B0], (append ((znzzui5), (append ([B0; B0], (append ((zrsd), (append ((znzzui40), [B0; B1])))))))))
    | ZC_SRAI (zv__1023, zrsd) when (let znzzui5 = (subrange (zv__1023, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzui5 = (subrange (zv__1023, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzui40 = (subrange (zv__1023, (Big_int.of_int (4)), Big_int.zero)) in
    zneq_vec ((append (znzzui5, znzzui40)), [B0; B0; B0; B0; B0; B0])) ->
      let znzzui5 = (subrange (zv__1023, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let znzzui5 = (subrange (zv__1023, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let znzzui40 = (subrange (zv__1023, (Big_int.of_int (4)), Big_int.zero)) in
      append ([B1; B0; B0], (append ((znzzui5), (append ([B0; B1], (append ((zrsd), (append ((znzzui40), [B0; B1])))))))))
    | ZC_ANDI (zv__1024, zrsd) ->
      let zi5 = (subrange (zv__1024, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let zi5 = (subrange (zv__1024, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let zi40 = (subrange (zv__1024, (Big_int.of_int (4)), Big_int.zero)) in
      append ([B1; B0; B0], (append ((zi5), (append ([B1; B0], (append ((zrsd), (append ((zi40), [B0; B1])))))))))
    | ZC_SUB (zrsd, zrs2) ->
      append ([B1; B0; B0], (append ([B0], (append ([B1; B1], (append ((zrsd), (append ([B0; B0], (append ((zrs2), [B0; B1])))))))))))
    | ZC_XOR (zrsd, zrs2) ->
      append ([B1; B0; B0], (append ([B0], (append ([B1; B1], (append ((zrsd), (append ([B0; B1], (append ((zrs2), [B0; B1])))))))))))
    | ZC_OR (zrsd, zrs2) ->
      append ([B1; B0; B0], (append ([B0], (append ([B1; B1], (append ((zrsd), (append ([B1; B0], (append ((zrs2), [B0; B1])))))))))))
    | ZC_AND (zrsd, zrs2) ->
      append ([B1; B0; B0], (append ([B0], (append ([B1; B1], (append ((zrsd), (append ([B1; B1], (append ((zrs2), [B0; B1])))))))))))
    | ZC_SUBW (zrsd, zrs2) ->
      append ([B1; B0; B0], (append ([B1], (append ([B1; B1], (append ((zrsd), (append ([B0; B0], (append ((zrs2), [B0; B1])))))))))))
    | ZC_ADDW (zrsd, zrs2) ->
      append ([B1; B0; B0], (append ([B1], (append ([B1; B1], (append ((zrsd), (append ([B0; B1], (append ((zrs2), [B0; B1])))))))))))
    | ZC_J (zv__1025) ->
      let zi11 = (subrange (zv__1025, (Big_int.of_int (10)), (Big_int.of_int (10)))) in
      let zi98 = (subrange (zv__1025, (Big_int.of_int (8)), (Big_int.of_int (7)))) in
      let zi7 = (subrange (zv__1025, (Big_int.of_int (6)), (Big_int.of_int (6)))) in
      let zi6 = (subrange (zv__1025, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let zi5 = (subrange (zv__1025, (Big_int.of_int (4)), (Big_int.of_int (4)))) in
      let zi4 = (subrange (zv__1025, (Big_int.of_int (3)), (Big_int.of_int (3)))) in
      let zi31 = (subrange (zv__1025, (Big_int.of_int (2)), Big_int.zero)) in
      let zi11 = (subrange (zv__1025, (Big_int.of_int (10)), (Big_int.of_int (10)))) in
      let zi10 = (subrange (zv__1025, (Big_int.of_int (9)), (Big_int.of_int (9)))) in
      append ([B1; B0; B1], (append ((zi11), (append ((zi4), (append ((zi98), (append ((zi10), (append ((zi6), (append ((zi7), (append ((zi31), (append ((zi5), [B0; B1])))))))))))))))))
    | ZC_BEQZ (zv__1026, zrs) ->
      let zi8 = (subrange (zv__1026, (Big_int.of_int (7)), (Big_int.of_int (7)))) in
      let zi8 = (subrange (zv__1026, (Big_int.of_int (7)), (Big_int.of_int (7)))) in
      let zi76 = (subrange (zv__1026, (Big_int.of_int (6)), (Big_int.of_int (5)))) in
      let zi5 = (subrange (zv__1026, (Big_int.of_int (4)), (Big_int.of_int (4)))) in
      let zi43 = (subrange (zv__1026, (Big_int.of_int (3)), (Big_int.of_int (2)))) in
      let zi21 = (subrange (zv__1026, (Big_int.of_int (1)), Big_int.zero)) in
      append ([B1; B1; B0], (append ((zi8), (append ((zi43), (append ((zrs), (append ((zi76), (append ((zi21), (append ((zi5), [B0; B1])))))))))))))
    | ZC_BNEZ (zv__1027, zrs) ->
      let zi8 = (subrange (zv__1027, (Big_int.of_int (7)), (Big_int.of_int (7)))) in
      let zi8 = (subrange (zv__1027, (Big_int.of_int (7)), (Big_int.of_int (7)))) in
      let zi76 = (subrange (zv__1027, (Big_int.of_int (6)), (Big_int.of_int (5)))) in
      let zi5 = (subrange (zv__1027, (Big_int.of_int (4)), (Big_int.of_int (4)))) in
      let zi43 = (subrange (zv__1027, (Big_int.of_int (3)), (Big_int.of_int (2)))) in
      let zi21 = (subrange (zv__1027, (Big_int.of_int (1)), Big_int.zero)) in
      append ([B1; B1; B1], (append ((zi8), (append ((zi43), (append ((zrs), (append ((zi76), (append ((zi21), (append ((zi5), [B0; B1])))))))))))))
    | ZC_SLLI (zv__1028, zrsd) when (let znzzui5 = (subrange (zv__1028, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzui5 = (subrange (zv__1028, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzui40 = (subrange (zv__1028, (Big_int.of_int (4)), Big_int.zero)) in
    (zneq_vec ((append (znzzui5, znzzui40)), [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))) ->
      let znzzui5 = (subrange (zv__1028, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let znzzui5 = (subrange (zv__1028, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let znzzui40 = (subrange (zv__1028, (Big_int.of_int (4)), Big_int.zero)) in
      append ([B0; B0; B0], (append ((znzzui5), (append ((zrsd), (append ((znzzui40), [B1; B0])))))))
    | ZC_LWSP (zv__1029, zrd) when (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) ->
      let zui76 = (subrange (zv__1029, (Big_int.of_int (5)), (Big_int.of_int (4)))) in
      let zui76 = (subrange (zv__1029, (Big_int.of_int (5)), (Big_int.of_int (4)))) in
      let zui5 = (subrange (zv__1029, (Big_int.of_int (3)), (Big_int.of_int (3)))) in
      let zui42 = (subrange (zv__1029, (Big_int.of_int (2)), Big_int.zero)) in
      append ([B0; B1; B0], (append ((zui5), (append ((zrd), (append ((zui42), (append ((zui76), [B1; B0])))))))))
    | ZC_LDSP (zv__1030, zrd) when (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) ->
      let zui86 = (subrange (zv__1030, (Big_int.of_int (5)), (Big_int.of_int (3)))) in
      let zui86 = (subrange (zv__1030, (Big_int.of_int (5)), (Big_int.of_int (3)))) in
      let zui5 = (subrange (zv__1030, (Big_int.of_int (2)), (Big_int.of_int (2)))) in
      let zui43 = (subrange (zv__1030, (Big_int.of_int (1)), Big_int.zero)) in
      append ([B0; B1; B1], (append ((zui5), (append ((zrd), (append ((zui43), (append ((zui86), [B1; B0])))))))))
    | ZC_SWSP (zv__1031, zrs2) ->
      let zui76 = (subrange (zv__1031, (Big_int.of_int (5)), (Big_int.of_int (4)))) in
      let zui76 = (subrange (zv__1031, (Big_int.of_int (5)), (Big_int.of_int (4)))) in
      let zui52 = (subrange (zv__1031, (Big_int.of_int (3)), Big_int.zero)) in
      append ([B1; B1; B0], (append ((zui52), (append ((zui76), (append ((zrs2), [B1; B0])))))))
    | ZC_SDSP (zv__1032, zrs2) ->
      let zui86 = (subrange (zv__1032, (Big_int.of_int (5)), (Big_int.of_int (3)))) in
      let zui86 = (subrange (zv__1032, (Big_int.of_int (5)), (Big_int.of_int (3)))) in
      let zui53 = (subrange (zv__1032, (Big_int.of_int (2)), Big_int.zero)) in
      append ([B1; B1; B1], (append ((zui53), (append ((zui86), (append ((zrs2), [B1; B0])))))))
    | ZC_JR (zrs1) when (zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))) ->
      append ([B1; B0; B0], (append ([B0], (append ((zrs1), (append ([B0; B0; B0; B0; B0], [B1; B0])))))))
    | ZC_JALR (zrs1) when (zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))) ->
      append ([B1; B0; B0], (append ([B1], (append ((zrs1), (append ([B0; B0; B0; B0; B0], [B1; B0])))))))
    | ZC_MV (zrd, zrs2) when ((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))) ->
      append ([B1; B0; B0], (append ([B0], (append ((zrd), (append ((zrs2), [B1; B0])))))))
    | ZC_EBREAK (()) ->
      append ([B1; B0; B0], (append ([B1], (append ([B0; B0; B0; B0; B0], (append ([B0; B0; B0; B0; B0], [B1; B0])))))))
    | ZC_ADD (zrsd, zrs2) when ((zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))) ->
      append ([B1; B0; B0], (append ([B1], (append ((zrsd), (append ((zrs2), [B1; B0])))))))
    | ZC_ILLEGAL (zs) -> zs
  end)

and zencdec_compressed_backwards (zargz3 : ((bit) list)) : zast = sail_call (fun r ->
  begin
    match zargz3 with
    | zv__1033 when (let zp0z3 = (access (zv__1033, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1033, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1033, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1033, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1033, (Big_int.of_int (11)))) in
    let zp5z3 = (access (zv__1033, (Big_int.of_int (10)))) in
    let zp6z3 = (access (zv__1033, (Big_int.of_int (9)))) in
    let zp7z3 = (access (zv__1033, (Big_int.of_int (8)))) in
    let zp8z3 = (access (zv__1033, (Big_int.of_int (7)))) in
    let zp9z3 = (access (zv__1033, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__1033, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__1033, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__1033, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__1033, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__1033, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__1033, Big_int.zero)) in
    (((((((((((((((eq_bit (zp15z3, B1)) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      ZC_NOP ()
    | zv__1039 when (let zp0z3 = (access (zv__1039, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1039, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1039, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1039, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1039, Big_int.zero)) in
    let znzz96 = (subrange (zv__1039, (Big_int.of_int (10)), (Big_int.of_int (7)))) in
    let znzz54 = (subrange (zv__1039, (Big_int.of_int (12)), (Big_int.of_int (11)))) in
    let znzz3 = (subrange (zv__1039, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzz2 = (subrange (zv__1039, (Big_int.of_int (6)), (Big_int.of_int (6)))) in
    (((((zneq_vec ((append (znzz96, (append (znzz54, (append (znzz3, znzz2)))))), [B0; B0; B0; B0; B0; B0; B0; B0])) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__1039, (Big_int.of_int (4)), (Big_int.of_int (2)))) in
      let znzz96 = (subrange (zv__1039, (Big_int.of_int (10)), (Big_int.of_int (7)))) in
      let znzz54 = (subrange (zv__1039, (Big_int.of_int (12)), (Big_int.of_int (11)))) in
      let znzz3 = (subrange (zv__1039, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let znzz2 = (subrange (zv__1039, (Big_int.of_int (6)), (Big_int.of_int (6)))) in
      ZC_ADDI4SPN (zrd, append ((znzz96), (append ((znzz54), (append ((znzz3), (znzz2)))))))
    | zv__1042 when (let zp0z3 = (access (zv__1042, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1042, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1042, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1042, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1042, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      let zui6 = (subrange (zv__1042, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let zui53 = (subrange (zv__1042, (Big_int.of_int (12)), (Big_int.of_int (10)))) in
      let zui2 = (subrange (zv__1042, (Big_int.of_int (6)), (Big_int.of_int (6)))) in
      let zrs1 = (subrange (zv__1042, (Big_int.of_int (9)), (Big_int.of_int (7)))) in
      let zrd = (subrange (zv__1042, (Big_int.of_int (4)), (Big_int.of_int (2)))) in
      ZC_LW (append ((zui6), (append ((zui53), (zui2)))), zrs1, zrd)
    | zv__1045 when (let zp0z3 = (access (zv__1045, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1045, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1045, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1045, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1045, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      let zui76 = (subrange (zv__1045, (Big_int.of_int (6)), (Big_int.of_int (5)))) in
      let zui53 = (subrange (zv__1045, (Big_int.of_int (12)), (Big_int.of_int (10)))) in
      let zrs1 = (subrange (zv__1045, (Big_int.of_int (9)), (Big_int.of_int (7)))) in
      let zrd = (subrange (zv__1045, (Big_int.of_int (4)), (Big_int.of_int (2)))) in
      ZC_LD (append ((zui76), (zui53)), zrs1, zrd)
    | zv__1048 when (let zp0z3 = (access (zv__1048, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1048, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1048, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1048, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1048, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zui6 = (subrange (zv__1048, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let zui53 = (subrange (zv__1048, (Big_int.of_int (12)), (Big_int.of_int (10)))) in
      let zui2 = (subrange (zv__1048, (Big_int.of_int (6)), (Big_int.of_int (6)))) in
      let zrs2 = (subrange (zv__1048, (Big_int.of_int (4)), (Big_int.of_int (2)))) in
      let zrs1 = (subrange (zv__1048, (Big_int.of_int (9)), (Big_int.of_int (7)))) in
      ZC_SW (append ((zui6), (append ((zui53), (zui2)))), zrs1, zrs2)
    | zv__1051 when (let zp0z3 = (access (zv__1051, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1051, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1051, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1051, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1051, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zui76 = (subrange (zv__1051, (Big_int.of_int (6)), (Big_int.of_int (5)))) in
      let zui53 = (subrange (zv__1051, (Big_int.of_int (12)), (Big_int.of_int (10)))) in
      let zrs2 = (subrange (zv__1051, (Big_int.of_int (4)), (Big_int.of_int (2)))) in
      let zrs1 = (subrange (zv__1051, (Big_int.of_int (9)), (Big_int.of_int (7)))) in
      ZC_SD (append ((zui76), (zui53)), zrs1, zrs2)
    | zv__1054 when (let zp0z3 = (access (zv__1054, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1054, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1054, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1054, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1054, Big_int.zero)) in
    let zrsd = (subrange (zv__1054, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    let znzzi5 = (subrange (zv__1054, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    let znzzi40 = (subrange (zv__1054, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
    ((((((zneq_vec ((append (znzzi5, znzzi40)), [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrsd = (subrange (zv__1054, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let znzzi5 = (subrange (zv__1054, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let znzzi40 = (subrange (zv__1054, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
      ZC_ADDI (append ((znzzi5), (znzzi40)), zrsd)
    | zv__1057 when (let zp0z3 = (access (zv__1057, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1057, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1057, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1057, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1057, Big_int.zero)) in
    let zrsd = (subrange (zv__1057, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    (((((zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrsd = (subrange (zv__1057, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zimm5 = (subrange (zv__1057, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zimm40 = (subrange (zv__1057, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
      ZC_ADDIW (append ((zimm5), (zimm40)), zrsd)
    | zv__1060 when (let zp0z3 = (access (zv__1060, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1060, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1060, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1060, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1060, Big_int.zero)) in
    let zrd = (subrange (zv__1060, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    (((((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__1060, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zimm5 = (subrange (zv__1060, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zimm40 = (subrange (zv__1060, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
      ZC_LI (append ((zimm5), (zimm40)), zrd)
    | zv__1063 when (let zp0z3 = (access (zv__1063, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1063, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1063, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1063, (Big_int.of_int (11)))) in
    let zp4z3 = (access (zv__1063, (Big_int.of_int (10)))) in
    let zp5z3 = (access (zv__1063, (Big_int.of_int (9)))) in
    let zp6z3 = (access (zv__1063, (Big_int.of_int (8)))) in
    let zp7z3 = (access (zv__1063, (Big_int.of_int (7)))) in
    let zp8z3 = (access (zv__1063, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__1063, Big_int.zero)) in
    let znzzi9 = (subrange (zv__1063, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    let znzzi87 = (subrange (zv__1063, (Big_int.of_int (4)), (Big_int.of_int (3)))) in
    let znzzi6 = (subrange (zv__1063, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzi5 = (subrange (zv__1063, (Big_int.of_int (2)), (Big_int.of_int (2)))) in
    let znzzi4 = (subrange (zv__1063, (Big_int.of_int (6)), (Big_int.of_int (6)))) in
    ((((((((((zneq_vec ((append (znzzi9, (append (znzzi87, (append (znzzi6, (append (znzzi5, znzzi4)))))))), [B0; B0; B0; B0; B0; B0])) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      let znzzi9 = (subrange (zv__1063, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let znzzi87 = (subrange (zv__1063, (Big_int.of_int (4)), (Big_int.of_int (3)))) in
      let znzzi6 = (subrange (zv__1063, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
      let znzzi5 = (subrange (zv__1063, (Big_int.of_int (2)), (Big_int.of_int (2)))) in
      let znzzi4 = (subrange (zv__1063, (Big_int.of_int (6)), (Big_int.of_int (6)))) in
      ZC_ADDI16SP (append ((znzzi9), (append ((znzzi87), (append ((znzzi6), (append ((znzzi5), (znzzi4)))))))))
    | zv__1067 when (let zp0z3 = (access (zv__1067, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1067, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1067, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1067, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1067, Big_int.zero)) in
    let zrd = (subrange (zv__1067, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    let zimm17 = (subrange (zv__1067, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    let zimm1612 = (subrange (zv__1067, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
    ((((((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && ((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zsp))) && (zneq_vec ((append (zimm17, zimm1612)), [B0; B0; B0; B0; B0; B0])))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      let zrd = (subrange (zv__1067, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zimm17 = (subrange (zv__1067, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zimm1612 = (subrange (zv__1067, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
      ZC_LUI (append ((zimm17), (zimm1612)), zrd)
    | zv__1070 when (let zp0z3 = (access (zv__1070, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1070, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1070, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1070, (Big_int.of_int (11)))) in
    let zp4z3 = (access (zv__1070, (Big_int.of_int (10)))) in
    let zp5z3 = (access (zv__1070, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zv__1070, Big_int.zero)) in
    let znzzui5 = (subrange (zv__1070, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    let znzzui40 = (subrange (zv__1070, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
    (((((((zneq_vec ((append (znzzui5, znzzui40)), [B0; B0; B0; B0; B0; B0])) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      let zrsd = (subrange (zv__1070, (Big_int.of_int (9)), (Big_int.of_int (7)))) in
      let znzzui5 = (subrange (zv__1070, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let znzzui40 = (subrange (zv__1070, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
      ZC_SRLI (append ((znzzui5), (znzzui40)), zrsd)
    | zv__1074 when (let zp0z3 = (access (zv__1074, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1074, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1074, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1074, (Big_int.of_int (11)))) in
    let zp4z3 = (access (zv__1074, (Big_int.of_int (10)))) in
    let zp5z3 = (access (zv__1074, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zv__1074, Big_int.zero)) in
    let znzzui5 = (subrange (zv__1074, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    let znzzui40 = (subrange (zv__1074, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
    (((((((zneq_vec ((append (znzzui5, znzzui40)), [B0; B0; B0; B0; B0; B0])) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      let zrsd = (subrange (zv__1074, (Big_int.of_int (9)), (Big_int.of_int (7)))) in
      let znzzui5 = (subrange (zv__1074, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let znzzui40 = (subrange (zv__1074, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
      ZC_SRAI (append ((znzzui5), (znzzui40)), zrsd)
    | zv__1078 when (let zp0z3 = (access (zv__1078, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1078, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1078, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1078, (Big_int.of_int (11)))) in
    let zp4z3 = (access (zv__1078, (Big_int.of_int (10)))) in
    let zp5z3 = (access (zv__1078, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zv__1078, Big_int.zero)) in
    ((((((eq_bit (zp6z3, B1)) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      let zrsd = (subrange (zv__1078, (Big_int.of_int (9)), (Big_int.of_int (7)))) in
      let zi5 = (subrange (zv__1078, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zi40 = (subrange (zv__1078, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
      ZC_ANDI (append ((zi5), (zi40)), zrsd)
    | zv__1082 when (let zp0z3 = (access (zv__1082, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1082, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1082, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1082, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1082, (Big_int.of_int (11)))) in
    let zp5z3 = (access (zv__1082, (Big_int.of_int (10)))) in
    let zp6z3 = (access (zv__1082, (Big_int.of_int (6)))) in
    let zp7z3 = (access (zv__1082, (Big_int.of_int (5)))) in
    let zp8z3 = (access (zv__1082, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__1082, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      let zrsd = (subrange (zv__1082, (Big_int.of_int (9)), (Big_int.of_int (7)))) in
      let zrs2 = (subrange (zv__1082, (Big_int.of_int (4)), (Big_int.of_int (2)))) in
      ZC_SUB (zrsd, zrs2)
    | zv__1088 when (let zp0z3 = (access (zv__1088, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1088, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1088, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1088, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1088, (Big_int.of_int (11)))) in
    let zp5z3 = (access (zv__1088, (Big_int.of_int (10)))) in
    let zp6z3 = (access (zv__1088, (Big_int.of_int (6)))) in
    let zp7z3 = (access (zv__1088, (Big_int.of_int (5)))) in
    let zp8z3 = (access (zv__1088, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__1088, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      let zrsd = (subrange (zv__1088, (Big_int.of_int (9)), (Big_int.of_int (7)))) in
      let zrs2 = (subrange (zv__1088, (Big_int.of_int (4)), (Big_int.of_int (2)))) in
      ZC_XOR (zrsd, zrs2)
    | zv__1094 when (let zp0z3 = (access (zv__1094, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1094, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1094, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1094, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1094, (Big_int.of_int (11)))) in
    let zp5z3 = (access (zv__1094, (Big_int.of_int (10)))) in
    let zp6z3 = (access (zv__1094, (Big_int.of_int (6)))) in
    let zp7z3 = (access (zv__1094, (Big_int.of_int (5)))) in
    let zp8z3 = (access (zv__1094, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__1094, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      let zrsd = (subrange (zv__1094, (Big_int.of_int (9)), (Big_int.of_int (7)))) in
      let zrs2 = (subrange (zv__1094, (Big_int.of_int (4)), (Big_int.of_int (2)))) in
      ZC_OR (zrsd, zrs2)
    | zv__1100 when (let zp0z3 = (access (zv__1100, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1100, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1100, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1100, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1100, (Big_int.of_int (11)))) in
    let zp5z3 = (access (zv__1100, (Big_int.of_int (10)))) in
    let zp6z3 = (access (zv__1100, (Big_int.of_int (6)))) in
    let zp7z3 = (access (zv__1100, (Big_int.of_int (5)))) in
    let zp8z3 = (access (zv__1100, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__1100, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      let zrsd = (subrange (zv__1100, (Big_int.of_int (9)), (Big_int.of_int (7)))) in
      let zrs2 = (subrange (zv__1100, (Big_int.of_int (4)), (Big_int.of_int (2)))) in
      ZC_AND (zrsd, zrs2)
    | zv__1106 when (let zp0z3 = (access (zv__1106, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1106, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1106, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1106, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1106, (Big_int.of_int (11)))) in
    let zp5z3 = (access (zv__1106, (Big_int.of_int (10)))) in
    let zp6z3 = (access (zv__1106, (Big_int.of_int (6)))) in
    let zp7z3 = (access (zv__1106, (Big_int.of_int (5)))) in
    let zp8z3 = (access (zv__1106, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__1106, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      let zrsd = (subrange (zv__1106, (Big_int.of_int (9)), (Big_int.of_int (7)))) in
      let zrs2 = (subrange (zv__1106, (Big_int.of_int (4)), (Big_int.of_int (2)))) in
      ZC_SUBW (zrsd, zrs2)
    | zv__1112 when (let zp0z3 = (access (zv__1112, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1112, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1112, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1112, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1112, (Big_int.of_int (11)))) in
    let zp5z3 = (access (zv__1112, (Big_int.of_int (10)))) in
    let zp6z3 = (access (zv__1112, (Big_int.of_int (6)))) in
    let zp7z3 = (access (zv__1112, (Big_int.of_int (5)))) in
    let zp8z3 = (access (zv__1112, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__1112, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      let zrsd = (subrange (zv__1112, (Big_int.of_int (9)), (Big_int.of_int (7)))) in
      let zrs2 = (subrange (zv__1112, (Big_int.of_int (4)), (Big_int.of_int (2)))) in
      ZC_ADDW (zrsd, zrs2)
    | zv__1118 when (let zp0z3 = (access (zv__1118, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1118, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1118, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1118, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1118, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      let zi98 = (subrange (zv__1118, (Big_int.of_int (10)), (Big_int.of_int (9)))) in
      let zi7 = (subrange (zv__1118, (Big_int.of_int (6)), (Big_int.of_int (6)))) in
      let zi6 = (subrange (zv__1118, (Big_int.of_int (7)), (Big_int.of_int (7)))) in
      let zi5 = (subrange (zv__1118, (Big_int.of_int (2)), (Big_int.of_int (2)))) in
      let zi4 = (subrange (zv__1118, (Big_int.of_int (11)), (Big_int.of_int (11)))) in
      let zi31 = (subrange (zv__1118, (Big_int.of_int (5)), (Big_int.of_int (3)))) in
      let zi11 = (subrange (zv__1118, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zi10 = (subrange (zv__1118, (Big_int.of_int (8)), (Big_int.of_int (8)))) in
      ZC_J (append ((zi11), (append ((zi10), (append ((zi98), (append ((zi7), (append ((zi6), (append ((zi5), (append ((zi4), (zi31)))))))))))))))
    | zv__1121 when (let zp0z3 = (access (zv__1121, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1121, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1121, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1121, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1121, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zrs = (subrange (zv__1121, (Big_int.of_int (9)), (Big_int.of_int (7)))) in
      let zi8 = (subrange (zv__1121, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zi76 = (subrange (zv__1121, (Big_int.of_int (6)), (Big_int.of_int (5)))) in
      let zi5 = (subrange (zv__1121, (Big_int.of_int (2)), (Big_int.of_int (2)))) in
      let zi43 = (subrange (zv__1121, (Big_int.of_int (11)), (Big_int.of_int (10)))) in
      let zi21 = (subrange (zv__1121, (Big_int.of_int (4)), (Big_int.of_int (3)))) in
      ZC_BEQZ (append ((zi8), (append ((zi76), (append ((zi5), (append ((zi43), (zi21)))))))), zrs)
    | zv__1124 when (let zp0z3 = (access (zv__1124, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1124, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1124, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1124, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1124, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zrs = (subrange (zv__1124, (Big_int.of_int (9)), (Big_int.of_int (7)))) in
      let zi8 = (subrange (zv__1124, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zi76 = (subrange (zv__1124, (Big_int.of_int (6)), (Big_int.of_int (5)))) in
      let zi5 = (subrange (zv__1124, (Big_int.of_int (2)), (Big_int.of_int (2)))) in
      let zi43 = (subrange (zv__1124, (Big_int.of_int (11)), (Big_int.of_int (10)))) in
      let zi21 = (subrange (zv__1124, (Big_int.of_int (4)), (Big_int.of_int (3)))) in
      ZC_BNEZ (append ((zi8), (append ((zi76), (append ((zi5), (append ((zi43), (zi21)))))))), zrs)
    | zv__1127 when (let zp0z3 = (access (zv__1127, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1127, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1127, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1127, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1127, Big_int.zero)) in
    let zrsd = (subrange (zv__1127, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    let znzzui5 = (subrange (zv__1127, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    let znzzui40 = (subrange (zv__1127, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
    ((((((zneq_vec ((append (znzzui5, znzzui40)), [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      let zrsd = (subrange (zv__1127, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let znzzui5 = (subrange (zv__1127, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let znzzui40 = (subrange (zv__1127, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
      ZC_SLLI (append ((znzzui5), (znzzui40)), zrsd)
    | zv__1130 when (let zp0z3 = (access (zv__1130, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1130, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1130, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1130, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1130, Big_int.zero)) in
    let zrd = (subrange (zv__1130, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    (((((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      let zui76 = (subrange (zv__1130, (Big_int.of_int (3)), (Big_int.of_int (2)))) in
      let zui5 = (subrange (zv__1130, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zui42 = (subrange (zv__1130, (Big_int.of_int (6)), (Big_int.of_int (4)))) in
      let zrd = (subrange (zv__1130, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZC_LWSP (append ((zui76), (append ((zui5), (zui42)))), zrd)
    | zv__1133 when (let zp0z3 = (access (zv__1133, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1133, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1133, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1133, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1133, Big_int.zero)) in
    let zrd = (subrange (zv__1133, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    (((((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      let zui86 = (subrange (zv__1133, (Big_int.of_int (4)), (Big_int.of_int (2)))) in
      let zui5 = (subrange (zv__1133, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
      let zui43 = (subrange (zv__1133, (Big_int.of_int (6)), (Big_int.of_int (5)))) in
      let zrd = (subrange (zv__1133, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZC_LDSP (append ((zui86), (append ((zui5), (zui43)))), zrd)
    | zv__1136 when (let zp0z3 = (access (zv__1136, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1136, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1136, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1136, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1136, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zui76 = (subrange (zv__1136, (Big_int.of_int (8)), (Big_int.of_int (7)))) in
      let zui52 = (subrange (zv__1136, (Big_int.of_int (12)), (Big_int.of_int (9)))) in
      let zrs2 = (subrange (zv__1136, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
      ZC_SWSP (append ((zui76), (zui52)), zrs2)
    | zv__1139 when (let zp0z3 = (access (zv__1139, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1139, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1139, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1139, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1139, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      let zui86 = (subrange (zv__1139, (Big_int.of_int (9)), (Big_int.of_int (7)))) in
      let zui53 = (subrange (zv__1139, (Big_int.of_int (12)), (Big_int.of_int (10)))) in
      let zrs2 = (subrange (zv__1139, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
      ZC_SDSP (append ((zui86), (zui53)), zrs2)
    | zv__1142 when (let zp0z3 = (access (zv__1142, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1142, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1142, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1142, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1142, (Big_int.of_int (6)))) in
    let zp5z3 = (access (zv__1142, (Big_int.of_int (5)))) in
    let zp6z3 = (access (zv__1142, (Big_int.of_int (4)))) in
    let zp7z3 = (access (zv__1142, (Big_int.of_int (3)))) in
    let zp8z3 = (access (zv__1142, (Big_int.of_int (2)))) in
    let zp9z3 = (access (zv__1142, (Big_int.of_int (1)))) in
    let zp10z3 = (access (zv__1142, Big_int.zero)) in
    let zrs1 = (subrange (zv__1142, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    (((((((((((zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      let zrs1 = (subrange (zv__1142, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZC_JR zrs1
    | zv__1147 when (let zp0z3 = (access (zv__1147, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1147, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1147, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1147, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1147, (Big_int.of_int (6)))) in
    let zp5z3 = (access (zv__1147, (Big_int.of_int (5)))) in
    let zp6z3 = (access (zv__1147, (Big_int.of_int (4)))) in
    let zp7z3 = (access (zv__1147, (Big_int.of_int (3)))) in
    let zp8z3 = (access (zv__1147, (Big_int.of_int (2)))) in
    let zp9z3 = (access (zv__1147, (Big_int.of_int (1)))) in
    let zp10z3 = (access (zv__1147, Big_int.zero)) in
    let zrs1 = (subrange (zv__1147, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    (((((((((((zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      let zrs1 = (subrange (zv__1147, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZC_JALR zrs1
    | zv__1152 when (let zp0z3 = (access (zv__1152, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1152, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1152, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1152, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1152, (Big_int.of_int (1)))) in
    let zp5z3 = (access (zv__1152, Big_int.zero)) in
    let zrs2 = (subrange (zv__1152, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
    let zrd = (subrange (zv__1152, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    (((((((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      let zrs2 = (subrange (zv__1152, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
      let zrd = (subrange (zv__1152, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      ZC_MV (zrd, zrs2)
    | zv__1156 when (let zp0z3 = (access (zv__1156, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1156, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1156, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1156, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1156, (Big_int.of_int (11)))) in
    let zp5z3 = (access (zv__1156, (Big_int.of_int (10)))) in
    let zp6z3 = (access (zv__1156, (Big_int.of_int (9)))) in
    let zp7z3 = (access (zv__1156, (Big_int.of_int (8)))) in
    let zp8z3 = (access (zv__1156, (Big_int.of_int (7)))) in
    let zp9z3 = (access (zv__1156, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__1156, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__1156, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__1156, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__1156, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__1156, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__1156, Big_int.zero)) in
    (((((((((((((((eq_bit (zp15z3, B0)) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      ZC_EBREAK ()
    | zv__1162 when (let zp0z3 = (access (zv__1162, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1162, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1162, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1162, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1162, (Big_int.of_int (1)))) in
    let zp5z3 = (access (zv__1162, Big_int.zero)) in
    let zrsd = (subrange (zv__1162, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    let zrs2 = (subrange (zv__1162, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
    (((((((zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      let zrsd = (subrange (zv__1162, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
      let zrs2 = (subrange (zv__1162, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
      ZC_ADD (zrsd, zrs2)
    | zs -> ZC_ILLEGAL zs
  end)

and zencdec_compressed_forwards_matches (zargz3 : (zast)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZC_NOP (()) -> true
    | ZC_ADDI4SPN (zrd, zv__1166) when (let znzz96 = (subrange (zv__1166, (Big_int.of_int (7)), (Big_int.of_int (4)))) in
    let znzz96 = (subrange (zv__1166, (Big_int.of_int (7)), (Big_int.of_int (4)))) in
    let znzz54 = (subrange (zv__1166, (Big_int.of_int (3)), (Big_int.of_int (2)))) in
    let znzz3 = (subrange (zv__1166, (Big_int.of_int (1)), (Big_int.of_int (1)))) in
    let znzz2 = (subrange (zv__1166, Big_int.zero, Big_int.zero)) in
    zneq_vec ((append (znzz96, (append (znzz54, (append (znzz3, znzz2)))))), [B0; B0; B0; B0; B0; B0; B0; B0])) ->
      true
    | ZC_LW (zv__1167, zrs1, zrd) -> true
    | ZC_LD (zv__1168, zrs1, zrd) -> true
    | ZC_SW (zv__1169, zrs1, zrs2) -> true
    | ZC_SD (zv__1170, zrs1, zrs2) -> true
    | ZC_ADDI (zv__1171, zrsd) when (let znzzi5 = (subrange (zv__1171, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzi5 = (subrange (zv__1171, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzi40 = (subrange (zv__1171, (Big_int.of_int (4)), Big_int.zero)) in
    (zneq_vec ((append (znzzi5, znzzi40)), [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))) ->
      true
    | ZC_ADDIW (zv__1172, zrsd) when (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg))) ->
      true
    | ZC_LI (zv__1173, zrd) when (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) ->
      true
    | ZC_ADDI16SP (zv__1174) when (let znzzi9 = (subrange (zv__1174, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzi9 = (subrange (zv__1174, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzi87 = (subrange (zv__1174, (Big_int.of_int (4)), (Big_int.of_int (3)))) in
    let znzzi6 = (subrange (zv__1174, (Big_int.of_int (2)), (Big_int.of_int (2)))) in
    let znzzi5 = (subrange (zv__1174, (Big_int.of_int (1)), (Big_int.of_int (1)))) in
    let znzzi4 = (subrange (zv__1174, Big_int.zero, Big_int.zero)) in
    zneq_vec ((append (znzzi9, (append (znzzi87, (append (znzzi6, (append (znzzi5, znzzi4)))))))), [B0; B0; B0; B0; B0; B0])) ->
      true
    | ZC_LUI (zv__1175, zrd) when (let zimm17 = (subrange (zv__1175, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let zimm17 = (subrange (zv__1175, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let zimm1612 = (subrange (zv__1175, (Big_int.of_int (4)), Big_int.zero)) in
    (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && ((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zsp))) && (zneq_vec ((append (zimm17, zimm1612)), [B0; B0; B0; B0; B0; B0])))) ->
      true
    | ZC_SRLI (zv__1176, zrsd) when (let znzzui5 = (subrange (zv__1176, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzui5 = (subrange (zv__1176, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzui40 = (subrange (zv__1176, (Big_int.of_int (4)), Big_int.zero)) in
    zneq_vec ((append (znzzui5, znzzui40)), [B0; B0; B0; B0; B0; B0])) ->
      true
    | ZC_SRAI (zv__1177, zrsd) when (let znzzui5 = (subrange (zv__1177, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzui5 = (subrange (zv__1177, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzui40 = (subrange (zv__1177, (Big_int.of_int (4)), Big_int.zero)) in
    zneq_vec ((append (znzzui5, znzzui40)), [B0; B0; B0; B0; B0; B0])) ->
      true
    | ZC_ANDI (zv__1178, zrsd) -> true
    | ZC_SUB (zrsd, zrs2) -> true
    | ZC_XOR (zrsd, zrs2) -> true
    | ZC_OR (zrsd, zrs2) -> true
    | ZC_AND (zrsd, zrs2) -> true
    | ZC_SUBW (zrsd, zrs2) -> true
    | ZC_ADDW (zrsd, zrs2) -> true
    | ZC_J (zv__1179) -> true
    | ZC_BEQZ (zv__1180, zrs) -> true
    | ZC_BNEZ (zv__1181, zrs) -> true
    | ZC_SLLI (zv__1182, zrsd) when (let znzzui5 = (subrange (zv__1182, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzui5 = (subrange (zv__1182, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzui40 = (subrange (zv__1182, (Big_int.of_int (4)), Big_int.zero)) in
    (zneq_vec ((append (znzzui5, znzzui40)), [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))) ->
      true
    | ZC_LWSP (zv__1183, zrd) when (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) ->
      true
    | ZC_LDSP (zv__1184, zrd) when (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) ->
      true
    | ZC_SWSP (zv__1185, zrs2) -> true
    | ZC_SDSP (zv__1186, zrs2) -> true
    | ZC_JR (zrs1) when (zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))) ->
      true
    | ZC_JALR (zrs1) when (zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))) ->
      true
    | ZC_MV (zrd, zrs2) when ((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))) ->
      true
    | ZC_EBREAK (()) -> true
    | ZC_ADD (zrsd, zrs2) when ((zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))) ->
      true
    | ZC_ILLEGAL (zs) -> true
    | _ -> false
  end)

and zencdec_compressed_backwards_matches (zargz3 : ((bit) list)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | zv__1187 when (let zp0z3 = (access (zv__1187, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1187, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1187, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1187, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1187, (Big_int.of_int (11)))) in
    let zp5z3 = (access (zv__1187, (Big_int.of_int (10)))) in
    let zp6z3 = (access (zv__1187, (Big_int.of_int (9)))) in
    let zp7z3 = (access (zv__1187, (Big_int.of_int (8)))) in
    let zp8z3 = (access (zv__1187, (Big_int.of_int (7)))) in
    let zp9z3 = (access (zv__1187, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__1187, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__1187, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__1187, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__1187, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__1187, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__1187, Big_int.zero)) in
    (((((((((((((((eq_bit (zp15z3, B1)) && (eq_bit (zp14z3, B0))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__1193 when (let zp0z3 = (access (zv__1193, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1193, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1193, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1193, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1193, Big_int.zero)) in
    let znzz96 = (subrange (zv__1193, (Big_int.of_int (10)), (Big_int.of_int (7)))) in
    let znzz54 = (subrange (zv__1193, (Big_int.of_int (12)), (Big_int.of_int (11)))) in
    let znzz3 = (subrange (zv__1193, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzz2 = (subrange (zv__1193, (Big_int.of_int (6)), (Big_int.of_int (6)))) in
    (((((zneq_vec ((append (znzz96, (append (znzz54, (append (znzz3, znzz2)))))), [B0; B0; B0; B0; B0; B0; B0; B0])) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__1196 when (let zp0z3 = (access (zv__1196, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1196, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1196, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1196, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1196, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__1199 when (let zp0z3 = (access (zv__1199, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1199, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1199, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1199, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1199, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__1202 when (let zp0z3 = (access (zv__1202, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1202, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1202, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1202, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1202, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1205 when (let zp0z3 = (access (zv__1205, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1205, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1205, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1205, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1205, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1208 when (let zp0z3 = (access (zv__1208, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1208, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1208, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1208, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1208, Big_int.zero)) in
    let zrsd = (subrange (zv__1208, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    let znzzi5 = (subrange (zv__1208, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    let znzzi40 = (subrange (zv__1208, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
    ((((((zneq_vec ((append (znzzi5, znzzi40)), [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__1211 when (let zp0z3 = (access (zv__1211, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1211, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1211, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1211, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1211, Big_int.zero)) in
    let zrsd = (subrange (zv__1211, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    (((((zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__1214 when (let zp0z3 = (access (zv__1214, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1214, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1214, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1214, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1214, Big_int.zero)) in
    let zrd = (subrange (zv__1214, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    (((((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__1217 when (let zp0z3 = (access (zv__1217, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1217, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1217, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1217, (Big_int.of_int (11)))) in
    let zp4z3 = (access (zv__1217, (Big_int.of_int (10)))) in
    let zp5z3 = (access (zv__1217, (Big_int.of_int (9)))) in
    let zp6z3 = (access (zv__1217, (Big_int.of_int (8)))) in
    let zp7z3 = (access (zv__1217, (Big_int.of_int (7)))) in
    let zp8z3 = (access (zv__1217, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__1217, Big_int.zero)) in
    let znzzi9 = (subrange (zv__1217, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    let znzzi87 = (subrange (zv__1217, (Big_int.of_int (4)), (Big_int.of_int (3)))) in
    let znzzi6 = (subrange (zv__1217, (Big_int.of_int (5)), (Big_int.of_int (5)))) in
    let znzzi5 = (subrange (zv__1217, (Big_int.of_int (2)), (Big_int.of_int (2)))) in
    let znzzi4 = (subrange (zv__1217, (Big_int.of_int (6)), (Big_int.of_int (6)))) in
    ((((((((((zneq_vec ((append (znzzi9, (append (znzzi87, (append (znzzi6, (append (znzzi5, znzzi4)))))))), [B0; B0; B0; B0; B0; B0])) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__1221 when (let zp0z3 = (access (zv__1221, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1221, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1221, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1221, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1221, Big_int.zero)) in
    let zrd = (subrange (zv__1221, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    let zimm17 = (subrange (zv__1221, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    let zimm1612 = (subrange (zv__1221, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
    ((((((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && ((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zsp))) && (zneq_vec ((append (zimm17, zimm1612)), [B0; B0; B0; B0; B0; B0])))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__1224 when (let zp0z3 = (access (zv__1224, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1224, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1224, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1224, (Big_int.of_int (11)))) in
    let zp4z3 = (access (zv__1224, (Big_int.of_int (10)))) in
    let zp5z3 = (access (zv__1224, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zv__1224, Big_int.zero)) in
    let znzzui5 = (subrange (zv__1224, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    let znzzui40 = (subrange (zv__1224, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
    (((((((zneq_vec ((append (znzzui5, znzzui40)), [B0; B0; B0; B0; B0; B0])) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1228 when (let zp0z3 = (access (zv__1228, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1228, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1228, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1228, (Big_int.of_int (11)))) in
    let zp4z3 = (access (zv__1228, (Big_int.of_int (10)))) in
    let zp5z3 = (access (zv__1228, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zv__1228, Big_int.zero)) in
    let znzzui5 = (subrange (zv__1228, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    let znzzui40 = (subrange (zv__1228, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
    (((((((zneq_vec ((append (znzzui5, znzzui40)), [B0; B0; B0; B0; B0; B0])) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1232 when (let zp0z3 = (access (zv__1232, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1232, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1232, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1232, (Big_int.of_int (11)))) in
    let zp4z3 = (access (zv__1232, (Big_int.of_int (10)))) in
    let zp5z3 = (access (zv__1232, (Big_int.of_int (1)))) in
    let zp6z3 = (access (zv__1232, Big_int.zero)) in
    ((((((eq_bit (zp6z3, B1)) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1236 when (let zp0z3 = (access (zv__1236, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1236, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1236, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1236, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1236, (Big_int.of_int (11)))) in
    let zp5z3 = (access (zv__1236, (Big_int.of_int (10)))) in
    let zp6z3 = (access (zv__1236, (Big_int.of_int (6)))) in
    let zp7z3 = (access (zv__1236, (Big_int.of_int (5)))) in
    let zp8z3 = (access (zv__1236, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__1236, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1242 when (let zp0z3 = (access (zv__1242, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1242, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1242, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1242, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1242, (Big_int.of_int (11)))) in
    let zp5z3 = (access (zv__1242, (Big_int.of_int (10)))) in
    let zp6z3 = (access (zv__1242, (Big_int.of_int (6)))) in
    let zp7z3 = (access (zv__1242, (Big_int.of_int (5)))) in
    let zp8z3 = (access (zv__1242, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__1242, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1248 when (let zp0z3 = (access (zv__1248, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1248, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1248, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1248, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1248, (Big_int.of_int (11)))) in
    let zp5z3 = (access (zv__1248, (Big_int.of_int (10)))) in
    let zp6z3 = (access (zv__1248, (Big_int.of_int (6)))) in
    let zp7z3 = (access (zv__1248, (Big_int.of_int (5)))) in
    let zp8z3 = (access (zv__1248, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__1248, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1254 when (let zp0z3 = (access (zv__1254, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1254, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1254, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1254, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1254, (Big_int.of_int (11)))) in
    let zp5z3 = (access (zv__1254, (Big_int.of_int (10)))) in
    let zp6z3 = (access (zv__1254, (Big_int.of_int (6)))) in
    let zp7z3 = (access (zv__1254, (Big_int.of_int (5)))) in
    let zp8z3 = (access (zv__1254, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__1254, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B1))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1260 when (let zp0z3 = (access (zv__1260, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1260, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1260, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1260, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1260, (Big_int.of_int (11)))) in
    let zp5z3 = (access (zv__1260, (Big_int.of_int (10)))) in
    let zp6z3 = (access (zv__1260, (Big_int.of_int (6)))) in
    let zp7z3 = (access (zv__1260, (Big_int.of_int (5)))) in
    let zp8z3 = (access (zv__1260, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__1260, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1266 when (let zp0z3 = (access (zv__1266, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1266, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1266, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1266, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1266, (Big_int.of_int (11)))) in
    let zp5z3 = (access (zv__1266, (Big_int.of_int (10)))) in
    let zp6z3 = (access (zv__1266, (Big_int.of_int (6)))) in
    let zp7z3 = (access (zv__1266, (Big_int.of_int (5)))) in
    let zp8z3 = (access (zv__1266, (Big_int.of_int (1)))) in
    let zp9z3 = (access (zv__1266, Big_int.zero)) in
    (((((((((eq_bit (zp9z3, B1)) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B1))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B1))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1272 when (let zp0z3 = (access (zv__1272, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1272, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1272, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1272, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1272, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1275 when (let zp0z3 = (access (zv__1275, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1275, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1275, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1275, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1275, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1278 when (let zp0z3 = (access (zv__1278, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1278, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1278, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1278, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1278, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1281 when (let zp0z3 = (access (zv__1281, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1281, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1281, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1281, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1281, Big_int.zero)) in
    let zrsd = (subrange (zv__1281, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    let znzzui5 = (subrange (zv__1281, (Big_int.of_int (12)), (Big_int.of_int (12)))) in
    let znzzui40 = (subrange (zv__1281, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
    ((((((zneq_vec ((append (znzzui5, znzzui40)), [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__1284 when (let zp0z3 = (access (zv__1284, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1284, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1284, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1284, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1284, Big_int.zero)) in
    let zrd = (subrange (zv__1284, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    (((((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__1287 when (let zp0z3 = (access (zv__1287, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1287, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1287, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1287, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1287, Big_int.zero)) in
    let zrd = (subrange (zv__1287, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    (((((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
      true
    | zv__1290 when (let zp0z3 = (access (zv__1290, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1290, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1290, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1290, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1290, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1293 when (let zp0z3 = (access (zv__1293, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1293, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1293, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1293, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zv__1293, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1296 when (let zp0z3 = (access (zv__1296, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1296, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1296, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1296, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1296, (Big_int.of_int (6)))) in
    let zp5z3 = (access (zv__1296, (Big_int.of_int (5)))) in
    let zp6z3 = (access (zv__1296, (Big_int.of_int (4)))) in
    let zp7z3 = (access (zv__1296, (Big_int.of_int (3)))) in
    let zp8z3 = (access (zv__1296, (Big_int.of_int (2)))) in
    let zp9z3 = (access (zv__1296, (Big_int.of_int (1)))) in
    let zp10z3 = (access (zv__1296, Big_int.zero)) in
    let zrs1 = (subrange (zv__1296, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    (((((((((((zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1301 when (let zp0z3 = (access (zv__1301, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1301, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1301, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1301, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1301, (Big_int.of_int (6)))) in
    let zp5z3 = (access (zv__1301, (Big_int.of_int (5)))) in
    let zp6z3 = (access (zv__1301, (Big_int.of_int (4)))) in
    let zp7z3 = (access (zv__1301, (Big_int.of_int (3)))) in
    let zp8z3 = (access (zv__1301, (Big_int.of_int (2)))) in
    let zp9z3 = (access (zv__1301, (Big_int.of_int (1)))) in
    let zp10z3 = (access (zv__1301, Big_int.zero)) in
    let zrs1 = (subrange (zv__1301, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    (((((((((((zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B1))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1306 when (let zp0z3 = (access (zv__1306, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1306, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1306, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1306, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1306, (Big_int.of_int (1)))) in
    let zp5z3 = (access (zv__1306, Big_int.zero)) in
    let zrs2 = (subrange (zv__1306, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
    let zrd = (subrange (zv__1306, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    (((((((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1310 when (let zp0z3 = (access (zv__1310, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1310, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1310, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1310, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1310, (Big_int.of_int (11)))) in
    let zp5z3 = (access (zv__1310, (Big_int.of_int (10)))) in
    let zp6z3 = (access (zv__1310, (Big_int.of_int (9)))) in
    let zp7z3 = (access (zv__1310, (Big_int.of_int (8)))) in
    let zp8z3 = (access (zv__1310, (Big_int.of_int (7)))) in
    let zp9z3 = (access (zv__1310, (Big_int.of_int (6)))) in
    let zp10z3 = (access (zv__1310, (Big_int.of_int (5)))) in
    let zp11z3 = (access (zv__1310, (Big_int.of_int (4)))) in
    let zp12z3 = (access (zv__1310, (Big_int.of_int (3)))) in
    let zp13z3 = (access (zv__1310, (Big_int.of_int (2)))) in
    let zp14z3 = (access (zv__1310, (Big_int.of_int (1)))) in
    let zp15z3 = (access (zv__1310, Big_int.zero)) in
    (((((((((((((((eq_bit (zp15z3, B0)) && (eq_bit (zp14z3, B1))) && (eq_bit (zp13z3, B0))) && (eq_bit (zp12z3, B0))) && (eq_bit (zp11z3, B0))) && (eq_bit (zp10z3, B0))) && (eq_bit (zp9z3, B0))) && (eq_bit (zp8z3, B0))) && (eq_bit (zp7z3, B0))) && (eq_bit (zp6z3, B0))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B0))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zv__1316 when (let zp0z3 = (access (zv__1316, (Big_int.of_int (15)))) in
    let zp1z3 = (access (zv__1316, (Big_int.of_int (14)))) in
    let zp2z3 = (access (zv__1316, (Big_int.of_int (13)))) in
    let zp3z3 = (access (zv__1316, (Big_int.of_int (12)))) in
    let zp4z3 = (access (zv__1316, (Big_int.of_int (1)))) in
    let zp5z3 = (access (zv__1316, Big_int.zero)) in
    let zrsd = (subrange (zv__1316, (Big_int.of_int (11)), (Big_int.of_int (7)))) in
    let zrs2 = (subrange (zv__1316, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
    (((((((zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))) && (eq_bit (zp5z3, B0))) && (eq_bit (zp4z3, B1))) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
      true
    | zs -> true
    | _ -> false
  end)

and zexecute (gs5915 : (zast)) = sail_call (fun r ->
  match gs5915 with
  | ZUTYPE (zimm, zrd, zop) ->
    let zoff = (zEXTS ((Big_int.of_int (64)), (append (zimm, [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0])))) in
    let zret = (begin
      match zop with
      | ZRISCV_LUI -> zoff
      | ZRISCV_AUIPC -> add_vec (!zPC, zoff)
    end) in
    begin zwX ((zregbits_to_regno zrd), zret); true end
  | ZRISCV_JAL (zimm, zrd) ->
    let zpc = !zPC in
    let znewPC = (add_vec (zpc, (zEXTS ((Big_int.of_int (64)), zimm)))) in
    if ((zbit_to_bool (access (znewPC, (Big_int.of_int (1))))) && (not (zhaveRVC ()))) then (begin
      zhandle_mem_exception (znewPC, ZE_Fetch_Addr_Align);
      false
    end) else (begin
      zwX ((zregbits_to_regno zrd), !znextPC);
      znextPC := znewPC;
      true
    end)
  | ZBTYPE (zimm, zrs2, zrs1, zop) ->
    let zrs1_val = (zrX (zregbits_to_regno zrs1)) in
    let zrs2_val = (zrX (zregbits_to_regno zrs2)) in
    let ztaken = (begin
      match zop with
      | ZRISCV_BEQ -> eq_list (zrs1_val, zrs2_val)
      | ZRISCV_BNE -> zneq_vec (zrs1_val, zrs2_val)
      | ZRISCV_BLT -> zz8operatorz0zI_sz9 (zrs1_val, zrs2_val)
      | ZRISCV_BGE -> zz8operatorz0zKzJ_sz9 (zrs1_val, zrs2_val)
      | ZRISCV_BLTU -> zz8operatorz0zI_uz9 (zrs1_val, zrs2_val)
      | ZRISCV_BGEU -> zz8operatorz0zKzJ_uz9 (zrs1_val, zrs2_val)
    end) in
    let znewPC = (add_vec (!zPC, (zEXTS ((Big_int.of_int (64)), zimm)))) in
    if ztaken then (if ((zbit_to_bool (access (znewPC, (Big_int.of_int (1))))) && (not (zhaveRVC ()))) then (begin
      zhandle_mem_exception (znewPC, ZE_Fetch_Addr_Align);
      false
    end) else (begin znextPC := znewPC; true end)) else true
  | ZITYPE (zimm, zrs1, zrd, zop) ->
    let zrs1_val = (zrX (zregbits_to_regno zrs1)) in
    let zimmext = (zEXTS ((Big_int.of_int (64)), zimm)) in
    let zresult = (begin
      match zop with
      | ZRISCV_ADDI -> add_vec (zrs1_val, zimmext)
      | ZRISCV_SLTI ->
        zEXTZ ((Big_int.of_int (64)), (zbool_to_bits (zz8operatorz0zI_sz9 (zrs1_val, zimmext))))
      | ZRISCV_SLTIU ->
        zEXTZ ((Big_int.of_int (64)), (zbool_to_bits (zz8operatorz0zI_uz9 (zrs1_val, zimmext))))
      | ZRISCV_ANDI -> and_vec (zrs1_val, zimmext)
      | ZRISCV_ORI -> or_vec (zrs1_val, zimmext)
      | ZRISCV_XORI -> xor_vec (zrs1_val, zimmext)
    end) in
    begin zwX ((zregbits_to_regno zrd), zresult); true end
  | ZSHIFTIOP (zshamt, zrs1, zrd, zop) ->
    let zrs1_val = (zrX (zregbits_to_regno zrs1)) in
    let zresult = (begin
      match zop with
      | ZRISCV_SLLI -> shift_bits_left (zrs1_val, zshamt)
      | ZRISCV_SRLI -> shift_bits_right (zrs1_val, zshamt)
      | ZRISCV_SRAI -> zshift_right_arith64 (zrs1_val, zshamt)
    end) in
    begin zwX ((zregbits_to_regno zrd), zresult); true end
  | ZRTYPE (zrs2, zrs1, zrd, zop) ->
    let zrs1_val = (zrX (zregbits_to_regno zrs1)) in
    let zrs2_val = (zrX (zregbits_to_regno zrs2)) in
    let zresult = (begin
      match zop with
      | ZRISCV_ADD -> add_vec (zrs1_val, zrs2_val)
      | ZRISCV_SLT ->
        zEXTZ ((Big_int.of_int (64)), (zbool_to_bits (zz8operatorz0zI_sz9 (zrs1_val, zrs2_val))))
      | ZRISCV_SLTU ->
        zEXTZ ((Big_int.of_int (64)), (zbool_to_bits (zz8operatorz0zI_uz9 (zrs1_val, zrs2_val))))
      | ZRISCV_AND -> and_vec (zrs1_val, zrs2_val)
      | ZRISCV_OR -> or_vec (zrs1_val, zrs2_val)
      | ZRISCV_XOR -> xor_vec (zrs1_val, zrs2_val)
      | ZRISCV_SLL ->
        shift_bits_left (zrs1_val, (subrange (zrs2_val, (Big_int.of_int (5)), Big_int.zero)))
      | ZRISCV_SRL ->
        shift_bits_right (zrs1_val, (subrange (zrs2_val, (Big_int.of_int (5)), Big_int.zero)))
      | ZRISCV_SUB -> sub_vec (zrs1_val, zrs2_val)
      | ZRISCV_SRA ->
        zshift_right_arith64 (zrs1_val, (subrange (zrs2_val, (Big_int.of_int (5)), Big_int.zero)))
    end) in
    begin zwX ((zregbits_to_regno zrd), zresult); true end
  | ZLOAD (zimm, zrs1, zrd, zis_unsigned, zwidth, zaq, zrl) ->
    let zvaddr1 = ref ((add_vec ((zrX (zregbits_to_regno zrs1)), (zEXTS ((Big_int.of_int (64)), zimm)))) : (bit) list) in
    let zddc_result = (ztranslateDDC (!zvaddr1, ZRead, zwidth)) in
    begin
      match zddc_result with
      | ZDDC_Failure (zex) ->
        zraise_c2_exception6 (zex, [B1; B0; B0; B0; B0; B1])
      | ZDDC_Address (zvaddr) ->
        if (zcheck_misaligned (zvaddr, zwidth)) then (begin
          zhandle_mem_exception (zvaddr, ZE_Load_Addr_Align);
          false
        end) else (begin
          match (ztranslateAddr (zvaddr, ZRead, ZData)) with
          | ZTR_Failure (ze) ->
            begin zhandle_mem_exception (zvaddr, ze); false end
          | ZTR_Address (zaddr) ->
            begin
              match zwidth with
              | ZBYTE ->
                zprocess_load (zrd, zvaddr, (zmem_read (zaddr, (Big_int.of_int (1)), zaq, zrl, false)), zis_unsigned)
              | ZHALF ->
                zprocess_load (zrd, zvaddr, (zmem_read (zaddr, (Big_int.of_int (2)), zaq, zrl, false)), zis_unsigned)
              | ZWORD ->
                zprocess_load (zrd, zvaddr, (zmem_read (zaddr, (Big_int.of_int (4)), zaq, zrl, false)), zis_unsigned)
              | ZDOUBLE ->
                zprocess_load (zrd, zvaddr, (zmem_read (zaddr, (Big_int.of_int (8)), zaq, zrl, false)), zis_unsigned)
            end
        end)
    end
  | ZSTORE (zimm, zrs2, zrs1, zwidth, zaq, zrl) ->
    let zvaddr1 = (add_vec ((zrX (zregbits_to_regno zrs1)), (zEXTS ((Big_int.of_int (64)), zimm)))) in
    let zddc_result = (ztranslateDDC (zvaddr1, ZWrite, zwidth)) in
    begin
      match zddc_result with
      | ZDDC_Failure (zex) ->
        zraise_c2_exception6 (zex, [B1; B0; B0; B0; B0; B1])
      | ZDDC_Address (zvaddr) ->
        if (zcheck_misaligned (zvaddr, zwidth)) then (begin
          zhandle_mem_exception (zvaddr, ZE_SAMO_Addr_Align);
          false
        end) else (begin
          match (ztranslateAddr (zvaddr, ZWrite, ZData)) with
          | ZTR_Failure (ze) ->
            begin zhandle_mem_exception (zvaddr, ze); false end
          | ZTR_Address (zaddr) ->
            let zeares = (begin
              match zwidth with
              | ZBYTE ->
                zmem_write_ea (zaddr, (Big_int.of_int (1)), zaq, zrl, false)
              | ZHALF ->
                zmem_write_ea (zaddr, (Big_int.of_int (2)), zaq, zrl, false)
              | ZWORD ->
                zmem_write_ea (zaddr, (Big_int.of_int (4)), zaq, zrl, false)
              | ZDOUBLE ->
                zmem_write_ea (zaddr, (Big_int.of_int (8)), zaq, zrl, false)
            end) in
            begin
              match zeares with
              | ZMemException (ze) ->
                begin zhandle_mem_exception (zaddr, ze); false end
              | ZMemValue (_) ->
                let zrs2_val = (zrX (zregbits_to_regno zrs2)) in
                let zres = (begin
                  match zwidth with
                  | ZBYTE ->
                    zmem_write_value (zaddr, (Big_int.of_int (1)), (subrange (zrs2_val, (Big_int.of_int (7)), Big_int.zero)), zaq, zrl, false)
                  | ZHALF ->
                    zmem_write_value (zaddr, (Big_int.of_int (2)), (subrange (zrs2_val, (Big_int.of_int (15)), Big_int.zero)), zaq, zrl, false)
                  | ZWORD ->
                    zmem_write_value (zaddr, (Big_int.of_int (4)), (subrange (zrs2_val, (Big_int.of_int (31)), Big_int.zero)), zaq, zrl, false)
                  | ZDOUBLE ->
                    zmem_write_value (zaddr, (Big_int.of_int (8)), zrs2_val, zaq, zrl, false)
                end) in
                begin
                  match zres with
                  | ZMemValue (zp0z3) when (eq_bool (zp0z3, true)) -> true
                  | ZMemValue (zp0z3) when (eq_bool (zp0z3, false)) ->
                    zinternal_error "store got false from mem_write_value"
                  | ZMemException (ze) ->
                    begin zhandle_mem_exception (zaddr, ze); false end
                end
            end
        end)
    end
  | ZADDIW (zimm, zrs1, zrd) ->
    let zresult = (add_vec ((zEXTS ((Big_int.of_int (64)), zimm)), (zrX (zregbits_to_regno zrs1)))) in
    begin
      zwX ((zregbits_to_regno zrd), (zEXTS ((Big_int.of_int (64)), (subrange (zresult, (Big_int.of_int (31)), Big_int.zero)))));
      true
    end
  | ZSHIFTW (zshamt, zrs1, zrd, zop) ->
    let zrs1_val = (subrange ((zrX (zregbits_to_regno zrs1)), (Big_int.of_int (31)), Big_int.zero)) in
    let zresult = (begin
      match zop with
      | ZRISCV_SLLI -> shift_bits_left (zrs1_val, zshamt)
      | ZRISCV_SRLI -> shift_bits_right (zrs1_val, zshamt)
      | ZRISCV_SRAI -> zshift_right_arith32 (zrs1_val, zshamt)
    end) in
    begin
      zwX ((zregbits_to_regno zrd), (zEXTS ((Big_int.of_int (64)), zresult)));
      true
    end
  | ZRTYPEW (zrs2, zrs1, zrd, zop) ->
    let zrs1_val = (subrange ((zrX (zregbits_to_regno zrs1)), (Big_int.of_int (31)), Big_int.zero)) in
    let zrs2_val = (subrange ((zrX (zregbits_to_regno zrs2)), (Big_int.of_int (31)), Big_int.zero)) in
    let zresult = (begin
      match zop with
      | ZRISCV_ADDW -> add_vec (zrs1_val, zrs2_val)
      | ZRISCV_SUBW -> sub_vec (zrs1_val, zrs2_val)
      | ZRISCV_SLLW ->
        shift_bits_left (zrs1_val, (subrange (zrs2_val, (Big_int.of_int (4)), Big_int.zero)))
      | ZRISCV_SRLW ->
        shift_bits_right (zrs1_val, (subrange (zrs2_val, (Big_int.of_int (4)), Big_int.zero)))
      | ZRISCV_SRAW ->
        zshift_right_arith32 (zrs1_val, (subrange (zrs2_val, (Big_int.of_int (4)), Big_int.zero)))
    end) in
    begin
      zwX ((zregbits_to_regno zrd), (zEXTS ((Big_int.of_int (64)), zresult)));
      true
    end
  | ZSHIFTIWOP (zshamt, zrs1, zrd, zop) ->
    let zrs1_val = (zrX (zregbits_to_regno zrs1)) in
    let zresult = (begin
      match zop with
      | ZRISCV_SLLIW ->
        zEXTS ((Big_int.of_int (64)), (shift_bits_left ((subrange (zrs1_val, (Big_int.of_int (31)), Big_int.zero)), zshamt)))
      | ZRISCV_SRLIW ->
        zEXTS ((Big_int.of_int (64)), (shift_bits_right ((subrange (zrs1_val, (Big_int.of_int (31)), Big_int.zero)), zshamt)))
      | ZRISCV_SRAIW ->
        zEXTS ((Big_int.of_int (64)), (zshift_right_arith32 ((subrange (zrs1_val, (Big_int.of_int (31)), Big_int.zero)), zshamt)))
    end) in
    begin zwX ((zregbits_to_regno zrd), zresult); true end
  | ZFENCE (zpred, zsucc) ->
    begin
      begin
        match (zpred, zsucc) with
        | (zv__1320, zv__1321) when (let zp0z3 = (access (zv__1320, (Big_int.of_int (1)))) in
        let zp1z3 = (access (zv__1320, Big_int.zero)) in
        let zp2z3 = (access (zv__1321, (Big_int.of_int (1)))) in
        let zp3z3 = (access (zv__1321, Big_int.zero)) in
        (((eq_bit (zp3z3, B1)) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
          skip ()
        | (zv__1324, zv__1325) when (let zp0z3 = (access (zv__1324, (Big_int.of_int (1)))) in
        let zp1z3 = (access (zv__1324, Big_int.zero)) in
        let zp2z3 = (access (zv__1325, (Big_int.of_int (1)))) in
        let zp3z3 = (access (zv__1325, Big_int.zero)) in
        (((eq_bit (zp3z3, B1)) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
          skip ()
        | (zv__1328, zv__1329) when (let zp0z3 = (access (zv__1328, (Big_int.of_int (1)))) in
        let zp1z3 = (access (zv__1328, Big_int.zero)) in
        let zp2z3 = (access (zv__1329, (Big_int.of_int (1)))) in
        let zp3z3 = (access (zv__1329, Big_int.zero)) in
        (((eq_bit (zp3z3, B0)) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
          skip ()
        | (zv__1332, zv__1333) when (let zp0z3 = (access (zv__1332, (Big_int.of_int (1)))) in
        let zp1z3 = (access (zv__1332, Big_int.zero)) in
        let zp2z3 = (access (zv__1333, (Big_int.of_int (1)))) in
        let zp3z3 = (access (zv__1333, Big_int.zero)) in
        (((eq_bit (zp3z3, B1)) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
          skip ()
        | (zv__1336, zv__1337) when (let zp0z3 = (access (zv__1336, (Big_int.of_int (1)))) in
        let zp1z3 = (access (zv__1336, Big_int.zero)) in
        let zp2z3 = (access (zv__1337, (Big_int.of_int (1)))) in
        let zp3z3 = (access (zv__1337, Big_int.zero)) in
        (((eq_bit (zp3z3, B1)) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
          skip ()
        | (zv__1340, zv__1341) when (let zp0z3 = (access (zv__1340, (Big_int.of_int (1)))) in
        let zp1z3 = (access (zv__1340, Big_int.zero)) in
        let zp2z3 = (access (zv__1341, (Big_int.of_int (1)))) in
        let zp3z3 = (access (zv__1341, Big_int.zero)) in
        (((eq_bit (zp3z3, B1)) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
          skip ()
        | (zv__1344, zv__1345) when (let zp0z3 = (access (zv__1344, (Big_int.of_int (1)))) in
        let zp1z3 = (access (zv__1344, Big_int.zero)) in
        let zp2z3 = (access (zv__1345, (Big_int.of_int (1)))) in
        let zp3z3 = (access (zv__1345, Big_int.zero)) in
        (((eq_bit (zp3z3, B0)) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
          skip ()
        | (zv__1348, zv__1349) when (let zp0z3 = (access (zv__1348, (Big_int.of_int (1)))) in
        let zp1z3 = (access (zv__1348, Big_int.zero)) in
        let zp2z3 = (access (zv__1349, (Big_int.of_int (1)))) in
        let zp3z3 = (access (zv__1349, Big_int.zero)) in
        (((eq_bit (zp3z3, B1)) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
          skip ()
        | (zv__1352, zv__1353) when (let zp0z3 = (access (zv__1352, (Big_int.of_int (1)))) in
        let zp1z3 = (access (zv__1352, Big_int.zero)) in
        let zp2z3 = (access (zv__1353, (Big_int.of_int (1)))) in
        let zp3z3 = (access (zv__1353, Big_int.zero)) in
        (((eq_bit (zp3z3, B0)) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
          skip ()
        | (zv__1356, zv__1357) when (let zp0z3 = (access (zv__1356, (Big_int.of_int (1)))) in
        let zp1z3 = (access (zv__1356, Big_int.zero)) in
        let zp2z3 = (access (zv__1357, (Big_int.of_int (1)))) in
        let zp3z3 = (access (zv__1357, Big_int.zero)) in
        (((eq_bit (zp3z3, B0)) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
          ()
        | _ -> begin print_endline "FIXME: unsupported fence"; () end
      end;
      true
    end
  | ZFENCE_TSO (zpred, zsucc) ->
    begin
      begin
        match (zpred, zsucc) with
        | (zv__1360, zv__1361) when (let zp0z3 = (access (zv__1360, (Big_int.of_int (1)))) in
        let zp1z3 = (access (zv__1360, Big_int.zero)) in
        let zp2z3 = (access (zv__1361, (Big_int.of_int (1)))) in
        let zp3z3 = (access (zv__1361, Big_int.zero)) in
        (((eq_bit (zp3z3, B1)) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
          skip ()
        | (zv__1364, zv__1365) when (let zp0z3 = (access (zv__1364, (Big_int.of_int (1)))) in
        let zp1z3 = (access (zv__1364, Big_int.zero)) in
        let zp2z3 = (access (zv__1365, (Big_int.of_int (1)))) in
        let zp3z3 = (access (zv__1365, Big_int.zero)) in
        (((eq_bit (zp3z3, B0)) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
          ()
        | _ -> begin print_endline "FIXME: unsupported fence"; () end
      end;
      true
    end
  | ZFENCEI (()) -> true
  | ZECALL (()) ->
    let zt = ({ztrap = begin
      match !zcur_privilege with
      | ZUser -> ZE_U_EnvCall
      | ZSupervisor -> ZE_S_EnvCall
      | ZMachine -> ZE_M_EnvCall
    end;
    zexcinfo = ZNone ();
    zccause = ZNone ()}) in
    begin
      znextPC := (zhandle_exception (!zcur_privilege, (ZCTL_TRAP zt), !zPC));
      false
    end
  | ZMRET (()) ->
    begin
      if (eq_list ((zprivLevel_to_bits !zcur_privilege), (zprivLevel_to_bits ZMachine))) then (znextPC := (zhandle_exception (!zcur_privilege, (ZCTL_MRET ()), !zPC))) else (zhandle_illegal ());
      false
    end
  | ZSRET (()) ->
    begin
      begin
        match !zcur_privilege with
        | ZUser -> zhandle_illegal ()
        | ZSupervisor ->
          if ((not (zhaveSupMode ())) || (eq_list ((z_get_Mstatus_TSR !zmstatus), (zbool_to_bits true)))) then (zhandle_illegal ()) else (znextPC := (zhandle_exception (!zcur_privilege, (ZCTL_SRET ()), !zPC)))
        | ZMachine ->
          if (not (zhaveSupMode ())) then (zhandle_illegal ()) else (znextPC := (zhandle_exception (!zcur_privilege, (ZCTL_SRET ()), !zPC)))
      end;
      false
    end
  | ZEBREAK (()) -> begin zhandle_mem_exception (!zPC, ZE_Breakpoint); false end
  | ZWFI (()) ->
    begin
      match !zcur_privilege with
      | ZMachine -> begin zplatform_wfi (); true end
      | ZSupervisor ->
        if (eq_list ((z_get_Mstatus_TW !zmstatus), (zbool_to_bits true))) then (begin
          zhandle_illegal ();
          false
        end) else (begin zplatform_wfi (); true end)
      | ZUser -> begin zhandle_illegal (); false end
    end
  | ZSFENCE_VMA (zrs1, zrs2) ->
    if (eq_list ((zprivLevel_to_bits !zcur_privilege), (zprivLevel_to_bits ZUser))) then (begin
      zhandle_illegal ();
      false
    end) else (begin
      match (zarchitecture (z_get_Mstatus_SXL !zmstatus), z_get_Mstatus_TVM !zmstatus) with
      | (ZSome (ZRV64), zvz30) when (eq_list (zvz30, (zbool_to_bits true))) ->
        begin zhandle_illegal (); false end
      | (ZSome (ZRV64), zvz31) when (eq_list (zvz31, (zbool_to_bits false))) ->
        let zaddr = (if (eq_int ((zregbits_to_regno zrs1), Big_int.zero)) then (ZNone ()) else (ZSome (subrange ((zrX (zregbits_to_regno zrs1)), (Big_int.of_int (38)), Big_int.zero)))) in
        let zasid = (if (eq_int ((zregbits_to_regno zrs2), Big_int.zero)) then (ZNone ()) else (ZSome (subrange ((zrX (zregbits_to_regno zrs2)), (Big_int.of_int (15)), Big_int.zero)))) in
        begin zflushTLB (zasid, zaddr); true end
      | (_, _) -> zinternal_error "unimplemented sfence architecture"
    end)
  | ZLOADRES (zaq, zrl, zrs1, zwidth, zrd) ->
    if (zhaveAtomics ()) then (let zvaddr1 = (zrX (zregbits_to_regno zrs1)) in
    let zddc_result = (ztranslateDDC (zvaddr1, ZWrite, zwidth)) in
    begin
      match zddc_result with
      | ZDDC_Failure (zex) ->
        zraise_c2_exception6 (zex, [B1; B0; B0; B0; B0; B1])
      | ZDDC_Address (zvaddr) ->
        let zaligned = (begin
          match zwidth with
          | ZBYTE -> true
          | ZHALF ->
            eq_list ((zcast_unit_vec (access (zvaddr, Big_int.zero))), [B0])
          | ZWORD ->
            eq_list ((subrange (zvaddr, (Big_int.of_int (1)), Big_int.zero)), [B0; B0])
          | ZDOUBLE ->
            eq_list ((subrange (zvaddr, (Big_int.of_int (2)), Big_int.zero)), [B0; B0; B0])
        end) in
        if (not zaligned) then (begin
          zhandle_mem_exception (zvaddr, ZE_Load_Addr_Align);
          false
        end) else (begin
          match (ztranslateAddr (zvaddr, ZRead, ZData)) with
          | ZTR_Failure (ze) ->
            begin zhandle_mem_exception (zvaddr, ze); false end
          | ZTR_Address (zaddr) ->
            begin
              match zwidth with
              | ZWORD ->
                zprocess_loadres (zrd, zvaddr, (zmem_read (zaddr, (Big_int.of_int (4)), zaq, zrl, true)), false)
              | ZDOUBLE ->
                zprocess_loadres (zrd, zvaddr, (zmem_read (zaddr, (Big_int.of_int (8)), zaq, zrl, true)), false)
              | _ -> zinternal_error "LOADRES expected WORD or DOUBLE"
            end
        end)
    end) else (begin zhandle_illegal (); false end)
  | ZSTORECON (zaq, zrl, zrs2, zrs1, zwidth, zrd) ->
    if (eq_bool ((Platform.speculate_conditional ()), false)) then (begin
      zwX ((zregbits_to_regno zrd), (zEXTZ ((Big_int.of_int (64)), [B1])));
      true
    end) else (if (zhaveAtomics ()) then (let zvaddr1 = ref ((zrX (zregbits_to_regno zrs1)) : (bit) list) in
    let zddc_result = (ztranslateDDC (!zvaddr1, ZWrite, zwidth)) in
    begin
      match zddc_result with
      | ZDDC_Failure (zex) ->
        zraise_c2_exception6 (zex, [B1; B0; B0; B0; B0; B1])
      | ZDDC_Address (zvaddr) ->
        let zaligned = (begin
          match zwidth with
          | ZBYTE -> true
          | ZHALF ->
            eq_list ((zcast_unit_vec (access (zvaddr, Big_int.zero))), [B0])
          | ZWORD ->
            eq_list ((subrange (zvaddr, (Big_int.of_int (1)), Big_int.zero)), [B0; B0])
          | ZDOUBLE ->
            eq_list ((subrange (zvaddr, (Big_int.of_int (2)), Big_int.zero)), [B0; B0; B0])
        end) in
        if (not zaligned) then (begin
          zhandle_mem_exception (zvaddr, ZE_SAMO_Addr_Align);
          false
        end) else (if (eq_bool ((Platform.match_reservation zvaddr), false)) then (begin
          zwX ((zregbits_to_regno zrd), (zEXTZ ((Big_int.of_int (64)), [B1])));
          true
        end) else (begin
          match (ztranslateAddr (zvaddr, ZWrite, ZData)) with
          | ZTR_Failure (ze) ->
            begin zhandle_mem_exception (zvaddr, ze); false end
          | ZTR_Address (zaddr) ->
            let zeares = (begin
              match zwidth with
              | ZWORD ->
                zmem_write_ea (zaddr, (Big_int.of_int (4)), zaq, zrl, true)
              | ZDOUBLE ->
                zmem_write_ea (zaddr, (Big_int.of_int (8)), zaq, zrl, true)
              | _ -> zinternal_error "STORECON expected word or double"
            end) in
            begin
              match zeares with
              | ZMemException (ze) ->
                begin zhandle_mem_exception (zaddr, ze); false end
              | ZMemValue (_) ->
                let zrs2_val = ref ((zrX (zregbits_to_regno zrs2)) : (bit) list) in
                let zres = (begin
                  match zwidth with
                  | ZWORD ->
                    zmem_write_value (zaddr, (Big_int.of_int (4)), (subrange (!zrs2_val, (Big_int.of_int (31)), Big_int.zero)), zaq, zrl, true)
                  | ZDOUBLE ->
                    zmem_write_value (zaddr, (Big_int.of_int (8)), !zrs2_val, zaq, zrl, true)
                  | _ -> zinternal_error "STORECON expected word or double"
                end) in
                begin
                  match zres with
                  | ZMemValue (zp0z3) when (eq_bool (zp0z3, true)) ->
                    begin
                      zwX ((zregbits_to_regno zrd), (zEXTZ ((Big_int.of_int (64)), [B0])));
                      Platform.cancel_reservation ();
                      true
                    end
                  | ZMemValue (zp0z3) when (eq_bool (zp0z3, false)) ->
                    begin
                      zwX ((zregbits_to_regno zrd), (zEXTZ ((Big_int.of_int (64)), [B1])));
                      Platform.cancel_reservation ();
                      true
                    end
                  | ZMemException (ze) ->
                    begin zhandle_mem_exception (zaddr, ze); false end
                end
            end
        end))
    end) else (begin zhandle_illegal (); false end))
  | ZAMO (zop, zaq, zrl, zrs2, zrs1, zwidth, zrd) ->
    if (zhaveAtomics ()) then (let zvaddr1 = ref ((zrX (zregbits_to_regno zrs1)) : (bit) list) in
    let zddc_result = (ztranslateDDC (!zvaddr1, ZWrite, zwidth)) in
    begin
      match zddc_result with
      | ZDDC_Failure (zex) ->
        zraise_c2_exception6 (zex, [B1; B0; B0; B0; B0; B1])
      | ZDDC_Address (zvaddr) ->
        begin
          match (ztranslateAddr (zvaddr, ZReadWrite, ZData)) with
          | ZTR_Failure (ze) ->
            begin zhandle_mem_exception (zvaddr, ze); false end
          | ZTR_Address (zaddr) ->
            let zeares = (begin
              match zwidth with
              | ZWORD ->
                zmem_write_ea (zaddr, (Big_int.of_int (4)), (zaq && zrl), zrl, true)
              | ZDOUBLE ->
                zmem_write_ea (zaddr, (Big_int.of_int (8)), (zaq && zrl), zrl, true)
              | _ -> zinternal_error "AMO expected WORD or DOUBLE"
            end) in
            begin
              match zeares with
              | ZMemException (ze) ->
                begin zhandle_mem_exception (zaddr, ze); false end
              | ZMemValue (_) ->
                let zrval = (begin
                  match zwidth with
                  | ZWORD ->
                    zextend_value (false, (zmem_read (zaddr, (Big_int.of_int (4)), zaq, (zaq && zrl), true)))
                  | ZDOUBLE ->
                    zextend_value (false, (zmem_read (zaddr, (Big_int.of_int (8)), zaq, (zaq && zrl), true)))
                  | _ -> zinternal_error "AMO expected WORD or DOUBLE"
                end) in
                begin
                  match zrval with
                  | ZMemException (ze) ->
                    begin zhandle_mem_exception (zaddr, ze); false end
                  | ZMemValue (zloaded) ->
                    let zrs2_val = ref ((zrX (zregbits_to_regno zrs2)) : (bit) list) in
                    let zresult = ref ((begin
                      match zop with
                      | ZAMOSWAP -> !zrs2_val
                      | ZAMOADD -> add_vec (!zrs2_val, zloaded)
                      | ZAMOXOR -> xor_vec (!zrs2_val, zloaded)
                      | ZAMOAND -> and_vec (!zrs2_val, zloaded)
                      | ZAMOOR -> or_vec (!zrs2_val, zloaded)
                      | ZAMOMIN ->
                        zvector64 (min_int ((sint !zrs2_val), (sint zloaded)))
                      | ZAMOMAX ->
                        zvector64 (max_int ((sint !zrs2_val), (sint zloaded)))
                      | ZAMOMINU ->
                        zvector64 (min_int ((uint !zrs2_val), (uint zloaded)))
                      | ZAMOMAXU ->
                        zvector64 (max_int ((uint !zrs2_val), (uint zloaded)))
                    end) : (bit) list) in
                    let zwval = (begin
                      match zwidth with
                      | ZWORD ->
                        zmem_write_value (zaddr, (Big_int.of_int (4)), (subrange (!zresult, (Big_int.of_int (31)), Big_int.zero)), (zaq && zrl), zrl, true)
                      | ZDOUBLE ->
                        zmem_write_value (zaddr, (Big_int.of_int (8)), !zresult, (zaq && zrl), zrl, true)
                      | _ -> zinternal_error "AMO expected WORD or DOUBLE"
                    end) in
                    begin
                      match zwval with
                      | ZMemValue (zp0z3) when (eq_bool (zp0z3, true)) ->
                        begin zwX ((zregbits_to_regno zrd), zloaded); true end
                      | ZMemValue (zp0z3) when (eq_bool (zp0z3, false)) ->
                        zinternal_error "AMO got false from mem_write_value"
                      | ZMemException (ze) ->
                        begin zhandle_mem_exception (zaddr, ze); false end
                    end
                end
            end
        end
    end) else (begin zhandle_illegal (); false end)
  | ZC_NOP (()) -> true
  | ZC_ADDI4SPN (zrdc, znzzimm) ->
    let zimm = (append ([B0; B0], (append (znzzimm, [B0; B0])))) in
    let zrd = (zcreg2reg_bits zrdc) in
    zexecute (ZITYPE (zimm, zsp, zrd, ZRISCV_ADDI))
  | ZC_LW (zuimm, zrsc, zrdc) ->
    let zimm = (zEXTZ ((Big_int.of_int (12)), (append (zuimm, [B0; B0])))) in
    let zrd = (zcreg2reg_bits zrdc) in
    let zrs = (zcreg2reg_bits zrsc) in
    zexecute (ZLOAD (zimm, zrs, zrd, false, ZWORD, false, false))
  | ZC_LD (zuimm, zrsc, zrdc) ->
    let zimm = (zEXTZ ((Big_int.of_int (12)), (append (zuimm, [B0; B0; B0])))) in
    let zrd = (zcreg2reg_bits zrdc) in
    let zrs = (zcreg2reg_bits zrsc) in
    zexecute (ZLOAD (zimm, zrs, zrd, false, ZDOUBLE, false, false))
  | ZC_SW (zuimm, zrsc1, zrsc2) ->
    let zimm = (zEXTZ ((Big_int.of_int (12)), (append (zuimm, [B0; B0])))) in
    let zrs1 = (zcreg2reg_bits zrsc1) in
    let zrs2 = (zcreg2reg_bits zrsc2) in
    zexecute (ZSTORE (zimm, zrs2, zrs1, ZWORD, false, false))
  | ZC_SD (zuimm, zrsc1, zrsc2) ->
    let zimm = (zEXTZ ((Big_int.of_int (12)), (append (zuimm, [B0; B0; B0])))) in
    let zrs1 = (zcreg2reg_bits zrsc1) in
    let zrs2 = (zcreg2reg_bits zrsc2) in
    zexecute (ZSTORE (zimm, zrs2, zrs1, ZDOUBLE, false, false))
  | ZC_ADDI (znzzi, zrsd) ->
    let zimm = (zEXTS ((Big_int.of_int (12)), znzzi)) in
    zexecute (ZITYPE (zimm, zrsd, zrsd, ZRISCV_ADDI))
  | ZC_JAL (zimm) ->
    zexecute (ZRISCV_JAL (zEXTS ((Big_int.of_int (21)), (append (zimm, [B0]))), zra))
  | ZC_ADDIW (zimm, zrsd) ->
    let zimm = (zEXTS ((Big_int.of_int (32)), zimm)) in
    let zrs_val = (zrX (zregbits_to_regno zrsd)) in
    let zres = (add_vec ((subrange (zrs_val, (Big_int.of_int (31)), Big_int.zero)), zimm)) in
    begin
      zwX ((zregbits_to_regno zrsd), (zEXTS ((Big_int.of_int (64)), zres)));
      true
    end
  | ZC_LI (zimm, zrd) ->
    let zimm = (zEXTS ((Big_int.of_int (12)), zimm)) in
    zexecute (ZITYPE (zimm, zzzreg, zrd, ZRISCV_ADDI))
  | ZC_ADDI16SP (zimm) ->
    let zimm = (zEXTS ((Big_int.of_int (12)), (append (zimm, [B0; B0; B0; B0])))) in
    zexecute (ZITYPE (zimm, zsp, zsp, ZRISCV_ADDI))
  | ZC_LUI (zimm, zrd) ->
    let zres = (zEXTS ((Big_int.of_int (20)), zimm)) in
    zexecute (ZUTYPE (zres, zrd, ZRISCV_LUI))
  | ZC_SRLI (zshamt, zrsd) ->
    let zrsd = (zcreg2reg_bits zrsd) in
    zexecute (ZSHIFTIOP (zshamt, zrsd, zrsd, ZRISCV_SRLI))
  | ZC_SRAI (zshamt, zrsd) ->
    let zrsd = (zcreg2reg_bits zrsd) in
    zexecute (ZSHIFTIOP (zshamt, zrsd, zrsd, ZRISCV_SRAI))
  | ZC_ANDI (zimm, zrsd) ->
    let zrsd = (zcreg2reg_bits zrsd) in
    zexecute (ZITYPE (zEXTS ((Big_int.of_int (12)), zimm), zrsd, zrsd, ZRISCV_ANDI))
  | ZC_SUB (zrsd, zrs2) ->
    let zrsd = (zcreg2reg_bits zrsd) in
    let zrs2 = (zcreg2reg_bits zrs2) in
    zexecute (ZRTYPE (zrs2, zrsd, zrsd, ZRISCV_SUB))
  | ZC_XOR (zrsd, zrs2) ->
    let zrsd = (zcreg2reg_bits zrsd) in
    let zrs2 = (zcreg2reg_bits zrs2) in
    zexecute (ZRTYPE (zrs2, zrsd, zrsd, ZRISCV_XOR))
  | ZC_OR (zrsd, zrs2) ->
    let zrsd = (zcreg2reg_bits zrsd) in
    let zrs2 = (zcreg2reg_bits zrs2) in
    zexecute (ZRTYPE (zrs2, zrsd, zrsd, ZRISCV_OR))
  | ZC_AND (zrsd, zrs2) ->
    let zrsd = (zcreg2reg_bits zrsd) in
    let zrs2 = (zcreg2reg_bits zrs2) in
    zexecute (ZRTYPE (zrs2, zrsd, zrsd, ZRISCV_AND))
  | ZC_SUBW (zrsd, zrs2) ->
    let zrsd = (zcreg2reg_bits zrsd) in
    let zrs2 = (zcreg2reg_bits zrs2) in
    zexecute (ZRTYPEW (zrs2, zrsd, zrsd, ZRISCV_SUBW))
  | ZC_ADDW (zrsd, zrs2) ->
    let zrsd = (zcreg2reg_bits zrsd) in
    let zrs2 = (zcreg2reg_bits zrs2) in
    zexecute (ZRTYPEW (zrs2, zrsd, zrsd, ZRISCV_ADDW))
  | ZC_J (zimm) ->
    zexecute (ZRISCV_JAL (zEXTS ((Big_int.of_int (21)), (append (zimm, [B0]))), zzzreg))
  | ZC_BEQZ (zimm, zrs) ->
    zexecute (ZBTYPE (zEXTS ((Big_int.of_int (13)), (append (zimm, [B0]))), zzzreg, zcreg2reg_bits zrs, ZRISCV_BEQ))
  | ZC_BNEZ (zimm, zrs) ->
    zexecute (ZBTYPE (zEXTS ((Big_int.of_int (13)), (append (zimm, [B0]))), zzzreg, zcreg2reg_bits zrs, ZRISCV_BNE))
  | ZC_SLLI (zshamt, zrsd) ->
    zexecute (ZSHIFTIOP (zshamt, zrsd, zrsd, ZRISCV_SLLI))
  | ZC_LWSP (zuimm, zrd) ->
    let zimm = (zEXTZ ((Big_int.of_int (12)), (append (zuimm, [B0; B0])))) in
    zexecute (ZLOAD (zimm, zsp, zrd, false, ZWORD, false, false))
  | ZC_LDSP (zuimm, zrd) ->
    let zimm = (zEXTZ ((Big_int.of_int (12)), (append (zuimm, [B0; B0; B0])))) in
    zexecute (ZLOAD (zimm, zsp, zrd, false, ZDOUBLE, false, false))
  | ZC_SWSP (zuimm, zrs2) ->
    let zimm = (zEXTZ ((Big_int.of_int (12)), (append (zuimm, [B0; B0])))) in
    zexecute (ZSTORE (zimm, zrs2, zsp, ZWORD, false, false))
  | ZC_SDSP (zuimm, zrs2) ->
    let zimm = (zEXTZ ((Big_int.of_int (12)), (append (zuimm, [B0; B0; B0])))) in
    zexecute (ZSTORE (zimm, zrs2, zsp, ZDOUBLE, false, false))
  | ZC_JR (zrs1) ->
    zexecute (ZRISCV_JALR (zEXTZ ((Big_int.of_int (12)), [B0]), zrs1, zzzreg))
  | ZC_JALR (zrs1) ->
    zexecute (ZRISCV_JALR (zEXTZ ((Big_int.of_int (12)), [B0]), zrs1, zra))
  | ZC_MV (zrd, zrs2) -> zexecute (ZRTYPE (zrs2, zzzreg, zrd, ZRISCV_ADD))
  | ZC_EBREAK (()) -> zexecute (ZEBREAK ())
  | ZC_ADD (zrsd, zrs2) -> zexecute (ZRTYPE (zrs2, zrsd, zrsd, ZRISCV_ADD))
  | ZMUL (zrs2, zrs1, zrd, zhigh, zsigned1, zsigned2) ->
    if (zhaveMulDiv ()) then (let zrs1_val = (zrX (zregbits_to_regno zrs1)) in
    let zrs2_val = (zrX (zregbits_to_regno zrs2)) in
    let zrs1_int = (if zsigned1 then (sint zrs1_val) else (uint zrs1_val)) in
    let zrs2_int = (if zsigned2 then (sint zrs2_val) else (uint zrs2_val)) in
    let zresult128 = (zto_bits ((Big_int.of_int (128)), (mult (zrs1_int, zrs2_int)))) in
    let zresult = (if zhigh then (subrange (zresult128, (Big_int.of_int (127)), (Big_int.of_int (64)))) else (subrange (zresult128, (Big_int.of_int (63)), Big_int.zero))) in
    begin zwX ((zregbits_to_regno zrd), zresult); true end) else (begin
      zhandle_illegal ();
      false
    end)
  | ZDIV (zrs2, zrs1, zrd, zs) ->
    if (zhaveMulDiv ()) then (let zrs1_val = (zrX (zregbits_to_regno zrs1)) in
    let zrs2_val = (zrX (zregbits_to_regno zrs2)) in
    let zrs1_int = (if zs then (sint zrs1_val) else (uint zrs1_val)) in
    let zrs2_int = (if zs then (sint zrs2_val) else (uint zrs2_val)) in
    let zq = (if (eq_int (zrs2_int, Big_int.zero)) then (Big_int.of_int (-1)) else (quot_round_zero (zrs1_int, zrs2_int))) in
    let zqz7 = (if (zs && (gt (zq, zxlen_max_signed))) then zxlen_min_signed else zq) in
    begin zwX ((zregbits_to_regno zrd), (zto_bits (zxlen, zqz7))); true end) else (begin
      zhandle_illegal ();
      false
    end)
  | ZREM (zrs2, zrs1, zrd, zs) ->
    if (zhaveMulDiv ()) then (let zrs1_val = (zrX (zregbits_to_regno zrs1)) in
    let zrs2_val = (zrX (zregbits_to_regno zrs2)) in
    let zrs1_int = (if zs then (sint zrs1_val) else (uint zrs1_val)) in
    let zrs2_int = (if zs then (sint zrs2_val) else (uint zrs2_val)) in
    let zr = (if (eq_int (zrs2_int, Big_int.zero)) then zrs1_int else (rem_round_zero (zrs1_int, zrs2_int))) in
    begin zwX ((zregbits_to_regno zrd), (zto_bits (zxlen, zr))); true end) else (begin
      zhandle_illegal ();
      false
    end)
  | ZMULW (zrs2, zrs1, zrd) ->
    if (zhaveMulDiv ()) then (let zrs1_val = (subrange ((zrX (zregbits_to_regno zrs1)), (Big_int.of_int (31)), Big_int.zero)) in
    let zrs2_val = (subrange ((zrX (zregbits_to_regno zrs2)), (Big_int.of_int (31)), Big_int.zero)) in
    let zrs1_int = (sint zrs1_val) in
    let zrs2_int = (sint zrs2_val) in
    let zresult32 = (subrange ((zto_bits ((Big_int.of_int (64)), (mult (zrs1_int, zrs2_int)))), (Big_int.of_int (31)), Big_int.zero)) in
    let zresult = (zEXTS ((Big_int.of_int (64)), zresult32)) in
    begin zwX ((zregbits_to_regno zrd), zresult); true end) else (begin
      zhandle_illegal ();
      false
    end)
  | ZDIVW (zrs2, zrs1, zrd, zs) ->
    if (zhaveMulDiv ()) then (let zrs1_val = (subrange ((zrX (zregbits_to_regno zrs1)), (Big_int.of_int (31)), Big_int.zero)) in
    let zrs2_val = (subrange ((zrX (zregbits_to_regno zrs2)), (Big_int.of_int (31)), Big_int.zero)) in
    let zrs1_int = (if zs then (sint zrs1_val) else (uint zrs1_val)) in
    let zrs2_int = (if zs then (sint zrs2_val) else (uint zrs2_val)) in
    let zq = (if (eq_int (zrs2_int, Big_int.zero)) then (Big_int.of_int (-1)) else (quot_round_zero (zrs1_int, zrs2_int))) in
    let zqz7 = (if (zs && (gt (zq, (sub_int ((pow2 (Big_int.of_int (31))), (Big_int.of_int (1))))))) then (sub_int (Big_int.zero, (int_power ((Big_int.of_int (2)), (Big_int.of_int (31)))))) else zq) in
    begin
      zwX ((zregbits_to_regno zrd), (zEXTS ((Big_int.of_int (64)), (zto_bits ((Big_int.of_int (32)), zqz7)))));
      true
    end) else (begin zhandle_illegal (); false end)
  | ZREMW (zrs2, zrs1, zrd, zs) ->
    if (zhaveMulDiv ()) then (let zrs1_val = (subrange ((zrX (zregbits_to_regno zrs1)), (Big_int.of_int (31)), Big_int.zero)) in
    let zrs2_val = (subrange ((zrX (zregbits_to_regno zrs2)), (Big_int.of_int (31)), Big_int.zero)) in
    let zrs1_int = (if zs then (sint zrs1_val) else (uint zrs1_val)) in
    let zrs2_int = (if zs then (sint zrs2_val) else (uint zrs2_val)) in
    let zr = (if (eq_int (zrs2_int, Big_int.zero)) then zrs1_int else (rem_round_zero (zrs1_int, zrs2_int))) in
    begin
      zwX ((zregbits_to_regno zrd), (zEXTS ((Big_int.of_int (64)), (zto_bits ((Big_int.of_int (32)), zr)))));
      true
    end) else (begin zhandle_illegal (); false end)
  | ZCSR (zcsr, zrs1, zrd, zis_imm, zop) ->
    let zrs1_val = (if zis_imm then (zEXTZ ((Big_int.of_int (64)), zrs1)) else (zrX (zregbits_to_regno zrs1))) in
    let zisWrite = (begin
      match zop with
      | ZCSRRW -> true
      | _ ->
        if zis_imm then (zneq_int ((uint zrs1_val), Big_int.zero)) else (zneq_int ((uint zrs1), Big_int.zero))
    end) in
    if (not (zcheck_CSR (zcsr, !zcur_privilege, zisWrite))) then (begin
      zhandle_illegal ();
      false
    end) else (let zcsr_val = (zreadCSR zcsr) in
    begin
      if zisWrite then (let znew_val = (begin
        match zop with
        | ZCSRRW -> zrs1_val
        | ZCSRRS -> or_vec (zcsr_val, zrs1_val)
        | ZCSRRC -> and_vec (zcsr_val, (not_vec zrs1_val))
      end) in
      zwriteCSR (zcsr, znew_val)) else ();
      zwX ((zregbits_to_regno zrd), zcsr_val);
      true
    end)
  | ZCGetPerm (zrd, zcb) ->
    begin
      zcheckCP2usable ();
      let zcapVal = (zreadCapReg (zregbits_to_regno zcb)) in
      begin
        zwX ((zregbits_to_regno zrd), (zEXTZ ((Big_int.of_int (64)), (zgetCapPerms zcapVal))));
        true
      end
    end
  | ZCGetType (zrd, zcb) ->
    begin
      zcheckCP2usable ();
      let zcapVal = (zreadCapReg (zregbits_to_regno zcb)) in
      begin
        zwX ((zregbits_to_regno zrd), (if (zcapVal.zsealed) then (zEXTZ ((Big_int.of_int (64)), (zcapVal.zotype))) else [B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1]));
        true
      end
    end
  | ZCGetBase (zrd, zcb) ->
    begin
      zcheckCP2usable ();
      let zcapVal = (zreadCapReg (zregbits_to_regno zcb)) in
      begin
        zwX ((zregbits_to_regno zrd), (zto_bits ((Big_int.of_int (64)), (zgetCapBase zcapVal))));
        true
      end
    end
  | ZCGetOffset (zrd, zcb) ->
    begin
      zcheckCP2usable ();
      let zcapVal = (zreadCapReg (zregbits_to_regno zcb)) in
      begin
        zwX ((zregbits_to_regno zrd), (zto_bits ((Big_int.of_int (64)), (zgetCapOffset zcapVal))));
        true
      end
    end
  | ZCGetLen (zrd, zcb) ->
    begin
      zcheckCP2usable ();
      let zcapVal = (zreadCapReg (zregbits_to_regno zcb)) in
      let zlen65 = (zgetCapLength zcapVal) in
      begin
        zwX ((zregbits_to_regno zrd), (zto_bits ((Big_int.of_int (64)), (if (gt (zlen65, zMAX_U64)) then zMAX_U64 else zlen65))));
        true
      end
    end
  | ZCGetTag (zrd, zcb) ->
    begin
      zcheckCP2usable ();
      let zcapVal = (zreadCapReg (zregbits_to_regno zcb)) in
      begin
        zwX ((zregbits_to_regno zrd), (zEXTZ ((Big_int.of_int (64)), (zbool_to_bits (zcapVal.ztag)))));
        true
      end
    end
  | ZCGetSealed (zrd, zcb) ->
    begin
      zcheckCP2usable ();
      let zcapVal = (zreadCapReg (zregbits_to_regno zcb)) in
      begin
        zwX ((zregbits_to_regno zrd), (zEXTZ ((Big_int.of_int (64)), (zbool_to_bits (zcapVal.zsealed)))));
        true
      end
    end
  | ZCGetAddr (zrd, zcb) ->
    begin
      zcheckCP2usable ();
      let zcapVal = (zreadCapReg (zregbits_to_regno zcb)) in
      begin
        zwX ((zregbits_to_regno zrd), (zto_bits ((Big_int.of_int (64)), (zgetCapCursor zcapVal))));
        true
      end
    end
  | ZCSpecialRW (zcd, zcs, zidx) ->
    begin
      zcheckCP2usable ();
      let (zspecialExists, zro, zpriv, zneedASR) = (begin
        match zidx with
        | zvz32 when (eq_int ((zregbits_to_regno zvz32), Big_int.zero)) ->
          (true, true, ZUser, false)
        | zvz33 when (eq_int ((zregbits_to_regno zvz33), (Big_int.of_int (1)))) ->
          (true, false, ZUser, false)
        | zvz34 when (eq_int ((zregbits_to_regno zvz34), (Big_int.of_int (4)))) ->
          (true, false, ZUser, true)
        | zvz35 when (eq_int ((zregbits_to_regno zvz35), (Big_int.of_int (6)))) ->
          (true, false, ZUser, true)
        | zvz36 when (eq_int ((zregbits_to_regno zvz36), (Big_int.of_int (7)))) ->
          (true, false, ZUser, true)
        | zvz37 when (eq_int ((zregbits_to_regno zvz37), (Big_int.of_int (12)))) ->
          (true, false, ZSupervisor, true)
        | zvz38 when (eq_int ((zregbits_to_regno zvz38), (Big_int.of_int (14)))) ->
          (true, false, ZSupervisor, true)
        | zvz39 when (eq_int ((zregbits_to_regno zvz39), (Big_int.of_int (15)))) ->
          (true, false, ZSupervisor, true)
        | zvz310 when (eq_int ((zregbits_to_regno zvz310), (Big_int.of_int (28)))) ->
          (true, false, ZMachine, true)
        | zvz311 when (eq_int ((zregbits_to_regno zvz311), (Big_int.of_int (30)))) ->
          (true, false, ZMachine, true)
        | zvz312 when (eq_int ((zregbits_to_regno zvz312), (Big_int.of_int (31)))) ->
          (true, false, ZMachine, true)
        | _ -> (false, true, ZMachine, true)
      end) in
      if (not zspecialExists) then (begin zhandle_illegal (); false end) else (if ((zro && (zneq_int ((zregbits_to_regno zcs), Big_int.zero))) || ((zz8operatorz0zI_uz9 ((zprivLevel_to_bits !zcur_privilege), (zprivLevel_to_bits zpriv))) || (zneedASR && (not (zpcc_access_system_regs ()))))) then (zraise_c2_exception6 (ZCapEx_AccessSystemRegsViolation, (append ([B1], zidx)))) else (let zcs_val = (zreadCapReg (zregbits_to_regno zcs)) in
      begin
        if (zneq_int ((zregbits_to_regno zcd), Big_int.zero)) then (let zspecial_val = (begin
          match zidx with
          | zvz313 when (eq_int ((zregbits_to_regno zvz313), Big_int.zero)) ->
            let (zsuccess, zpcc) = (zsetCapOffset (!zPCC, !zPC)) in
            begin assert zsuccess; zpcc end
          | zvz314 when (eq_int ((zregbits_to_regno zvz314), (Big_int.of_int (1)))) ->
            !zDDC
          | zvz315 when (eq_int ((zregbits_to_regno zvz315), (Big_int.of_int (4)))) ->
            !zUTCC
          | zvz316 when (eq_int ((zregbits_to_regno zvz316), (Big_int.of_int (6)))) ->
            !zUScratchC
          | zvz317 when (eq_int ((zregbits_to_regno zvz317), (Big_int.of_int (7)))) ->
            !zUEPCC
          | zvz318 when (eq_int ((zregbits_to_regno zvz318), (Big_int.of_int (12)))) ->
            !zSTCC
          | zvz319 when (eq_int ((zregbits_to_regno zvz319), (Big_int.of_int (14)))) ->
            !zSScratchC
          | zvz320 when (eq_int ((zregbits_to_regno zvz320), (Big_int.of_int (15)))) ->
            !zSEPCC
          | zvz321 when (eq_int ((zregbits_to_regno zvz321), (Big_int.of_int (28)))) ->
            !zMTCC
          | zvz322 when (eq_int ((zregbits_to_regno zvz322), (Big_int.of_int (30)))) ->
            !zMScratchC
          | zvz323 when (eq_int ((zregbits_to_regno zvz323), (Big_int.of_int (31)))) ->
            !zMEPCC
          | _ -> begin assert false; zundefined_Capability () end
        end) in
        zwriteCapReg ((zregbits_to_regno zcd), zspecial_val)) else ();
        if (zneq_int ((zregbits_to_regno zcs), Big_int.zero)) then (begin
          match zidx with
          | zvz324 when (eq_int ((zregbits_to_regno zvz324), (Big_int.of_int (1)))) ->
            zDDC := zcs_val
          | zvz325 when (eq_int ((zregbits_to_regno zvz325), (Big_int.of_int (4)))) ->
            zUTCC := zcs_val
          | zvz326 when (eq_int ((zregbits_to_regno zvz326), (Big_int.of_int (6)))) ->
            zUScratchC := zcs_val
          | zvz327 when (eq_int ((zregbits_to_regno zvz327), (Big_int.of_int (7)))) ->
            zUEPCC := zcs_val
          | zvz328 when (eq_int ((zregbits_to_regno zvz328), (Big_int.of_int (12)))) ->
            zSTCC := zcs_val
          | zvz329 when (eq_int ((zregbits_to_regno zvz329), (Big_int.of_int (14)))) ->
            zSScratchC := zcs_val
          | zvz330 when (eq_int ((zregbits_to_regno zvz330), (Big_int.of_int (15)))) ->
            zSEPCC := zcs_val
          | zvz331 when (eq_int ((zregbits_to_regno zvz331), (Big_int.of_int (28)))) ->
            zMTCC := zcs_val
          | zvz332 when (eq_int ((zregbits_to_regno zvz332), (Big_int.of_int (30)))) ->
            zMScratchC := zcs_val
          | zvz333 when (eq_int ((zregbits_to_regno zvz333), (Big_int.of_int (31)))) ->
            zMEPCC := zcs_val
          | _ -> assert false
        end) else ();
        true
      end))
    end
  | ZCAndPerm (zcd, zcb, zrt) ->
    begin
      zcheckCP2usable ();
      let zcb_val = (zreadCapReg (zregbits_to_regno zcb)) in
      let zrt_val = (zrX (zregbits_to_regno zrt)) in
      if (not (zcb_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcb)) else (if (zcb_val.zsealed) then (zraise_c2_exception (ZCapEx_SealViolation, zcb)) else (let zperms = (zgetCapPerms zcb_val) in
      let znewCap = (zsetCapPerms (zcb_val, (and_vec (zperms, (subrange (zrt_val, (Big_int.of_int (30)), Big_int.zero)))))) in
      begin zwriteCapReg ((zregbits_to_regno zcd), znewCap); true end))
    end
  | ZCToPtr (zrd, zcb, zct) ->
    begin
      zcheckCP2usable ();
      let zct_val = (zreadCapRegDDC (zregbits_to_regno zct)) in
      let zcb_val = (zreadCapReg (zregbits_to_regno zcb)) in
      if (not (zct_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zct)) else (if ((zcb_val.ztag) && (zcb_val.zsealed)) then (zraise_c2_exception (ZCapEx_SealViolation, zcb)) else (let zctBase = (zgetCapBase zct_val) in
      begin
        zwX ((zregbits_to_regno zrd), (if (not (zcb_val.ztag)) then (zzzeros_implicit (Big_int.of_int (64))) else (zto_bits ((Big_int.of_int (64)), (sub_int ((zgetCapCursor zcb_val), zctBase))))));
        true
      end))
    end
  | ZCIncOffset (zcd, zcb, zrt) ->
    begin
      zcheckCP2usable ();
      let zcb_val = (zreadCapReg (zregbits_to_regno zcb)) in
      let zrt_val = (zrX (zregbits_to_regno zrt)) in
      if ((zcb_val.ztag) && ((zcb_val.zsealed) && (zneq_vec (zrt_val, [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0])))) then (zraise_c2_exception (ZCapEx_SealViolation, zcb)) else (let (zsuccess, znewCap) = (zincCapOffset (zcb_val, zrt_val)) in
      begin
        if zsuccess then (zwriteCapReg ((zregbits_to_regno zcd), znewCap)) else (zwriteCapReg ((zregbits_to_regno zcd), (zint_to_cap (add_vec ((zto_bits ((Big_int.of_int (64)), (zgetCapBase zcb_val))), zrt_val)))));
        true
      end)
    end
  | ZCIncOffsetImmediate (zcd, zcb, zimm) ->
    begin
      zcheckCP2usable ();
      let zcb_val = (zreadCapReg (zregbits_to_regno zcb)) in
      let zimm64 = (zEXTS ((Big_int.of_int (64)), zimm)) in
      if ((zcb_val.ztag) && (zcb_val.zsealed)) then (zraise_c2_exception (ZCapEx_SealViolation, zcb)) else (let (zsuccess, znewCap) = (zincCapOffset (zcb_val, zimm64)) in
      begin
        if zsuccess then (zwriteCapReg ((zregbits_to_regno zcd), znewCap)) else (zwriteCapReg ((zregbits_to_regno zcd), (zint_to_cap (add_vec ((zto_bits ((Big_int.of_int (64)), (zgetCapBase zcb_val))), zimm64)))));
        true
      end)
    end
  | ZCSetOffset (zcd, zcb, zrt) ->
    begin
      zcheckCP2usable ();
      let zcb_val = (zreadCapReg (zregbits_to_regno zcb)) in
      let zrt_val = (zrX (zregbits_to_regno zrt)) in
      if ((zcb_val.ztag) && (zcb_val.zsealed)) then (zraise_c2_exception (ZCapEx_SealViolation, zcb)) else (let (zsuccess, znewCap) = (zsetCapOffset (zcb_val, zrt_val)) in
      begin
        if zsuccess then (zwriteCapReg ((zregbits_to_regno zcd), znewCap)) else (zwriteCapReg ((zregbits_to_regno zcd), (zint_to_cap (add_vec ((zto_bits ((Big_int.of_int (64)), (zgetCapBase zcb_val))), zrt_val)))));
        true
      end)
    end
  | ZCSetBounds (zcd, zcb, zrt) ->
    begin
      zcheckCP2usable ();
      let zcb_val = (zreadCapReg (zregbits_to_regno zcb)) in
      let zrt_val = (uint (zrX (zregbits_to_regno zrt))) in
      let zcursor = (zgetCapCursor zcb_val) in
      let zbase = (zgetCapBase zcb_val) in
      let ztop = (zgetCapTop zcb_val) in
      let znewTop = (add_int (zcursor, zrt_val)) in
      if (not (zcb_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcb)) else (if (zcb_val.zsealed) then (zraise_c2_exception (ZCapEx_SealViolation, zcb)) else (if (lt (zcursor, zbase)) then (zraise_c2_exception (ZCapEx_LengthViolation, zcb)) else (if (gt (znewTop, ztop)) then (zraise_c2_exception (ZCapEx_LengthViolation, zcb)) else (let (_, znewCap) = (zsetCapBounds (zcb_val, (zto_bits ((Big_int.of_int (64)), zcursor)), (zto_bits ((Big_int.of_int (65)), znewTop)))) in
      begin zwriteCapReg ((zregbits_to_regno zcd), znewCap); true end))))
    end
  | ZCSetBoundsImmediate (zcd, zcb, zimm) ->
    begin
      zcheckCP2usable ();
      let zcb_val = (zreadCapReg (zregbits_to_regno zcb)) in
      let zimmU = (uint zimm) in
      let zcursor = (zgetCapCursor zcb_val) in
      let zbase = (zgetCapBase zcb_val) in
      let ztop = (zgetCapTop zcb_val) in
      let znewTop = (add_int (zcursor, zimmU)) in
      if (not (zcb_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcb)) else (if (zcb_val.zsealed) then (zraise_c2_exception (ZCapEx_SealViolation, zcb)) else (if (lt (zcursor, zbase)) then (zraise_c2_exception (ZCapEx_LengthViolation, zcb)) else (if (gt (znewTop, ztop)) then (zraise_c2_exception (ZCapEx_LengthViolation, zcb)) else (let (_, znewCap) = (zsetCapBounds (zcb_val, (zto_bits ((Big_int.of_int (64)), zcursor)), (zto_bits ((Big_int.of_int (65)), znewTop)))) in
      begin zwriteCapReg ((zregbits_to_regno zcd), znewCap); true end))))
    end
  | ZCSetBoundsExact (zcd, zcb, zrt) ->
    begin
      zcheckCP2usable ();
      let zcb_val = (zreadCapReg (zregbits_to_regno zcb)) in
      let zrt_val = (uint (zrX (zregbits_to_regno zrt))) in
      let zcursor = (zgetCapCursor zcb_val) in
      let zbase = (zgetCapBase zcb_val) in
      let ztop = (zgetCapTop zcb_val) in
      let znewTop = (add_int (zcursor, zrt_val)) in
      if (not (zcb_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcb)) else (if (zcb_val.zsealed) then (zraise_c2_exception (ZCapEx_SealViolation, zcb)) else (if (lt (zcursor, zbase)) then (zraise_c2_exception (ZCapEx_LengthViolation, zcb)) else (if (gt (znewTop, ztop)) then (zraise_c2_exception (ZCapEx_LengthViolation, zcb)) else (let (zexact, znewCap) = (zsetCapBounds (zcb_val, (zto_bits ((Big_int.of_int (64)), zcursor)), (zto_bits ((Big_int.of_int (65)), znewTop)))) in
      if (not zexact) then (zraise_c2_exception (ZCapEx_InexactBounds, zcb)) else (begin
        zwriteCapReg ((zregbits_to_regno zcd), znewCap);
        true
      end)))))
    end
  | ZCClearTag (zcd, zcb) ->
    begin
      zcheckCP2usable ();
      let zcb_val = (zreadCapReg (zregbits_to_regno zcb)) in
      begin
        zwriteCapReg ((zregbits_to_regno zcd), ({zcb_val with ztag = false}));
        true
      end
    end
  | ZCMove (zcd, zcb) ->
    begin
      zcheckCP2usable ();
      zwriteCapReg ((zregbits_to_regno zcd), (zreadCapReg (zregbits_to_regno zcb)));
      true
    end
  | ZClearRegs (zregset, zq, zm) ->
    begin
      let rec loop zi =
        if Big_int.less_equal zi (Big_int.of_int (7))
        then ((if (zbit_to_bool (access (zm, zi))) then (begin
          match zregset with
          | ZGPRegs ->
            zwX ((add_int ((mult ((Big_int.of_int (8)), (uint zq))), zi)), (zzzeros_implicit (Big_int.of_int (64))))
          | ZFPRegs -> ()
        end) else ()); loop (Big_int.add zi (Big_int.of_int (1))))
        else ()
      in
      loop Big_int.zero;
      true
    end
  | ZCFromPtr (zcd, zcb, zrt) ->
    begin
      zcheckCP2usable ();
      let zcb_val = (zreadCapRegDDC (zregbits_to_regno zcb)) in
      let zrt_val = (zrX (zregbits_to_regno zrt)) in
      if (eq_list (zrt_val, [B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0; B0])) then (begin
        zwriteCapReg ((zregbits_to_regno zcd), znull_cap);
        true
      end) else (if (not (zcb_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcb)) else (if (zcb_val.zsealed) then (zraise_c2_exception (ZCapEx_SealViolation, zcb)) else (let (zsuccess, znewCap) = (zsetCapOffset (zcb_val, zrt_val)) in
      begin
        if zsuccess then (zwriteCapReg ((zregbits_to_regno zcd), znewCap)) else (zwriteCapReg ((zregbits_to_regno zcd), (zint_to_cap (add_vec ((zto_bits ((Big_int.of_int (64)), (zgetCapBase zcb_val))), zrt_val)))));
        true
      end)))
    end
  | ZCBuildCap (zcd, zcb, zct) ->
    begin
      zcheckCP2usable ();
      let zcb_val = (zreadCapRegDDC (zregbits_to_regno zcb)) in
      let zct_val = (zreadCapReg (zregbits_to_regno zct)) in
      let zcb_base = (zgetCapBase zcb_val) in
      let zct_base = (zgetCapBase zct_val) in
      let zcb_top = (zgetCapTop zcb_val) in
      let zct_top = (zgetCapTop zct_val) in
      let zcb_perms = (zgetCapPerms zcb_val) in
      let zct_perms = (zgetCapPerms zct_val) in
      let zct_offset = (zgetCapOffset zct_val) in
      if (not (zcb_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcb)) else (if (zcb_val.zsealed) then (zraise_c2_exception (ZCapEx_SealViolation, zcb)) else (if (lt (zct_base, zcb_base)) then (zraise_c2_exception (ZCapEx_LengthViolation, zcb)) else (if (gt (zct_top, zcb_top)) then (zraise_c2_exception (ZCapEx_LengthViolation, zcb)) else (if (gt (zct_base, zct_top)) then (zraise_c2_exception (ZCapEx_LengthViolation, zct)) else (if (zneq_vec ((and_vec (zct_perms, zcb_perms)), zct_perms)) then (zraise_c2_exception (ZCapEx_UserDefViolation, zcb)) else (let (zexact, zcd1) = (zsetCapBounds (zcb_val, (zto_bits ((Big_int.of_int (64)), zct_base)), (zto_bits ((Big_int.of_int (65)), zct_top)))) in
      let (zrepresentable, zcd2) = (zsetCapOffset (zcd1, (zto_bits ((Big_int.of_int (64)), zct_offset)))) in
      let zcd3 = (zsetCapPerms (zcd2, zct_perms)) in
      begin
        assert zexact;
        assert zrepresentable;
        zwriteCapReg ((zregbits_to_regno zcd), zcd3);
        true
      end))))))
    end
  | ZCCopyType (zcd, zcb, zct) ->
    begin
      zcheckCP2usable ();
      let zcb_val = (zreadCapReg (zregbits_to_regno zcb)) in
      let zct_val = (zreadCapReg (zregbits_to_regno zct)) in
      let zcb_base = (zgetCapBase zcb_val) in
      let zcb_top = (zgetCapTop zcb_val) in
      let zct_otype = (uint (zct_val.zotype)) in
      if (not (zcb_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcb)) else (if (zcb_val.zsealed) then (zraise_c2_exception (ZCapEx_SealViolation, zcb)) else (if (zct_val.zsealed) then (if (lt (zct_otype, zcb_base)) then (zraise_c2_exception (ZCapEx_LengthViolation, zcb)) else (if (gteq (zct_otype, zcb_top)) then (zraise_c2_exception (ZCapEx_LengthViolation, zcb)) else (let (zsuccess, zcap) = (zsetCapOffset (zcb_val, (zto_bits ((Big_int.of_int (64)), (sub_int (zct_otype, zcb_base)))))) in
      begin
        assert zsuccess;
        zwriteCapReg ((zregbits_to_regno zcd), zcap);
        true
      end))) else (begin
        zwriteCapReg ((zregbits_to_regno zcd), (zint_to_cap [B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1; B1]));
        true
      end)))
    end
  | ZCCheckPerm (zcs, zrt) ->
    begin
      zcheckCP2usable ();
      let zcs_val = (zreadCapReg (zregbits_to_regno zcs)) in
      let zcs_perms = (zEXTZ ((Big_int.of_int (64)), (zgetCapPerms zcs_val))) in
      let zrt_perms = (zrX (zregbits_to_regno zrt)) in
      if (not (zcs_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcs)) else (if (zneq_vec ((and_vec (zcs_perms, zrt_perms)), zrt_perms)) then (zraise_c2_exception (ZCapEx_UserDefViolation, zcs)) else true)
    end
  | ZCCheckType (zcs, zcb) ->
    begin
      zcheckCP2usable ();
      let zcs_val = (zreadCapReg (zregbits_to_regno zcs)) in
      let zcb_val = (zreadCapReg (zregbits_to_regno zcb)) in
      if (not (zcs_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcs)) else (if (not (zcb_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcb)) else (if (not (zcs_val.zsealed)) then (zraise_c2_exception (ZCapEx_SealViolation, zcs)) else (if (not (zcb_val.zsealed)) then (zraise_c2_exception (ZCapEx_SealViolation, zcb)) else (if (zneq_vec ((zcs_val.zotype), (zcb_val.zotype))) then (zraise_c2_exception (ZCapEx_TypeViolation, zcs)) else true))))
    end
  | ZCCheckTag (zcs) ->
    begin
      zcheckCP2usable ();
      let zcs_val = (zreadCapReg (zregbits_to_regno zcs)) in
      if (not (zcs_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcs)) else true
    end
  | ZCTestSubset (zrd, zcb, zct) ->
    begin
      zcheckCP2usable ();
      let zcb_val = (zreadCapRegDDC (zregbits_to_regno zcb)) in
      let zct_val = (zreadCapReg (zregbits_to_regno zct)) in
      let zct_top = (zgetCapTop zct_val) in
      let zct_base = (zgetCapBase zct_val) in
      let zct_perms = (zgetCapPerms zct_val) in
      let zcb_top = (zgetCapTop zcb_val) in
      let zcb_base = (zgetCapBase zcb_val) in
      let zcb_perms = (zgetCapPerms zcb_val) in
      let zresult = (if (zneq_bool ((zcb_val.ztag), (zct_val.ztag))) then [B0] else (if (lt (zct_base, zcb_base)) then [B0] else (if (gt (zct_top, zcb_top)) then [B0] else (if (zneq_vec ((and_vec (zct_perms, zcb_perms)), zct_perms)) then [B0] else [B1])))) in
      begin
        zwX ((zregbits_to_regno zrd), (zEXTZ ((Big_int.of_int (64)), zresult)));
        true
      end
    end
  | ZCSeal (zcd, zcs, zct) ->
    begin
      zcheckCP2usable ();
      let zcs_val = (zreadCapReg (zregbits_to_regno zcs)) in
      let zct_val = (zreadCapReg (zregbits_to_regno zct)) in
      let zct_cursor = (zgetCapCursor zct_val) in
      let zct_top = (zgetCapTop zct_val) in
      let zct_base = (zgetCapBase zct_val) in
      if (not (zcs_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcs)) else (if (not (zct_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zct)) else (if (zcs_val.zsealed) then (zraise_c2_exception (ZCapEx_SealViolation, zcs)) else (if (zct_val.zsealed) then (zraise_c2_exception (ZCapEx_SealViolation, zct)) else (if (not (zct_val.zpermit_seal)) then (zraise_c2_exception (ZCapEx_PermitSealViolation, zct)) else (if (lt (zct_cursor, zct_base)) then (zraise_c2_exception (ZCapEx_LengthViolation, zct)) else (if (gteq (zct_cursor, zct_top)) then (zraise_c2_exception (ZCapEx_LengthViolation, zct)) else (if (gt (zct_cursor, zmax_otype)) then (zraise_c2_exception (ZCapEx_LengthViolation, zct)) else (let (zsuccess, znewCap) = (zsealCap (zcs_val, (zto_bits ((Big_int.of_int (24)), zct_cursor)))) in
      if (not zsuccess) then (zraise_c2_exception (ZCapEx_InexactBounds, zcs)) else (begin
        zwriteCapReg ((zregbits_to_regno zcd), znewCap);
        true
      end)))))))))
    end
  | ZCCSeal (zcd, zcs, zct) ->
    begin
      zcheckCP2usable ();
      let zcs_val = (zreadCapReg (zregbits_to_regno zcs)) in
      let zct_val = (zreadCapReg (zregbits_to_regno zct)) in
      let zct_cursor = (zgetCapCursor zct_val) in
      let zct_top = (zgetCapTop zct_val) in
      let zct_base = (zgetCapBase zct_val) in
      if (not (zcs_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcs)) else (if ((not (zct_val.ztag)) || (eq_int ((zgetCapCursor zct_val), zMAX_U64))) then (begin
        zwriteCapReg ((zregbits_to_regno zcd), zcs_val);
        true
      end) else (if (zcs_val.zsealed) then (zraise_c2_exception (ZCapEx_SealViolation, zcs)) else (if (zct_val.zsealed) then (zraise_c2_exception (ZCapEx_SealViolation, zct)) else (if (not (zct_val.zpermit_seal)) then (zraise_c2_exception (ZCapEx_PermitSealViolation, zct)) else (if (lt (zct_cursor, zct_base)) then (zraise_c2_exception (ZCapEx_LengthViolation, zct)) else (if (gteq (zct_cursor, zct_top)) then (zraise_c2_exception (ZCapEx_LengthViolation, zct)) else (if (gt (zct_cursor, zmax_otype)) then (zraise_c2_exception (ZCapEx_LengthViolation, zct)) else (let (zsuccess, znewCap) = (zsealCap (zcs_val, (zto_bits ((Big_int.of_int (24)), zct_cursor)))) in
      if (not zsuccess) then (zraise_c2_exception (ZCapEx_InexactBounds, zcs)) else (begin
        zwriteCapReg ((zregbits_to_regno zcd), znewCap);
        true
      end)))))))))
    end
  | ZCUnseal (zcd, zcs, zct) ->
    begin
      zcheckCP2usable ();
      let zcs_val = (zreadCapReg (zregbits_to_regno zcs)) in
      let zct_val = (zreadCapReg (zregbits_to_regno zct)) in
      let zct_cursor = (zgetCapCursor zct_val) in
      if (not (zcs_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcs)) else (if (not (zct_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zct)) else (if (not (zcs_val.zsealed)) then (zraise_c2_exception (ZCapEx_SealViolation, zcs)) else (if (zct_val.zsealed) then (zraise_c2_exception (ZCapEx_SealViolation, zct)) else (if (zneq_int (zct_cursor, (uint (zcs_val.zotype)))) then (zraise_c2_exception (ZCapEx_TypeViolation, zct)) else (if (not (zct_val.zpermit_unseal)) then (zraise_c2_exception (ZCapEx_PermitUnsealViolation, zct)) else (if (lt (zct_cursor, (zgetCapBase zct_val))) then (zraise_c2_exception (ZCapEx_LengthViolation, zct)) else (if (gteq (zct_cursor, (zgetCapTop zct_val))) then (zraise_c2_exception (ZCapEx_LengthViolation, zct)) else (begin
        zwriteCapReg ((zregbits_to_regno zcd), ({(zunsealCap zcs_val) with zglobal = (zcs_val.zglobal) && (zct_val.zglobal)}));
        true
      end))))))))
    end
  | ZCCall (zcs, zcb, zb__0) when (eq_int ((zregbits_to_regno zb__0), (zregbits_to_regno [B0; B0; B0; B0; B0]))) ->
    begin
      zcheckCP2usable ();
      let zcs_val = (zreadCapReg (zregbits_to_regno zcs)) in
      let zcb_val = (zreadCapReg (zregbits_to_regno zcb)) in
      let zcs_cursor = (zgetCapCursor zcs_val) in
      if (not (zcs_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcs)) else (if (not (zcb_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcb)) else (if (not (zcs_val.zsealed)) then (zraise_c2_exception (ZCapEx_SealViolation, zcs)) else (if (not (zcb_val.zsealed)) then (zraise_c2_exception (ZCapEx_SealViolation, zcb)) else (if (zneq_vec ((zcs_val.zotype), (zcb_val.zotype))) then (zraise_c2_exception (ZCapEx_TypeViolation, zcs)) else (if (not (zcs_val.zpermit_execute)) then (zraise_c2_exception (ZCapEx_PermitExecuteViolation, zcs)) else (if (zcb_val.zpermit_execute) then (zraise_c2_exception (ZCapEx_PermitExecuteViolation, zcb)) else (if (lt (zcs_cursor, (zgetCapBase zcs_val))) then (zraise_c2_exception (ZCapEx_LengthViolation, zcs)) else (if (gteq (zcs_cursor, (zgetCapTop zcs_val))) then (zraise_c2_exception (ZCapEx_LengthViolation, zcs)) else (zraise_c2_exception (ZCapEx_CallTrap, zcs))))))))))
    end
  | ZCCall (zcs, zcb, zb__1) when (eq_int ((zregbits_to_regno zb__1), (zregbits_to_regno [B0; B0; B0; B0; B1]))) ->
    begin
      zcheckCP2usable ();
      let zcs_val = (zreadCapReg (zregbits_to_regno zcs)) in
      let zcb_val = (zreadCapReg (zregbits_to_regno zcb)) in
      let zcs_cursor = (zgetCapCursor zcs_val) in
      if (not (zcs_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcs)) else (if (not (zcb_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcb)) else (if (not (zcs_val.zsealed)) then (zraise_c2_exception (ZCapEx_SealViolation, zcs)) else (if (not (zcb_val.zsealed)) then (zraise_c2_exception (ZCapEx_SealViolation, zcb)) else (if (zneq_vec ((zcs_val.zotype), (zcb_val.zotype))) then (zraise_c2_exception (ZCapEx_TypeViolation, zcs)) else (if (not (zcs_val.zpermit_ccall)) then (zraise_c2_exception (ZCapEx_PermitCCallViolation, zcs)) else (if (not (zcb_val.zpermit_ccall)) then (zraise_c2_exception (ZCapEx_PermitCCallViolation, zcb)) else (if (not (zcs_val.zpermit_execute)) then (zraise_c2_exception (ZCapEx_PermitExecuteViolation, zcs)) else (if (zcb_val.zpermit_execute) then (zraise_c2_exception (ZCapEx_PermitExecuteViolation, zcb)) else (if (lt (zcs_cursor, (zgetCapBase zcs_val))) then (zraise_c2_exception (ZCapEx_LengthViolation, zcs)) else (if (gteq (zcs_cursor, (zgetCapTop zcs_val))) then (zraise_c2_exception (ZCapEx_LengthViolation, zcs)) else (let zC26 = ref ((zunsealCap zcb_val) : zCapability) in
      begin
        znextPC := (zto_bits ((Big_int.of_int (64)), (zgetCapOffset zcs_val)));
        znextPCC := (zunsealCap zcs_val);
        true
      end)))))))))))
    end
  | ZCCall (_, _, zb__2) when (eq_int ((zregbits_to_regno zb__2), (zregbits_to_regno [B1; B1; B1; B1; B1]))) ->
    begin
      zcheckCP2usable ();
      zraise_c2_exception (ZCapEx_ReturnTrap, [B1; B1; B1; B1; B1])
    end
  | ZCJALR (zcd, zcb) ->
    begin
      zcheckCP2usable ();
      let zcb_val = (zreadCapReg (zregbits_to_regno zcb)) in
      let zcb_ptr = (zgetCapCursor zcb_val) in
      let zcb_top = (zgetCapTop zcb_val) in
      let zcb_base = (zgetCapBase zcb_val) in
      if (not (zcb_val.ztag)) then (zraise_c2_exception (ZCapEx_TagViolation, zcb)) else (if (zcb_val.zsealed) then (zraise_c2_exception (ZCapEx_SealViolation, zcb)) else (if (not (zcb_val.zpermit_execute)) then (zraise_c2_exception (ZCapEx_PermitExecuteViolation, zcb)) else (if (lt (zcb_ptr, zcb_base)) then (zraise_c2_exception (ZCapEx_LengthViolation, zcb)) else (if (gt ((add_int (zcb_ptr, (Big_int.of_int (4)))), zcb_top)) then (zraise_c2_exception (ZCapEx_LengthViolation, zcb)) else (if (zneq_int ((modulus (zcb_ptr, (Big_int.of_int (4)))), Big_int.zero)) then (begin
        zhandle_mem_exception ((zto_bits (zxlen, zcb_ptr)), ZE_Fetch_Addr_Align);
        false
      end) else (let (zsuccess, zlinkCap) = (zsetCapOffset (!zPCC, (add_vec_int (!zPC, (Big_int.of_int (8)))))) in
      begin
        assert zsuccess;
        zwriteCapReg ((zregbits_to_regno zcd), zlinkCap);
        zexecute_branch_pcc zcb_val;
        true
      end))))))
    end
  | ZCLoadDDC (zrd, zrs, zis_unsigned, zwidth) ->
    begin
      zcheckCP2usable ();
      let zddc_val = !zDDC in
      let zvaddr = (modulus ((add_int ((zgetCapBase zddc_val), (uint (zrX (zregbits_to_regno zrs))))), (pow2 zxlen))) in
      zhandle_load_data_via_cap (zrd, [B1; B0; B0; B0; B0; B1], zddc_val, zvaddr, zis_unsigned, zwidth)
    end
  | ZCLoadCap (zrd, zcs, zis_unsigned, zwidth) ->
    begin
      zcheckCP2usable ();
      let zcap_val = (zreadCapReg (zregbits_to_regno zcs)) in
      let zvaddr = (zgetCapCursor zcap_val) in
      zhandle_load_data_via_cap (zrd, (append ([B0], zcs)), zcap_val, zvaddr, zis_unsigned, zwidth)
    end
  | ZCLoadCapDDC (zrd, zrs) ->
    begin
      zcheckCP2usable ();
      let zddc_val = !zDDC in
      let zvaddr = (modulus ((add_int ((zgetCapBase zddc_val), (uint (zrX (zregbits_to_regno zrs))))), (pow2 zxlen))) in
      zhandle_load_cap_via_cap (zrd, [B1; B0; B0; B0; B0; B1], zddc_val, zvaddr)
    end
  | ZCLoadCapCap (zrd, zcs) ->
    begin
      zcheckCP2usable ();
      let zcap_val = (zreadCapReg (zregbits_to_regno zcs)) in
      let zvaddr = (zgetCapCursor zcap_val) in
      zhandle_load_cap_via_cap (zrd, (append ([B0], zcs)), zcap_val, zvaddr)
    end
  | ZCStoreDDC (zrd, zrs, zwidth) ->
    begin
      zcheckCP2usable ();
      let zddc_val = !zDDC in
      let zvaddr = (modulus ((add_int ((zgetCapBase zddc_val), (uint (zrX (zregbits_to_regno zrs))))), (pow2 zxlen))) in
      zhandle_store_data_via_cap (zrd, [B0; B0; B0; B0; B0], zddc_val, zvaddr, zwidth)
    end
  | ZCStoreCap (zrs, zcs, zwidth) ->
    begin
      zcheckCP2usable ();
      let zcap_val = (zreadCapReg (zregbits_to_regno zcs)) in
      let zvaddr = (zgetCapCursor zcap_val) in
      zhandle_store_data_via_cap (zrs, zcs, zcap_val, zvaddr, zwidth)
    end
  | ZCStoreCapDDC (zrd, zrs) ->
    begin
      zcheckCP2usable ();
      let zddc_val = !zDDC in
      let zvaddr = (modulus ((add_int ((zgetCapBase zddc_val), (uint (zrX (zregbits_to_regno zrs))))), (pow2 zxlen))) in
      zhandle_store_cap_via_cap (zrd, [B0; B0; B0; B0; B0], zddc_val, zvaddr)
    end
  | ZCStoreCapCap (zrs, zcs) ->
    begin
      zcheckCP2usable ();
      let zcap_val = (zreadCapReg (zregbits_to_regno zcs)) in
      let zvaddr = (zgetCapCursor zcap_val) in
      zhandle_store_cap_via_cap (zrs, zcs, zcap_val, zvaddr)
    end
  | ZRISCV_JALR (zimm, zrs1, zrd) ->
    let znewPC = (append ((subrange ((add_vec ((zrX (zregbits_to_regno zrs1)), (zEXTS ((Big_int.of_int (64)), zimm)))), (Big_int.of_int (63)), (Big_int.of_int (1)))), [B0])) in
    if ((zbit_to_bool (access (znewPC, (Big_int.of_int (1))))) && (not (zhaveRVC ()))) then (begin
      zhandle_mem_exception (znewPC, ZE_Fetch_Addr_Align);
      false
    end) else (begin
      zwX ((zregbits_to_regno zrd), !znextPC);
      znextPC := znewPC;
      true
    end)
  | ZILLEGAL (zs) -> begin zhandle_illegal (); false end
  | ZC_ILLEGAL (zs) -> begin zhandle_illegal (); false end)

and zassembly_forwards (zargz3 : (zast)) : string = sail_call (fun r ->
  begin
    match zargz3 with
    | ZUTYPE (zimm, zrd, zop) ->
      string_append ((zutype_mnemonic_forwards zop), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zimm), "")))))))))
    | ZRISCV_JAL (zimm, zrd) ->
      string_append ("jal", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zimm), "")))))))))
    | ZRISCV_JALR (zimm, zrs1, zrd) ->
      string_append ("jalr", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zimm), "")))))))))))))
    | ZBTYPE (zimm, zrs2, zrs1, zop) ->
      string_append ((zbtype_mnemonic_forwards zop), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs2), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zimm), "")))))))))))))
    | ZITYPE (zimm, zrs1, zrd, zop) ->
      string_append ((zitype_mnemonic_forwards zop), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zimm), "")))))))))))))
    | ZSHIFTIOP (zshamt, zrs1, zrd, zop) ->
      string_append ((zshiftiop_mnemonic_forwards zop), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((decimal_string_of_bits zshamt), "")))))))))))
    | ZRTYPE (zrs2, zrs1, zrd, zop) ->
      string_append ((zrtype_mnemonic_forwards zop), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs2), "")))))))))))))
    | ZLOAD (zimm, zrs1, zrd, zis_unsigned, zsizze, zaq, zrl) ->
      string_append ("l", (string_append ((zsizze_mnemonic_forwards zsizze), (string_append ((zmaybe_u_forwards zis_unsigned), (string_append ((zmaybe_aq_forwards zaq), (string_append ((zmaybe_rl_forwards zrl), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zimm), "")))))))))))))))))))))
    | ZSTORE (zimm, zrs1, zrd, zsizze, zaq, zrl) ->
      string_append ("s", (string_append ((zsizze_mnemonic_forwards zsizze), (string_append ((zmaybe_aq_forwards zaq), (string_append ((zmaybe_rl_forwards zrl), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zimm), "")))))))))))))))))))
    | ZADDIW (zimm, zrs1, zrd) ->
      string_append ("addiw", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zimm), "")))))))))))))
    | ZSHIFTW (zshamt, zrs1, zrd, zop) ->
      string_append ((zshiftw_mnemonic_forwards zop), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zshamt), "")))))))))))))
    | ZRTYPEW (zrs2, zrs1, zrd, zop) ->
      string_append ((zrtypew_mnemonic_forwards zop), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs2), "")))))))))))))
    | ZSHIFTIWOP (zshamt, zrs1, zrd, zop) ->
      string_append ((zshiftiwop_mnemonic_forwards zop), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((decimal_string_of_bits zshamt), "")))))))))))
    | ZFENCE (zpred, zsucc) ->
      string_append ("fence", (string_append ((zspc_forwards ()), (string_append ((zfence_bits_forwards zpred), (string_append ((zsep_forwards ()), (string_append ((zfence_bits_forwards zsucc), "")))))))))
    | ZFENCE_TSO (zpred, zsucc) ->
      string_append ("fence.tso", (string_append ((zspc_forwards ()), (string_append ((zfence_bits_forwards zpred), (string_append ((zsep_forwards ()), (string_append ((zfence_bits_forwards zsucc), "")))))))))
    | ZFENCEI (()) -> "fence.i"
    | ZECALL (()) -> "ecall"
    | ZMRET (()) -> "mret"
    | ZSRET (()) -> "sret"
    | ZEBREAK (()) -> "ebreak"
    | ZWFI (()) -> "wfi"
    | ZSFENCE_VMA (zrs1, zrs2) ->
      string_append ("sfence.vma", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs2), "")))))))))
    | ZLOADRES (zaq, zrl, zrs1, zsizze, zrd) ->
      string_append ("lr.", (string_append ((zsizze_mnemonic_forwards zsizze), (string_append ((zmaybe_aq_forwards zaq), (string_append ((zmaybe_rl_forwards zrl), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), "")))))))))))))))
    | ZSTORECON (zaq, zrl, zrs2, zrs1, zsizze, zrd) ->
      string_append ("sc.", (string_append ((zsizze_mnemonic_forwards zsizze), (string_append ((zmaybe_aq_forwards zaq), (string_append ((zmaybe_rl_forwards zrl), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs2), "")))))))))))))))))))
    | ZAMO (zop, zaq, zrl, zrs2, zrs1, zwidth, zrd) ->
      string_append ((zamo_mnemonic_forwards zop), (string_append (".", (string_append ((zsizze_mnemonic_forwards zwidth), (string_append ((zmaybe_aq_forwards zaq), (string_append ((zmaybe_rl_forwards zrl), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs2), "")))))))))))))))))))))
    | ZC_NOP (()) -> "c.nop"
    | ZC_ADDI4SPN (zrdc, znzzimm) when (zneq_vec (znzzimm, [B0; B0; B0; B0; B0; B0; B0; B0])) ->
      string_append ("c.addi4spn", (string_append ((zspc_forwards ()), (string_append ((zcreg_name_forwards zrdc), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits (append ((znzzimm), [B0; B0]))), "")))))))))
    | ZC_LW (zuimm, zrsc, zrdc) ->
      string_append ("c.lw", (string_append ((zspc_forwards ()), (string_append ((zcreg_name_forwards zrdc), (string_append ((zsep_forwards ()), (string_append ((zcreg_name_forwards zrsc), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits (append ((zuimm), [B0; B0]))), "")))))))))))))
    | ZC_LD (zuimm, zrsc, zrdc) ->
      string_append ("c.ld", (string_append ((zspc_forwards ()), (string_append ((zcreg_name_forwards zrdc), (string_append ((zsep_forwards ()), (string_append ((zcreg_name_forwards zrsc), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits (append ((zuimm), [B0; B0; B0]))), "")))))))))))))
    | ZC_SW (zuimm, zrsc1, zrsc2) ->
      string_append ("c.sw", (string_append ((zspc_forwards ()), (string_append ((zcreg_name_forwards zrsc1), (string_append ((zsep_forwards ()), (string_append ((zcreg_name_forwards zrsc2), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits (append ((zuimm), [B0; B0]))), "")))))))))))))
    | ZC_SD (zuimm, zrsc1, zrsc2) ->
      string_append ("c.sd", (string_append ((zspc_forwards ()), (string_append ((zcreg_name_forwards zrsc1), (string_append ((zsep_forwards ()), (string_append ((zcreg_name_forwards zrsc2), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits (append ((zuimm), [B0; B0; B0]))), "")))))))))))))
    | ZC_ADDI (znzzi, zrsd) when ((zneq_vec (znzzi, [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))) ->
      string_append ("c.addi", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrsd), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits znzzi), "")))))))))
    | ZC_JAL (zimm) ->
      string_append ("c.jal", (string_append ((zspc_forwards ()), (string_append ((decimal_string_of_bits (append ((zimm), [B0]))), "")))))
    | ZC_ADDIW (zimm, zrsd) ->
      string_append ("c.addiw", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrsd), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zimm), "")))))))))
    | ZC_LI (zimm, zrd) when (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) ->
      string_append ("c.li", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zimm), "")))))))))
    | ZC_ADDI16SP (zimm) when (zneq_vec (zimm, [B0; B0; B0; B0; B0; B0])) ->
      string_append ("c.addi16sp", (string_append ((zspc_forwards ()), (string_append ((decimal_string_of_bits zimm), "")))))
    | ZC_LUI (zimm, zrd) when ((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && ((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zsp))) && (zneq_vec (zimm, [B0; B0; B0; B0; B0; B0])))) ->
      string_append ("c.lui", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zimm), "")))))))))
    | ZC_SRLI (zshamt, zrsd) when (zneq_vec (zshamt, [B0; B0; B0; B0; B0; B0])) ->
      string_append ("c.srli", (string_append ((zspc_forwards ()), (string_append ((zcreg_name_forwards zrsd), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zshamt), "")))))))))
    | ZC_SRAI (zshamt, zrsd) when (zneq_vec (zshamt, [B0; B0; B0; B0; B0; B0])) ->
      string_append ("c.srai", (string_append ((zspc_forwards ()), (string_append ((zcreg_name_forwards zrsd), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zshamt), "")))))))))
    | ZC_ANDI (zimm, zrsd) ->
      string_append ("c.andi", (string_append ((zspc_forwards ()), (string_append ((zcreg_name_forwards zrsd), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zimm), "")))))))))
    | ZC_SUB (zrsd, zrs2) ->
      string_append ("c.sub", (string_append ((zspc_forwards ()), (string_append ((zcreg_name_forwards zrsd), (string_append ((zsep_forwards ()), (string_append ((zcreg_name_forwards zrs2), "")))))))))
    | ZC_XOR (zrsd, zrs2) ->
      string_append ("c.xor", (string_append ((zspc_forwards ()), (string_append ((zcreg_name_forwards zrsd), (string_append ((zsep_forwards ()), (string_append ((zcreg_name_forwards zrs2), "")))))))))
    | ZC_OR (zrsd, zrs2) ->
      string_append ("c.or", (string_append ((zspc_forwards ()), (string_append ((zcreg_name_forwards zrsd), (string_append ((zsep_forwards ()), (string_append ((zcreg_name_forwards zrs2), "")))))))))
    | ZC_AND (zrsd, zrs2) ->
      string_append ("c.and", (string_append ((zspc_forwards ()), (string_append ((zcreg_name_forwards zrsd), (string_append ((zsep_forwards ()), (string_append ((zcreg_name_forwards zrs2), "")))))))))
    | ZC_SUBW (zrsd, zrs2) ->
      string_append ("c.subw", (string_append ((zspc_forwards ()), (string_append ((zcreg_name_forwards zrsd), (string_append ((zsep_forwards ()), (string_append ((zcreg_name_forwards zrs2), "")))))))))
    | ZC_ADDW (zrsd, zrs2) ->
      string_append ("c.addw", (string_append ((zspc_forwards ()), (string_append ((zcreg_name_forwards zrsd), (string_append ((zsep_forwards ()), (string_append ((zcreg_name_forwards zrs2), "")))))))))
    | ZC_J (zimm) ->
      string_append ("c.j", (string_append ((zspc_forwards ()), (string_append ((decimal_string_of_bits zimm), "")))))
    | ZC_BEQZ (zimm, zrs) ->
      string_append ("c.beqz", (string_append ((zspc_forwards ()), (string_append ((zcreg_name_forwards zrs), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zimm), "")))))))))
    | ZC_BNEZ (zimm, zrs) ->
      string_append ("c.bnez", (string_append ((zspc_forwards ()), (string_append ((zcreg_name_forwards zrs), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zimm), "")))))))))
    | ZC_SLLI (zshamt, zrsd) when ((zneq_vec (zshamt, [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))) ->
      string_append ("c.slli", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrsd), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zshamt), "")))))))))
    | ZC_LWSP (zuimm, zrd) when (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) ->
      string_append ("c.lwsp", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zuimm), "")))))))))
    | ZC_LDSP (zuimm, zrd) when (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) ->
      string_append ("c.ldsp", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zuimm), "")))))))))
    | ZC_SWSP (zuimm, zrd) ->
      string_append ("c.swsp", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zuimm), "")))))))))
    | ZC_SDSP (zuimm, zrs2) ->
      string_append ("c.sdsp", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrs2), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zuimm), "")))))))))
    | ZC_JR (zrs1) when (zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))) ->
      string_append ("c.jr", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrs1), "")))))
    | ZC_JALR (zrs1) when (zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))) ->
      string_append ("c.jalr", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrs1), "")))))
    | ZC_MV (zrd, zrs2) when ((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))) ->
      string_append ("c.mv", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs2), "")))))))))
    | ZC_EBREAK (()) -> "c.ebreak"
    | ZC_ADD (zrsd, zrs2) when ((zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))) ->
      string_append ("c.add", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrsd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs2), "")))))))))
    | ZMUL (zrs2, zrs1, zrd, zhigh, zsigned1, zsigned2) ->
      string_append ((zmul_mnemonic_forwards (zhigh, zsigned1, zsigned2)), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs2), "")))))))))))))
    | ZDIV (zrs2, zrs1, zrd, zs) ->
      string_append ("div", (string_append ((zmaybe_not_u_forwards zs), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs2), "")))))))))))))))
    | ZREM (zrs2, zrs1, zrd, zs) ->
      string_append ("rem", (string_append ((zmaybe_not_u_forwards zs), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs2), "")))))))))))))))
    | ZMULW (zrs2, zrs1, zrd) ->
      string_append ("mulw", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs2), "")))))))))))))
    | ZDIVW (zrs2, zrs1, zrd, zs) ->
      string_append ("div", (string_append ((zmaybe_not_u_forwards zs), (string_append ("w", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs2), "")))))))))))))))))
    | ZREMW (zrs2, zrs1, zrd, zs) ->
      string_append ("rem", (string_append ((zmaybe_not_u_forwards zs), (string_append ("w", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs2), "")))))))))))))))))
    | ZCSR (zcsr, zrs1, zrd, zp0z3, zop) when (eq_bool (zp0z3, true)) ->
      string_append ((zcsr_mnemonic_forwards zop), (string_append ("i", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zrs1), (string_append ((zsep_forwards ()), (string_append ((zcsr_name_map_forwards zcsr), "")))))))))))))))
    | ZCSR (zcsr, zrs1, zrd, zp0z3, zop) when (eq_bool (zp0z3, false)) ->
      string_append ((zcsr_mnemonic_forwards zop), (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs1), (string_append ((zsep_forwards ()), (string_append ((zcsr_name_map_forwards zcsr), "")))))))))))))
    | ZCGetPerm (zrd, zcb) ->
      string_append ("CGetPerm", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), "")))))))))
    | ZCGetType (zrd, zcb) ->
      string_append ("CGetType", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), "")))))))))
    | ZCGetBase (zrd, zcb) ->
      string_append ("CGetBase", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), "")))))))))
    | ZCGetLen (zrd, zcb) ->
      string_append ("CGetLen", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), "")))))))))
    | ZCGetTag (zrd, zcb) ->
      string_append ("CGetTag", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), "")))))))))
    | ZCGetSealed (zrd, zcb) ->
      string_append ("CGetSealed", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), "")))))))))
    | ZCGetOffset (zrd, zcb) ->
      string_append ("CGetOffset", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), "")))))))))
    | ZCGetAddr (zrd, zcb) ->
      string_append ("CGetAddr", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), "")))))))))
    | ZCMove (zcd, zcs) ->
      string_append ("CMove", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcs), "")))))))))
    | ZCClearTag (zcd, zcs) ->
      string_append ("CClearTag", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcs), "")))))))))
    | ZCJALR (zb__0, zcb) when (let zp0z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__0, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      string_append ("CJR", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcb), "")))))
    | ZCJALR (zcd, zcb) ->
      string_append ("CJALR", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), "")))))))))
    | ZCCheckPerm (zcs, zrt) ->
      string_append ("CCheckPerm", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcs), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrt), "")))))))))
    | ZCCheckType (zcs, zcb) ->
      string_append ("CCheckType", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcs), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), "")))))))))
    | ZClearRegs (ZGPRegs, zq, zm8) ->
      string_append ("Clearq", (string_append ((zspc_forwards ()), (string_append ((decimal_string_of_bits zq), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zm8), "")))))))))
    | ZClearRegs (ZFPRegs, zq, zm8) ->
      string_append ("FPClearq", (string_append ((zspc_forwards ()), (string_append ((decimal_string_of_bits zq), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zm8), "")))))))))
    | ZCSeal (zcd, zcs, zct) ->
      string_append ("CSeal", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcs), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zct), "")))))))))))))
    | ZCUnseal (zcd, zcs, zct) ->
      string_append ("CUnseal", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcs), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zct), "")))))))))))))
    | ZCAndPerm (zcd, zcs, zrt) ->
      string_append ("CAndPerm", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcs), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrt), "")))))))))))))
    | ZCSetOffset (zcd, zcs, zrt) ->
      string_append ("CSetOffset", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcs), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrt), "")))))))))))))
    | ZCIncOffset (zcd, zcs, zrt) ->
      string_append ("CIncOffset", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcs), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrt), "")))))))))))))
    | ZCSetBounds (zcd, zcs, zrt) ->
      string_append ("CSetBounds", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcs), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrt), "")))))))))))))
    | ZCSetBoundsExact (zcd, zcs, zrt) ->
      string_append ("CSetBoundsExact", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcs), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrt), "")))))))))))))
    | ZCBuildCap (zcd, zcb, zct) ->
      string_append ("CBuildCap", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zct), "")))))))))))))
    | ZCCopyType (zcd, zcb, zct) ->
      string_append ("CCopyType", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zct), "")))))))))))))
    | ZCCSeal (zcd, zcs, zct) ->
      string_append ("CCSeal", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcs), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zct), "")))))))))))))
    | ZCToPtr (zrd, zcb, zcs) ->
      string_append ("CToPtr", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcs), "")))))))))))))
    | ZCFromPtr (zcd, zcb, zrs) ->
      string_append ("CFromPtr", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs), "")))))))))))))
    | ZCCall (zcs, zcb, zb__1) when (let zp0z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__1, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      string_append ("CCall", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcs), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), "")))))))))
    | ZCCall (zcs, zcb, zb__2) when (let zp0z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__2, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      string_append ("CCallFast", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcs), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), "")))))))))
    | ZCCall (zcs, zcb, zb__3) when (let zp0z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__3, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      string_append ("CCallReturn", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcs), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), "")))))))))
    | ZCTestSubset (zrd, zcb, zct) ->
      string_append ("CTestSubset", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zct), "")))))))))))))
    | ZCSpecialRW (zcd, zcs, zidx) ->
      string_append ("CSpecialRW", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcs), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zidx), "")))))))))))))
    | ZCIncOffsetImmediate (zcd, zcb, zimm12) ->
      string_append ("CIncOffsetImmediate", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zimm12), "")))))))))))))
    | ZCSetBoundsImmediate (zcd, zcb, zimm12) ->
      string_append ("CSetBoundsImmediate", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zcd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcb), (string_append ((zsep_forwards ()), (string_append ((decimal_string_of_bits zimm12), "")))))))))))))
    | ZCLoadDDC (zrd, zrs, zu, zw) ->
      string_append ("l", (string_append ((zsizze_mnemonic_forwards zw), (string_append ((zmaybe_u_forwards zu), (string_append ("DDC", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs), "")))))))))))))))
    | ZCLoadCap (zrd, zcs, zu, zw) ->
      string_append ("l", (string_append ((zsizze_mnemonic_forwards zw), (string_append ((zmaybe_u_forwards zu), (string_append ("Cap", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zcs), "")))))))))))))))
    | ZCStoreDDC (zrd, zrs, zw) ->
      string_append ("s", (string_append ((zsizze_mnemonic_forwards zw), (string_append ("DDC", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs), "")))))))))))))
    | ZCStoreCap (zrd, zrs, zw) ->
      string_append ("s", (string_append ((zsizze_mnemonic_forwards zw), (string_append ("Cap", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs), "")))))))))))))
    | ZCStoreCapDDC (zrd, zrs) ->
      string_append ("lqDDC", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs), "")))))))))
    | ZCLoadCapDDC (zrd, zrs) ->
      string_append ("sqDDC", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs), "")))))))))
    | ZCStoreCapCap (zrd, zrs) ->
      string_append ("lqCap", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs), "")))))))))
    | ZCLoadCapCap (zrd, zrs) ->
      string_append ("sqCap", (string_append ((zspc_forwards ()), (string_append ((zreg_name_forwards zrd), (string_append ((zsep_forwards ()), (string_append ((zreg_name_forwards zrs), "")))))))))
    | ZILLEGAL (zs) ->
      string_append ("illegal", (string_append ((zspc_forwards ()), (string_append ((decimal_string_of_bits zs), "")))))
    | ZC_ILLEGAL (zs) ->
      string_append ("c.illegal", (string_append ((zspc_forwards ()), (string_append ((decimal_string_of_bits zs), "")))))
  end)

and z_s2253z3 (z_s2254z3 : (string)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match z_s2254z3 with
    | z_s2255z3 when (string_startswith (z_s2255z3, "c.illegal")) ->
      begin
        match (string_drop (z_s2255z3, (string_length "c.illegal"))) with
        | z_s2256z3 ->
          begin
            match (zspc_matches_prefix z_s2256z3) with
            | ZSome ((), z_s2257z3) ->
              begin
                match (string_drop (z_s2256z3, z_s2257z3)) with
                | z_s2258z3 ->
                  begin
                    match (hex_bits_16_matches_prefix z_s2258z3) with
                    | ZSome (zs, z_s2259z3) ->
                      begin
                        match (string_drop (z_s2258z3, z_s2259z3)) with
                        | "" -> ZSome zs
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2245z3 (z_s2246z3 : (string)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match z_s2246z3 with
    | z_s2247z3 when (string_startswith (z_s2247z3, "illegal")) ->
      begin
        match (string_drop (z_s2247z3, (string_length "illegal"))) with
        | z_s2248z3 ->
          begin
            match (zspc_matches_prefix z_s2248z3) with
            | ZSome ((), z_s2249z3) ->
              begin
                match (string_drop (z_s2248z3, z_s2249z3)) with
                | z_s2250z3 ->
                  begin
                    match (hex_bits_32_matches_prefix z_s2250z3) with
                    | ZSome (zs, z_s2251z3) ->
                      begin
                        match (string_drop (z_s2250z3, z_s2251z3)) with
                        | "" -> ZSome zs
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2233z3 (z_s2234z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2234z3 with
    | z_s2235z3 when (string_startswith (z_s2235z3, "sqCap")) ->
      begin
        match (string_drop (z_s2235z3, (string_length "sqCap"))) with
        | z_s2236z3 ->
          begin
            match (zspc_matches_prefix z_s2236z3) with
            | ZSome ((), z_s2237z3) ->
              begin
                match (string_drop (z_s2236z3, z_s2237z3)) with
                | z_s2238z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2238z3) with
                    | ZSome (zrd, z_s2239z3) ->
                      begin
                        match (string_drop (z_s2238z3, z_s2239z3)) with
                        | z_s2240z3 ->
                          begin
                            match (zsep_matches_prefix z_s2240z3) with
                            | ZSome ((), z_s2241z3) ->
                              begin
                                match (string_drop (z_s2240z3, z_s2241z3)) with
                                | z_s2242z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2242z3) with
                                    | ZSome (zrs, z_s2243z3) ->
                                      begin
                                        match (string_drop (z_s2242z3, z_s2243z3)) with
                                        | "" -> ZSome (zrd, zrs)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2221z3 (z_s2222z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2222z3 with
    | z_s2223z3 when (string_startswith (z_s2223z3, "lqCap")) ->
      begin
        match (string_drop (z_s2223z3, (string_length "lqCap"))) with
        | z_s2224z3 ->
          begin
            match (zspc_matches_prefix z_s2224z3) with
            | ZSome ((), z_s2225z3) ->
              begin
                match (string_drop (z_s2224z3, z_s2225z3)) with
                | z_s2226z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2226z3) with
                    | ZSome (zrd, z_s2227z3) ->
                      begin
                        match (string_drop (z_s2226z3, z_s2227z3)) with
                        | z_s2228z3 ->
                          begin
                            match (zsep_matches_prefix z_s2228z3) with
                            | ZSome ((), z_s2229z3) ->
                              begin
                                match (string_drop (z_s2228z3, z_s2229z3)) with
                                | z_s2230z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2230z3) with
                                    | ZSome (zrs, z_s2231z3) ->
                                      begin
                                        match (string_drop (z_s2230z3, z_s2231z3)) with
                                        | "" -> ZSome (zrd, zrs)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2209z3 (z_s2210z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2210z3 with
    | z_s2211z3 when (string_startswith (z_s2211z3, "sqDDC")) ->
      begin
        match (string_drop (z_s2211z3, (string_length "sqDDC"))) with
        | z_s2212z3 ->
          begin
            match (zspc_matches_prefix z_s2212z3) with
            | ZSome ((), z_s2213z3) ->
              begin
                match (string_drop (z_s2212z3, z_s2213z3)) with
                | z_s2214z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2214z3) with
                    | ZSome (zrd, z_s2215z3) ->
                      begin
                        match (string_drop (z_s2214z3, z_s2215z3)) with
                        | z_s2216z3 ->
                          begin
                            match (zsep_matches_prefix z_s2216z3) with
                            | ZSome ((), z_s2217z3) ->
                              begin
                                match (string_drop (z_s2216z3, z_s2217z3)) with
                                | z_s2218z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2218z3) with
                                    | ZSome (zrs, z_s2219z3) ->
                                      begin
                                        match (string_drop (z_s2218z3, z_s2219z3)) with
                                        | "" -> ZSome (zrd, zrs)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2197z3 (z_s2198z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2198z3 with
    | z_s2199z3 when (string_startswith (z_s2199z3, "lqDDC")) ->
      begin
        match (string_drop (z_s2199z3, (string_length "lqDDC"))) with
        | z_s2200z3 ->
          begin
            match (zspc_matches_prefix z_s2200z3) with
            | ZSome ((), z_s2201z3) ->
              begin
                match (string_drop (z_s2200z3, z_s2201z3)) with
                | z_s2202z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2202z3) with
                    | ZSome (zrd, z_s2203z3) ->
                      begin
                        match (string_drop (z_s2202z3, z_s2203z3)) with
                        | z_s2204z3 ->
                          begin
                            match (zsep_matches_prefix z_s2204z3) with
                            | ZSome ((), z_s2205z3) ->
                              begin
                                match (string_drop (z_s2204z3, z_s2205z3)) with
                                | z_s2206z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2206z3) with
                                    | ZSome (zrs, z_s2207z3) ->
                                      begin
                                        match (string_drop (z_s2206z3, z_s2207z3)) with
                                        | "" -> ZSome (zrd, zrs)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2182z3 (z_s2183z3 : (string)) : ((zword_width * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2183z3 with
    | z_s2184z3 when (string_startswith (z_s2184z3, "s")) ->
      begin
        match (string_drop (z_s2184z3, (string_length "s"))) with
        | z_s2185z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s2185z3) with
            | ZSome (zw, z_s2186z3) ->
              begin
                match (string_drop (z_s2185z3, z_s2186z3)) with
                | z_s2187z3 when (string_startswith (z_s2187z3, "Cap")) ->
                  begin
                    match (string_drop (z_s2187z3, (string_length "Cap"))) with
                    | z_s2188z3 ->
                      begin
                        match (zspc_matches_prefix z_s2188z3) with
                        | ZSome ((), z_s2189z3) ->
                          begin
                            match (string_drop (z_s2188z3, z_s2189z3)) with
                            | z_s2190z3 ->
                              begin
                                match (zreg_name_matches_prefix z_s2190z3) with
                                | ZSome (zrd, z_s2191z3) ->
                                  begin
                                    match (string_drop (z_s2190z3, z_s2191z3)) with
                                    | z_s2192z3 ->
                                      begin
                                        match (zsep_matches_prefix z_s2192z3) with
                                        | ZSome ((), z_s2193z3) ->
                                          begin
                                            match (string_drop (z_s2192z3, z_s2193z3)) with
                                            | z_s2194z3 ->
                                              begin
                                                match (zreg_name_matches_prefix z_s2194z3) with
                                                | ZSome (zrs, z_s2195z3) ->
                                                  begin
                                                    match (string_drop (z_s2194z3, z_s2195z3)) with
                                                    | "" -> ZSome (zw, zrd, zrs)
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2167z3 (z_s2168z3 : (string)) : ((zword_width * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2168z3 with
    | z_s2169z3 when (string_startswith (z_s2169z3, "s")) ->
      begin
        match (string_drop (z_s2169z3, (string_length "s"))) with
        | z_s2170z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s2170z3) with
            | ZSome (zw, z_s2171z3) ->
              begin
                match (string_drop (z_s2170z3, z_s2171z3)) with
                | z_s2172z3 when (string_startswith (z_s2172z3, "DDC")) ->
                  begin
                    match (string_drop (z_s2172z3, (string_length "DDC"))) with
                    | z_s2173z3 ->
                      begin
                        match (zspc_matches_prefix z_s2173z3) with
                        | ZSome ((), z_s2174z3) ->
                          begin
                            match (string_drop (z_s2173z3, z_s2174z3)) with
                            | z_s2175z3 ->
                              begin
                                match (zreg_name_matches_prefix z_s2175z3) with
                                | ZSome (zrd, z_s2176z3) ->
                                  begin
                                    match (string_drop (z_s2175z3, z_s2176z3)) with
                                    | z_s2177z3 ->
                                      begin
                                        match (zsep_matches_prefix z_s2177z3) with
                                        | ZSome ((), z_s2178z3) ->
                                          begin
                                            match (string_drop (z_s2177z3, z_s2178z3)) with
                                            | z_s2179z3 ->
                                              begin
                                                match (zreg_name_matches_prefix z_s2179z3) with
                                                | ZSome (zrs, z_s2180z3) ->
                                                  begin
                                                    match (string_drop (z_s2179z3, z_s2180z3)) with
                                                    | "" -> ZSome (zw, zrd, zrs)
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2150z3 (z_s2151z3 : (string)) : ((zword_width * bool * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2151z3 with
    | z_s2152z3 when (string_startswith (z_s2152z3, "l")) ->
      begin
        match (string_drop (z_s2152z3, (string_length "l"))) with
        | z_s2153z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s2153z3) with
            | ZSome (zw, z_s2154z3) ->
              begin
                match (string_drop (z_s2153z3, z_s2154z3)) with
                | z_s2155z3 ->
                  begin
                    match (zmaybe_u_matches_prefix z_s2155z3) with
                    | ZSome (zu, z_s2156z3) ->
                      begin
                        match (string_drop (z_s2155z3, z_s2156z3)) with
                        | z_s2157z3 when (string_startswith (z_s2157z3, "Cap")) ->
                          begin
                            match (string_drop (z_s2157z3, (string_length "Cap"))) with
                            | z_s2158z3 ->
                              begin
                                match (zspc_matches_prefix z_s2158z3) with
                                | ZSome ((), z_s2159z3) ->
                                  begin
                                    match (string_drop (z_s2158z3, z_s2159z3)) with
                                    | z_s2160z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s2160z3) with
                                        | ZSome (zrd, z_s2161z3) ->
                                          begin
                                            match (string_drop (z_s2160z3, z_s2161z3)) with
                                            | z_s2162z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s2162z3) with
                                                | ZSome ((), z_s2163z3) ->
                                                  begin
                                                    match (string_drop (z_s2162z3, z_s2163z3)) with
                                                    | z_s2164z3 ->
                                                      begin
                                                        match (zreg_name_matches_prefix z_s2164z3) with
                                                        | ZSome (zcs, z_s2165z3) ->
                                                          begin
                                                            match (string_drop (z_s2164z3, z_s2165z3)) with
                                                            | "" ->
                                                              ZSome (zw, zu, zrd, zcs)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2133z3 (z_s2134z3 : (string)) : ((zword_width * bool * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2134z3 with
    | z_s2135z3 when (string_startswith (z_s2135z3, "l")) ->
      begin
        match (string_drop (z_s2135z3, (string_length "l"))) with
        | z_s2136z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s2136z3) with
            | ZSome (zw, z_s2137z3) ->
              begin
                match (string_drop (z_s2136z3, z_s2137z3)) with
                | z_s2138z3 ->
                  begin
                    match (zmaybe_u_matches_prefix z_s2138z3) with
                    | ZSome (zu, z_s2139z3) ->
                      begin
                        match (string_drop (z_s2138z3, z_s2139z3)) with
                        | z_s2140z3 when (string_startswith (z_s2140z3, "DDC")) ->
                          begin
                            match (string_drop (z_s2140z3, (string_length "DDC"))) with
                            | z_s2141z3 ->
                              begin
                                match (zspc_matches_prefix z_s2141z3) with
                                | ZSome ((), z_s2142z3) ->
                                  begin
                                    match (string_drop (z_s2141z3, z_s2142z3)) with
                                    | z_s2143z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s2143z3) with
                                        | ZSome (zrd, z_s2144z3) ->
                                          begin
                                            match (string_drop (z_s2143z3, z_s2144z3)) with
                                            | z_s2145z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s2145z3) with
                                                | ZSome ((), z_s2146z3) ->
                                                  begin
                                                    match (string_drop (z_s2145z3, z_s2146z3)) with
                                                    | z_s2147z3 ->
                                                      begin
                                                        match (zreg_name_matches_prefix z_s2147z3) with
                                                        | ZSome (zrs, z_s2148z3) ->
                                                          begin
                                                            match (string_drop (z_s2147z3, z_s2148z3)) with
                                                            | "" ->
                                                              ZSome (zw, zu, zrd, zrs)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2117z3 (z_s2118z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2118z3 with
    | z_s2119z3 when (string_startswith (z_s2119z3, "CSetBoundsImmediate")) ->
      begin
        match (string_drop (z_s2119z3, (string_length "CSetBoundsImmediate"))) with
        | z_s2120z3 ->
          begin
            match (zspc_matches_prefix z_s2120z3) with
            | ZSome ((), z_s2121z3) ->
              begin
                match (string_drop (z_s2120z3, z_s2121z3)) with
                | z_s2122z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2122z3) with
                    | ZSome (zcd, z_s2123z3) ->
                      begin
                        match (string_drop (z_s2122z3, z_s2123z3)) with
                        | z_s2124z3 ->
                          begin
                            match (zsep_matches_prefix z_s2124z3) with
                            | ZSome ((), z_s2125z3) ->
                              begin
                                match (string_drop (z_s2124z3, z_s2125z3)) with
                                | z_s2126z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2126z3) with
                                    | ZSome (zcb, z_s2127z3) ->
                                      begin
                                        match (string_drop (z_s2126z3, z_s2127z3)) with
                                        | z_s2128z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s2128z3) with
                                            | ZSome ((), z_s2129z3) ->
                                              begin
                                                match (string_drop (z_s2128z3, z_s2129z3)) with
                                                | z_s2130z3 ->
                                                  begin
                                                    match (hex_bits_12_matches_prefix z_s2130z3) with
                                                    | ZSome (zimm12, z_s2131z3) ->
                                                      begin
                                                        match (string_drop (z_s2130z3, z_s2131z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcb, zimm12)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2101z3 (z_s2102z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2102z3 with
    | z_s2103z3 when (string_startswith (z_s2103z3, "CIncOffsetImmediate")) ->
      begin
        match (string_drop (z_s2103z3, (string_length "CIncOffsetImmediate"))) with
        | z_s2104z3 ->
          begin
            match (zspc_matches_prefix z_s2104z3) with
            | ZSome ((), z_s2105z3) ->
              begin
                match (string_drop (z_s2104z3, z_s2105z3)) with
                | z_s2106z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2106z3) with
                    | ZSome (zcd, z_s2107z3) ->
                      begin
                        match (string_drop (z_s2106z3, z_s2107z3)) with
                        | z_s2108z3 ->
                          begin
                            match (zsep_matches_prefix z_s2108z3) with
                            | ZSome ((), z_s2109z3) ->
                              begin
                                match (string_drop (z_s2108z3, z_s2109z3)) with
                                | z_s2110z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2110z3) with
                                    | ZSome (zcb, z_s2111z3) ->
                                      begin
                                        match (string_drop (z_s2110z3, z_s2111z3)) with
                                        | z_s2112z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s2112z3) with
                                            | ZSome ((), z_s2113z3) ->
                                              begin
                                                match (string_drop (z_s2112z3, z_s2113z3)) with
                                                | z_s2114z3 ->
                                                  begin
                                                    match (hex_bits_12_matches_prefix z_s2114z3) with
                                                    | ZSome (zimm12, z_s2115z3) ->
                                                      begin
                                                        match (string_drop (z_s2114z3, z_s2115z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcb, zimm12)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2085z3 (z_s2086z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2086z3 with
    | z_s2087z3 when (string_startswith (z_s2087z3, "CSpecialRW")) ->
      begin
        match (string_drop (z_s2087z3, (string_length "CSpecialRW"))) with
        | z_s2088z3 ->
          begin
            match (zspc_matches_prefix z_s2088z3) with
            | ZSome ((), z_s2089z3) ->
              begin
                match (string_drop (z_s2088z3, z_s2089z3)) with
                | z_s2090z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2090z3) with
                    | ZSome (zcd, z_s2091z3) ->
                      begin
                        match (string_drop (z_s2090z3, z_s2091z3)) with
                        | z_s2092z3 ->
                          begin
                            match (zsep_matches_prefix z_s2092z3) with
                            | ZSome ((), z_s2093z3) ->
                              begin
                                match (string_drop (z_s2092z3, z_s2093z3)) with
                                | z_s2094z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2094z3) with
                                    | ZSome (zcs, z_s2095z3) ->
                                      begin
                                        match (string_drop (z_s2094z3, z_s2095z3)) with
                                        | z_s2096z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s2096z3) with
                                            | ZSome ((), z_s2097z3) ->
                                              begin
                                                match (string_drop (z_s2096z3, z_s2097z3)) with
                                                | z_s2098z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s2098z3) with
                                                    | ZSome (zidx, z_s2099z3) ->
                                                      begin
                                                        match (string_drop (z_s2098z3, z_s2099z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zidx)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2069z3 (z_s2070z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2070z3 with
    | z_s2071z3 when (string_startswith (z_s2071z3, "CTestSubset")) ->
      begin
        match (string_drop (z_s2071z3, (string_length "CTestSubset"))) with
        | z_s2072z3 ->
          begin
            match (zspc_matches_prefix z_s2072z3) with
            | ZSome ((), z_s2073z3) ->
              begin
                match (string_drop (z_s2072z3, z_s2073z3)) with
                | z_s2074z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2074z3) with
                    | ZSome (zrd, z_s2075z3) ->
                      begin
                        match (string_drop (z_s2074z3, z_s2075z3)) with
                        | z_s2076z3 ->
                          begin
                            match (zsep_matches_prefix z_s2076z3) with
                            | ZSome ((), z_s2077z3) ->
                              begin
                                match (string_drop (z_s2076z3, z_s2077z3)) with
                                | z_s2078z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2078z3) with
                                    | ZSome (zcb, z_s2079z3) ->
                                      begin
                                        match (string_drop (z_s2078z3, z_s2079z3)) with
                                        | z_s2080z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s2080z3) with
                                            | ZSome ((), z_s2081z3) ->
                                              begin
                                                match (string_drop (z_s2080z3, z_s2081z3)) with
                                                | z_s2082z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s2082z3) with
                                                    | ZSome (zct, z_s2083z3) ->
                                                      begin
                                                        match (string_drop (z_s2082z3, z_s2083z3)) with
                                                        | "" ->
                                                          ZSome (zrd, zcb, zct)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2057z3 (z_s2058z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2058z3 with
    | z_s2059z3 when (string_startswith (z_s2059z3, "CCallReturn")) ->
      begin
        match (string_drop (z_s2059z3, (string_length "CCallReturn"))) with
        | z_s2060z3 ->
          begin
            match (zspc_matches_prefix z_s2060z3) with
            | ZSome ((), z_s2061z3) ->
              begin
                match (string_drop (z_s2060z3, z_s2061z3)) with
                | z_s2062z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2062z3) with
                    | ZSome (zcs, z_s2063z3) ->
                      begin
                        match (string_drop (z_s2062z3, z_s2063z3)) with
                        | z_s2064z3 ->
                          begin
                            match (zsep_matches_prefix z_s2064z3) with
                            | ZSome ((), z_s2065z3) ->
                              begin
                                match (string_drop (z_s2064z3, z_s2065z3)) with
                                | z_s2066z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2066z3) with
                                    | ZSome (zcb, z_s2067z3) ->
                                      begin
                                        match (string_drop (z_s2066z3, z_s2067z3)) with
                                        | "" -> ZSome (zcs, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2045z3 (z_s2046z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2046z3 with
    | z_s2047z3 when (string_startswith (z_s2047z3, "CCallFast")) ->
      begin
        match (string_drop (z_s2047z3, (string_length "CCallFast"))) with
        | z_s2048z3 ->
          begin
            match (zspc_matches_prefix z_s2048z3) with
            | ZSome ((), z_s2049z3) ->
              begin
                match (string_drop (z_s2048z3, z_s2049z3)) with
                | z_s2050z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2050z3) with
                    | ZSome (zcs, z_s2051z3) ->
                      begin
                        match (string_drop (z_s2050z3, z_s2051z3)) with
                        | z_s2052z3 ->
                          begin
                            match (zsep_matches_prefix z_s2052z3) with
                            | ZSome ((), z_s2053z3) ->
                              begin
                                match (string_drop (z_s2052z3, z_s2053z3)) with
                                | z_s2054z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2054z3) with
                                    | ZSome (zcb, z_s2055z3) ->
                                      begin
                                        match (string_drop (z_s2054z3, z_s2055z3)) with
                                        | "" -> ZSome (zcs, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2033z3 (z_s2034z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2034z3 with
    | z_s2035z3 when (string_startswith (z_s2035z3, "CCall")) ->
      begin
        match (string_drop (z_s2035z3, (string_length "CCall"))) with
        | z_s2036z3 ->
          begin
            match (zspc_matches_prefix z_s2036z3) with
            | ZSome ((), z_s2037z3) ->
              begin
                match (string_drop (z_s2036z3, z_s2037z3)) with
                | z_s2038z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2038z3) with
                    | ZSome (zcs, z_s2039z3) ->
                      begin
                        match (string_drop (z_s2038z3, z_s2039z3)) with
                        | z_s2040z3 ->
                          begin
                            match (zsep_matches_prefix z_s2040z3) with
                            | ZSome ((), z_s2041z3) ->
                              begin
                                match (string_drop (z_s2040z3, z_s2041z3)) with
                                | z_s2042z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2042z3) with
                                    | ZSome (zcb, z_s2043z3) ->
                                      begin
                                        match (string_drop (z_s2042z3, z_s2043z3)) with
                                        | "" -> ZSome (zcs, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2017z3 (z_s2018z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2018z3 with
    | z_s2019z3 when (string_startswith (z_s2019z3, "CFromPtr")) ->
      begin
        match (string_drop (z_s2019z3, (string_length "CFromPtr"))) with
        | z_s2020z3 ->
          begin
            match (zspc_matches_prefix z_s2020z3) with
            | ZSome ((), z_s2021z3) ->
              begin
                match (string_drop (z_s2020z3, z_s2021z3)) with
                | z_s2022z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2022z3) with
                    | ZSome (zcd, z_s2023z3) ->
                      begin
                        match (string_drop (z_s2022z3, z_s2023z3)) with
                        | z_s2024z3 ->
                          begin
                            match (zsep_matches_prefix z_s2024z3) with
                            | ZSome ((), z_s2025z3) ->
                              begin
                                match (string_drop (z_s2024z3, z_s2025z3)) with
                                | z_s2026z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2026z3) with
                                    | ZSome (zcb, z_s2027z3) ->
                                      begin
                                        match (string_drop (z_s2026z3, z_s2027z3)) with
                                        | z_s2028z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s2028z3) with
                                            | ZSome ((), z_s2029z3) ->
                                              begin
                                                match (string_drop (z_s2028z3, z_s2029z3)) with
                                                | z_s2030z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s2030z3) with
                                                    | ZSome (zrs, z_s2031z3) ->
                                                      begin
                                                        match (string_drop (z_s2030z3, z_s2031z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcb, zrs)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2001z3 (z_s2002z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2002z3 with
    | z_s2003z3 when (string_startswith (z_s2003z3, "CToPtr")) ->
      begin
        match (string_drop (z_s2003z3, (string_length "CToPtr"))) with
        | z_s2004z3 ->
          begin
            match (zspc_matches_prefix z_s2004z3) with
            | ZSome ((), z_s2005z3) ->
              begin
                match (string_drop (z_s2004z3, z_s2005z3)) with
                | z_s2006z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2006z3) with
                    | ZSome (zrd, z_s2007z3) ->
                      begin
                        match (string_drop (z_s2006z3, z_s2007z3)) with
                        | z_s2008z3 ->
                          begin
                            match (zsep_matches_prefix z_s2008z3) with
                            | ZSome ((), z_s2009z3) ->
                              begin
                                match (string_drop (z_s2008z3, z_s2009z3)) with
                                | z_s2010z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2010z3) with
                                    | ZSome (zcb, z_s2011z3) ->
                                      begin
                                        match (string_drop (z_s2010z3, z_s2011z3)) with
                                        | z_s2012z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s2012z3) with
                                            | ZSome ((), z_s2013z3) ->
                                              begin
                                                match (string_drop (z_s2012z3, z_s2013z3)) with
                                                | z_s2014z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s2014z3) with
                                                    | ZSome (zcs, z_s2015z3) ->
                                                      begin
                                                        match (string_drop (z_s2014z3, z_s2015z3)) with
                                                        | "" ->
                                                          ZSome (zrd, zcb, zcs)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1985z3 (z_s1986z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1986z3 with
    | z_s1987z3 when (string_startswith (z_s1987z3, "CCSeal")) ->
      begin
        match (string_drop (z_s1987z3, (string_length "CCSeal"))) with
        | z_s1988z3 ->
          begin
            match (zspc_matches_prefix z_s1988z3) with
            | ZSome ((), z_s1989z3) ->
              begin
                match (string_drop (z_s1988z3, z_s1989z3)) with
                | z_s1990z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1990z3) with
                    | ZSome (zcd, z_s1991z3) ->
                      begin
                        match (string_drop (z_s1990z3, z_s1991z3)) with
                        | z_s1992z3 ->
                          begin
                            match (zsep_matches_prefix z_s1992z3) with
                            | ZSome ((), z_s1993z3) ->
                              begin
                                match (string_drop (z_s1992z3, z_s1993z3)) with
                                | z_s1994z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1994z3) with
                                    | ZSome (zcs, z_s1995z3) ->
                                      begin
                                        match (string_drop (z_s1994z3, z_s1995z3)) with
                                        | z_s1996z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s1996z3) with
                                            | ZSome ((), z_s1997z3) ->
                                              begin
                                                match (string_drop (z_s1996z3, z_s1997z3)) with
                                                | z_s1998z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s1998z3) with
                                                    | ZSome (zct, z_s1999z3) ->
                                                      begin
                                                        match (string_drop (z_s1998z3, z_s1999z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zct)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1969z3 (z_s1970z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1970z3 with
    | z_s1971z3 when (string_startswith (z_s1971z3, "CCopyType")) ->
      begin
        match (string_drop (z_s1971z3, (string_length "CCopyType"))) with
        | z_s1972z3 ->
          begin
            match (zspc_matches_prefix z_s1972z3) with
            | ZSome ((), z_s1973z3) ->
              begin
                match (string_drop (z_s1972z3, z_s1973z3)) with
                | z_s1974z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1974z3) with
                    | ZSome (zcd, z_s1975z3) ->
                      begin
                        match (string_drop (z_s1974z3, z_s1975z3)) with
                        | z_s1976z3 ->
                          begin
                            match (zsep_matches_prefix z_s1976z3) with
                            | ZSome ((), z_s1977z3) ->
                              begin
                                match (string_drop (z_s1976z3, z_s1977z3)) with
                                | z_s1978z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1978z3) with
                                    | ZSome (zcb, z_s1979z3) ->
                                      begin
                                        match (string_drop (z_s1978z3, z_s1979z3)) with
                                        | z_s1980z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s1980z3) with
                                            | ZSome ((), z_s1981z3) ->
                                              begin
                                                match (string_drop (z_s1980z3, z_s1981z3)) with
                                                | z_s1982z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s1982z3) with
                                                    | ZSome (zct, z_s1983z3) ->
                                                      begin
                                                        match (string_drop (z_s1982z3, z_s1983z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcb, zct)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1953z3 (z_s1954z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1954z3 with
    | z_s1955z3 when (string_startswith (z_s1955z3, "CBuildCap")) ->
      begin
        match (string_drop (z_s1955z3, (string_length "CBuildCap"))) with
        | z_s1956z3 ->
          begin
            match (zspc_matches_prefix z_s1956z3) with
            | ZSome ((), z_s1957z3) ->
              begin
                match (string_drop (z_s1956z3, z_s1957z3)) with
                | z_s1958z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1958z3) with
                    | ZSome (zcd, z_s1959z3) ->
                      begin
                        match (string_drop (z_s1958z3, z_s1959z3)) with
                        | z_s1960z3 ->
                          begin
                            match (zsep_matches_prefix z_s1960z3) with
                            | ZSome ((), z_s1961z3) ->
                              begin
                                match (string_drop (z_s1960z3, z_s1961z3)) with
                                | z_s1962z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1962z3) with
                                    | ZSome (zcb, z_s1963z3) ->
                                      begin
                                        match (string_drop (z_s1962z3, z_s1963z3)) with
                                        | z_s1964z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s1964z3) with
                                            | ZSome ((), z_s1965z3) ->
                                              begin
                                                match (string_drop (z_s1964z3, z_s1965z3)) with
                                                | z_s1966z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s1966z3) with
                                                    | ZSome (zct, z_s1967z3) ->
                                                      begin
                                                        match (string_drop (z_s1966z3, z_s1967z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcb, zct)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1937z3 (z_s1938z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1938z3 with
    | z_s1939z3 when (string_startswith (z_s1939z3, "CSetBoundsExact")) ->
      begin
        match (string_drop (z_s1939z3, (string_length "CSetBoundsExact"))) with
        | z_s1940z3 ->
          begin
            match (zspc_matches_prefix z_s1940z3) with
            | ZSome ((), z_s1941z3) ->
              begin
                match (string_drop (z_s1940z3, z_s1941z3)) with
                | z_s1942z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1942z3) with
                    | ZSome (zcd, z_s1943z3) ->
                      begin
                        match (string_drop (z_s1942z3, z_s1943z3)) with
                        | z_s1944z3 ->
                          begin
                            match (zsep_matches_prefix z_s1944z3) with
                            | ZSome ((), z_s1945z3) ->
                              begin
                                match (string_drop (z_s1944z3, z_s1945z3)) with
                                | z_s1946z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1946z3) with
                                    | ZSome (zcs, z_s1947z3) ->
                                      begin
                                        match (string_drop (z_s1946z3, z_s1947z3)) with
                                        | z_s1948z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s1948z3) with
                                            | ZSome ((), z_s1949z3) ->
                                              begin
                                                match (string_drop (z_s1948z3, z_s1949z3)) with
                                                | z_s1950z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s1950z3) with
                                                    | ZSome (zrt, z_s1951z3) ->
                                                      begin
                                                        match (string_drop (z_s1950z3, z_s1951z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zrt)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1921z3 (z_s1922z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1922z3 with
    | z_s1923z3 when (string_startswith (z_s1923z3, "CSetBounds")) ->
      begin
        match (string_drop (z_s1923z3, (string_length "CSetBounds"))) with
        | z_s1924z3 ->
          begin
            match (zspc_matches_prefix z_s1924z3) with
            | ZSome ((), z_s1925z3) ->
              begin
                match (string_drop (z_s1924z3, z_s1925z3)) with
                | z_s1926z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1926z3) with
                    | ZSome (zcd, z_s1927z3) ->
                      begin
                        match (string_drop (z_s1926z3, z_s1927z3)) with
                        | z_s1928z3 ->
                          begin
                            match (zsep_matches_prefix z_s1928z3) with
                            | ZSome ((), z_s1929z3) ->
                              begin
                                match (string_drop (z_s1928z3, z_s1929z3)) with
                                | z_s1930z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1930z3) with
                                    | ZSome (zcs, z_s1931z3) ->
                                      begin
                                        match (string_drop (z_s1930z3, z_s1931z3)) with
                                        | z_s1932z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s1932z3) with
                                            | ZSome ((), z_s1933z3) ->
                                              begin
                                                match (string_drop (z_s1932z3, z_s1933z3)) with
                                                | z_s1934z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s1934z3) with
                                                    | ZSome (zrt, z_s1935z3) ->
                                                      begin
                                                        match (string_drop (z_s1934z3, z_s1935z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zrt)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1905z3 (z_s1906z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1906z3 with
    | z_s1907z3 when (string_startswith (z_s1907z3, "CIncOffset")) ->
      begin
        match (string_drop (z_s1907z3, (string_length "CIncOffset"))) with
        | z_s1908z3 ->
          begin
            match (zspc_matches_prefix z_s1908z3) with
            | ZSome ((), z_s1909z3) ->
              begin
                match (string_drop (z_s1908z3, z_s1909z3)) with
                | z_s1910z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1910z3) with
                    | ZSome (zcd, z_s1911z3) ->
                      begin
                        match (string_drop (z_s1910z3, z_s1911z3)) with
                        | z_s1912z3 ->
                          begin
                            match (zsep_matches_prefix z_s1912z3) with
                            | ZSome ((), z_s1913z3) ->
                              begin
                                match (string_drop (z_s1912z3, z_s1913z3)) with
                                | z_s1914z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1914z3) with
                                    | ZSome (zcs, z_s1915z3) ->
                                      begin
                                        match (string_drop (z_s1914z3, z_s1915z3)) with
                                        | z_s1916z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s1916z3) with
                                            | ZSome ((), z_s1917z3) ->
                                              begin
                                                match (string_drop (z_s1916z3, z_s1917z3)) with
                                                | z_s1918z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s1918z3) with
                                                    | ZSome (zrt, z_s1919z3) ->
                                                      begin
                                                        match (string_drop (z_s1918z3, z_s1919z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zrt)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1889z3 (z_s1890z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1890z3 with
    | z_s1891z3 when (string_startswith (z_s1891z3, "CSetOffset")) ->
      begin
        match (string_drop (z_s1891z3, (string_length "CSetOffset"))) with
        | z_s1892z3 ->
          begin
            match (zspc_matches_prefix z_s1892z3) with
            | ZSome ((), z_s1893z3) ->
              begin
                match (string_drop (z_s1892z3, z_s1893z3)) with
                | z_s1894z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1894z3) with
                    | ZSome (zcd, z_s1895z3) ->
                      begin
                        match (string_drop (z_s1894z3, z_s1895z3)) with
                        | z_s1896z3 ->
                          begin
                            match (zsep_matches_prefix z_s1896z3) with
                            | ZSome ((), z_s1897z3) ->
                              begin
                                match (string_drop (z_s1896z3, z_s1897z3)) with
                                | z_s1898z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1898z3) with
                                    | ZSome (zcs, z_s1899z3) ->
                                      begin
                                        match (string_drop (z_s1898z3, z_s1899z3)) with
                                        | z_s1900z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s1900z3) with
                                            | ZSome ((), z_s1901z3) ->
                                              begin
                                                match (string_drop (z_s1900z3, z_s1901z3)) with
                                                | z_s1902z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s1902z3) with
                                                    | ZSome (zrt, z_s1903z3) ->
                                                      begin
                                                        match (string_drop (z_s1902z3, z_s1903z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zrt)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1873z3 (z_s1874z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1874z3 with
    | z_s1875z3 when (string_startswith (z_s1875z3, "CAndPerm")) ->
      begin
        match (string_drop (z_s1875z3, (string_length "CAndPerm"))) with
        | z_s1876z3 ->
          begin
            match (zspc_matches_prefix z_s1876z3) with
            | ZSome ((), z_s1877z3) ->
              begin
                match (string_drop (z_s1876z3, z_s1877z3)) with
                | z_s1878z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1878z3) with
                    | ZSome (zcd, z_s1879z3) ->
                      begin
                        match (string_drop (z_s1878z3, z_s1879z3)) with
                        | z_s1880z3 ->
                          begin
                            match (zsep_matches_prefix z_s1880z3) with
                            | ZSome ((), z_s1881z3) ->
                              begin
                                match (string_drop (z_s1880z3, z_s1881z3)) with
                                | z_s1882z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1882z3) with
                                    | ZSome (zcs, z_s1883z3) ->
                                      begin
                                        match (string_drop (z_s1882z3, z_s1883z3)) with
                                        | z_s1884z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s1884z3) with
                                            | ZSome ((), z_s1885z3) ->
                                              begin
                                                match (string_drop (z_s1884z3, z_s1885z3)) with
                                                | z_s1886z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s1886z3) with
                                                    | ZSome (zrt, z_s1887z3) ->
                                                      begin
                                                        match (string_drop (z_s1886z3, z_s1887z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zrt)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1857z3 (z_s1858z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1858z3 with
    | z_s1859z3 when (string_startswith (z_s1859z3, "CUnseal")) ->
      begin
        match (string_drop (z_s1859z3, (string_length "CUnseal"))) with
        | z_s1860z3 ->
          begin
            match (zspc_matches_prefix z_s1860z3) with
            | ZSome ((), z_s1861z3) ->
              begin
                match (string_drop (z_s1860z3, z_s1861z3)) with
                | z_s1862z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1862z3) with
                    | ZSome (zcd, z_s1863z3) ->
                      begin
                        match (string_drop (z_s1862z3, z_s1863z3)) with
                        | z_s1864z3 ->
                          begin
                            match (zsep_matches_prefix z_s1864z3) with
                            | ZSome ((), z_s1865z3) ->
                              begin
                                match (string_drop (z_s1864z3, z_s1865z3)) with
                                | z_s1866z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1866z3) with
                                    | ZSome (zcs, z_s1867z3) ->
                                      begin
                                        match (string_drop (z_s1866z3, z_s1867z3)) with
                                        | z_s1868z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s1868z3) with
                                            | ZSome ((), z_s1869z3) ->
                                              begin
                                                match (string_drop (z_s1868z3, z_s1869z3)) with
                                                | z_s1870z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s1870z3) with
                                                    | ZSome (zct, z_s1871z3) ->
                                                      begin
                                                        match (string_drop (z_s1870z3, z_s1871z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zct)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1841z3 (z_s1842z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1842z3 with
    | z_s1843z3 when (string_startswith (z_s1843z3, "CSeal")) ->
      begin
        match (string_drop (z_s1843z3, (string_length "CSeal"))) with
        | z_s1844z3 ->
          begin
            match (zspc_matches_prefix z_s1844z3) with
            | ZSome ((), z_s1845z3) ->
              begin
                match (string_drop (z_s1844z3, z_s1845z3)) with
                | z_s1846z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1846z3) with
                    | ZSome (zcd, z_s1847z3) ->
                      begin
                        match (string_drop (z_s1846z3, z_s1847z3)) with
                        | z_s1848z3 ->
                          begin
                            match (zsep_matches_prefix z_s1848z3) with
                            | ZSome ((), z_s1849z3) ->
                              begin
                                match (string_drop (z_s1848z3, z_s1849z3)) with
                                | z_s1850z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1850z3) with
                                    | ZSome (zcs, z_s1851z3) ->
                                      begin
                                        match (string_drop (z_s1850z3, z_s1851z3)) with
                                        | z_s1852z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s1852z3) with
                                            | ZSome ((), z_s1853z3) ->
                                              begin
                                                match (string_drop (z_s1852z3, z_s1853z3)) with
                                                | z_s1854z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s1854z3) with
                                                    | ZSome (zct, z_s1855z3) ->
                                                      begin
                                                        match (string_drop (z_s1854z3, z_s1855z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zct)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1829z3 (z_s1830z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1830z3 with
    | z_s1831z3 when (string_startswith (z_s1831z3, "FPClearq")) ->
      begin
        match (string_drop (z_s1831z3, (string_length "FPClearq"))) with
        | z_s1832z3 ->
          begin
            match (zspc_matches_prefix z_s1832z3) with
            | ZSome ((), z_s1833z3) ->
              begin
                match (string_drop (z_s1832z3, z_s1833z3)) with
                | z_s1834z3 ->
                  begin
                    match (hex_bits_2_matches_prefix z_s1834z3) with
                    | ZSome (zq, z_s1835z3) ->
                      begin
                        match (string_drop (z_s1834z3, z_s1835z3)) with
                        | z_s1836z3 ->
                          begin
                            match (zsep_matches_prefix z_s1836z3) with
                            | ZSome ((), z_s1837z3) ->
                              begin
                                match (string_drop (z_s1836z3, z_s1837z3)) with
                                | z_s1838z3 ->
                                  begin
                                    match (hex_bits_8_matches_prefix z_s1838z3) with
                                    | ZSome (zm8, z_s1839z3) ->
                                      begin
                                        match (string_drop (z_s1838z3, z_s1839z3)) with
                                        | "" -> ZSome (zq, zm8)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1817z3 (z_s1818z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1818z3 with
    | z_s1819z3 when (string_startswith (z_s1819z3, "Clearq")) ->
      begin
        match (string_drop (z_s1819z3, (string_length "Clearq"))) with
        | z_s1820z3 ->
          begin
            match (zspc_matches_prefix z_s1820z3) with
            | ZSome ((), z_s1821z3) ->
              begin
                match (string_drop (z_s1820z3, z_s1821z3)) with
                | z_s1822z3 ->
                  begin
                    match (hex_bits_2_matches_prefix z_s1822z3) with
                    | ZSome (zq, z_s1823z3) ->
                      begin
                        match (string_drop (z_s1822z3, z_s1823z3)) with
                        | z_s1824z3 ->
                          begin
                            match (zsep_matches_prefix z_s1824z3) with
                            | ZSome ((), z_s1825z3) ->
                              begin
                                match (string_drop (z_s1824z3, z_s1825z3)) with
                                | z_s1826z3 ->
                                  begin
                                    match (hex_bits_8_matches_prefix z_s1826z3) with
                                    | ZSome (zm8, z_s1827z3) ->
                                      begin
                                        match (string_drop (z_s1826z3, z_s1827z3)) with
                                        | "" -> ZSome (zq, zm8)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1805z3 (z_s1806z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1806z3 with
    | z_s1807z3 when (string_startswith (z_s1807z3, "CCheckType")) ->
      begin
        match (string_drop (z_s1807z3, (string_length "CCheckType"))) with
        | z_s1808z3 ->
          begin
            match (zspc_matches_prefix z_s1808z3) with
            | ZSome ((), z_s1809z3) ->
              begin
                match (string_drop (z_s1808z3, z_s1809z3)) with
                | z_s1810z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1810z3) with
                    | ZSome (zcs, z_s1811z3) ->
                      begin
                        match (string_drop (z_s1810z3, z_s1811z3)) with
                        | z_s1812z3 ->
                          begin
                            match (zsep_matches_prefix z_s1812z3) with
                            | ZSome ((), z_s1813z3) ->
                              begin
                                match (string_drop (z_s1812z3, z_s1813z3)) with
                                | z_s1814z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1814z3) with
                                    | ZSome (zcb, z_s1815z3) ->
                                      begin
                                        match (string_drop (z_s1814z3, z_s1815z3)) with
                                        | "" -> ZSome (zcs, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1793z3 (z_s1794z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1794z3 with
    | z_s1795z3 when (string_startswith (z_s1795z3, "CCheckPerm")) ->
      begin
        match (string_drop (z_s1795z3, (string_length "CCheckPerm"))) with
        | z_s1796z3 ->
          begin
            match (zspc_matches_prefix z_s1796z3) with
            | ZSome ((), z_s1797z3) ->
              begin
                match (string_drop (z_s1796z3, z_s1797z3)) with
                | z_s1798z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1798z3) with
                    | ZSome (zcs, z_s1799z3) ->
                      begin
                        match (string_drop (z_s1798z3, z_s1799z3)) with
                        | z_s1800z3 ->
                          begin
                            match (zsep_matches_prefix z_s1800z3) with
                            | ZSome ((), z_s1801z3) ->
                              begin
                                match (string_drop (z_s1800z3, z_s1801z3)) with
                                | z_s1802z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1802z3) with
                                    | ZSome (zrt, z_s1803z3) ->
                                      begin
                                        match (string_drop (z_s1802z3, z_s1803z3)) with
                                        | "" -> ZSome (zcs, zrt)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1781z3 (z_s1782z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1782z3 with
    | z_s1783z3 when (string_startswith (z_s1783z3, "CJALR")) ->
      begin
        match (string_drop (z_s1783z3, (string_length "CJALR"))) with
        | z_s1784z3 ->
          begin
            match (zspc_matches_prefix z_s1784z3) with
            | ZSome ((), z_s1785z3) ->
              begin
                match (string_drop (z_s1784z3, z_s1785z3)) with
                | z_s1786z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1786z3) with
                    | ZSome (zcd, z_s1787z3) ->
                      begin
                        match (string_drop (z_s1786z3, z_s1787z3)) with
                        | z_s1788z3 ->
                          begin
                            match (zsep_matches_prefix z_s1788z3) with
                            | ZSome ((), z_s1789z3) ->
                              begin
                                match (string_drop (z_s1788z3, z_s1789z3)) with
                                | z_s1790z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1790z3) with
                                    | ZSome (zcb, z_s1791z3) ->
                                      begin
                                        match (string_drop (z_s1790z3, z_s1791z3)) with
                                        | "" -> ZSome (zcd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1773z3 (z_s1774z3 : (string)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match z_s1774z3 with
    | z_s1775z3 when (string_startswith (z_s1775z3, "CJR")) ->
      begin
        match (string_drop (z_s1775z3, (string_length "CJR"))) with
        | z_s1776z3 ->
          begin
            match (zspc_matches_prefix z_s1776z3) with
            | ZSome ((), z_s1777z3) ->
              begin
                match (string_drop (z_s1776z3, z_s1777z3)) with
                | z_s1778z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1778z3) with
                    | ZSome (zcb, z_s1779z3) ->
                      begin
                        match (string_drop (z_s1778z3, z_s1779z3)) with
                        | "" -> ZSome zcb
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1761z3 (z_s1762z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1762z3 with
    | z_s1763z3 when (string_startswith (z_s1763z3, "CClearTag")) ->
      begin
        match (string_drop (z_s1763z3, (string_length "CClearTag"))) with
        | z_s1764z3 ->
          begin
            match (zspc_matches_prefix z_s1764z3) with
            | ZSome ((), z_s1765z3) ->
              begin
                match (string_drop (z_s1764z3, z_s1765z3)) with
                | z_s1766z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1766z3) with
                    | ZSome (zcd, z_s1767z3) ->
                      begin
                        match (string_drop (z_s1766z3, z_s1767z3)) with
                        | z_s1768z3 ->
                          begin
                            match (zsep_matches_prefix z_s1768z3) with
                            | ZSome ((), z_s1769z3) ->
                              begin
                                match (string_drop (z_s1768z3, z_s1769z3)) with
                                | z_s1770z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1770z3) with
                                    | ZSome (zcs, z_s1771z3) ->
                                      begin
                                        match (string_drop (z_s1770z3, z_s1771z3)) with
                                        | "" -> ZSome (zcd, zcs)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1749z3 (z_s1750z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1750z3 with
    | z_s1751z3 when (string_startswith (z_s1751z3, "CMove")) ->
      begin
        match (string_drop (z_s1751z3, (string_length "CMove"))) with
        | z_s1752z3 ->
          begin
            match (zspc_matches_prefix z_s1752z3) with
            | ZSome ((), z_s1753z3) ->
              begin
                match (string_drop (z_s1752z3, z_s1753z3)) with
                | z_s1754z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1754z3) with
                    | ZSome (zcd, z_s1755z3) ->
                      begin
                        match (string_drop (z_s1754z3, z_s1755z3)) with
                        | z_s1756z3 ->
                          begin
                            match (zsep_matches_prefix z_s1756z3) with
                            | ZSome ((), z_s1757z3) ->
                              begin
                                match (string_drop (z_s1756z3, z_s1757z3)) with
                                | z_s1758z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1758z3) with
                                    | ZSome (zcs, z_s1759z3) ->
                                      begin
                                        match (string_drop (z_s1758z3, z_s1759z3)) with
                                        | "" -> ZSome (zcd, zcs)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1737z3 (z_s1738z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1738z3 with
    | z_s1739z3 when (string_startswith (z_s1739z3, "CGetAddr")) ->
      begin
        match (string_drop (z_s1739z3, (string_length "CGetAddr"))) with
        | z_s1740z3 ->
          begin
            match (zspc_matches_prefix z_s1740z3) with
            | ZSome ((), z_s1741z3) ->
              begin
                match (string_drop (z_s1740z3, z_s1741z3)) with
                | z_s1742z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1742z3) with
                    | ZSome (zrd, z_s1743z3) ->
                      begin
                        match (string_drop (z_s1742z3, z_s1743z3)) with
                        | z_s1744z3 ->
                          begin
                            match (zsep_matches_prefix z_s1744z3) with
                            | ZSome ((), z_s1745z3) ->
                              begin
                                match (string_drop (z_s1744z3, z_s1745z3)) with
                                | z_s1746z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1746z3) with
                                    | ZSome (zcb, z_s1747z3) ->
                                      begin
                                        match (string_drop (z_s1746z3, z_s1747z3)) with
                                        | "" -> ZSome (zrd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1725z3 (z_s1726z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1726z3 with
    | z_s1727z3 when (string_startswith (z_s1727z3, "CGetOffset")) ->
      begin
        match (string_drop (z_s1727z3, (string_length "CGetOffset"))) with
        | z_s1728z3 ->
          begin
            match (zspc_matches_prefix z_s1728z3) with
            | ZSome ((), z_s1729z3) ->
              begin
                match (string_drop (z_s1728z3, z_s1729z3)) with
                | z_s1730z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1730z3) with
                    | ZSome (zrd, z_s1731z3) ->
                      begin
                        match (string_drop (z_s1730z3, z_s1731z3)) with
                        | z_s1732z3 ->
                          begin
                            match (zsep_matches_prefix z_s1732z3) with
                            | ZSome ((), z_s1733z3) ->
                              begin
                                match (string_drop (z_s1732z3, z_s1733z3)) with
                                | z_s1734z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1734z3) with
                                    | ZSome (zcb, z_s1735z3) ->
                                      begin
                                        match (string_drop (z_s1734z3, z_s1735z3)) with
                                        | "" -> ZSome (zrd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1713z3 (z_s1714z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1714z3 with
    | z_s1715z3 when (string_startswith (z_s1715z3, "CGetSealed")) ->
      begin
        match (string_drop (z_s1715z3, (string_length "CGetSealed"))) with
        | z_s1716z3 ->
          begin
            match (zspc_matches_prefix z_s1716z3) with
            | ZSome ((), z_s1717z3) ->
              begin
                match (string_drop (z_s1716z3, z_s1717z3)) with
                | z_s1718z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1718z3) with
                    | ZSome (zrd, z_s1719z3) ->
                      begin
                        match (string_drop (z_s1718z3, z_s1719z3)) with
                        | z_s1720z3 ->
                          begin
                            match (zsep_matches_prefix z_s1720z3) with
                            | ZSome ((), z_s1721z3) ->
                              begin
                                match (string_drop (z_s1720z3, z_s1721z3)) with
                                | z_s1722z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1722z3) with
                                    | ZSome (zcb, z_s1723z3) ->
                                      begin
                                        match (string_drop (z_s1722z3, z_s1723z3)) with
                                        | "" -> ZSome (zrd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1701z3 (z_s1702z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1702z3 with
    | z_s1703z3 when (string_startswith (z_s1703z3, "CGetTag")) ->
      begin
        match (string_drop (z_s1703z3, (string_length "CGetTag"))) with
        | z_s1704z3 ->
          begin
            match (zspc_matches_prefix z_s1704z3) with
            | ZSome ((), z_s1705z3) ->
              begin
                match (string_drop (z_s1704z3, z_s1705z3)) with
                | z_s1706z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1706z3) with
                    | ZSome (zrd, z_s1707z3) ->
                      begin
                        match (string_drop (z_s1706z3, z_s1707z3)) with
                        | z_s1708z3 ->
                          begin
                            match (zsep_matches_prefix z_s1708z3) with
                            | ZSome ((), z_s1709z3) ->
                              begin
                                match (string_drop (z_s1708z3, z_s1709z3)) with
                                | z_s1710z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1710z3) with
                                    | ZSome (zcb, z_s1711z3) ->
                                      begin
                                        match (string_drop (z_s1710z3, z_s1711z3)) with
                                        | "" -> ZSome (zrd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1689z3 (z_s1690z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1690z3 with
    | z_s1691z3 when (string_startswith (z_s1691z3, "CGetLen")) ->
      begin
        match (string_drop (z_s1691z3, (string_length "CGetLen"))) with
        | z_s1692z3 ->
          begin
            match (zspc_matches_prefix z_s1692z3) with
            | ZSome ((), z_s1693z3) ->
              begin
                match (string_drop (z_s1692z3, z_s1693z3)) with
                | z_s1694z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1694z3) with
                    | ZSome (zrd, z_s1695z3) ->
                      begin
                        match (string_drop (z_s1694z3, z_s1695z3)) with
                        | z_s1696z3 ->
                          begin
                            match (zsep_matches_prefix z_s1696z3) with
                            | ZSome ((), z_s1697z3) ->
                              begin
                                match (string_drop (z_s1696z3, z_s1697z3)) with
                                | z_s1698z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1698z3) with
                                    | ZSome (zcb, z_s1699z3) ->
                                      begin
                                        match (string_drop (z_s1698z3, z_s1699z3)) with
                                        | "" -> ZSome (zrd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1677z3 (z_s1678z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1678z3 with
    | z_s1679z3 when (string_startswith (z_s1679z3, "CGetBase")) ->
      begin
        match (string_drop (z_s1679z3, (string_length "CGetBase"))) with
        | z_s1680z3 ->
          begin
            match (zspc_matches_prefix z_s1680z3) with
            | ZSome ((), z_s1681z3) ->
              begin
                match (string_drop (z_s1680z3, z_s1681z3)) with
                | z_s1682z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1682z3) with
                    | ZSome (zrd, z_s1683z3) ->
                      begin
                        match (string_drop (z_s1682z3, z_s1683z3)) with
                        | z_s1684z3 ->
                          begin
                            match (zsep_matches_prefix z_s1684z3) with
                            | ZSome ((), z_s1685z3) ->
                              begin
                                match (string_drop (z_s1684z3, z_s1685z3)) with
                                | z_s1686z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1686z3) with
                                    | ZSome (zcb, z_s1687z3) ->
                                      begin
                                        match (string_drop (z_s1686z3, z_s1687z3)) with
                                        | "" -> ZSome (zrd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1665z3 (z_s1666z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1666z3 with
    | z_s1667z3 when (string_startswith (z_s1667z3, "CGetType")) ->
      begin
        match (string_drop (z_s1667z3, (string_length "CGetType"))) with
        | z_s1668z3 ->
          begin
            match (zspc_matches_prefix z_s1668z3) with
            | ZSome ((), z_s1669z3) ->
              begin
                match (string_drop (z_s1668z3, z_s1669z3)) with
                | z_s1670z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1670z3) with
                    | ZSome (zrd, z_s1671z3) ->
                      begin
                        match (string_drop (z_s1670z3, z_s1671z3)) with
                        | z_s1672z3 ->
                          begin
                            match (zsep_matches_prefix z_s1672z3) with
                            | ZSome ((), z_s1673z3) ->
                              begin
                                match (string_drop (z_s1672z3, z_s1673z3)) with
                                | z_s1674z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1674z3) with
                                    | ZSome (zcb, z_s1675z3) ->
                                      begin
                                        match (string_drop (z_s1674z3, z_s1675z3)) with
                                        | "" -> ZSome (zrd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1653z3 (z_s1654z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1654z3 with
    | z_s1655z3 when (string_startswith (z_s1655z3, "CGetPerm")) ->
      begin
        match (string_drop (z_s1655z3, (string_length "CGetPerm"))) with
        | z_s1656z3 ->
          begin
            match (zspc_matches_prefix z_s1656z3) with
            | ZSome ((), z_s1657z3) ->
              begin
                match (string_drop (z_s1656z3, z_s1657z3)) with
                | z_s1658z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1658z3) with
                    | ZSome (zrd, z_s1659z3) ->
                      begin
                        match (string_drop (z_s1658z3, z_s1659z3)) with
                        | z_s1660z3 ->
                          begin
                            match (zsep_matches_prefix z_s1660z3) with
                            | ZSome ((), z_s1661z3) ->
                              begin
                                match (string_drop (z_s1660z3, z_s1661z3)) with
                                | z_s1662z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1662z3) with
                                    | ZSome (zcb, z_s1663z3) ->
                                      begin
                                        match (string_drop (z_s1662z3, z_s1663z3)) with
                                        | "" -> ZSome (zrd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1636z3 (z_s1637z3 : (string)) : ((zcsrop * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1637z3 with
    | z_s1638z3 ->
      begin
        match (zcsr_mnemonic_matches_prefix z_s1638z3) with
        | ZSome (zop, z_s1639z3) ->
          begin
            match (string_drop (z_s1638z3, z_s1639z3)) with
            | z_s1640z3 ->
              begin
                match (zspc_matches_prefix z_s1640z3) with
                | ZSome ((), z_s1641z3) ->
                  begin
                    match (string_drop (z_s1640z3, z_s1641z3)) with
                    | z_s1642z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s1642z3) with
                        | ZSome (zrd, z_s1643z3) ->
                          begin
                            match (string_drop (z_s1642z3, z_s1643z3)) with
                            | z_s1644z3 ->
                              begin
                                match (zsep_matches_prefix z_s1644z3) with
                                | ZSome ((), z_s1645z3) ->
                                  begin
                                    match (string_drop (z_s1644z3, z_s1645z3)) with
                                    | z_s1646z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s1646z3) with
                                        | ZSome (zrs1, z_s1647z3) ->
                                          begin
                                            match (string_drop (z_s1646z3, z_s1647z3)) with
                                            | z_s1648z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s1648z3) with
                                                | ZSome ((), z_s1649z3) ->
                                                  begin
                                                    match (string_drop (z_s1648z3, z_s1649z3)) with
                                                    | z_s1650z3 ->
                                                      begin
                                                        match (zcsr_name_map_matches_prefix z_s1650z3) with
                                                        | ZSome (zcsr, z_s1651z3) ->
                                                          begin
                                                            match (string_drop (z_s1650z3, z_s1651z3)) with
                                                            | "" ->
                                                              ZSome (zop, zrd, zrs1, zcsr)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1618z3 (z_s1619z3 : (string)) : ((zcsrop * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1619z3 with
    | z_s1620z3 ->
      begin
        match (zcsr_mnemonic_matches_prefix z_s1620z3) with
        | ZSome (zop, z_s1621z3) ->
          begin
            match (string_drop (z_s1620z3, z_s1621z3)) with
            | z_s1622z3 when (string_startswith (z_s1622z3, "i")) ->
              begin
                match (string_drop (z_s1622z3, (string_length "i"))) with
                | z_s1623z3 ->
                  begin
                    match (zspc_matches_prefix z_s1623z3) with
                    | ZSome ((), z_s1624z3) ->
                      begin
                        match (string_drop (z_s1623z3, z_s1624z3)) with
                        | z_s1625z3 ->
                          begin
                            match (zreg_name_matches_prefix z_s1625z3) with
                            | ZSome (zrd, z_s1626z3) ->
                              begin
                                match (string_drop (z_s1625z3, z_s1626z3)) with
                                | z_s1627z3 ->
                                  begin
                                    match (zsep_matches_prefix z_s1627z3) with
                                    | ZSome ((), z_s1628z3) ->
                                      begin
                                        match (string_drop (z_s1627z3, z_s1628z3)) with
                                        | z_s1629z3 ->
                                          begin
                                            match (hex_bits_5_matches_prefix z_s1629z3) with
                                            | ZSome (zrs1, z_s1630z3) ->
                                              begin
                                                match (string_drop (z_s1629z3, z_s1630z3)) with
                                                | z_s1631z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s1631z3) with
                                                    | ZSome ((), z_s1632z3) ->
                                                      begin
                                                        match (string_drop (z_s1631z3, z_s1632z3)) with
                                                        | z_s1633z3 ->
                                                          begin
                                                            match (zcsr_name_map_matches_prefix z_s1633z3) with
                                                            | ZSome (zcsr, z_s1634z3) ->
                                                              begin
                                                                match (string_drop (z_s1633z3, z_s1634z3)) with
                                                                | "" ->
                                                                  ZSome (zop, zrd, zrs1, zcsr)
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1599z3 (z_s1600z3 : (string)) : ((bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1600z3 with
    | z_s1601z3 when (string_startswith (z_s1601z3, "rem")) ->
      begin
        match (string_drop (z_s1601z3, (string_length "rem"))) with
        | z_s1602z3 ->
          begin
            match (zmaybe_not_u_matches_prefix z_s1602z3) with
            | ZSome (zs, z_s1603z3) ->
              begin
                match (string_drop (z_s1602z3, z_s1603z3)) with
                | z_s1604z3 when (string_startswith (z_s1604z3, "w")) ->
                  begin
                    match (string_drop (z_s1604z3, (string_length "w"))) with
                    | z_s1605z3 ->
                      begin
                        match (zspc_matches_prefix z_s1605z3) with
                        | ZSome ((), z_s1606z3) ->
                          begin
                            match (string_drop (z_s1605z3, z_s1606z3)) with
                            | z_s1607z3 ->
                              begin
                                match (zreg_name_matches_prefix z_s1607z3) with
                                | ZSome (zrd, z_s1608z3) ->
                                  begin
                                    match (string_drop (z_s1607z3, z_s1608z3)) with
                                    | z_s1609z3 ->
                                      begin
                                        match (zsep_matches_prefix z_s1609z3) with
                                        | ZSome ((), z_s1610z3) ->
                                          begin
                                            match (string_drop (z_s1609z3, z_s1610z3)) with
                                            | z_s1611z3 ->
                                              begin
                                                match (zreg_name_matches_prefix z_s1611z3) with
                                                | ZSome (zrs1, z_s1612z3) ->
                                                  begin
                                                    match (string_drop (z_s1611z3, z_s1612z3)) with
                                                    | z_s1613z3 ->
                                                      begin
                                                        match (zsep_matches_prefix z_s1613z3) with
                                                        | ZSome ((), z_s1614z3) ->
                                                          begin
                                                            match (string_drop (z_s1613z3, z_s1614z3)) with
                                                            | z_s1615z3 ->
                                                              begin
                                                                match (zreg_name_matches_prefix z_s1615z3) with
                                                                | ZSome (zrs2, z_s1616z3) ->
                                                                  begin
                                                                    match (string_drop (z_s1615z3, z_s1616z3)) with
                                                                    | "" ->
                                                                      ZSome (zs, zrd, zrs1, zrs2)
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1580z3 (z_s1581z3 : (string)) : ((bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1581z3 with
    | z_s1582z3 when (string_startswith (z_s1582z3, "div")) ->
      begin
        match (string_drop (z_s1582z3, (string_length "div"))) with
        | z_s1583z3 ->
          begin
            match (zmaybe_not_u_matches_prefix z_s1583z3) with
            | ZSome (zs, z_s1584z3) ->
              begin
                match (string_drop (z_s1583z3, z_s1584z3)) with
                | z_s1585z3 when (string_startswith (z_s1585z3, "w")) ->
                  begin
                    match (string_drop (z_s1585z3, (string_length "w"))) with
                    | z_s1586z3 ->
                      begin
                        match (zspc_matches_prefix z_s1586z3) with
                        | ZSome ((), z_s1587z3) ->
                          begin
                            match (string_drop (z_s1586z3, z_s1587z3)) with
                            | z_s1588z3 ->
                              begin
                                match (zreg_name_matches_prefix z_s1588z3) with
                                | ZSome (zrd, z_s1589z3) ->
                                  begin
                                    match (string_drop (z_s1588z3, z_s1589z3)) with
                                    | z_s1590z3 ->
                                      begin
                                        match (zsep_matches_prefix z_s1590z3) with
                                        | ZSome ((), z_s1591z3) ->
                                          begin
                                            match (string_drop (z_s1590z3, z_s1591z3)) with
                                            | z_s1592z3 ->
                                              begin
                                                match (zreg_name_matches_prefix z_s1592z3) with
                                                | ZSome (zrs1, z_s1593z3) ->
                                                  begin
                                                    match (string_drop (z_s1592z3, z_s1593z3)) with
                                                    | z_s1594z3 ->
                                                      begin
                                                        match (zsep_matches_prefix z_s1594z3) with
                                                        | ZSome ((), z_s1595z3) ->
                                                          begin
                                                            match (string_drop (z_s1594z3, z_s1595z3)) with
                                                            | z_s1596z3 ->
                                                              begin
                                                                match (zreg_name_matches_prefix z_s1596z3) with
                                                                | ZSome (zrs2, z_s1597z3) ->
                                                                  begin
                                                                    match (string_drop (z_s1596z3, z_s1597z3)) with
                                                                    | "" ->
                                                                      ZSome (zs, zrd, zrs1, zrs2)
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1564z3 (z_s1565z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1565z3 with
    | z_s1566z3 when (string_startswith (z_s1566z3, "mulw")) ->
      begin
        match (string_drop (z_s1566z3, (string_length "mulw"))) with
        | z_s1567z3 ->
          begin
            match (zspc_matches_prefix z_s1567z3) with
            | ZSome ((), z_s1568z3) ->
              begin
                match (string_drop (z_s1567z3, z_s1568z3)) with
                | z_s1569z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1569z3) with
                    | ZSome (zrd, z_s1570z3) ->
                      begin
                        match (string_drop (z_s1569z3, z_s1570z3)) with
                        | z_s1571z3 ->
                          begin
                            match (zsep_matches_prefix z_s1571z3) with
                            | ZSome ((), z_s1572z3) ->
                              begin
                                match (string_drop (z_s1571z3, z_s1572z3)) with
                                | z_s1573z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1573z3) with
                                    | ZSome (zrs1, z_s1574z3) ->
                                      begin
                                        match (string_drop (z_s1573z3, z_s1574z3)) with
                                        | z_s1575z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s1575z3) with
                                            | ZSome ((), z_s1576z3) ->
                                              begin
                                                match (string_drop (z_s1575z3, z_s1576z3)) with
                                                | z_s1577z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s1577z3) with
                                                    | ZSome (zrs2, z_s1578z3) ->
                                                      begin
                                                        match (string_drop (z_s1577z3, z_s1578z3)) with
                                                        | "" ->
                                                          ZSome (zrd, zrs1, zrs2)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1546z3 (z_s1547z3 : (string)) : ((bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1547z3 with
    | z_s1548z3 when (string_startswith (z_s1548z3, "rem")) ->
      begin
        match (string_drop (z_s1548z3, (string_length "rem"))) with
        | z_s1549z3 ->
          begin
            match (zmaybe_not_u_matches_prefix z_s1549z3) with
            | ZSome (zs, z_s1550z3) ->
              begin
                match (string_drop (z_s1549z3, z_s1550z3)) with
                | z_s1551z3 ->
                  begin
                    match (zspc_matches_prefix z_s1551z3) with
                    | ZSome ((), z_s1552z3) ->
                      begin
                        match (string_drop (z_s1551z3, z_s1552z3)) with
                        | z_s1553z3 ->
                          begin
                            match (zreg_name_matches_prefix z_s1553z3) with
                            | ZSome (zrd, z_s1554z3) ->
                              begin
                                match (string_drop (z_s1553z3, z_s1554z3)) with
                                | z_s1555z3 ->
                                  begin
                                    match (zsep_matches_prefix z_s1555z3) with
                                    | ZSome ((), z_s1556z3) ->
                                      begin
                                        match (string_drop (z_s1555z3, z_s1556z3)) with
                                        | z_s1557z3 ->
                                          begin
                                            match (zreg_name_matches_prefix z_s1557z3) with
                                            | ZSome (zrs1, z_s1558z3) ->
                                              begin
                                                match (string_drop (z_s1557z3, z_s1558z3)) with
                                                | z_s1559z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s1559z3) with
                                                    | ZSome ((), z_s1560z3) ->
                                                      begin
                                                        match (string_drop (z_s1559z3, z_s1560z3)) with
                                                        | z_s1561z3 ->
                                                          begin
                                                            match (zreg_name_matches_prefix z_s1561z3) with
                                                            | ZSome (zrs2, z_s1562z3) ->
                                                              begin
                                                                match (string_drop (z_s1561z3, z_s1562z3)) with
                                                                | "" ->
                                                                  ZSome (zs, zrd, zrs1, zrs2)
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1528z3 (z_s1529z3 : (string)) : ((bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1529z3 with
    | z_s1530z3 when (string_startswith (z_s1530z3, "div")) ->
      begin
        match (string_drop (z_s1530z3, (string_length "div"))) with
        | z_s1531z3 ->
          begin
            match (zmaybe_not_u_matches_prefix z_s1531z3) with
            | ZSome (zs, z_s1532z3) ->
              begin
                match (string_drop (z_s1531z3, z_s1532z3)) with
                | z_s1533z3 ->
                  begin
                    match (zspc_matches_prefix z_s1533z3) with
                    | ZSome ((), z_s1534z3) ->
                      begin
                        match (string_drop (z_s1533z3, z_s1534z3)) with
                        | z_s1535z3 ->
                          begin
                            match (zreg_name_matches_prefix z_s1535z3) with
                            | ZSome (zrd, z_s1536z3) ->
                              begin
                                match (string_drop (z_s1535z3, z_s1536z3)) with
                                | z_s1537z3 ->
                                  begin
                                    match (zsep_matches_prefix z_s1537z3) with
                                    | ZSome ((), z_s1538z3) ->
                                      begin
                                        match (string_drop (z_s1537z3, z_s1538z3)) with
                                        | z_s1539z3 ->
                                          begin
                                            match (zreg_name_matches_prefix z_s1539z3) with
                                            | ZSome (zrs1, z_s1540z3) ->
                                              begin
                                                match (string_drop (z_s1539z3, z_s1540z3)) with
                                                | z_s1541z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s1541z3) with
                                                    | ZSome ((), z_s1542z3) ->
                                                      begin
                                                        match (string_drop (z_s1541z3, z_s1542z3)) with
                                                        | z_s1543z3 ->
                                                          begin
                                                            match (zreg_name_matches_prefix z_s1543z3) with
                                                            | ZSome (zrs2, z_s1544z3) ->
                                                              begin
                                                                match (string_drop (z_s1543z3, z_s1544z3)) with
                                                                | "" ->
                                                                  ZSome (zs, zrd, zrs1, zrs2)
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1511z3 (z_s1512z3 : (string)) : ((bool * bool * bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1512z3 with
    | z_s1513z3 ->
      begin
        match (zmul_mnemonic_matches_prefix z_s1513z3) with
        | ZSome ((zhigh, zsigned1, zsigned2), z_s1514z3) ->
          begin
            match (string_drop (z_s1513z3, z_s1514z3)) with
            | z_s1515z3 ->
              begin
                match (zspc_matches_prefix z_s1515z3) with
                | ZSome ((), z_s1516z3) ->
                  begin
                    match (string_drop (z_s1515z3, z_s1516z3)) with
                    | z_s1517z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s1517z3) with
                        | ZSome (zrd, z_s1518z3) ->
                          begin
                            match (string_drop (z_s1517z3, z_s1518z3)) with
                            | z_s1519z3 ->
                              begin
                                match (zsep_matches_prefix z_s1519z3) with
                                | ZSome ((), z_s1520z3) ->
                                  begin
                                    match (string_drop (z_s1519z3, z_s1520z3)) with
                                    | z_s1521z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s1521z3) with
                                        | ZSome (zrs1, z_s1522z3) ->
                                          begin
                                            match (string_drop (z_s1521z3, z_s1522z3)) with
                                            | z_s1523z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s1523z3) with
                                                | ZSome ((), z_s1524z3) ->
                                                  begin
                                                    match (string_drop (z_s1523z3, z_s1524z3)) with
                                                    | z_s1525z3 ->
                                                      begin
                                                        match (zreg_name_matches_prefix z_s1525z3) with
                                                        | ZSome (zrs2, z_s1526z3) ->
                                                          begin
                                                            match (string_drop (z_s1525z3, z_s1526z3)) with
                                                            | "" ->
                                                              ZSome (zhigh, zsigned1, zsigned2, zrd, zrs1, zrs2)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1499z3 (z_s1500z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1500z3 with
    | z_s1501z3 when (string_startswith (z_s1501z3, "c.add")) ->
      begin
        match (string_drop (z_s1501z3, (string_length "c.add"))) with
        | z_s1502z3 ->
          begin
            match (zspc_matches_prefix z_s1502z3) with
            | ZSome ((), z_s1503z3) ->
              begin
                match (string_drop (z_s1502z3, z_s1503z3)) with
                | z_s1504z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1504z3) with
                    | ZSome (zrsd, z_s1505z3) ->
                      begin
                        match (string_drop (z_s1504z3, z_s1505z3)) with
                        | z_s1506z3 ->
                          begin
                            match (zsep_matches_prefix z_s1506z3) with
                            | ZSome ((), z_s1507z3) ->
                              begin
                                match (string_drop (z_s1506z3, z_s1507z3)) with
                                | z_s1508z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1508z3) with
                                    | ZSome (zrs2, z_s1509z3) ->
                                      begin
                                        match (string_drop (z_s1508z3, z_s1509z3)) with
                                        | "" -> ZSome (zrsd, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1487z3 (z_s1488z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1488z3 with
    | z_s1489z3 when (string_startswith (z_s1489z3, "c.mv")) ->
      begin
        match (string_drop (z_s1489z3, (string_length "c.mv"))) with
        | z_s1490z3 ->
          begin
            match (zspc_matches_prefix z_s1490z3) with
            | ZSome ((), z_s1491z3) ->
              begin
                match (string_drop (z_s1490z3, z_s1491z3)) with
                | z_s1492z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1492z3) with
                    | ZSome (zrd, z_s1493z3) ->
                      begin
                        match (string_drop (z_s1492z3, z_s1493z3)) with
                        | z_s1494z3 ->
                          begin
                            match (zsep_matches_prefix z_s1494z3) with
                            | ZSome ((), z_s1495z3) ->
                              begin
                                match (string_drop (z_s1494z3, z_s1495z3)) with
                                | z_s1496z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1496z3) with
                                    | ZSome (zrs2, z_s1497z3) ->
                                      begin
                                        match (string_drop (z_s1496z3, z_s1497z3)) with
                                        | "" -> ZSome (zrd, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1479z3 (z_s1480z3 : (string)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match z_s1480z3 with
    | z_s1481z3 when (string_startswith (z_s1481z3, "c.jalr")) ->
      begin
        match (string_drop (z_s1481z3, (string_length "c.jalr"))) with
        | z_s1482z3 ->
          begin
            match (zspc_matches_prefix z_s1482z3) with
            | ZSome ((), z_s1483z3) ->
              begin
                match (string_drop (z_s1482z3, z_s1483z3)) with
                | z_s1484z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1484z3) with
                    | ZSome (zrs1, z_s1485z3) ->
                      begin
                        match (string_drop (z_s1484z3, z_s1485z3)) with
                        | "" -> ZSome zrs1
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1471z3 (z_s1472z3 : (string)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match z_s1472z3 with
    | z_s1473z3 when (string_startswith (z_s1473z3, "c.jr")) ->
      begin
        match (string_drop (z_s1473z3, (string_length "c.jr"))) with
        | z_s1474z3 ->
          begin
            match (zspc_matches_prefix z_s1474z3) with
            | ZSome ((), z_s1475z3) ->
              begin
                match (string_drop (z_s1474z3, z_s1475z3)) with
                | z_s1476z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1476z3) with
                    | ZSome (zrs1, z_s1477z3) ->
                      begin
                        match (string_drop (z_s1476z3, z_s1477z3)) with
                        | "" -> ZSome zrs1
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1459z3 (z_s1460z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1460z3 with
    | z_s1461z3 when (string_startswith (z_s1461z3, "c.sdsp")) ->
      begin
        match (string_drop (z_s1461z3, (string_length "c.sdsp"))) with
        | z_s1462z3 ->
          begin
            match (zspc_matches_prefix z_s1462z3) with
            | ZSome ((), z_s1463z3) ->
              begin
                match (string_drop (z_s1462z3, z_s1463z3)) with
                | z_s1464z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1464z3) with
                    | ZSome (zrs2, z_s1465z3) ->
                      begin
                        match (string_drop (z_s1464z3, z_s1465z3)) with
                        | z_s1466z3 ->
                          begin
                            match (zsep_matches_prefix z_s1466z3) with
                            | ZSome ((), z_s1467z3) ->
                              begin
                                match (string_drop (z_s1466z3, z_s1467z3)) with
                                | z_s1468z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s1468z3) with
                                    | ZSome (zuimm, z_s1469z3) ->
                                      begin
                                        match (string_drop (z_s1468z3, z_s1469z3)) with
                                        | "" -> ZSome (zrs2, zuimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1447z3 (z_s1448z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1448z3 with
    | z_s1449z3 when (string_startswith (z_s1449z3, "c.swsp")) ->
      begin
        match (string_drop (z_s1449z3, (string_length "c.swsp"))) with
        | z_s1450z3 ->
          begin
            match (zspc_matches_prefix z_s1450z3) with
            | ZSome ((), z_s1451z3) ->
              begin
                match (string_drop (z_s1450z3, z_s1451z3)) with
                | z_s1452z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1452z3) with
                    | ZSome (zrd, z_s1453z3) ->
                      begin
                        match (string_drop (z_s1452z3, z_s1453z3)) with
                        | z_s1454z3 ->
                          begin
                            match (zsep_matches_prefix z_s1454z3) with
                            | ZSome ((), z_s1455z3) ->
                              begin
                                match (string_drop (z_s1454z3, z_s1455z3)) with
                                | z_s1456z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s1456z3) with
                                    | ZSome (zuimm, z_s1457z3) ->
                                      begin
                                        match (string_drop (z_s1456z3, z_s1457z3)) with
                                        | "" -> ZSome (zrd, zuimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1435z3 (z_s1436z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1436z3 with
    | z_s1437z3 when (string_startswith (z_s1437z3, "c.ldsp")) ->
      begin
        match (string_drop (z_s1437z3, (string_length "c.ldsp"))) with
        | z_s1438z3 ->
          begin
            match (zspc_matches_prefix z_s1438z3) with
            | ZSome ((), z_s1439z3) ->
              begin
                match (string_drop (z_s1438z3, z_s1439z3)) with
                | z_s1440z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1440z3) with
                    | ZSome (zrd, z_s1441z3) ->
                      begin
                        match (string_drop (z_s1440z3, z_s1441z3)) with
                        | z_s1442z3 ->
                          begin
                            match (zsep_matches_prefix z_s1442z3) with
                            | ZSome ((), z_s1443z3) ->
                              begin
                                match (string_drop (z_s1442z3, z_s1443z3)) with
                                | z_s1444z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s1444z3) with
                                    | ZSome (zuimm, z_s1445z3) ->
                                      begin
                                        match (string_drop (z_s1444z3, z_s1445z3)) with
                                        | "" -> ZSome (zrd, zuimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1423z3 (z_s1424z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1424z3 with
    | z_s1425z3 when (string_startswith (z_s1425z3, "c.lwsp")) ->
      begin
        match (string_drop (z_s1425z3, (string_length "c.lwsp"))) with
        | z_s1426z3 ->
          begin
            match (zspc_matches_prefix z_s1426z3) with
            | ZSome ((), z_s1427z3) ->
              begin
                match (string_drop (z_s1426z3, z_s1427z3)) with
                | z_s1428z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1428z3) with
                    | ZSome (zrd, z_s1429z3) ->
                      begin
                        match (string_drop (z_s1428z3, z_s1429z3)) with
                        | z_s1430z3 ->
                          begin
                            match (zsep_matches_prefix z_s1430z3) with
                            | ZSome ((), z_s1431z3) ->
                              begin
                                match (string_drop (z_s1430z3, z_s1431z3)) with
                                | z_s1432z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s1432z3) with
                                    | ZSome (zuimm, z_s1433z3) ->
                                      begin
                                        match (string_drop (z_s1432z3, z_s1433z3)) with
                                        | "" -> ZSome (zrd, zuimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1411z3 (z_s1412z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1412z3 with
    | z_s1413z3 when (string_startswith (z_s1413z3, "c.slli")) ->
      begin
        match (string_drop (z_s1413z3, (string_length "c.slli"))) with
        | z_s1414z3 ->
          begin
            match (zspc_matches_prefix z_s1414z3) with
            | ZSome ((), z_s1415z3) ->
              begin
                match (string_drop (z_s1414z3, z_s1415z3)) with
                | z_s1416z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1416z3) with
                    | ZSome (zrsd, z_s1417z3) ->
                      begin
                        match (string_drop (z_s1416z3, z_s1417z3)) with
                        | z_s1418z3 ->
                          begin
                            match (zsep_matches_prefix z_s1418z3) with
                            | ZSome ((), z_s1419z3) ->
                              begin
                                match (string_drop (z_s1418z3, z_s1419z3)) with
                                | z_s1420z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s1420z3) with
                                    | ZSome (zshamt, z_s1421z3) ->
                                      begin
                                        match (string_drop (z_s1420z3, z_s1421z3)) with
                                        | "" -> ZSome (zrsd, zshamt)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1399z3 (z_s1400z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1400z3 with
    | z_s1401z3 when (string_startswith (z_s1401z3, "c.bnez")) ->
      begin
        match (string_drop (z_s1401z3, (string_length "c.bnez"))) with
        | z_s1402z3 ->
          begin
            match (zspc_matches_prefix z_s1402z3) with
            | ZSome ((), z_s1403z3) ->
              begin
                match (string_drop (z_s1402z3, z_s1403z3)) with
                | z_s1404z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s1404z3) with
                    | ZSome (zrs, z_s1405z3) ->
                      begin
                        match (string_drop (z_s1404z3, z_s1405z3)) with
                        | z_s1406z3 ->
                          begin
                            match (zsep_matches_prefix z_s1406z3) with
                            | ZSome ((), z_s1407z3) ->
                              begin
                                match (string_drop (z_s1406z3, z_s1407z3)) with
                                | z_s1408z3 ->
                                  begin
                                    match (hex_bits_8_matches_prefix z_s1408z3) with
                                    | ZSome (zimm, z_s1409z3) ->
                                      begin
                                        match (string_drop (z_s1408z3, z_s1409z3)) with
                                        | "" -> ZSome (zrs, zimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1387z3 (z_s1388z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1388z3 with
    | z_s1389z3 when (string_startswith (z_s1389z3, "c.beqz")) ->
      begin
        match (string_drop (z_s1389z3, (string_length "c.beqz"))) with
        | z_s1390z3 ->
          begin
            match (zspc_matches_prefix z_s1390z3) with
            | ZSome ((), z_s1391z3) ->
              begin
                match (string_drop (z_s1390z3, z_s1391z3)) with
                | z_s1392z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s1392z3) with
                    | ZSome (zrs, z_s1393z3) ->
                      begin
                        match (string_drop (z_s1392z3, z_s1393z3)) with
                        | z_s1394z3 ->
                          begin
                            match (zsep_matches_prefix z_s1394z3) with
                            | ZSome ((), z_s1395z3) ->
                              begin
                                match (string_drop (z_s1394z3, z_s1395z3)) with
                                | z_s1396z3 ->
                                  begin
                                    match (hex_bits_8_matches_prefix z_s1396z3) with
                                    | ZSome (zimm, z_s1397z3) ->
                                      begin
                                        match (string_drop (z_s1396z3, z_s1397z3)) with
                                        | "" -> ZSome (zrs, zimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1379z3 (z_s1380z3 : (string)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match z_s1380z3 with
    | z_s1381z3 when (string_startswith (z_s1381z3, "c.j")) ->
      begin
        match (string_drop (z_s1381z3, (string_length "c.j"))) with
        | z_s1382z3 ->
          begin
            match (zspc_matches_prefix z_s1382z3) with
            | ZSome ((), z_s1383z3) ->
              begin
                match (string_drop (z_s1382z3, z_s1383z3)) with
                | z_s1384z3 ->
                  begin
                    match (hex_bits_11_matches_prefix z_s1384z3) with
                    | ZSome (zimm, z_s1385z3) ->
                      begin
                        match (string_drop (z_s1384z3, z_s1385z3)) with
                        | "" -> ZSome zimm
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1367z3 (z_s1368z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1368z3 with
    | z_s1369z3 when (string_startswith (z_s1369z3, "c.addw")) ->
      begin
        match (string_drop (z_s1369z3, (string_length "c.addw"))) with
        | z_s1370z3 ->
          begin
            match (zspc_matches_prefix z_s1370z3) with
            | ZSome ((), z_s1371z3) ->
              begin
                match (string_drop (z_s1370z3, z_s1371z3)) with
                | z_s1372z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s1372z3) with
                    | ZSome (zrsd, z_s1373z3) ->
                      begin
                        match (string_drop (z_s1372z3, z_s1373z3)) with
                        | z_s1374z3 ->
                          begin
                            match (zsep_matches_prefix z_s1374z3) with
                            | ZSome ((), z_s1375z3) ->
                              begin
                                match (string_drop (z_s1374z3, z_s1375z3)) with
                                | z_s1376z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s1376z3) with
                                    | ZSome (zrs2, z_s1377z3) ->
                                      begin
                                        match (string_drop (z_s1376z3, z_s1377z3)) with
                                        | "" -> ZSome (zrsd, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1355z3 (z_s1356z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1356z3 with
    | z_s1357z3 when (string_startswith (z_s1357z3, "c.subw")) ->
      begin
        match (string_drop (z_s1357z3, (string_length "c.subw"))) with
        | z_s1358z3 ->
          begin
            match (zspc_matches_prefix z_s1358z3) with
            | ZSome ((), z_s1359z3) ->
              begin
                match (string_drop (z_s1358z3, z_s1359z3)) with
                | z_s1360z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s1360z3) with
                    | ZSome (zrsd, z_s1361z3) ->
                      begin
                        match (string_drop (z_s1360z3, z_s1361z3)) with
                        | z_s1362z3 ->
                          begin
                            match (zsep_matches_prefix z_s1362z3) with
                            | ZSome ((), z_s1363z3) ->
                              begin
                                match (string_drop (z_s1362z3, z_s1363z3)) with
                                | z_s1364z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s1364z3) with
                                    | ZSome (zrs2, z_s1365z3) ->
                                      begin
                                        match (string_drop (z_s1364z3, z_s1365z3)) with
                                        | "" -> ZSome (zrsd, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1343z3 (z_s1344z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1344z3 with
    | z_s1345z3 when (string_startswith (z_s1345z3, "c.and")) ->
      begin
        match (string_drop (z_s1345z3, (string_length "c.and"))) with
        | z_s1346z3 ->
          begin
            match (zspc_matches_prefix z_s1346z3) with
            | ZSome ((), z_s1347z3) ->
              begin
                match (string_drop (z_s1346z3, z_s1347z3)) with
                | z_s1348z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s1348z3) with
                    | ZSome (zrsd, z_s1349z3) ->
                      begin
                        match (string_drop (z_s1348z3, z_s1349z3)) with
                        | z_s1350z3 ->
                          begin
                            match (zsep_matches_prefix z_s1350z3) with
                            | ZSome ((), z_s1351z3) ->
                              begin
                                match (string_drop (z_s1350z3, z_s1351z3)) with
                                | z_s1352z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s1352z3) with
                                    | ZSome (zrs2, z_s1353z3) ->
                                      begin
                                        match (string_drop (z_s1352z3, z_s1353z3)) with
                                        | "" -> ZSome (zrsd, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1331z3 (z_s1332z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1332z3 with
    | z_s1333z3 when (string_startswith (z_s1333z3, "c.or")) ->
      begin
        match (string_drop (z_s1333z3, (string_length "c.or"))) with
        | z_s1334z3 ->
          begin
            match (zspc_matches_prefix z_s1334z3) with
            | ZSome ((), z_s1335z3) ->
              begin
                match (string_drop (z_s1334z3, z_s1335z3)) with
                | z_s1336z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s1336z3) with
                    | ZSome (zrsd, z_s1337z3) ->
                      begin
                        match (string_drop (z_s1336z3, z_s1337z3)) with
                        | z_s1338z3 ->
                          begin
                            match (zsep_matches_prefix z_s1338z3) with
                            | ZSome ((), z_s1339z3) ->
                              begin
                                match (string_drop (z_s1338z3, z_s1339z3)) with
                                | z_s1340z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s1340z3) with
                                    | ZSome (zrs2, z_s1341z3) ->
                                      begin
                                        match (string_drop (z_s1340z3, z_s1341z3)) with
                                        | "" -> ZSome (zrsd, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1319z3 (z_s1320z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1320z3 with
    | z_s1321z3 when (string_startswith (z_s1321z3, "c.xor")) ->
      begin
        match (string_drop (z_s1321z3, (string_length "c.xor"))) with
        | z_s1322z3 ->
          begin
            match (zspc_matches_prefix z_s1322z3) with
            | ZSome ((), z_s1323z3) ->
              begin
                match (string_drop (z_s1322z3, z_s1323z3)) with
                | z_s1324z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s1324z3) with
                    | ZSome (zrsd, z_s1325z3) ->
                      begin
                        match (string_drop (z_s1324z3, z_s1325z3)) with
                        | z_s1326z3 ->
                          begin
                            match (zsep_matches_prefix z_s1326z3) with
                            | ZSome ((), z_s1327z3) ->
                              begin
                                match (string_drop (z_s1326z3, z_s1327z3)) with
                                | z_s1328z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s1328z3) with
                                    | ZSome (zrs2, z_s1329z3) ->
                                      begin
                                        match (string_drop (z_s1328z3, z_s1329z3)) with
                                        | "" -> ZSome (zrsd, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1307z3 (z_s1308z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1308z3 with
    | z_s1309z3 when (string_startswith (z_s1309z3, "c.sub")) ->
      begin
        match (string_drop (z_s1309z3, (string_length "c.sub"))) with
        | z_s1310z3 ->
          begin
            match (zspc_matches_prefix z_s1310z3) with
            | ZSome ((), z_s1311z3) ->
              begin
                match (string_drop (z_s1310z3, z_s1311z3)) with
                | z_s1312z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s1312z3) with
                    | ZSome (zrsd, z_s1313z3) ->
                      begin
                        match (string_drop (z_s1312z3, z_s1313z3)) with
                        | z_s1314z3 ->
                          begin
                            match (zsep_matches_prefix z_s1314z3) with
                            | ZSome ((), z_s1315z3) ->
                              begin
                                match (string_drop (z_s1314z3, z_s1315z3)) with
                                | z_s1316z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s1316z3) with
                                    | ZSome (zrs2, z_s1317z3) ->
                                      begin
                                        match (string_drop (z_s1316z3, z_s1317z3)) with
                                        | "" -> ZSome (zrsd, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1295z3 (z_s1296z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1296z3 with
    | z_s1297z3 when (string_startswith (z_s1297z3, "c.andi")) ->
      begin
        match (string_drop (z_s1297z3, (string_length "c.andi"))) with
        | z_s1298z3 ->
          begin
            match (zspc_matches_prefix z_s1298z3) with
            | ZSome ((), z_s1299z3) ->
              begin
                match (string_drop (z_s1298z3, z_s1299z3)) with
                | z_s1300z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s1300z3) with
                    | ZSome (zrsd, z_s1301z3) ->
                      begin
                        match (string_drop (z_s1300z3, z_s1301z3)) with
                        | z_s1302z3 ->
                          begin
                            match (zsep_matches_prefix z_s1302z3) with
                            | ZSome ((), z_s1303z3) ->
                              begin
                                match (string_drop (z_s1302z3, z_s1303z3)) with
                                | z_s1304z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s1304z3) with
                                    | ZSome (zimm, z_s1305z3) ->
                                      begin
                                        match (string_drop (z_s1304z3, z_s1305z3)) with
                                        | "" -> ZSome (zrsd, zimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1283z3 (z_s1284z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1284z3 with
    | z_s1285z3 when (string_startswith (z_s1285z3, "c.srai")) ->
      begin
        match (string_drop (z_s1285z3, (string_length "c.srai"))) with
        | z_s1286z3 ->
          begin
            match (zspc_matches_prefix z_s1286z3) with
            | ZSome ((), z_s1287z3) ->
              begin
                match (string_drop (z_s1286z3, z_s1287z3)) with
                | z_s1288z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s1288z3) with
                    | ZSome (zrsd, z_s1289z3) ->
                      begin
                        match (string_drop (z_s1288z3, z_s1289z3)) with
                        | z_s1290z3 ->
                          begin
                            match (zsep_matches_prefix z_s1290z3) with
                            | ZSome ((), z_s1291z3) ->
                              begin
                                match (string_drop (z_s1290z3, z_s1291z3)) with
                                | z_s1292z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s1292z3) with
                                    | ZSome (zshamt, z_s1293z3) ->
                                      begin
                                        match (string_drop (z_s1292z3, z_s1293z3)) with
                                        | "" -> ZSome (zrsd, zshamt)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1271z3 (z_s1272z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1272z3 with
    | z_s1273z3 when (string_startswith (z_s1273z3, "c.srli")) ->
      begin
        match (string_drop (z_s1273z3, (string_length "c.srli"))) with
        | z_s1274z3 ->
          begin
            match (zspc_matches_prefix z_s1274z3) with
            | ZSome ((), z_s1275z3) ->
              begin
                match (string_drop (z_s1274z3, z_s1275z3)) with
                | z_s1276z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s1276z3) with
                    | ZSome (zrsd, z_s1277z3) ->
                      begin
                        match (string_drop (z_s1276z3, z_s1277z3)) with
                        | z_s1278z3 ->
                          begin
                            match (zsep_matches_prefix z_s1278z3) with
                            | ZSome ((), z_s1279z3) ->
                              begin
                                match (string_drop (z_s1278z3, z_s1279z3)) with
                                | z_s1280z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s1280z3) with
                                    | ZSome (zshamt, z_s1281z3) ->
                                      begin
                                        match (string_drop (z_s1280z3, z_s1281z3)) with
                                        | "" -> ZSome (zrsd, zshamt)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1259z3 (z_s1260z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1260z3 with
    | z_s1261z3 when (string_startswith (z_s1261z3, "c.lui")) ->
      begin
        match (string_drop (z_s1261z3, (string_length "c.lui"))) with
        | z_s1262z3 ->
          begin
            match (zspc_matches_prefix z_s1262z3) with
            | ZSome ((), z_s1263z3) ->
              begin
                match (string_drop (z_s1262z3, z_s1263z3)) with
                | z_s1264z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1264z3) with
                    | ZSome (zrd, z_s1265z3) ->
                      begin
                        match (string_drop (z_s1264z3, z_s1265z3)) with
                        | z_s1266z3 ->
                          begin
                            match (zsep_matches_prefix z_s1266z3) with
                            | ZSome ((), z_s1267z3) ->
                              begin
                                match (string_drop (z_s1266z3, z_s1267z3)) with
                                | z_s1268z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s1268z3) with
                                    | ZSome (zimm, z_s1269z3) ->
                                      begin
                                        match (string_drop (z_s1268z3, z_s1269z3)) with
                                        | "" -> ZSome (zrd, zimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1251z3 (z_s1252z3 : (string)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match z_s1252z3 with
    | z_s1253z3 when (string_startswith (z_s1253z3, "c.addi16sp")) ->
      begin
        match (string_drop (z_s1253z3, (string_length "c.addi16sp"))) with
        | z_s1254z3 ->
          begin
            match (zspc_matches_prefix z_s1254z3) with
            | ZSome ((), z_s1255z3) ->
              begin
                match (string_drop (z_s1254z3, z_s1255z3)) with
                | z_s1256z3 ->
                  begin
                    match (hex_bits_6_matches_prefix z_s1256z3) with
                    | ZSome (zimm, z_s1257z3) ->
                      begin
                        match (string_drop (z_s1256z3, z_s1257z3)) with
                        | "" -> ZSome zimm
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1239z3 (z_s1240z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1240z3 with
    | z_s1241z3 when (string_startswith (z_s1241z3, "c.li")) ->
      begin
        match (string_drop (z_s1241z3, (string_length "c.li"))) with
        | z_s1242z3 ->
          begin
            match (zspc_matches_prefix z_s1242z3) with
            | ZSome ((), z_s1243z3) ->
              begin
                match (string_drop (z_s1242z3, z_s1243z3)) with
                | z_s1244z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1244z3) with
                    | ZSome (zrd, z_s1245z3) ->
                      begin
                        match (string_drop (z_s1244z3, z_s1245z3)) with
                        | z_s1246z3 ->
                          begin
                            match (zsep_matches_prefix z_s1246z3) with
                            | ZSome ((), z_s1247z3) ->
                              begin
                                match (string_drop (z_s1246z3, z_s1247z3)) with
                                | z_s1248z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s1248z3) with
                                    | ZSome (zimm, z_s1249z3) ->
                                      begin
                                        match (string_drop (z_s1248z3, z_s1249z3)) with
                                        | "" -> ZSome (zrd, zimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1227z3 (z_s1228z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1228z3 with
    | z_s1229z3 when (string_startswith (z_s1229z3, "c.addiw")) ->
      begin
        match (string_drop (z_s1229z3, (string_length "c.addiw"))) with
        | z_s1230z3 ->
          begin
            match (zspc_matches_prefix z_s1230z3) with
            | ZSome ((), z_s1231z3) ->
              begin
                match (string_drop (z_s1230z3, z_s1231z3)) with
                | z_s1232z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1232z3) with
                    | ZSome (zrsd, z_s1233z3) ->
                      begin
                        match (string_drop (z_s1232z3, z_s1233z3)) with
                        | z_s1234z3 ->
                          begin
                            match (zsep_matches_prefix z_s1234z3) with
                            | ZSome ((), z_s1235z3) ->
                              begin
                                match (string_drop (z_s1234z3, z_s1235z3)) with
                                | z_s1236z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s1236z3) with
                                    | ZSome (zimm, z_s1237z3) ->
                                      begin
                                        match (string_drop (z_s1236z3, z_s1237z3)) with
                                        | "" -> ZSome (zrsd, zimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1219z3 (z_s1220z3 : (string)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match z_s1220z3 with
    | z_s1221z3 when (string_startswith (z_s1221z3, "c.jal")) ->
      begin
        match (string_drop (z_s1221z3, (string_length "c.jal"))) with
        | z_s1222z3 ->
          begin
            match (zspc_matches_prefix z_s1222z3) with
            | ZSome ((), z_s1223z3) ->
              begin
                match (string_drop (z_s1222z3, z_s1223z3)) with
                | z_s1224z3 ->
                  begin
                    match (hex_bits_12_matches_prefix z_s1224z3) with
                    | ZSome (zv__1368, z_s1225z3) when (let zp0z3 = (access (zv__1368, Big_int.zero)) in
                    eq_bit (zp0z3, B0)) ->
                      let zimm = (subrange (zv__1368, (Big_int.of_int (11)), (Big_int.of_int (1)))) in
                      let zimm = (subrange (zv__1368, (Big_int.of_int (11)), (Big_int.of_int (1)))) in
                      begin
                        match (string_drop (z_s1224z3, z_s1225z3)) with
                        | "" -> ZSome zimm
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1207z3 (z_s1208z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1208z3 with
    | z_s1209z3 when (string_startswith (z_s1209z3, "c.addi")) ->
      begin
        match (string_drop (z_s1209z3, (string_length "c.addi"))) with
        | z_s1210z3 ->
          begin
            match (zspc_matches_prefix z_s1210z3) with
            | ZSome ((), z_s1211z3) ->
              begin
                match (string_drop (z_s1210z3, z_s1211z3)) with
                | z_s1212z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1212z3) with
                    | ZSome (zrsd, z_s1213z3) ->
                      begin
                        match (string_drop (z_s1212z3, z_s1213z3)) with
                        | z_s1214z3 ->
                          begin
                            match (zsep_matches_prefix z_s1214z3) with
                            | ZSome ((), z_s1215z3) ->
                              begin
                                match (string_drop (z_s1214z3, z_s1215z3)) with
                                | z_s1216z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s1216z3) with
                                    | ZSome (znzzi, z_s1217z3) ->
                                      begin
                                        match (string_drop (z_s1216z3, z_s1217z3)) with
                                        | "" -> ZSome (zrsd, znzzi)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1191z3 (z_s1192z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1192z3 with
    | z_s1193z3 when (string_startswith (z_s1193z3, "c.sd")) ->
      begin
        match (string_drop (z_s1193z3, (string_length "c.sd"))) with
        | z_s1194z3 ->
          begin
            match (zspc_matches_prefix z_s1194z3) with
            | ZSome ((), z_s1195z3) ->
              begin
                match (string_drop (z_s1194z3, z_s1195z3)) with
                | z_s1196z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s1196z3) with
                    | ZSome (zrsc1, z_s1197z3) ->
                      begin
                        match (string_drop (z_s1196z3, z_s1197z3)) with
                        | z_s1198z3 ->
                          begin
                            match (zsep_matches_prefix z_s1198z3) with
                            | ZSome ((), z_s1199z3) ->
                              begin
                                match (string_drop (z_s1198z3, z_s1199z3)) with
                                | z_s1200z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s1200z3) with
                                    | ZSome (zrsc2, z_s1201z3) ->
                                      begin
                                        match (string_drop (z_s1200z3, z_s1201z3)) with
                                        | z_s1202z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s1202z3) with
                                            | ZSome ((), z_s1203z3) ->
                                              begin
                                                match (string_drop (z_s1202z3, z_s1203z3)) with
                                                | z_s1204z3 ->
                                                  begin
                                                    match (hex_bits_8_matches_prefix z_s1204z3) with
                                                    | ZSome (zv__1370, z_s1205z3) when (let zp0z3 = (access (zv__1370, (Big_int.of_int (2)))) in
                                                    let zp1z3 = (access (zv__1370, (Big_int.of_int (1)))) in
                                                    let zp2z3 = (access (zv__1370, Big_int.zero)) in
                                                    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
                                                      let zuimm = (subrange (zv__1370, (Big_int.of_int (7)), (Big_int.of_int (3)))) in
                                                      let zuimm = (subrange (zv__1370, (Big_int.of_int (7)), (Big_int.of_int (3)))) in
                                                      begin
                                                        match (string_drop (z_s1204z3, z_s1205z3)) with
                                                        | "" ->
                                                          ZSome (zrsc1, zrsc2, zuimm)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1175z3 (z_s1176z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1176z3 with
    | z_s1177z3 when (string_startswith (z_s1177z3, "c.sw")) ->
      begin
        match (string_drop (z_s1177z3, (string_length "c.sw"))) with
        | z_s1178z3 ->
          begin
            match (zspc_matches_prefix z_s1178z3) with
            | ZSome ((), z_s1179z3) ->
              begin
                match (string_drop (z_s1178z3, z_s1179z3)) with
                | z_s1180z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s1180z3) with
                    | ZSome (zrsc1, z_s1181z3) ->
                      begin
                        match (string_drop (z_s1180z3, z_s1181z3)) with
                        | z_s1182z3 ->
                          begin
                            match (zsep_matches_prefix z_s1182z3) with
                            | ZSome ((), z_s1183z3) ->
                              begin
                                match (string_drop (z_s1182z3, z_s1183z3)) with
                                | z_s1184z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s1184z3) with
                                    | ZSome (zrsc2, z_s1185z3) ->
                                      begin
                                        match (string_drop (z_s1184z3, z_s1185z3)) with
                                        | z_s1186z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s1186z3) with
                                            | ZSome ((), z_s1187z3) ->
                                              begin
                                                match (string_drop (z_s1186z3, z_s1187z3)) with
                                                | z_s1188z3 ->
                                                  begin
                                                    match (hex_bits_7_matches_prefix z_s1188z3) with
                                                    | ZSome (zv__1372, z_s1189z3) when (let zp0z3 = (access (zv__1372, (Big_int.of_int (1)))) in
                                                    let zp1z3 = (access (zv__1372, Big_int.zero)) in
                                                    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B0))) ->
                                                      let zuimm = (subrange (zv__1372, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
                                                      let zuimm = (subrange (zv__1372, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
                                                      begin
                                                        match (string_drop (z_s1188z3, z_s1189z3)) with
                                                        | "" ->
                                                          ZSome (zrsc1, zrsc2, zuimm)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1159z3 (z_s1160z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1160z3 with
    | z_s1161z3 when (string_startswith (z_s1161z3, "c.ld")) ->
      begin
        match (string_drop (z_s1161z3, (string_length "c.ld"))) with
        | z_s1162z3 ->
          begin
            match (zspc_matches_prefix z_s1162z3) with
            | ZSome ((), z_s1163z3) ->
              begin
                match (string_drop (z_s1162z3, z_s1163z3)) with
                | z_s1164z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s1164z3) with
                    | ZSome (zrdc, z_s1165z3) ->
                      begin
                        match (string_drop (z_s1164z3, z_s1165z3)) with
                        | z_s1166z3 ->
                          begin
                            match (zsep_matches_prefix z_s1166z3) with
                            | ZSome ((), z_s1167z3) ->
                              begin
                                match (string_drop (z_s1166z3, z_s1167z3)) with
                                | z_s1168z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s1168z3) with
                                    | ZSome (zrsc, z_s1169z3) ->
                                      begin
                                        match (string_drop (z_s1168z3, z_s1169z3)) with
                                        | z_s1170z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s1170z3) with
                                            | ZSome ((), z_s1171z3) ->
                                              begin
                                                match (string_drop (z_s1170z3, z_s1171z3)) with
                                                | z_s1172z3 ->
                                                  begin
                                                    match (hex_bits_8_matches_prefix z_s1172z3) with
                                                    | ZSome (zv__1374, z_s1173z3) when (let zp0z3 = (access (zv__1374, (Big_int.of_int (2)))) in
                                                    let zp1z3 = (access (zv__1374, (Big_int.of_int (1)))) in
                                                    let zp2z3 = (access (zv__1374, Big_int.zero)) in
                                                    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
                                                      let zuimm = (subrange (zv__1374, (Big_int.of_int (7)), (Big_int.of_int (3)))) in
                                                      let zuimm = (subrange (zv__1374, (Big_int.of_int (7)), (Big_int.of_int (3)))) in
                                                      begin
                                                        match (string_drop (z_s1172z3, z_s1173z3)) with
                                                        | "" ->
                                                          ZSome (zrdc, zrsc, zuimm)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1143z3 (z_s1144z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1144z3 with
    | z_s1145z3 when (string_startswith (z_s1145z3, "c.lw")) ->
      begin
        match (string_drop (z_s1145z3, (string_length "c.lw"))) with
        | z_s1146z3 ->
          begin
            match (zspc_matches_prefix z_s1146z3) with
            | ZSome ((), z_s1147z3) ->
              begin
                match (string_drop (z_s1146z3, z_s1147z3)) with
                | z_s1148z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s1148z3) with
                    | ZSome (zrdc, z_s1149z3) ->
                      begin
                        match (string_drop (z_s1148z3, z_s1149z3)) with
                        | z_s1150z3 ->
                          begin
                            match (zsep_matches_prefix z_s1150z3) with
                            | ZSome ((), z_s1151z3) ->
                              begin
                                match (string_drop (z_s1150z3, z_s1151z3)) with
                                | z_s1152z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s1152z3) with
                                    | ZSome (zrsc, z_s1153z3) ->
                                      begin
                                        match (string_drop (z_s1152z3, z_s1153z3)) with
                                        | z_s1154z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s1154z3) with
                                            | ZSome ((), z_s1155z3) ->
                                              begin
                                                match (string_drop (z_s1154z3, z_s1155z3)) with
                                                | z_s1156z3 ->
                                                  begin
                                                    match (hex_bits_7_matches_prefix z_s1156z3) with
                                                    | ZSome (zv__1376, z_s1157z3) when (let zp0z3 = (access (zv__1376, (Big_int.of_int (1)))) in
                                                    let zp1z3 = (access (zv__1376, Big_int.zero)) in
                                                    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B0))) ->
                                                      let zuimm = (subrange (zv__1376, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
                                                      let zuimm = (subrange (zv__1376, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
                                                      begin
                                                        match (string_drop (z_s1156z3, z_s1157z3)) with
                                                        | "" ->
                                                          ZSome (zrdc, zrsc, zuimm)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1131z3 (z_s1132z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1132z3 with
    | z_s1133z3 when (string_startswith (z_s1133z3, "c.addi4spn")) ->
      begin
        match (string_drop (z_s1133z3, (string_length "c.addi4spn"))) with
        | z_s1134z3 ->
          begin
            match (zspc_matches_prefix z_s1134z3) with
            | ZSome ((), z_s1135z3) ->
              begin
                match (string_drop (z_s1134z3, z_s1135z3)) with
                | z_s1136z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s1136z3) with
                    | ZSome (zrdc, z_s1137z3) ->
                      begin
                        match (string_drop (z_s1136z3, z_s1137z3)) with
                        | z_s1138z3 ->
                          begin
                            match (zsep_matches_prefix z_s1138z3) with
                            | ZSome ((), z_s1139z3) ->
                              begin
                                match (string_drop (z_s1138z3, z_s1139z3)) with
                                | z_s1140z3 ->
                                  begin
                                    match (hex_bits_10_matches_prefix z_s1140z3) with
                                    | ZSome (zv__1378, z_s1141z3) when (let zp0z3 = (access (zv__1378, (Big_int.of_int (1)))) in
                                    let zp1z3 = (access (zv__1378, Big_int.zero)) in
                                    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B0))) ->
                                      let znzzimm = (subrange (zv__1378, (Big_int.of_int (9)), (Big_int.of_int (2)))) in
                                      let znzzimm = (subrange (zv__1378, (Big_int.of_int (9)), (Big_int.of_int (2)))) in
                                      begin
                                        match (string_drop (z_s1140z3, z_s1141z3)) with
                                        | "" -> ZSome (zrdc, znzzimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1107z3 (z_s1108z3 : (string)) : ((zamoop * zword_width * bool * bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1108z3 with
    | z_s1109z3 ->
      begin
        match (zamo_mnemonic_matches_prefix z_s1109z3) with
        | ZSome (zop, z_s1110z3) ->
          begin
            match (string_drop (z_s1109z3, z_s1110z3)) with
            | z_s1111z3 when (string_startswith (z_s1111z3, ".")) ->
              begin
                match (string_drop (z_s1111z3, (string_length "."))) with
                | z_s1112z3 ->
                  begin
                    match (zsizze_mnemonic_matches_prefix z_s1112z3) with
                    | ZSome (zwidth, z_s1113z3) ->
                      begin
                        match (string_drop (z_s1112z3, z_s1113z3)) with
                        | z_s1114z3 ->
                          begin
                            match (zmaybe_aq_matches_prefix z_s1114z3) with
                            | ZSome (zaq, z_s1115z3) ->
                              begin
                                match (string_drop (z_s1114z3, z_s1115z3)) with
                                | z_s1116z3 ->
                                  begin
                                    match (zmaybe_rl_matches_prefix z_s1116z3) with
                                    | ZSome (zrl, z_s1117z3) ->
                                      begin
                                        match (string_drop (z_s1116z3, z_s1117z3)) with
                                        | z_s1118z3 ->
                                          begin
                                            match (zspc_matches_prefix z_s1118z3) with
                                            | ZSome ((), z_s1119z3) ->
                                              begin
                                                match (string_drop (z_s1118z3, z_s1119z3)) with
                                                | z_s1120z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s1120z3) with
                                                    | ZSome (zrd, z_s1121z3) ->
                                                      begin
                                                        match (string_drop (z_s1120z3, z_s1121z3)) with
                                                        | z_s1122z3 ->
                                                          begin
                                                            match (zsep_matches_prefix z_s1122z3) with
                                                            | ZSome ((), z_s1123z3) ->
                                                              begin
                                                                match (string_drop (z_s1122z3, z_s1123z3)) with
                                                                | z_s1124z3 ->
                                                                  begin
                                                                    match (zreg_name_matches_prefix z_s1124z3) with
                                                                    | ZSome (zrs1, z_s1125z3) ->
                                                                      begin
                                                                        match (string_drop (z_s1124z3, z_s1125z3)) with
                                                                        | z_s1126z3 ->
                                                                          begin
                                                                            match (zsep_matches_prefix z_s1126z3) with
                                                                            | ZSome ((), z_s1127z3) ->
                                                                              begin
                                                                                match (string_drop (z_s1126z3, z_s1127z3)) with
                                                                                | z_s1128z3 ->
                                                                                  begin
                                                                                    match (zreg_name_matches_prefix z_s1128z3) with
                                                                                    | ZSome (zrs2, z_s1129z3) ->
                                                                                      begin
                                                                                        match (string_drop (z_s1128z3, z_s1129z3)) with
                                                                                        | "" ->
                                                                                          ZSome (zop, zwidth, zaq, zrl, zrd, zrs1, zrs2)
                                                                                        | _ ->
                                                                                          ZNone ()
                                                                                      end
                                                                                    | _ ->
                                                                                      ZNone ()
                                                                                  end
                                                                                | _ ->
                                                                                  ZNone ()
                                                                              end
                                                                            | _ ->
                                                                              ZNone ()
                                                                          end
                                                                        | _ ->
                                                                          ZNone ()
                                                                      end
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1085z3 (z_s1086z3 : (string)) : ((zword_width * bool * bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1086z3 with
    | z_s1087z3 when (string_startswith (z_s1087z3, "sc.")) ->
      begin
        match (string_drop (z_s1087z3, (string_length "sc."))) with
        | z_s1088z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s1088z3) with
            | ZSome (zsizze, z_s1089z3) ->
              begin
                match (string_drop (z_s1088z3, z_s1089z3)) with
                | z_s1090z3 ->
                  begin
                    match (zmaybe_aq_matches_prefix z_s1090z3) with
                    | ZSome (zaq, z_s1091z3) ->
                      begin
                        match (string_drop (z_s1090z3, z_s1091z3)) with
                        | z_s1092z3 ->
                          begin
                            match (zmaybe_rl_matches_prefix z_s1092z3) with
                            | ZSome (zrl, z_s1093z3) ->
                              begin
                                match (string_drop (z_s1092z3, z_s1093z3)) with
                                | z_s1094z3 ->
                                  begin
                                    match (zspc_matches_prefix z_s1094z3) with
                                    | ZSome ((), z_s1095z3) ->
                                      begin
                                        match (string_drop (z_s1094z3, z_s1095z3)) with
                                        | z_s1096z3 ->
                                          begin
                                            match (zreg_name_matches_prefix z_s1096z3) with
                                            | ZSome (zrd, z_s1097z3) ->
                                              begin
                                                match (string_drop (z_s1096z3, z_s1097z3)) with
                                                | z_s1098z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s1098z3) with
                                                    | ZSome ((), z_s1099z3) ->
                                                      begin
                                                        match (string_drop (z_s1098z3, z_s1099z3)) with
                                                        | z_s1100z3 ->
                                                          begin
                                                            match (zreg_name_matches_prefix z_s1100z3) with
                                                            | ZSome (zrs1, z_s1101z3) ->
                                                              begin
                                                                match (string_drop (z_s1100z3, z_s1101z3)) with
                                                                | z_s1102z3 ->
                                                                  begin
                                                                    match (zsep_matches_prefix z_s1102z3) with
                                                                    | ZSome ((), z_s1103z3) ->
                                                                      begin
                                                                        match (string_drop (z_s1102z3, z_s1103z3)) with
                                                                        | z_s1104z3 ->
                                                                          begin
                                                                            match (zreg_name_matches_prefix z_s1104z3) with
                                                                            | ZSome (zrs2, z_s1105z3) ->
                                                                              begin
                                                                                match (string_drop (z_s1104z3, z_s1105z3)) with
                                                                                | "" ->
                                                                                  ZSome (zsizze, zaq, zrl, zrd, zrs1, zrs2)
                                                                                | _ ->
                                                                                  ZNone ()
                                                                              end
                                                                            | _ ->
                                                                              ZNone ()
                                                                          end
                                                                        | _ ->
                                                                          ZNone ()
                                                                      end
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1067z3 (z_s1068z3 : (string)) : ((zword_width * bool * bool * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1068z3 with
    | z_s1069z3 when (string_startswith (z_s1069z3, "lr.")) ->
      begin
        match (string_drop (z_s1069z3, (string_length "lr."))) with
        | z_s1070z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s1070z3) with
            | ZSome (zsizze, z_s1071z3) ->
              begin
                match (string_drop (z_s1070z3, z_s1071z3)) with
                | z_s1072z3 ->
                  begin
                    match (zmaybe_aq_matches_prefix z_s1072z3) with
                    | ZSome (zaq, z_s1073z3) ->
                      begin
                        match (string_drop (z_s1072z3, z_s1073z3)) with
                        | z_s1074z3 ->
                          begin
                            match (zmaybe_rl_matches_prefix z_s1074z3) with
                            | ZSome (zrl, z_s1075z3) ->
                              begin
                                match (string_drop (z_s1074z3, z_s1075z3)) with
                                | z_s1076z3 ->
                                  begin
                                    match (zspc_matches_prefix z_s1076z3) with
                                    | ZSome ((), z_s1077z3) ->
                                      begin
                                        match (string_drop (z_s1076z3, z_s1077z3)) with
                                        | z_s1078z3 ->
                                          begin
                                            match (zreg_name_matches_prefix z_s1078z3) with
                                            | ZSome (zrd, z_s1079z3) ->
                                              begin
                                                match (string_drop (z_s1078z3, z_s1079z3)) with
                                                | z_s1080z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s1080z3) with
                                                    | ZSome ((), z_s1081z3) ->
                                                      begin
                                                        match (string_drop (z_s1080z3, z_s1081z3)) with
                                                        | z_s1082z3 ->
                                                          begin
                                                            match (zreg_name_matches_prefix z_s1082z3) with
                                                            | ZSome (zrs1, z_s1083z3) ->
                                                              begin
                                                                match (string_drop (z_s1082z3, z_s1083z3)) with
                                                                | "" ->
                                                                  ZSome (zsizze, zaq, zrl, zrd, zrs1)
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1055z3 (z_s1056z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1056z3 with
    | z_s1057z3 when (string_startswith (z_s1057z3, "sfence.vma")) ->
      begin
        match (string_drop (z_s1057z3, (string_length "sfence.vma"))) with
        | z_s1058z3 ->
          begin
            match (zspc_matches_prefix z_s1058z3) with
            | ZSome ((), z_s1059z3) ->
              begin
                match (string_drop (z_s1058z3, z_s1059z3)) with
                | z_s1060z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s1060z3) with
                    | ZSome (zrs1, z_s1061z3) ->
                      begin
                        match (string_drop (z_s1060z3, z_s1061z3)) with
                        | z_s1062z3 ->
                          begin
                            match (zsep_matches_prefix z_s1062z3) with
                            | ZSome ((), z_s1063z3) ->
                              begin
                                match (string_drop (z_s1062z3, z_s1063z3)) with
                                | z_s1064z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s1064z3) with
                                    | ZSome (zrs2, z_s1065z3) ->
                                      begin
                                        match (string_drop (z_s1064z3, z_s1065z3)) with
                                        | "" -> ZSome (zrs1, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1043z3 (z_s1044z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1044z3 with
    | z_s1045z3 when (string_startswith (z_s1045z3, "fence.tso")) ->
      begin
        match (string_drop (z_s1045z3, (string_length "fence.tso"))) with
        | z_s1046z3 ->
          begin
            match (zspc_matches_prefix z_s1046z3) with
            | ZSome ((), z_s1047z3) ->
              begin
                match (string_drop (z_s1046z3, z_s1047z3)) with
                | z_s1048z3 ->
                  begin
                    match (zfence_bits_matches_prefix z_s1048z3) with
                    | ZSome (zpred, z_s1049z3) ->
                      begin
                        match (string_drop (z_s1048z3, z_s1049z3)) with
                        | z_s1050z3 ->
                          begin
                            match (zsep_matches_prefix z_s1050z3) with
                            | ZSome ((), z_s1051z3) ->
                              begin
                                match (string_drop (z_s1050z3, z_s1051z3)) with
                                | z_s1052z3 ->
                                  begin
                                    match (zfence_bits_matches_prefix z_s1052z3) with
                                    | ZSome (zsucc, z_s1053z3) ->
                                      begin
                                        match (string_drop (z_s1052z3, z_s1053z3)) with
                                        | "" -> ZSome (zpred, zsucc)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1031z3 (z_s1032z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1032z3 with
    | z_s1033z3 when (string_startswith (z_s1033z3, "fence")) ->
      begin
        match (string_drop (z_s1033z3, (string_length "fence"))) with
        | z_s1034z3 ->
          begin
            match (zspc_matches_prefix z_s1034z3) with
            | ZSome ((), z_s1035z3) ->
              begin
                match (string_drop (z_s1034z3, z_s1035z3)) with
                | z_s1036z3 ->
                  begin
                    match (zfence_bits_matches_prefix z_s1036z3) with
                    | ZSome (zpred, z_s1037z3) ->
                      begin
                        match (string_drop (z_s1036z3, z_s1037z3)) with
                        | z_s1038z3 ->
                          begin
                            match (zsep_matches_prefix z_s1038z3) with
                            | ZSome ((), z_s1039z3) ->
                              begin
                                match (string_drop (z_s1038z3, z_s1039z3)) with
                                | z_s1040z3 ->
                                  begin
                                    match (zfence_bits_matches_prefix z_s1040z3) with
                                    | ZSome (zsucc, z_s1041z3) ->
                                      begin
                                        match (string_drop (z_s1040z3, z_s1041z3)) with
                                        | "" -> ZSome (zpred, zsucc)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s1016z3 (z_s1017z3 : (string)) : ((zsopw * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1017z3 with
    | z_s1018z3 ->
      begin
        match (zshiftiwop_mnemonic_matches_prefix z_s1018z3) with
        | ZSome (zop, z_s1019z3) ->
          begin
            match (string_drop (z_s1018z3, z_s1019z3)) with
            | z_s1020z3 ->
              begin
                match (zspc_matches_prefix z_s1020z3) with
                | ZSome ((), z_s1021z3) ->
                  begin
                    match (string_drop (z_s1020z3, z_s1021z3)) with
                    | z_s1022z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s1022z3) with
                        | ZSome (zrd, z_s1023z3) ->
                          begin
                            match (string_drop (z_s1022z3, z_s1023z3)) with
                            | z_s1024z3 ->
                              begin
                                match (zsep_matches_prefix z_s1024z3) with
                                | ZSome ((), z_s1025z3) ->
                                  begin
                                    match (string_drop (z_s1024z3, z_s1025z3)) with
                                    | z_s1026z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s1026z3) with
                                        | ZSome (zrs1, z_s1027z3) ->
                                          begin
                                            match (string_drop (z_s1026z3, z_s1027z3)) with
                                            | z_s1028z3 ->
                                              begin
                                                match (hex_bits_5_matches_prefix z_s1028z3) with
                                                | ZSome (zshamt, z_s1029z3) ->
                                                  begin
                                                    match (string_drop (z_s1028z3, z_s1029z3)) with
                                                    | "" ->
                                                      ZSome (zop, zrd, zrs1, zshamt)
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s999z3 (z_s1000z3 : (string)) : ((zropw * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s1000z3 with
    | z_s1001z3 ->
      begin
        match (zrtypew_mnemonic_matches_prefix z_s1001z3) with
        | ZSome (zop, z_s1002z3) ->
          begin
            match (string_drop (z_s1001z3, z_s1002z3)) with
            | z_s1003z3 ->
              begin
                match (zspc_matches_prefix z_s1003z3) with
                | ZSome ((), z_s1004z3) ->
                  begin
                    match (string_drop (z_s1003z3, z_s1004z3)) with
                    | z_s1005z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s1005z3) with
                        | ZSome (zrd, z_s1006z3) ->
                          begin
                            match (string_drop (z_s1005z3, z_s1006z3)) with
                            | z_s1007z3 ->
                              begin
                                match (zsep_matches_prefix z_s1007z3) with
                                | ZSome ((), z_s1008z3) ->
                                  begin
                                    match (string_drop (z_s1007z3, z_s1008z3)) with
                                    | z_s1009z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s1009z3) with
                                        | ZSome (zrs1, z_s1010z3) ->
                                          begin
                                            match (string_drop (z_s1009z3, z_s1010z3)) with
                                            | z_s1011z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s1011z3) with
                                                | ZSome ((), z_s1012z3) ->
                                                  begin
                                                    match (string_drop (z_s1011z3, z_s1012z3)) with
                                                    | z_s1013z3 ->
                                                      begin
                                                        match (zreg_name_matches_prefix z_s1013z3) with
                                                        | ZSome (zrs2, z_s1014z3) ->
                                                          begin
                                                            match (string_drop (z_s1013z3, z_s1014z3)) with
                                                            | "" ->
                                                              ZSome (zop, zrd, zrs1, zrs2)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s982z3 (z_s983z3 : (string)) : ((zsop * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s983z3 with
    | z_s984z3 ->
      begin
        match (zshiftw_mnemonic_matches_prefix z_s984z3) with
        | ZSome (zop, z_s985z3) ->
          begin
            match (string_drop (z_s984z3, z_s985z3)) with
            | z_s986z3 ->
              begin
                match (zspc_matches_prefix z_s986z3) with
                | ZSome ((), z_s987z3) ->
                  begin
                    match (string_drop (z_s986z3, z_s987z3)) with
                    | z_s988z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s988z3) with
                        | ZSome (zrd, z_s989z3) ->
                          begin
                            match (string_drop (z_s988z3, z_s989z3)) with
                            | z_s990z3 ->
                              begin
                                match (zsep_matches_prefix z_s990z3) with
                                | ZSome ((), z_s991z3) ->
                                  begin
                                    match (string_drop (z_s990z3, z_s991z3)) with
                                    | z_s992z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s992z3) with
                                        | ZSome (zrs1, z_s993z3) ->
                                          begin
                                            match (string_drop (z_s992z3, z_s993z3)) with
                                            | z_s994z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s994z3) with
                                                | ZSome ((), z_s995z3) ->
                                                  begin
                                                    match (string_drop (z_s994z3, z_s995z3)) with
                                                    | z_s996z3 ->
                                                      begin
                                                        match (hex_bits_5_matches_prefix z_s996z3) with
                                                        | ZSome (zshamt, z_s997z3) ->
                                                          begin
                                                            match (string_drop (z_s996z3, z_s997z3)) with
                                                            | "" ->
                                                              ZSome (zop, zrd, zrs1, zshamt)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s966z3 (z_s967z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s967z3 with
    | z_s968z3 when (string_startswith (z_s968z3, "addiw")) ->
      begin
        match (string_drop (z_s968z3, (string_length "addiw"))) with
        | z_s969z3 ->
          begin
            match (zspc_matches_prefix z_s969z3) with
            | ZSome ((), z_s970z3) ->
              begin
                match (string_drop (z_s969z3, z_s970z3)) with
                | z_s971z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s971z3) with
                    | ZSome (zrd, z_s972z3) ->
                      begin
                        match (string_drop (z_s971z3, z_s972z3)) with
                        | z_s973z3 ->
                          begin
                            match (zsep_matches_prefix z_s973z3) with
                            | ZSome ((), z_s974z3) ->
                              begin
                                match (string_drop (z_s973z3, z_s974z3)) with
                                | z_s975z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s975z3) with
                                    | ZSome (zrs1, z_s976z3) ->
                                      begin
                                        match (string_drop (z_s975z3, z_s976z3)) with
                                        | z_s977z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s977z3) with
                                            | ZSome ((), z_s978z3) ->
                                              begin
                                                match (string_drop (z_s977z3, z_s978z3)) with
                                                | z_s979z3 ->
                                                  begin
                                                    match (hex_bits_12_matches_prefix z_s979z3) with
                                                    | ZSome (zimm, z_s980z3) ->
                                                      begin
                                                        match (string_drop (z_s979z3, z_s980z3)) with
                                                        | "" ->
                                                          ZSome (zrd, zrs1, zimm)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s944z3 (z_s945z3 : (string)) : ((zword_width * bool * bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s945z3 with
    | z_s946z3 when (string_startswith (z_s946z3, "s")) ->
      begin
        match (string_drop (z_s946z3, (string_length "s"))) with
        | z_s947z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s947z3) with
            | ZSome (zsizze, z_s948z3) ->
              begin
                match (string_drop (z_s947z3, z_s948z3)) with
                | z_s949z3 ->
                  begin
                    match (zmaybe_aq_matches_prefix z_s949z3) with
                    | ZSome (zaq, z_s950z3) ->
                      begin
                        match (string_drop (z_s949z3, z_s950z3)) with
                        | z_s951z3 ->
                          begin
                            match (zmaybe_rl_matches_prefix z_s951z3) with
                            | ZSome (zrl, z_s952z3) ->
                              begin
                                match (string_drop (z_s951z3, z_s952z3)) with
                                | z_s953z3 ->
                                  begin
                                    match (zspc_matches_prefix z_s953z3) with
                                    | ZSome ((), z_s954z3) ->
                                      begin
                                        match (string_drop (z_s953z3, z_s954z3)) with
                                        | z_s955z3 ->
                                          begin
                                            match (zreg_name_matches_prefix z_s955z3) with
                                            | ZSome (zrd, z_s956z3) ->
                                              begin
                                                match (string_drop (z_s955z3, z_s956z3)) with
                                                | z_s957z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s957z3) with
                                                    | ZSome ((), z_s958z3) ->
                                                      begin
                                                        match (string_drop (z_s957z3, z_s958z3)) with
                                                        | z_s959z3 ->
                                                          begin
                                                            match (zreg_name_matches_prefix z_s959z3) with
                                                            | ZSome (zrs1, z_s960z3) ->
                                                              begin
                                                                match (string_drop (z_s959z3, z_s960z3)) with
                                                                | z_s961z3 ->
                                                                  begin
                                                                    match (zsep_matches_prefix z_s961z3) with
                                                                    | ZSome ((), z_s962z3) ->
                                                                      begin
                                                                        match (string_drop (z_s961z3, z_s962z3)) with
                                                                        | z_s963z3 ->
                                                                          begin
                                                                            match (hex_bits_12_matches_prefix z_s963z3) with
                                                                            | ZSome (zimm, z_s964z3) ->
                                                                              begin
                                                                                match (string_drop (z_s963z3, z_s964z3)) with
                                                                                | "" ->
                                                                                  ZSome (zsizze, zaq, zrl, zrd, zrs1, zimm)
                                                                                | _ ->
                                                                                  ZNone ()
                                                                              end
                                                                            | _ ->
                                                                              ZNone ()
                                                                          end
                                                                        | _ ->
                                                                          ZNone ()
                                                                      end
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s920z3 (z_s921z3 : (string)) : ((zword_width * bool * bool * bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s921z3 with
    | z_s922z3 when (string_startswith (z_s922z3, "l")) ->
      begin
        match (string_drop (z_s922z3, (string_length "l"))) with
        | z_s923z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s923z3) with
            | ZSome (zsizze, z_s924z3) ->
              begin
                match (string_drop (z_s923z3, z_s924z3)) with
                | z_s925z3 ->
                  begin
                    match (zmaybe_u_matches_prefix z_s925z3) with
                    | ZSome (zis_unsigned, z_s926z3) ->
                      begin
                        match (string_drop (z_s925z3, z_s926z3)) with
                        | z_s927z3 ->
                          begin
                            match (zmaybe_aq_matches_prefix z_s927z3) with
                            | ZSome (zaq, z_s928z3) ->
                              begin
                                match (string_drop (z_s927z3, z_s928z3)) with
                                | z_s929z3 ->
                                  begin
                                    match (zmaybe_rl_matches_prefix z_s929z3) with
                                    | ZSome (zrl, z_s930z3) ->
                                      begin
                                        match (string_drop (z_s929z3, z_s930z3)) with
                                        | z_s931z3 ->
                                          begin
                                            match (zspc_matches_prefix z_s931z3) with
                                            | ZSome ((), z_s932z3) ->
                                              begin
                                                match (string_drop (z_s931z3, z_s932z3)) with
                                                | z_s933z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s933z3) with
                                                    | ZSome (zrd, z_s934z3) ->
                                                      begin
                                                        match (string_drop (z_s933z3, z_s934z3)) with
                                                        | z_s935z3 ->
                                                          begin
                                                            match (zsep_matches_prefix z_s935z3) with
                                                            | ZSome ((), z_s936z3) ->
                                                              begin
                                                                match (string_drop (z_s935z3, z_s936z3)) with
                                                                | z_s937z3 ->
                                                                  begin
                                                                    match (zreg_name_matches_prefix z_s937z3) with
                                                                    | ZSome (zrs1, z_s938z3) ->
                                                                      begin
                                                                        match (string_drop (z_s937z3, z_s938z3)) with
                                                                        | z_s939z3 ->
                                                                          begin
                                                                            match (zsep_matches_prefix z_s939z3) with
                                                                            | ZSome ((), z_s940z3) ->
                                                                              begin
                                                                                match (string_drop (z_s939z3, z_s940z3)) with
                                                                                | z_s941z3 ->
                                                                                  begin
                                                                                    match (hex_bits_12_matches_prefix z_s941z3) with
                                                                                    | ZSome (zimm, z_s942z3) ->
                                                                                      begin
                                                                                        match (string_drop (z_s941z3, z_s942z3)) with
                                                                                        | "" ->
                                                                                          ZSome (zsizze, zis_unsigned, zaq, zrl, zrd, zrs1, zimm)
                                                                                        | _ ->
                                                                                          ZNone ()
                                                                                      end
                                                                                    | _ ->
                                                                                      ZNone ()
                                                                                  end
                                                                                | _ ->
                                                                                  ZNone ()
                                                                              end
                                                                            | _ ->
                                                                              ZNone ()
                                                                          end
                                                                        | _ ->
                                                                          ZNone ()
                                                                      end
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s903z3 (z_s904z3 : (string)) : ((zrop * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s904z3 with
    | z_s905z3 ->
      begin
        match (zrtype_mnemonic_matches_prefix z_s905z3) with
        | ZSome (zop, z_s906z3) ->
          begin
            match (string_drop (z_s905z3, z_s906z3)) with
            | z_s907z3 ->
              begin
                match (zspc_matches_prefix z_s907z3) with
                | ZSome ((), z_s908z3) ->
                  begin
                    match (string_drop (z_s907z3, z_s908z3)) with
                    | z_s909z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s909z3) with
                        | ZSome (zrd, z_s910z3) ->
                          begin
                            match (string_drop (z_s909z3, z_s910z3)) with
                            | z_s911z3 ->
                              begin
                                match (zsep_matches_prefix z_s911z3) with
                                | ZSome ((), z_s912z3) ->
                                  begin
                                    match (string_drop (z_s911z3, z_s912z3)) with
                                    | z_s913z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s913z3) with
                                        | ZSome (zrs1, z_s914z3) ->
                                          begin
                                            match (string_drop (z_s913z3, z_s914z3)) with
                                            | z_s915z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s915z3) with
                                                | ZSome ((), z_s916z3) ->
                                                  begin
                                                    match (string_drop (z_s915z3, z_s916z3)) with
                                                    | z_s917z3 ->
                                                      begin
                                                        match (zreg_name_matches_prefix z_s917z3) with
                                                        | ZSome (zrs2, z_s918z3) ->
                                                          begin
                                                            match (string_drop (z_s917z3, z_s918z3)) with
                                                            | "" ->
                                                              ZSome (zop, zrd, zrs1, zrs2)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s888z3 (z_s889z3 : (string)) : ((zsop * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s889z3 with
    | z_s890z3 ->
      begin
        match (zshiftiop_mnemonic_matches_prefix z_s890z3) with
        | ZSome (zop, z_s891z3) ->
          begin
            match (string_drop (z_s890z3, z_s891z3)) with
            | z_s892z3 ->
              begin
                match (zspc_matches_prefix z_s892z3) with
                | ZSome ((), z_s893z3) ->
                  begin
                    match (string_drop (z_s892z3, z_s893z3)) with
                    | z_s894z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s894z3) with
                        | ZSome (zrd, z_s895z3) ->
                          begin
                            match (string_drop (z_s894z3, z_s895z3)) with
                            | z_s896z3 ->
                              begin
                                match (zsep_matches_prefix z_s896z3) with
                                | ZSome ((), z_s897z3) ->
                                  begin
                                    match (string_drop (z_s896z3, z_s897z3)) with
                                    | z_s898z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s898z3) with
                                        | ZSome (zrs1, z_s899z3) ->
                                          begin
                                            match (string_drop (z_s898z3, z_s899z3)) with
                                            | z_s900z3 ->
                                              begin
                                                match (hex_bits_6_matches_prefix z_s900z3) with
                                                | ZSome (zshamt, z_s901z3) ->
                                                  begin
                                                    match (string_drop (z_s900z3, z_s901z3)) with
                                                    | "" ->
                                                      ZSome (zop, zrd, zrs1, zshamt)
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s871z3 (z_s872z3 : (string)) : ((ziop * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s872z3 with
    | z_s873z3 ->
      begin
        match (zitype_mnemonic_matches_prefix z_s873z3) with
        | ZSome (zop, z_s874z3) ->
          begin
            match (string_drop (z_s873z3, z_s874z3)) with
            | z_s875z3 ->
              begin
                match (zspc_matches_prefix z_s875z3) with
                | ZSome ((), z_s876z3) ->
                  begin
                    match (string_drop (z_s875z3, z_s876z3)) with
                    | z_s877z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s877z3) with
                        | ZSome (zrd, z_s878z3) ->
                          begin
                            match (string_drop (z_s877z3, z_s878z3)) with
                            | z_s879z3 ->
                              begin
                                match (zsep_matches_prefix z_s879z3) with
                                | ZSome ((), z_s880z3) ->
                                  begin
                                    match (string_drop (z_s879z3, z_s880z3)) with
                                    | z_s881z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s881z3) with
                                        | ZSome (zrs1, z_s882z3) ->
                                          begin
                                            match (string_drop (z_s881z3, z_s882z3)) with
                                            | z_s883z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s883z3) with
                                                | ZSome ((), z_s884z3) ->
                                                  begin
                                                    match (string_drop (z_s883z3, z_s884z3)) with
                                                    | z_s885z3 ->
                                                      begin
                                                        match (hex_bits_12_matches_prefix z_s885z3) with
                                                        | ZSome (zimm, z_s886z3) ->
                                                          begin
                                                            match (string_drop (z_s885z3, z_s886z3)) with
                                                            | "" ->
                                                              ZSome (zop, zrd, zrs1, zimm)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s854z3 (z_s855z3 : (string)) : ((zbop * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s855z3 with
    | z_s856z3 ->
      begin
        match (zbtype_mnemonic_matches_prefix z_s856z3) with
        | ZSome (zop, z_s857z3) ->
          begin
            match (string_drop (z_s856z3, z_s857z3)) with
            | z_s858z3 ->
              begin
                match (zspc_matches_prefix z_s858z3) with
                | ZSome ((), z_s859z3) ->
                  begin
                    match (string_drop (z_s858z3, z_s859z3)) with
                    | z_s860z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s860z3) with
                        | ZSome (zrs1, z_s861z3) ->
                          begin
                            match (string_drop (z_s860z3, z_s861z3)) with
                            | z_s862z3 ->
                              begin
                                match (zsep_matches_prefix z_s862z3) with
                                | ZSome ((), z_s863z3) ->
                                  begin
                                    match (string_drop (z_s862z3, z_s863z3)) with
                                    | z_s864z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s864z3) with
                                        | ZSome (zrs2, z_s865z3) ->
                                          begin
                                            match (string_drop (z_s864z3, z_s865z3)) with
                                            | z_s866z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s866z3) with
                                                | ZSome ((), z_s867z3) ->
                                                  begin
                                                    match (string_drop (z_s866z3, z_s867z3)) with
                                                    | z_s868z3 ->
                                                      begin
                                                        match (hex_bits_13_matches_prefix z_s868z3) with
                                                        | ZSome (zimm, z_s869z3) ->
                                                          begin
                                                            match (string_drop (z_s868z3, z_s869z3)) with
                                                            | "" ->
                                                              ZSome (zop, zrs1, zrs2, zimm)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s838z3 (z_s839z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s839z3 with
    | z_s840z3 when (string_startswith (z_s840z3, "jalr")) ->
      begin
        match (string_drop (z_s840z3, (string_length "jalr"))) with
        | z_s841z3 ->
          begin
            match (zspc_matches_prefix z_s841z3) with
            | ZSome ((), z_s842z3) ->
              begin
                match (string_drop (z_s841z3, z_s842z3)) with
                | z_s843z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s843z3) with
                    | ZSome (zrd, z_s844z3) ->
                      begin
                        match (string_drop (z_s843z3, z_s844z3)) with
                        | z_s845z3 ->
                          begin
                            match (zsep_matches_prefix z_s845z3) with
                            | ZSome ((), z_s846z3) ->
                              begin
                                match (string_drop (z_s845z3, z_s846z3)) with
                                | z_s847z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s847z3) with
                                    | ZSome (zrs1, z_s848z3) ->
                                      begin
                                        match (string_drop (z_s847z3, z_s848z3)) with
                                        | z_s849z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s849z3) with
                                            | ZSome ((), z_s850z3) ->
                                              begin
                                                match (string_drop (z_s849z3, z_s850z3)) with
                                                | z_s851z3 ->
                                                  begin
                                                    match (hex_bits_12_matches_prefix z_s851z3) with
                                                    | ZSome (zimm, z_s852z3) ->
                                                      begin
                                                        match (string_drop (z_s851z3, z_s852z3)) with
                                                        | "" ->
                                                          ZSome (zrd, zrs1, zimm)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s826z3 (z_s827z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s827z3 with
    | z_s828z3 when (string_startswith (z_s828z3, "jal")) ->
      begin
        match (string_drop (z_s828z3, (string_length "jal"))) with
        | z_s829z3 ->
          begin
            match (zspc_matches_prefix z_s829z3) with
            | ZSome ((), z_s830z3) ->
              begin
                match (string_drop (z_s829z3, z_s830z3)) with
                | z_s831z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s831z3) with
                    | ZSome (zrd, z_s832z3) ->
                      begin
                        match (string_drop (z_s831z3, z_s832z3)) with
                        | z_s833z3 ->
                          begin
                            match (zsep_matches_prefix z_s833z3) with
                            | ZSome ((), z_s834z3) ->
                              begin
                                match (string_drop (z_s833z3, z_s834z3)) with
                                | z_s835z3 ->
                                  begin
                                    match (hex_bits_21_matches_prefix z_s835z3) with
                                    | ZSome (zimm, z_s836z3) ->
                                      begin
                                        match (string_drop (z_s835z3, z_s836z3)) with
                                        | "" -> ZSome (zrd, zimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s813z3 (z_s814z3 : (string)) : ((zuop * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s814z3 with
    | z_s815z3 ->
      begin
        match (zutype_mnemonic_matches_prefix z_s815z3) with
        | ZSome (zop, z_s816z3) ->
          begin
            match (string_drop (z_s815z3, z_s816z3)) with
            | z_s817z3 ->
              begin
                match (zspc_matches_prefix z_s817z3) with
                | ZSome ((), z_s818z3) ->
                  begin
                    match (string_drop (z_s817z3, z_s818z3)) with
                    | z_s819z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s819z3) with
                        | ZSome (zrd, z_s820z3) ->
                          begin
                            match (string_drop (z_s819z3, z_s820z3)) with
                            | z_s821z3 ->
                              begin
                                match (zsep_matches_prefix z_s821z3) with
                                | ZSome ((), z_s822z3) ->
                                  begin
                                    match (string_drop (z_s821z3, z_s822z3)) with
                                    | z_s823z3 ->
                                      begin
                                        match (hex_bits_20_matches_prefix z_s823z3) with
                                        | ZSome (zimm, z_s824z3) ->
                                          begin
                                            match (string_drop (z_s823z3, z_s824z3)) with
                                            | "" -> ZSome (zop, zrd, zimm)
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zassembly_backwards (zargz3 : (string)) : zast = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s825z3 when (begin
      match (z_s813z3 z_s825z3) with
      | ZSome (zop, zrd, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zimm) = (z_s813z3 z_s825z3) in
      ZUTYPE (zimm, zrd, zop)
    | z_s837z3 when (begin
      match (z_s826z3 z_s837z3) with
      | ZSome (zrd, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zimm) = (z_s826z3 z_s837z3) in ZRISCV_JAL (zimm, zrd)
    | z_s853z3 when (begin
      match (z_s838z3 z_s853z3) with
      | ZSome (zrd, zrs1, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs1, zimm) = (z_s838z3 z_s853z3) in
      ZRISCV_JALR (zimm, zrs1, zrd)
    | z_s870z3 when (begin
      match (z_s854z3 z_s870z3) with
      | ZSome (zop, zrs1, zrs2, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrs1, zrs2, zimm) = (z_s854z3 z_s870z3) in
      ZBTYPE (zimm, zrs2, zrs1, zop)
    | z_s887z3 when (begin
      match (z_s871z3 z_s887z3) with
      | ZSome (zop, zrd, zrs1, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zimm) = (z_s871z3 z_s887z3) in
      ZITYPE (zimm, zrs1, zrd, zop)
    | z_s902z3 when (begin
      match (z_s888z3 z_s902z3) with
      | ZSome (zop, zrd, zrs1, zshamt) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zshamt) = (z_s888z3 z_s902z3) in
      ZSHIFTIOP (zshamt, zrs1, zrd, zop)
    | z_s919z3 when (begin
      match (z_s903z3 z_s919z3) with
      | ZSome (zop, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zrs2) = (z_s903z3 z_s919z3) in
      ZRTYPE (zrs2, zrs1, zrd, zop)
    | z_s943z3 when (begin
      match (z_s920z3 z_s943z3) with
      | ZSome (zsizze, zis_unsigned, zaq, zrl, zrd, zrs1, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zsizze, zis_unsigned, zaq, zrl, zrd, zrs1, zimm) = (z_s920z3 z_s943z3) in
      ZLOAD (zimm, zrs1, zrd, zis_unsigned, zsizze, zaq, zrl)
    | z_s965z3 when (begin
      match (z_s944z3 z_s965z3) with
      | ZSome (zsizze, zaq, zrl, zrd, zrs1, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zsizze, zaq, zrl, zrd, zrs1, zimm) = (z_s944z3 z_s965z3) in
      ZSTORE (zimm, zrs1, zrd, zsizze, zaq, zrl)
    | z_s981z3 when (begin
      match (z_s966z3 z_s981z3) with
      | ZSome (zrd, zrs1, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs1, zimm) = (z_s966z3 z_s981z3) in
      ZADDIW (zimm, zrs1, zrd)
    | z_s998z3 when (begin
      match (z_s982z3 z_s998z3) with
      | ZSome (zop, zrd, zrs1, zshamt) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zshamt) = (z_s982z3 z_s998z3) in
      ZSHIFTW (zshamt, zrs1, zrd, zop)
    | z_s1015z3 when (begin
      match (z_s999z3 z_s1015z3) with
      | ZSome (zop, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zrs2) = (z_s999z3 z_s1015z3) in
      ZRTYPEW (zrs2, zrs1, zrd, zop)
    | z_s1030z3 when (begin
      match (z_s1016z3 z_s1030z3) with
      | ZSome (zop, zrd, zrs1, zshamt) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zshamt) = (z_s1016z3 z_s1030z3) in
      ZSHIFTIWOP (zshamt, zrs1, zrd, zop)
    | z_s1042z3 when (begin
      match (z_s1031z3 z_s1042z3) with
      | ZSome (zpred, zsucc) -> true
      | _ -> false
    end) ->
      let ZSome (zpred, zsucc) = (z_s1031z3 z_s1042z3) in ZFENCE (zpred, zsucc)
    | z_s1054z3 when (begin
      match (z_s1043z3 z_s1054z3) with
      | ZSome (zpred, zsucc) -> true
      | _ -> false
    end) ->
      let ZSome (zpred, zsucc) = (z_s1043z3 z_s1054z3) in
      ZFENCE_TSO (zpred, zsucc)
    | "fence.i" -> ZFENCEI ()
    | "ecall" -> ZECALL ()
    | "mret" -> ZMRET ()
    | "sret" -> ZSRET ()
    | "ebreak" -> ZEBREAK ()
    | "wfi" -> ZWFI ()
    | z_s1066z3 when (begin
      match (z_s1055z3 z_s1066z3) with
      | ZSome (zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zrs1, zrs2) = (z_s1055z3 z_s1066z3) in ZSFENCE_VMA (zrs1, zrs2)
    | z_s1084z3 when (begin
      match (z_s1067z3 z_s1084z3) with
      | ZSome (zsizze, zaq, zrl, zrd, zrs1) -> true
      | _ -> false
    end) ->
      let ZSome (zsizze, zaq, zrl, zrd, zrs1) = (z_s1067z3 z_s1084z3) in
      ZLOADRES (zaq, zrl, zrs1, zsizze, zrd)
    | z_s1106z3 when (begin
      match (z_s1085z3 z_s1106z3) with
      | ZSome (zsizze, zaq, zrl, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zsizze, zaq, zrl, zrd, zrs1, zrs2) = (z_s1085z3 z_s1106z3) in
      ZSTORECON (zaq, zrl, zrs2, zrs1, zsizze, zrd)
    | z_s1130z3 when (begin
      match (z_s1107z3 z_s1130z3) with
      | ZSome (zop, zwidth, zaq, zrl, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zwidth, zaq, zrl, zrd, zrs1, zrs2) = (z_s1107z3 z_s1130z3) in
      ZAMO (zop, zaq, zrl, zrs2, zrs1, zwidth, zrd)
    | "c.nop" -> ZC_NOP ()
    | z_s1142z3 when (begin
      match (z_s1131z3 z_s1142z3) with
      | ZSome (zrdc, znzzimm) ->
        zneq_vec (znzzimm, [B0; B0; B0; B0; B0; B0; B0; B0])
      | _ -> false
    end) ->
      let ZSome (zrdc, znzzimm) = (z_s1131z3 z_s1142z3) in
      ZC_ADDI4SPN (zrdc, znzzimm)
    | z_s1158z3 when (begin
      match (z_s1143z3 z_s1158z3) with
      | ZSome (zrdc, zrsc, zuimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrdc, zrsc, zuimm) = (z_s1143z3 z_s1158z3) in
      ZC_LW (zuimm, zrsc, zrdc)
    | z_s1174z3 when (begin
      match (z_s1159z3 z_s1174z3) with
      | ZSome (zrdc, zrsc, zuimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrdc, zrsc, zuimm) = (z_s1159z3 z_s1174z3) in
      ZC_LD (zuimm, zrsc, zrdc)
    | z_s1190z3 when (begin
      match (z_s1175z3 z_s1190z3) with
      | ZSome (zrsc1, zrsc2, zuimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrsc1, zrsc2, zuimm) = (z_s1175z3 z_s1190z3) in
      ZC_SW (zuimm, zrsc1, zrsc2)
    | z_s1206z3 when (begin
      match (z_s1191z3 z_s1206z3) with
      | ZSome (zrsc1, zrsc2, zuimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrsc1, zrsc2, zuimm) = (z_s1191z3 z_s1206z3) in
      ZC_SD (zuimm, zrsc1, zrsc2)
    | z_s1218z3 when (begin
      match (z_s1207z3 z_s1218z3) with
      | ZSome (zrsd, znzzi) ->
        (zneq_vec (znzzi, [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))
      | _ -> false
    end) ->
      let ZSome (zrsd, znzzi) = (z_s1207z3 z_s1218z3) in ZC_ADDI (znzzi, zrsd)
    | z_s1226z3 when (begin
      match (z_s1219z3 z_s1226z3) with
      | ZSome (zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zimm) = (z_s1219z3 z_s1226z3) in ZC_JAL zimm
    | z_s1238z3 when (begin
      match (z_s1227z3 z_s1238z3) with
      | ZSome (zrsd, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zimm) = (z_s1227z3 z_s1238z3) in ZC_ADDIW (zimm, zrsd)
    | z_s1250z3 when (begin
      match (z_s1239z3 z_s1250z3) with
      | ZSome (zrd, zimm) ->
        zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))
      | _ -> false
    end) ->
      let ZSome (zrd, zimm) = (z_s1239z3 z_s1250z3) in ZC_LI (zimm, zrd)
    | z_s1258z3 when (begin
      match (z_s1251z3 z_s1258z3) with
      | ZSome (zimm) -> zneq_vec (zimm, [B0; B0; B0; B0; B0; B0])
      | _ -> false
    end) ->
      let ZSome (zimm) = (z_s1251z3 z_s1258z3) in ZC_ADDI16SP zimm
    | z_s1270z3 when (begin
      match (z_s1259z3 z_s1270z3) with
      | ZSome (zrd, zimm) ->
        (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && ((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zsp))) && (zneq_vec (zimm, [B0; B0; B0; B0; B0; B0])))
      | _ -> false
    end) ->
      let ZSome (zrd, zimm) = (z_s1259z3 z_s1270z3) in ZC_LUI (zimm, zrd)
    | z_s1282z3 when (begin
      match (z_s1271z3 z_s1282z3) with
      | ZSome (zrsd, zshamt) -> zneq_vec (zshamt, [B0; B0; B0; B0; B0; B0])
      | _ -> false
    end) ->
      let ZSome (zrsd, zshamt) = (z_s1271z3 z_s1282z3) in ZC_SRLI (zshamt, zrsd)
    | z_s1294z3 when (begin
      match (z_s1283z3 z_s1294z3) with
      | ZSome (zrsd, zshamt) -> zneq_vec (zshamt, [B0; B0; B0; B0; B0; B0])
      | _ -> false
    end) ->
      let ZSome (zrsd, zshamt) = (z_s1283z3 z_s1294z3) in ZC_SRAI (zshamt, zrsd)
    | z_s1306z3 when (begin
      match (z_s1295z3 z_s1306z3) with
      | ZSome (zrsd, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zimm) = (z_s1295z3 z_s1306z3) in ZC_ANDI (zimm, zrsd)
    | z_s1318z3 when (begin
      match (z_s1307z3 z_s1318z3) with
      | ZSome (zrsd, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2) = (z_s1307z3 z_s1318z3) in ZC_SUB (zrsd, zrs2)
    | z_s1330z3 when (begin
      match (z_s1319z3 z_s1330z3) with
      | ZSome (zrsd, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2) = (z_s1319z3 z_s1330z3) in ZC_XOR (zrsd, zrs2)
    | z_s1342z3 when (begin
      match (z_s1331z3 z_s1342z3) with
      | ZSome (zrsd, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2) = (z_s1331z3 z_s1342z3) in ZC_OR (zrsd, zrs2)
    | z_s1354z3 when (begin
      match (z_s1343z3 z_s1354z3) with
      | ZSome (zrsd, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2) = (z_s1343z3 z_s1354z3) in ZC_AND (zrsd, zrs2)
    | z_s1366z3 when (begin
      match (z_s1355z3 z_s1366z3) with
      | ZSome (zrsd, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2) = (z_s1355z3 z_s1366z3) in ZC_SUBW (zrsd, zrs2)
    | z_s1378z3 when (begin
      match (z_s1367z3 z_s1378z3) with
      | ZSome (zrsd, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2) = (z_s1367z3 z_s1378z3) in ZC_ADDW (zrsd, zrs2)
    | z_s1386z3 when (begin
      match (z_s1379z3 z_s1386z3) with
      | ZSome (zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zimm) = (z_s1379z3 z_s1386z3) in ZC_J zimm
    | z_s1398z3 when (begin
      match (z_s1387z3 z_s1398z3) with
      | ZSome (zrs, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrs, zimm) = (z_s1387z3 z_s1398z3) in ZC_BEQZ (zimm, zrs)
    | z_s1410z3 when (begin
      match (z_s1399z3 z_s1410z3) with
      | ZSome (zrs, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrs, zimm) = (z_s1399z3 z_s1410z3) in ZC_BNEZ (zimm, zrs)
    | z_s1422z3 when (begin
      match (z_s1411z3 z_s1422z3) with
      | ZSome (zrsd, zshamt) ->
        (zneq_vec (zshamt, [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))
      | _ -> false
    end) ->
      let ZSome (zrsd, zshamt) = (z_s1411z3 z_s1422z3) in ZC_SLLI (zshamt, zrsd)
    | z_s1434z3 when (begin
      match (z_s1423z3 z_s1434z3) with
      | ZSome (zrd, zuimm) ->
        zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))
      | _ -> false
    end) ->
      let ZSome (zrd, zuimm) = (z_s1423z3 z_s1434z3) in ZC_LWSP (zuimm, zrd)
    | z_s1446z3 when (begin
      match (z_s1435z3 z_s1446z3) with
      | ZSome (zrd, zuimm) ->
        zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))
      | _ -> false
    end) ->
      let ZSome (zrd, zuimm) = (z_s1435z3 z_s1446z3) in ZC_LDSP (zuimm, zrd)
    | z_s1458z3 when (begin
      match (z_s1447z3 z_s1458z3) with
      | ZSome (zrd, zuimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zuimm) = (z_s1447z3 z_s1458z3) in ZC_SWSP (zuimm, zrd)
    | z_s1470z3 when (begin
      match (z_s1459z3 z_s1470z3) with
      | ZSome (zrs2, zuimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrs2, zuimm) = (z_s1459z3 z_s1470z3) in ZC_SDSP (zuimm, zrs2)
    | z_s1478z3 when (begin
      match (z_s1471z3 z_s1478z3) with
      | ZSome (zrs1) ->
        zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))
      | _ -> false
    end) ->
      let ZSome (zrs1) = (z_s1471z3 z_s1478z3) in ZC_JR zrs1
    | z_s1486z3 when (begin
      match (z_s1479z3 z_s1486z3) with
      | ZSome (zrs1) ->
        zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))
      | _ -> false
    end) ->
      let ZSome (zrs1) = (z_s1479z3 z_s1486z3) in ZC_JALR zrs1
    | z_s1498z3 when (begin
      match (z_s1487z3 z_s1498z3) with
      | ZSome (zrd, zrs2) ->
        (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))
      | _ -> false
    end) ->
      let ZSome (zrd, zrs2) = (z_s1487z3 z_s1498z3) in ZC_MV (zrd, zrs2)
    | "c.ebreak" -> ZC_EBREAK ()
    | z_s1510z3 when (begin
      match (z_s1499z3 z_s1510z3) with
      | ZSome (zrsd, zrs2) ->
        (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2) = (z_s1499z3 z_s1510z3) in ZC_ADD (zrsd, zrs2)
    | z_s1527z3 when (begin
      match (z_s1511z3 z_s1527z3) with
      | ZSome (zhigh, zsigned1, zsigned2, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zhigh, zsigned1, zsigned2, zrd, zrs1, zrs2) = (z_s1511z3 z_s1527z3) in
      ZMUL (zrs2, zrs1, zrd, zhigh, zsigned1, zsigned2)
    | z_s1545z3 when (begin
      match (z_s1528z3 z_s1545z3) with
      | ZSome (zs, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zs, zrd, zrs1, zrs2) = (z_s1528z3 z_s1545z3) in
      ZDIV (zrs2, zrs1, zrd, zs)
    | z_s1563z3 when (begin
      match (z_s1546z3 z_s1563z3) with
      | ZSome (zs, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zs, zrd, zrs1, zrs2) = (z_s1546z3 z_s1563z3) in
      ZREM (zrs2, zrs1, zrd, zs)
    | z_s1579z3 when (begin
      match (z_s1564z3 z_s1579z3) with
      | ZSome (zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs1, zrs2) = (z_s1564z3 z_s1579z3) in
      ZMULW (zrs2, zrs1, zrd)
    | z_s1598z3 when (begin
      match (z_s1580z3 z_s1598z3) with
      | ZSome (zs, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zs, zrd, zrs1, zrs2) = (z_s1580z3 z_s1598z3) in
      ZDIVW (zrs2, zrs1, zrd, zs)
    | z_s1617z3 when (begin
      match (z_s1599z3 z_s1617z3) with
      | ZSome (zs, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zs, zrd, zrs1, zrs2) = (z_s1599z3 z_s1617z3) in
      ZREMW (zrs2, zrs1, zrd, zs)
    | z_s1635z3 when (begin
      match (z_s1618z3 z_s1635z3) with
      | ZSome (zop, zrd, zrs1, zcsr) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zcsr) = (z_s1618z3 z_s1635z3) in
      ZCSR (zcsr, zrs1, zrd, true, zop)
    | z_s1652z3 when (begin
      match (z_s1636z3 z_s1652z3) with
      | ZSome (zop, zrd, zrs1, zcsr) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zcsr) = (z_s1636z3 z_s1652z3) in
      ZCSR (zcsr, zrs1, zrd, false, zop)
    | z_s1664z3 when (begin
      match (z_s1653z3 z_s1664z3) with
      | ZSome (zrd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb) = (z_s1653z3 z_s1664z3) in ZCGetPerm (zrd, zcb)
    | z_s1676z3 when (begin
      match (z_s1665z3 z_s1676z3) with
      | ZSome (zrd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb) = (z_s1665z3 z_s1676z3) in ZCGetType (zrd, zcb)
    | z_s1688z3 when (begin
      match (z_s1677z3 z_s1688z3) with
      | ZSome (zrd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb) = (z_s1677z3 z_s1688z3) in ZCGetBase (zrd, zcb)
    | z_s1700z3 when (begin
      match (z_s1689z3 z_s1700z3) with
      | ZSome (zrd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb) = (z_s1689z3 z_s1700z3) in ZCGetLen (zrd, zcb)
    | z_s1712z3 when (begin
      match (z_s1701z3 z_s1712z3) with
      | ZSome (zrd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb) = (z_s1701z3 z_s1712z3) in ZCGetTag (zrd, zcb)
    | z_s1724z3 when (begin
      match (z_s1713z3 z_s1724z3) with
      | ZSome (zrd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb) = (z_s1713z3 z_s1724z3) in ZCGetSealed (zrd, zcb)
    | z_s1736z3 when (begin
      match (z_s1725z3 z_s1736z3) with
      | ZSome (zrd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb) = (z_s1725z3 z_s1736z3) in ZCGetOffset (zrd, zcb)
    | z_s1748z3 when (begin
      match (z_s1737z3 z_s1748z3) with
      | ZSome (zrd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb) = (z_s1737z3 z_s1748z3) in ZCGetAddr (zrd, zcb)
    | z_s1760z3 when (begin
      match (z_s1749z3 z_s1760z3) with
      | ZSome (zcd, zcs) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs) = (z_s1749z3 z_s1760z3) in ZCMove (zcd, zcs)
    | z_s1772z3 when (begin
      match (z_s1761z3 z_s1772z3) with
      | ZSome (zcd, zcs) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs) = (z_s1761z3 z_s1772z3) in ZCClearTag (zcd, zcs)
    | z_s1780z3 when (begin
      match (z_s1773z3 z_s1780z3) with
      | ZSome (zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zcb) = (z_s1773z3 z_s1780z3) in
      ZCJALR ([B0; B0; B0; B0; B0], zcb)
    | z_s1792z3 when (begin
      match (z_s1781z3 z_s1792z3) with
      | ZSome (zcd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb) = (z_s1781z3 z_s1792z3) in ZCJALR (zcd, zcb)
    | z_s1804z3 when (begin
      match (z_s1793z3 z_s1804z3) with
      | ZSome (zcs, zrt) -> true
      | _ -> false
    end) ->
      let ZSome (zcs, zrt) = (z_s1793z3 z_s1804z3) in ZCCheckPerm (zcs, zrt)
    | z_s1816z3 when (begin
      match (z_s1805z3 z_s1816z3) with
      | ZSome (zcs, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zcs, zcb) = (z_s1805z3 z_s1816z3) in ZCCheckType (zcs, zcb)
    | z_s1828z3 when (begin
      match (z_s1817z3 z_s1828z3) with
      | ZSome (zq, zm8) -> true
      | _ -> false
    end) ->
      let ZSome (zq, zm8) = (z_s1817z3 z_s1828z3) in
      ZClearRegs (ZGPRegs, zq, zm8)
    | z_s1840z3 when (begin
      match (z_s1829z3 z_s1840z3) with
      | ZSome (zq, zm8) -> true
      | _ -> false
    end) ->
      let ZSome (zq, zm8) = (z_s1829z3 z_s1840z3) in
      ZClearRegs (ZFPRegs, zq, zm8)
    | z_s1856z3 when (begin
      match (z_s1841z3 z_s1856z3) with
      | ZSome (zcd, zcs, zct) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zct) = (z_s1841z3 z_s1856z3) in
      ZCSeal (zcd, zcs, zct)
    | z_s1872z3 when (begin
      match (z_s1857z3 z_s1872z3) with
      | ZSome (zcd, zcs, zct) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zct) = (z_s1857z3 z_s1872z3) in
      ZCUnseal (zcd, zcs, zct)
    | z_s1888z3 when (begin
      match (z_s1873z3 z_s1888z3) with
      | ZSome (zcd, zcs, zrt) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zrt) = (z_s1873z3 z_s1888z3) in
      ZCAndPerm (zcd, zcs, zrt)
    | z_s1904z3 when (begin
      match (z_s1889z3 z_s1904z3) with
      | ZSome (zcd, zcs, zrt) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zrt) = (z_s1889z3 z_s1904z3) in
      ZCSetOffset (zcd, zcs, zrt)
    | z_s1920z3 when (begin
      match (z_s1905z3 z_s1920z3) with
      | ZSome (zcd, zcs, zrt) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zrt) = (z_s1905z3 z_s1920z3) in
      ZCIncOffset (zcd, zcs, zrt)
    | z_s1936z3 when (begin
      match (z_s1921z3 z_s1936z3) with
      | ZSome (zcd, zcs, zrt) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zrt) = (z_s1921z3 z_s1936z3) in
      ZCSetBounds (zcd, zcs, zrt)
    | z_s1952z3 when (begin
      match (z_s1937z3 z_s1952z3) with
      | ZSome (zcd, zcs, zrt) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zrt) = (z_s1937z3 z_s1952z3) in
      ZCSetBoundsExact (zcd, zcs, zrt)
    | z_s1968z3 when (begin
      match (z_s1953z3 z_s1968z3) with
      | ZSome (zcd, zcb, zct) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb, zct) = (z_s1953z3 z_s1968z3) in
      ZCBuildCap (zcd, zcb, zct)
    | z_s1984z3 when (begin
      match (z_s1969z3 z_s1984z3) with
      | ZSome (zcd, zcb, zct) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb, zct) = (z_s1969z3 z_s1984z3) in
      ZCCopyType (zcd, zcb, zct)
    | z_s2000z3 when (begin
      match (z_s1985z3 z_s2000z3) with
      | ZSome (zcd, zcs, zct) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zct) = (z_s1985z3 z_s2000z3) in
      ZCCSeal (zcd, zcs, zct)
    | z_s2016z3 when (begin
      match (z_s2001z3 z_s2016z3) with
      | ZSome (zrd, zcb, zcs) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb, zcs) = (z_s2001z3 z_s2016z3) in
      ZCToPtr (zrd, zcb, zcs)
    | z_s2032z3 when (begin
      match (z_s2017z3 z_s2032z3) with
      | ZSome (zcd, zcb, zrs) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb, zrs) = (z_s2017z3 z_s2032z3) in
      ZCFromPtr (zcd, zcb, zrs)
    | z_s2044z3 when (begin
      match (z_s2033z3 z_s2044z3) with
      | ZSome (zcs, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zcs, zcb) = (z_s2033z3 z_s2044z3) in
      ZCCall (zcs, zcb, [B0; B0; B0; B0; B0])
    | z_s2056z3 when (begin
      match (z_s2045z3 z_s2056z3) with
      | ZSome (zcs, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zcs, zcb) = (z_s2045z3 z_s2056z3) in
      ZCCall (zcs, zcb, [B0; B0; B0; B0; B1])
    | z_s2068z3 when (begin
      match (z_s2057z3 z_s2068z3) with
      | ZSome (zcs, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zcs, zcb) = (z_s2057z3 z_s2068z3) in
      ZCCall (zcs, zcb, [B1; B1; B1; B1; B1])
    | z_s2084z3 when (begin
      match (z_s2069z3 z_s2084z3) with
      | ZSome (zrd, zcb, zct) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb, zct) = (z_s2069z3 z_s2084z3) in
      ZCTestSubset (zrd, zcb, zct)
    | z_s2100z3 when (begin
      match (z_s2085z3 z_s2100z3) with
      | ZSome (zcd, zcs, zidx) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zidx) = (z_s2085z3 z_s2100z3) in
      ZCSpecialRW (zcd, zcs, zidx)
    | z_s2116z3 when (begin
      match (z_s2101z3 z_s2116z3) with
      | ZSome (zcd, zcb, zimm12) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb, zimm12) = (z_s2101z3 z_s2116z3) in
      ZCIncOffsetImmediate (zcd, zcb, zimm12)
    | z_s2132z3 when (begin
      match (z_s2117z3 z_s2132z3) with
      | ZSome (zcd, zcb, zimm12) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb, zimm12) = (z_s2117z3 z_s2132z3) in
      ZCSetBoundsImmediate (zcd, zcb, zimm12)
    | z_s2149z3 when (begin
      match (z_s2133z3 z_s2149z3) with
      | ZSome (zw, zu, zrd, zrs) -> true
      | _ -> false
    end) ->
      let ZSome (zw, zu, zrd, zrs) = (z_s2133z3 z_s2149z3) in
      ZCLoadDDC (zrd, zrs, zu, zw)
    | z_s2166z3 when (begin
      match (z_s2150z3 z_s2166z3) with
      | ZSome (zw, zu, zrd, zcs) -> true
      | _ -> false
    end) ->
      let ZSome (zw, zu, zrd, zcs) = (z_s2150z3 z_s2166z3) in
      ZCLoadCap (zrd, zcs, zu, zw)
    | z_s2181z3 when (begin
      match (z_s2167z3 z_s2181z3) with
      | ZSome (zw, zrd, zrs) -> true
      | _ -> false
    end) ->
      let ZSome (zw, zrd, zrs) = (z_s2167z3 z_s2181z3) in
      ZCStoreDDC (zrd, zrs, zw)
    | z_s2196z3 when (begin
      match (z_s2182z3 z_s2196z3) with
      | ZSome (zw, zrd, zrs) -> true
      | _ -> false
    end) ->
      let ZSome (zw, zrd, zrs) = (z_s2182z3 z_s2196z3) in
      ZCStoreCap (zrd, zrs, zw)
    | z_s2208z3 when (begin
      match (z_s2197z3 z_s2208z3) with
      | ZSome (zrd, zrs) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs) = (z_s2197z3 z_s2208z3) in ZCStoreCapDDC (zrd, zrs)
    | z_s2220z3 when (begin
      match (z_s2209z3 z_s2220z3) with
      | ZSome (zrd, zrs) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs) = (z_s2209z3 z_s2220z3) in ZCLoadCapDDC (zrd, zrs)
    | z_s2232z3 when (begin
      match (z_s2221z3 z_s2232z3) with
      | ZSome (zrd, zrs) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs) = (z_s2221z3 z_s2232z3) in ZCStoreCapCap (zrd, zrs)
    | z_s2244z3 when (begin
      match (z_s2233z3 z_s2244z3) with
      | ZSome (zrd, zrs) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs) = (z_s2233z3 z_s2244z3) in ZCLoadCapCap (zrd, zrs)
    | z_s2252z3 when (begin
      match (z_s2245z3 z_s2252z3) with
      | ZSome (zs) -> true
      | _ -> false
    end) ->
      let ZSome (zs) = (z_s2245z3 z_s2252z3) in ZILLEGAL zs
    | z_s2260z3 when (begin
      match (z_s2253z3 z_s2260z3) with
      | ZSome (zs) -> true
      | _ -> false
    end) ->
      let ZSome (zs) = (z_s2253z3 z_s2260z3) in ZC_ILLEGAL zs
  end)

and zassembly_forwards_matches (zargz3 : (zast)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | ZUTYPE (zimm, zrd, zop) -> true
    | ZRISCV_JAL (zimm, zrd) -> true
    | ZRISCV_JALR (zimm, zrs1, zrd) -> true
    | ZBTYPE (zimm, zrs2, zrs1, zop) -> true
    | ZITYPE (zimm, zrs1, zrd, zop) -> true
    | ZSHIFTIOP (zshamt, zrs1, zrd, zop) -> true
    | ZRTYPE (zrs2, zrs1, zrd, zop) -> true
    | ZLOAD (zimm, zrs1, zrd, zis_unsigned, zsizze, zaq, zrl) -> true
    | ZSTORE (zimm, zrs1, zrd, zsizze, zaq, zrl) -> true
    | ZADDIW (zimm, zrs1, zrd) -> true
    | ZSHIFTW (zshamt, zrs1, zrd, zop) -> true
    | ZRTYPEW (zrs2, zrs1, zrd, zop) -> true
    | ZSHIFTIWOP (zshamt, zrs1, zrd, zop) -> true
    | ZFENCE (zpred, zsucc) -> true
    | ZFENCE_TSO (zpred, zsucc) -> true
    | ZFENCEI (()) -> true
    | ZECALL (()) -> true
    | ZMRET (()) -> true
    | ZSRET (()) -> true
    | ZEBREAK (()) -> true
    | ZWFI (()) -> true
    | ZSFENCE_VMA (zrs1, zrs2) -> true
    | ZLOADRES (zaq, zrl, zrs1, zsizze, zrd) -> true
    | ZSTORECON (zaq, zrl, zrs2, zrs1, zsizze, zrd) -> true
    | ZAMO (zop, zaq, zrl, zrs2, zrs1, zwidth, zrd) -> true
    | ZC_NOP (()) -> true
    | ZC_ADDI4SPN (zrdc, znzzimm) when (zneq_vec (znzzimm, [B0; B0; B0; B0; B0; B0; B0; B0])) ->
      true
    | ZC_LW (zuimm, zrsc, zrdc) -> true
    | ZC_LD (zuimm, zrsc, zrdc) -> true
    | ZC_SW (zuimm, zrsc1, zrsc2) -> true
    | ZC_SD (zuimm, zrsc1, zrsc2) -> true
    | ZC_ADDI (znzzi, zrsd) when ((zneq_vec (znzzi, [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))) ->
      true
    | ZC_JAL (zimm) -> true
    | ZC_ADDIW (zimm, zrsd) -> true
    | ZC_LI (zimm, zrd) when (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) ->
      true
    | ZC_ADDI16SP (zimm) when (zneq_vec (zimm, [B0; B0; B0; B0; B0; B0])) ->
      true
    | ZC_LUI (zimm, zrd) when ((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && ((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zsp))) && (zneq_vec (zimm, [B0; B0; B0; B0; B0; B0])))) ->
      true
    | ZC_SRLI (zshamt, zrsd) when (zneq_vec (zshamt, [B0; B0; B0; B0; B0; B0])) ->
      true
    | ZC_SRAI (zshamt, zrsd) when (zneq_vec (zshamt, [B0; B0; B0; B0; B0; B0])) ->
      true
    | ZC_ANDI (zimm, zrsd) -> true
    | ZC_SUB (zrsd, zrs2) -> true
    | ZC_XOR (zrsd, zrs2) -> true
    | ZC_OR (zrsd, zrs2) -> true
    | ZC_AND (zrsd, zrs2) -> true
    | ZC_SUBW (zrsd, zrs2) -> true
    | ZC_ADDW (zrsd, zrs2) -> true
    | ZC_J (zimm) -> true
    | ZC_BEQZ (zimm, zrs) -> true
    | ZC_BNEZ (zimm, zrs) -> true
    | ZC_SLLI (zshamt, zrsd) when ((zneq_vec (zshamt, [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))) ->
      true
    | ZC_LWSP (zuimm, zrd) when (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) ->
      true
    | ZC_LDSP (zuimm, zrd) when (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) ->
      true
    | ZC_SWSP (zuimm, zrd) -> true
    | ZC_SDSP (zuimm, zrs2) -> true
    | ZC_JR (zrs1) when (zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))) ->
      true
    | ZC_JALR (zrs1) when (zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))) ->
      true
    | ZC_MV (zrd, zrs2) when ((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))) ->
      true
    | ZC_EBREAK (()) -> true
    | ZC_ADD (zrsd, zrs2) when ((zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))) ->
      true
    | ZMUL (zrs2, zrs1, zrd, zhigh, zsigned1, zsigned2) -> true
    | ZDIV (zrs2, zrs1, zrd, zs) -> true
    | ZREM (zrs2, zrs1, zrd, zs) -> true
    | ZMULW (zrs2, zrs1, zrd) -> true
    | ZDIVW (zrs2, zrs1, zrd, zs) -> true
    | ZREMW (zrs2, zrs1, zrd, zs) -> true
    | ZCSR (zcsr, zrs1, zrd, zp0z3, zop) when (eq_bool (zp0z3, true)) -> true
    | ZCSR (zcsr, zrs1, zrd, zp0z3, zop) when (eq_bool (zp0z3, false)) -> true
    | ZCGetPerm (zrd, zcb) -> true
    | ZCGetType (zrd, zcb) -> true
    | ZCGetBase (zrd, zcb) -> true
    | ZCGetLen (zrd, zcb) -> true
    | ZCGetTag (zrd, zcb) -> true
    | ZCGetSealed (zrd, zcb) -> true
    | ZCGetOffset (zrd, zcb) -> true
    | ZCGetAddr (zrd, zcb) -> true
    | ZCMove (zcd, zcs) -> true
    | ZCClearTag (zcd, zcs) -> true
    | ZCJALR (zb__0, zcb) when (let zp0z3 = (access (zb__0, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__0, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__0, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__0, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__0, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | ZCJALR (zcd, zcb) -> true
    | ZCCheckPerm (zcs, zrt) -> true
    | ZCCheckType (zcs, zcb) -> true
    | ZClearRegs (ZGPRegs, zq, zm8) -> true
    | ZClearRegs (ZFPRegs, zq, zm8) -> true
    | ZCSeal (zcd, zcs, zct) -> true
    | ZCUnseal (zcd, zcs, zct) -> true
    | ZCAndPerm (zcd, zcs, zrt) -> true
    | ZCSetOffset (zcd, zcs, zrt) -> true
    | ZCIncOffset (zcd, zcs, zrt) -> true
    | ZCSetBounds (zcd, zcs, zrt) -> true
    | ZCSetBoundsExact (zcd, zcs, zrt) -> true
    | ZCBuildCap (zcd, zcb, zct) -> true
    | ZCCopyType (zcd, zcb, zct) -> true
    | ZCCSeal (zcd, zcs, zct) -> true
    | ZCToPtr (zrd, zcb, zcs) -> true
    | ZCFromPtr (zcd, zcb, zrs) -> true
    | ZCCall (zcs, zcb, zb__1) when (let zp0z3 = (access (zb__1, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__1, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__1, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__1, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__1, Big_int.zero)) in
    ((((eq_bit (zp4z3, B0)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | ZCCall (zcs, zcb, zb__2) when (let zp0z3 = (access (zb__2, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__2, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__2, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__2, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__2, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B0))) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
      true
    | ZCCall (zcs, zcb, zb__3) when (let zp0z3 = (access (zb__3, (Big_int.of_int (4)))) in
    let zp1z3 = (access (zb__3, (Big_int.of_int (3)))) in
    let zp2z3 = (access (zb__3, (Big_int.of_int (2)))) in
    let zp3z3 = (access (zb__3, (Big_int.of_int (1)))) in
    let zp4z3 = (access (zb__3, Big_int.zero)) in
    ((((eq_bit (zp4z3, B1)) && (eq_bit (zp3z3, B1))) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
      true
    | ZCTestSubset (zrd, zcb, zct) -> true
    | ZCSpecialRW (zcd, zcs, zidx) -> true
    | ZCIncOffsetImmediate (zcd, zcb, zimm12) -> true
    | ZCSetBoundsImmediate (zcd, zcb, zimm12) -> true
    | ZCLoadDDC (zrd, zrs, zu, zw) -> true
    | ZCLoadCap (zrd, zcs, zu, zw) -> true
    | ZCStoreDDC (zrd, zrs, zw) -> true
    | ZCStoreCap (zrd, zrs, zw) -> true
    | ZCStoreCapDDC (zrd, zrs) -> true
    | ZCLoadCapDDC (zrd, zrs) -> true
    | ZCStoreCapCap (zrd, zrs) -> true
    | ZCLoadCapCap (zrd, zrs) -> true
    | ZILLEGAL (zs) -> true
    | ZC_ILLEGAL (zs) -> true
    | _ -> false
  end)

and z_s3701z3 (z_s3702z3 : (string)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match z_s3702z3 with
    | z_s3703z3 when (string_startswith (z_s3703z3, "c.illegal")) ->
      begin
        match (string_drop (z_s3703z3, (string_length "c.illegal"))) with
        | z_s3704z3 ->
          begin
            match (zspc_matches_prefix z_s3704z3) with
            | ZSome ((), z_s3705z3) ->
              begin
                match (string_drop (z_s3704z3, z_s3705z3)) with
                | z_s3706z3 ->
                  begin
                    match (hex_bits_16_matches_prefix z_s3706z3) with
                    | ZSome (zs, z_s3707z3) ->
                      begin
                        match (string_drop (z_s3706z3, z_s3707z3)) with
                        | "" -> ZSome zs
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3693z3 (z_s3694z3 : (string)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match z_s3694z3 with
    | z_s3695z3 when (string_startswith (z_s3695z3, "illegal")) ->
      begin
        match (string_drop (z_s3695z3, (string_length "illegal"))) with
        | z_s3696z3 ->
          begin
            match (zspc_matches_prefix z_s3696z3) with
            | ZSome ((), z_s3697z3) ->
              begin
                match (string_drop (z_s3696z3, z_s3697z3)) with
                | z_s3698z3 ->
                  begin
                    match (hex_bits_32_matches_prefix z_s3698z3) with
                    | ZSome (zs, z_s3699z3) ->
                      begin
                        match (string_drop (z_s3698z3, z_s3699z3)) with
                        | "" -> ZSome zs
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3681z3 (z_s3682z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3682z3 with
    | z_s3683z3 when (string_startswith (z_s3683z3, "sqCap")) ->
      begin
        match (string_drop (z_s3683z3, (string_length "sqCap"))) with
        | z_s3684z3 ->
          begin
            match (zspc_matches_prefix z_s3684z3) with
            | ZSome ((), z_s3685z3) ->
              begin
                match (string_drop (z_s3684z3, z_s3685z3)) with
                | z_s3686z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3686z3) with
                    | ZSome (zrd, z_s3687z3) ->
                      begin
                        match (string_drop (z_s3686z3, z_s3687z3)) with
                        | z_s3688z3 ->
                          begin
                            match (zsep_matches_prefix z_s3688z3) with
                            | ZSome ((), z_s3689z3) ->
                              begin
                                match (string_drop (z_s3688z3, z_s3689z3)) with
                                | z_s3690z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3690z3) with
                                    | ZSome (zrs, z_s3691z3) ->
                                      begin
                                        match (string_drop (z_s3690z3, z_s3691z3)) with
                                        | "" -> ZSome (zrd, zrs)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3669z3 (z_s3670z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3670z3 with
    | z_s3671z3 when (string_startswith (z_s3671z3, "lqCap")) ->
      begin
        match (string_drop (z_s3671z3, (string_length "lqCap"))) with
        | z_s3672z3 ->
          begin
            match (zspc_matches_prefix z_s3672z3) with
            | ZSome ((), z_s3673z3) ->
              begin
                match (string_drop (z_s3672z3, z_s3673z3)) with
                | z_s3674z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3674z3) with
                    | ZSome (zrd, z_s3675z3) ->
                      begin
                        match (string_drop (z_s3674z3, z_s3675z3)) with
                        | z_s3676z3 ->
                          begin
                            match (zsep_matches_prefix z_s3676z3) with
                            | ZSome ((), z_s3677z3) ->
                              begin
                                match (string_drop (z_s3676z3, z_s3677z3)) with
                                | z_s3678z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3678z3) with
                                    | ZSome (zrs, z_s3679z3) ->
                                      begin
                                        match (string_drop (z_s3678z3, z_s3679z3)) with
                                        | "" -> ZSome (zrd, zrs)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3657z3 (z_s3658z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3658z3 with
    | z_s3659z3 when (string_startswith (z_s3659z3, "sqDDC")) ->
      begin
        match (string_drop (z_s3659z3, (string_length "sqDDC"))) with
        | z_s3660z3 ->
          begin
            match (zspc_matches_prefix z_s3660z3) with
            | ZSome ((), z_s3661z3) ->
              begin
                match (string_drop (z_s3660z3, z_s3661z3)) with
                | z_s3662z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3662z3) with
                    | ZSome (zrd, z_s3663z3) ->
                      begin
                        match (string_drop (z_s3662z3, z_s3663z3)) with
                        | z_s3664z3 ->
                          begin
                            match (zsep_matches_prefix z_s3664z3) with
                            | ZSome ((), z_s3665z3) ->
                              begin
                                match (string_drop (z_s3664z3, z_s3665z3)) with
                                | z_s3666z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3666z3) with
                                    | ZSome (zrs, z_s3667z3) ->
                                      begin
                                        match (string_drop (z_s3666z3, z_s3667z3)) with
                                        | "" -> ZSome (zrd, zrs)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3645z3 (z_s3646z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3646z3 with
    | z_s3647z3 when (string_startswith (z_s3647z3, "lqDDC")) ->
      begin
        match (string_drop (z_s3647z3, (string_length "lqDDC"))) with
        | z_s3648z3 ->
          begin
            match (zspc_matches_prefix z_s3648z3) with
            | ZSome ((), z_s3649z3) ->
              begin
                match (string_drop (z_s3648z3, z_s3649z3)) with
                | z_s3650z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3650z3) with
                    | ZSome (zrd, z_s3651z3) ->
                      begin
                        match (string_drop (z_s3650z3, z_s3651z3)) with
                        | z_s3652z3 ->
                          begin
                            match (zsep_matches_prefix z_s3652z3) with
                            | ZSome ((), z_s3653z3) ->
                              begin
                                match (string_drop (z_s3652z3, z_s3653z3)) with
                                | z_s3654z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3654z3) with
                                    | ZSome (zrs, z_s3655z3) ->
                                      begin
                                        match (string_drop (z_s3654z3, z_s3655z3)) with
                                        | "" -> ZSome (zrd, zrs)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3630z3 (z_s3631z3 : (string)) : ((zword_width * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3631z3 with
    | z_s3632z3 when (string_startswith (z_s3632z3, "s")) ->
      begin
        match (string_drop (z_s3632z3, (string_length "s"))) with
        | z_s3633z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s3633z3) with
            | ZSome (zw, z_s3634z3) ->
              begin
                match (string_drop (z_s3633z3, z_s3634z3)) with
                | z_s3635z3 when (string_startswith (z_s3635z3, "Cap")) ->
                  begin
                    match (string_drop (z_s3635z3, (string_length "Cap"))) with
                    | z_s3636z3 ->
                      begin
                        match (zspc_matches_prefix z_s3636z3) with
                        | ZSome ((), z_s3637z3) ->
                          begin
                            match (string_drop (z_s3636z3, z_s3637z3)) with
                            | z_s3638z3 ->
                              begin
                                match (zreg_name_matches_prefix z_s3638z3) with
                                | ZSome (zrd, z_s3639z3) ->
                                  begin
                                    match (string_drop (z_s3638z3, z_s3639z3)) with
                                    | z_s3640z3 ->
                                      begin
                                        match (zsep_matches_prefix z_s3640z3) with
                                        | ZSome ((), z_s3641z3) ->
                                          begin
                                            match (string_drop (z_s3640z3, z_s3641z3)) with
                                            | z_s3642z3 ->
                                              begin
                                                match (zreg_name_matches_prefix z_s3642z3) with
                                                | ZSome (zrs, z_s3643z3) ->
                                                  begin
                                                    match (string_drop (z_s3642z3, z_s3643z3)) with
                                                    | "" -> ZSome (zw, zrd, zrs)
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3615z3 (z_s3616z3 : (string)) : ((zword_width * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3616z3 with
    | z_s3617z3 when (string_startswith (z_s3617z3, "s")) ->
      begin
        match (string_drop (z_s3617z3, (string_length "s"))) with
        | z_s3618z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s3618z3) with
            | ZSome (zw, z_s3619z3) ->
              begin
                match (string_drop (z_s3618z3, z_s3619z3)) with
                | z_s3620z3 when (string_startswith (z_s3620z3, "DDC")) ->
                  begin
                    match (string_drop (z_s3620z3, (string_length "DDC"))) with
                    | z_s3621z3 ->
                      begin
                        match (zspc_matches_prefix z_s3621z3) with
                        | ZSome ((), z_s3622z3) ->
                          begin
                            match (string_drop (z_s3621z3, z_s3622z3)) with
                            | z_s3623z3 ->
                              begin
                                match (zreg_name_matches_prefix z_s3623z3) with
                                | ZSome (zrd, z_s3624z3) ->
                                  begin
                                    match (string_drop (z_s3623z3, z_s3624z3)) with
                                    | z_s3625z3 ->
                                      begin
                                        match (zsep_matches_prefix z_s3625z3) with
                                        | ZSome ((), z_s3626z3) ->
                                          begin
                                            match (string_drop (z_s3625z3, z_s3626z3)) with
                                            | z_s3627z3 ->
                                              begin
                                                match (zreg_name_matches_prefix z_s3627z3) with
                                                | ZSome (zrs, z_s3628z3) ->
                                                  begin
                                                    match (string_drop (z_s3627z3, z_s3628z3)) with
                                                    | "" -> ZSome (zw, zrd, zrs)
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3598z3 (z_s3599z3 : (string)) : ((zword_width * bool * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3599z3 with
    | z_s3600z3 when (string_startswith (z_s3600z3, "l")) ->
      begin
        match (string_drop (z_s3600z3, (string_length "l"))) with
        | z_s3601z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s3601z3) with
            | ZSome (zw, z_s3602z3) ->
              begin
                match (string_drop (z_s3601z3, z_s3602z3)) with
                | z_s3603z3 ->
                  begin
                    match (zmaybe_u_matches_prefix z_s3603z3) with
                    | ZSome (zu, z_s3604z3) ->
                      begin
                        match (string_drop (z_s3603z3, z_s3604z3)) with
                        | z_s3605z3 when (string_startswith (z_s3605z3, "Cap")) ->
                          begin
                            match (string_drop (z_s3605z3, (string_length "Cap"))) with
                            | z_s3606z3 ->
                              begin
                                match (zspc_matches_prefix z_s3606z3) with
                                | ZSome ((), z_s3607z3) ->
                                  begin
                                    match (string_drop (z_s3606z3, z_s3607z3)) with
                                    | z_s3608z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s3608z3) with
                                        | ZSome (zrd, z_s3609z3) ->
                                          begin
                                            match (string_drop (z_s3608z3, z_s3609z3)) with
                                            | z_s3610z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s3610z3) with
                                                | ZSome ((), z_s3611z3) ->
                                                  begin
                                                    match (string_drop (z_s3610z3, z_s3611z3)) with
                                                    | z_s3612z3 ->
                                                      begin
                                                        match (zreg_name_matches_prefix z_s3612z3) with
                                                        | ZSome (zcs, z_s3613z3) ->
                                                          begin
                                                            match (string_drop (z_s3612z3, z_s3613z3)) with
                                                            | "" ->
                                                              ZSome (zw, zu, zrd, zcs)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3581z3 (z_s3582z3 : (string)) : ((zword_width * bool * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3582z3 with
    | z_s3583z3 when (string_startswith (z_s3583z3, "l")) ->
      begin
        match (string_drop (z_s3583z3, (string_length "l"))) with
        | z_s3584z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s3584z3) with
            | ZSome (zw, z_s3585z3) ->
              begin
                match (string_drop (z_s3584z3, z_s3585z3)) with
                | z_s3586z3 ->
                  begin
                    match (zmaybe_u_matches_prefix z_s3586z3) with
                    | ZSome (zu, z_s3587z3) ->
                      begin
                        match (string_drop (z_s3586z3, z_s3587z3)) with
                        | z_s3588z3 when (string_startswith (z_s3588z3, "DDC")) ->
                          begin
                            match (string_drop (z_s3588z3, (string_length "DDC"))) with
                            | z_s3589z3 ->
                              begin
                                match (zspc_matches_prefix z_s3589z3) with
                                | ZSome ((), z_s3590z3) ->
                                  begin
                                    match (string_drop (z_s3589z3, z_s3590z3)) with
                                    | z_s3591z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s3591z3) with
                                        | ZSome (zrd, z_s3592z3) ->
                                          begin
                                            match (string_drop (z_s3591z3, z_s3592z3)) with
                                            | z_s3593z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s3593z3) with
                                                | ZSome ((), z_s3594z3) ->
                                                  begin
                                                    match (string_drop (z_s3593z3, z_s3594z3)) with
                                                    | z_s3595z3 ->
                                                      begin
                                                        match (zreg_name_matches_prefix z_s3595z3) with
                                                        | ZSome (zrs, z_s3596z3) ->
                                                          begin
                                                            match (string_drop (z_s3595z3, z_s3596z3)) with
                                                            | "" ->
                                                              ZSome (zw, zu, zrd, zrs)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3565z3 (z_s3566z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3566z3 with
    | z_s3567z3 when (string_startswith (z_s3567z3, "CSetBoundsImmediate")) ->
      begin
        match (string_drop (z_s3567z3, (string_length "CSetBoundsImmediate"))) with
        | z_s3568z3 ->
          begin
            match (zspc_matches_prefix z_s3568z3) with
            | ZSome ((), z_s3569z3) ->
              begin
                match (string_drop (z_s3568z3, z_s3569z3)) with
                | z_s3570z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3570z3) with
                    | ZSome (zcd, z_s3571z3) ->
                      begin
                        match (string_drop (z_s3570z3, z_s3571z3)) with
                        | z_s3572z3 ->
                          begin
                            match (zsep_matches_prefix z_s3572z3) with
                            | ZSome ((), z_s3573z3) ->
                              begin
                                match (string_drop (z_s3572z3, z_s3573z3)) with
                                | z_s3574z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3574z3) with
                                    | ZSome (zcb, z_s3575z3) ->
                                      begin
                                        match (string_drop (z_s3574z3, z_s3575z3)) with
                                        | z_s3576z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3576z3) with
                                            | ZSome ((), z_s3577z3) ->
                                              begin
                                                match (string_drop (z_s3576z3, z_s3577z3)) with
                                                | z_s3578z3 ->
                                                  begin
                                                    match (hex_bits_12_matches_prefix z_s3578z3) with
                                                    | ZSome (zimm12, z_s3579z3) ->
                                                      begin
                                                        match (string_drop (z_s3578z3, z_s3579z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcb, zimm12)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3549z3 (z_s3550z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3550z3 with
    | z_s3551z3 when (string_startswith (z_s3551z3, "CIncOffsetImmediate")) ->
      begin
        match (string_drop (z_s3551z3, (string_length "CIncOffsetImmediate"))) with
        | z_s3552z3 ->
          begin
            match (zspc_matches_prefix z_s3552z3) with
            | ZSome ((), z_s3553z3) ->
              begin
                match (string_drop (z_s3552z3, z_s3553z3)) with
                | z_s3554z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3554z3) with
                    | ZSome (zcd, z_s3555z3) ->
                      begin
                        match (string_drop (z_s3554z3, z_s3555z3)) with
                        | z_s3556z3 ->
                          begin
                            match (zsep_matches_prefix z_s3556z3) with
                            | ZSome ((), z_s3557z3) ->
                              begin
                                match (string_drop (z_s3556z3, z_s3557z3)) with
                                | z_s3558z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3558z3) with
                                    | ZSome (zcb, z_s3559z3) ->
                                      begin
                                        match (string_drop (z_s3558z3, z_s3559z3)) with
                                        | z_s3560z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3560z3) with
                                            | ZSome ((), z_s3561z3) ->
                                              begin
                                                match (string_drop (z_s3560z3, z_s3561z3)) with
                                                | z_s3562z3 ->
                                                  begin
                                                    match (hex_bits_12_matches_prefix z_s3562z3) with
                                                    | ZSome (zimm12, z_s3563z3) ->
                                                      begin
                                                        match (string_drop (z_s3562z3, z_s3563z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcb, zimm12)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3533z3 (z_s3534z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3534z3 with
    | z_s3535z3 when (string_startswith (z_s3535z3, "CSpecialRW")) ->
      begin
        match (string_drop (z_s3535z3, (string_length "CSpecialRW"))) with
        | z_s3536z3 ->
          begin
            match (zspc_matches_prefix z_s3536z3) with
            | ZSome ((), z_s3537z3) ->
              begin
                match (string_drop (z_s3536z3, z_s3537z3)) with
                | z_s3538z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3538z3) with
                    | ZSome (zcd, z_s3539z3) ->
                      begin
                        match (string_drop (z_s3538z3, z_s3539z3)) with
                        | z_s3540z3 ->
                          begin
                            match (zsep_matches_prefix z_s3540z3) with
                            | ZSome ((), z_s3541z3) ->
                              begin
                                match (string_drop (z_s3540z3, z_s3541z3)) with
                                | z_s3542z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3542z3) with
                                    | ZSome (zcs, z_s3543z3) ->
                                      begin
                                        match (string_drop (z_s3542z3, z_s3543z3)) with
                                        | z_s3544z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3544z3) with
                                            | ZSome ((), z_s3545z3) ->
                                              begin
                                                match (string_drop (z_s3544z3, z_s3545z3)) with
                                                | z_s3546z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s3546z3) with
                                                    | ZSome (zidx, z_s3547z3) ->
                                                      begin
                                                        match (string_drop (z_s3546z3, z_s3547z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zidx)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3517z3 (z_s3518z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3518z3 with
    | z_s3519z3 when (string_startswith (z_s3519z3, "CTestSubset")) ->
      begin
        match (string_drop (z_s3519z3, (string_length "CTestSubset"))) with
        | z_s3520z3 ->
          begin
            match (zspc_matches_prefix z_s3520z3) with
            | ZSome ((), z_s3521z3) ->
              begin
                match (string_drop (z_s3520z3, z_s3521z3)) with
                | z_s3522z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3522z3) with
                    | ZSome (zrd, z_s3523z3) ->
                      begin
                        match (string_drop (z_s3522z3, z_s3523z3)) with
                        | z_s3524z3 ->
                          begin
                            match (zsep_matches_prefix z_s3524z3) with
                            | ZSome ((), z_s3525z3) ->
                              begin
                                match (string_drop (z_s3524z3, z_s3525z3)) with
                                | z_s3526z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3526z3) with
                                    | ZSome (zcb, z_s3527z3) ->
                                      begin
                                        match (string_drop (z_s3526z3, z_s3527z3)) with
                                        | z_s3528z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3528z3) with
                                            | ZSome ((), z_s3529z3) ->
                                              begin
                                                match (string_drop (z_s3528z3, z_s3529z3)) with
                                                | z_s3530z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s3530z3) with
                                                    | ZSome (zct, z_s3531z3) ->
                                                      begin
                                                        match (string_drop (z_s3530z3, z_s3531z3)) with
                                                        | "" ->
                                                          ZSome (zrd, zcb, zct)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3505z3 (z_s3506z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3506z3 with
    | z_s3507z3 when (string_startswith (z_s3507z3, "CCallReturn")) ->
      begin
        match (string_drop (z_s3507z3, (string_length "CCallReturn"))) with
        | z_s3508z3 ->
          begin
            match (zspc_matches_prefix z_s3508z3) with
            | ZSome ((), z_s3509z3) ->
              begin
                match (string_drop (z_s3508z3, z_s3509z3)) with
                | z_s3510z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3510z3) with
                    | ZSome (zcs, z_s3511z3) ->
                      begin
                        match (string_drop (z_s3510z3, z_s3511z3)) with
                        | z_s3512z3 ->
                          begin
                            match (zsep_matches_prefix z_s3512z3) with
                            | ZSome ((), z_s3513z3) ->
                              begin
                                match (string_drop (z_s3512z3, z_s3513z3)) with
                                | z_s3514z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3514z3) with
                                    | ZSome (zcb, z_s3515z3) ->
                                      begin
                                        match (string_drop (z_s3514z3, z_s3515z3)) with
                                        | "" -> ZSome (zcs, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3493z3 (z_s3494z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3494z3 with
    | z_s3495z3 when (string_startswith (z_s3495z3, "CCallFast")) ->
      begin
        match (string_drop (z_s3495z3, (string_length "CCallFast"))) with
        | z_s3496z3 ->
          begin
            match (zspc_matches_prefix z_s3496z3) with
            | ZSome ((), z_s3497z3) ->
              begin
                match (string_drop (z_s3496z3, z_s3497z3)) with
                | z_s3498z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3498z3) with
                    | ZSome (zcs, z_s3499z3) ->
                      begin
                        match (string_drop (z_s3498z3, z_s3499z3)) with
                        | z_s3500z3 ->
                          begin
                            match (zsep_matches_prefix z_s3500z3) with
                            | ZSome ((), z_s3501z3) ->
                              begin
                                match (string_drop (z_s3500z3, z_s3501z3)) with
                                | z_s3502z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3502z3) with
                                    | ZSome (zcb, z_s3503z3) ->
                                      begin
                                        match (string_drop (z_s3502z3, z_s3503z3)) with
                                        | "" -> ZSome (zcs, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3481z3 (z_s3482z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3482z3 with
    | z_s3483z3 when (string_startswith (z_s3483z3, "CCall")) ->
      begin
        match (string_drop (z_s3483z3, (string_length "CCall"))) with
        | z_s3484z3 ->
          begin
            match (zspc_matches_prefix z_s3484z3) with
            | ZSome ((), z_s3485z3) ->
              begin
                match (string_drop (z_s3484z3, z_s3485z3)) with
                | z_s3486z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3486z3) with
                    | ZSome (zcs, z_s3487z3) ->
                      begin
                        match (string_drop (z_s3486z3, z_s3487z3)) with
                        | z_s3488z3 ->
                          begin
                            match (zsep_matches_prefix z_s3488z3) with
                            | ZSome ((), z_s3489z3) ->
                              begin
                                match (string_drop (z_s3488z3, z_s3489z3)) with
                                | z_s3490z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3490z3) with
                                    | ZSome (zcb, z_s3491z3) ->
                                      begin
                                        match (string_drop (z_s3490z3, z_s3491z3)) with
                                        | "" -> ZSome (zcs, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3465z3 (z_s3466z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3466z3 with
    | z_s3467z3 when (string_startswith (z_s3467z3, "CFromPtr")) ->
      begin
        match (string_drop (z_s3467z3, (string_length "CFromPtr"))) with
        | z_s3468z3 ->
          begin
            match (zspc_matches_prefix z_s3468z3) with
            | ZSome ((), z_s3469z3) ->
              begin
                match (string_drop (z_s3468z3, z_s3469z3)) with
                | z_s3470z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3470z3) with
                    | ZSome (zcd, z_s3471z3) ->
                      begin
                        match (string_drop (z_s3470z3, z_s3471z3)) with
                        | z_s3472z3 ->
                          begin
                            match (zsep_matches_prefix z_s3472z3) with
                            | ZSome ((), z_s3473z3) ->
                              begin
                                match (string_drop (z_s3472z3, z_s3473z3)) with
                                | z_s3474z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3474z3) with
                                    | ZSome (zcb, z_s3475z3) ->
                                      begin
                                        match (string_drop (z_s3474z3, z_s3475z3)) with
                                        | z_s3476z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3476z3) with
                                            | ZSome ((), z_s3477z3) ->
                                              begin
                                                match (string_drop (z_s3476z3, z_s3477z3)) with
                                                | z_s3478z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s3478z3) with
                                                    | ZSome (zrs, z_s3479z3) ->
                                                      begin
                                                        match (string_drop (z_s3478z3, z_s3479z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcb, zrs)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3449z3 (z_s3450z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3450z3 with
    | z_s3451z3 when (string_startswith (z_s3451z3, "CToPtr")) ->
      begin
        match (string_drop (z_s3451z3, (string_length "CToPtr"))) with
        | z_s3452z3 ->
          begin
            match (zspc_matches_prefix z_s3452z3) with
            | ZSome ((), z_s3453z3) ->
              begin
                match (string_drop (z_s3452z3, z_s3453z3)) with
                | z_s3454z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3454z3) with
                    | ZSome (zrd, z_s3455z3) ->
                      begin
                        match (string_drop (z_s3454z3, z_s3455z3)) with
                        | z_s3456z3 ->
                          begin
                            match (zsep_matches_prefix z_s3456z3) with
                            | ZSome ((), z_s3457z3) ->
                              begin
                                match (string_drop (z_s3456z3, z_s3457z3)) with
                                | z_s3458z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3458z3) with
                                    | ZSome (zcb, z_s3459z3) ->
                                      begin
                                        match (string_drop (z_s3458z3, z_s3459z3)) with
                                        | z_s3460z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3460z3) with
                                            | ZSome ((), z_s3461z3) ->
                                              begin
                                                match (string_drop (z_s3460z3, z_s3461z3)) with
                                                | z_s3462z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s3462z3) with
                                                    | ZSome (zcs, z_s3463z3) ->
                                                      begin
                                                        match (string_drop (z_s3462z3, z_s3463z3)) with
                                                        | "" ->
                                                          ZSome (zrd, zcb, zcs)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3433z3 (z_s3434z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3434z3 with
    | z_s3435z3 when (string_startswith (z_s3435z3, "CCSeal")) ->
      begin
        match (string_drop (z_s3435z3, (string_length "CCSeal"))) with
        | z_s3436z3 ->
          begin
            match (zspc_matches_prefix z_s3436z3) with
            | ZSome ((), z_s3437z3) ->
              begin
                match (string_drop (z_s3436z3, z_s3437z3)) with
                | z_s3438z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3438z3) with
                    | ZSome (zcd, z_s3439z3) ->
                      begin
                        match (string_drop (z_s3438z3, z_s3439z3)) with
                        | z_s3440z3 ->
                          begin
                            match (zsep_matches_prefix z_s3440z3) with
                            | ZSome ((), z_s3441z3) ->
                              begin
                                match (string_drop (z_s3440z3, z_s3441z3)) with
                                | z_s3442z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3442z3) with
                                    | ZSome (zcs, z_s3443z3) ->
                                      begin
                                        match (string_drop (z_s3442z3, z_s3443z3)) with
                                        | z_s3444z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3444z3) with
                                            | ZSome ((), z_s3445z3) ->
                                              begin
                                                match (string_drop (z_s3444z3, z_s3445z3)) with
                                                | z_s3446z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s3446z3) with
                                                    | ZSome (zct, z_s3447z3) ->
                                                      begin
                                                        match (string_drop (z_s3446z3, z_s3447z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zct)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3417z3 (z_s3418z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3418z3 with
    | z_s3419z3 when (string_startswith (z_s3419z3, "CCopyType")) ->
      begin
        match (string_drop (z_s3419z3, (string_length "CCopyType"))) with
        | z_s3420z3 ->
          begin
            match (zspc_matches_prefix z_s3420z3) with
            | ZSome ((), z_s3421z3) ->
              begin
                match (string_drop (z_s3420z3, z_s3421z3)) with
                | z_s3422z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3422z3) with
                    | ZSome (zcd, z_s3423z3) ->
                      begin
                        match (string_drop (z_s3422z3, z_s3423z3)) with
                        | z_s3424z3 ->
                          begin
                            match (zsep_matches_prefix z_s3424z3) with
                            | ZSome ((), z_s3425z3) ->
                              begin
                                match (string_drop (z_s3424z3, z_s3425z3)) with
                                | z_s3426z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3426z3) with
                                    | ZSome (zcb, z_s3427z3) ->
                                      begin
                                        match (string_drop (z_s3426z3, z_s3427z3)) with
                                        | z_s3428z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3428z3) with
                                            | ZSome ((), z_s3429z3) ->
                                              begin
                                                match (string_drop (z_s3428z3, z_s3429z3)) with
                                                | z_s3430z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s3430z3) with
                                                    | ZSome (zct, z_s3431z3) ->
                                                      begin
                                                        match (string_drop (z_s3430z3, z_s3431z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcb, zct)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3401z3 (z_s3402z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3402z3 with
    | z_s3403z3 when (string_startswith (z_s3403z3, "CBuildCap")) ->
      begin
        match (string_drop (z_s3403z3, (string_length "CBuildCap"))) with
        | z_s3404z3 ->
          begin
            match (zspc_matches_prefix z_s3404z3) with
            | ZSome ((), z_s3405z3) ->
              begin
                match (string_drop (z_s3404z3, z_s3405z3)) with
                | z_s3406z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3406z3) with
                    | ZSome (zcd, z_s3407z3) ->
                      begin
                        match (string_drop (z_s3406z3, z_s3407z3)) with
                        | z_s3408z3 ->
                          begin
                            match (zsep_matches_prefix z_s3408z3) with
                            | ZSome ((), z_s3409z3) ->
                              begin
                                match (string_drop (z_s3408z3, z_s3409z3)) with
                                | z_s3410z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3410z3) with
                                    | ZSome (zcb, z_s3411z3) ->
                                      begin
                                        match (string_drop (z_s3410z3, z_s3411z3)) with
                                        | z_s3412z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3412z3) with
                                            | ZSome ((), z_s3413z3) ->
                                              begin
                                                match (string_drop (z_s3412z3, z_s3413z3)) with
                                                | z_s3414z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s3414z3) with
                                                    | ZSome (zct, z_s3415z3) ->
                                                      begin
                                                        match (string_drop (z_s3414z3, z_s3415z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcb, zct)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3385z3 (z_s3386z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3386z3 with
    | z_s3387z3 when (string_startswith (z_s3387z3, "CSetBoundsExact")) ->
      begin
        match (string_drop (z_s3387z3, (string_length "CSetBoundsExact"))) with
        | z_s3388z3 ->
          begin
            match (zspc_matches_prefix z_s3388z3) with
            | ZSome ((), z_s3389z3) ->
              begin
                match (string_drop (z_s3388z3, z_s3389z3)) with
                | z_s3390z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3390z3) with
                    | ZSome (zcd, z_s3391z3) ->
                      begin
                        match (string_drop (z_s3390z3, z_s3391z3)) with
                        | z_s3392z3 ->
                          begin
                            match (zsep_matches_prefix z_s3392z3) with
                            | ZSome ((), z_s3393z3) ->
                              begin
                                match (string_drop (z_s3392z3, z_s3393z3)) with
                                | z_s3394z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3394z3) with
                                    | ZSome (zcs, z_s3395z3) ->
                                      begin
                                        match (string_drop (z_s3394z3, z_s3395z3)) with
                                        | z_s3396z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3396z3) with
                                            | ZSome ((), z_s3397z3) ->
                                              begin
                                                match (string_drop (z_s3396z3, z_s3397z3)) with
                                                | z_s3398z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s3398z3) with
                                                    | ZSome (zrt, z_s3399z3) ->
                                                      begin
                                                        match (string_drop (z_s3398z3, z_s3399z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zrt)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3369z3 (z_s3370z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3370z3 with
    | z_s3371z3 when (string_startswith (z_s3371z3, "CSetBounds")) ->
      begin
        match (string_drop (z_s3371z3, (string_length "CSetBounds"))) with
        | z_s3372z3 ->
          begin
            match (zspc_matches_prefix z_s3372z3) with
            | ZSome ((), z_s3373z3) ->
              begin
                match (string_drop (z_s3372z3, z_s3373z3)) with
                | z_s3374z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3374z3) with
                    | ZSome (zcd, z_s3375z3) ->
                      begin
                        match (string_drop (z_s3374z3, z_s3375z3)) with
                        | z_s3376z3 ->
                          begin
                            match (zsep_matches_prefix z_s3376z3) with
                            | ZSome ((), z_s3377z3) ->
                              begin
                                match (string_drop (z_s3376z3, z_s3377z3)) with
                                | z_s3378z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3378z3) with
                                    | ZSome (zcs, z_s3379z3) ->
                                      begin
                                        match (string_drop (z_s3378z3, z_s3379z3)) with
                                        | z_s3380z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3380z3) with
                                            | ZSome ((), z_s3381z3) ->
                                              begin
                                                match (string_drop (z_s3380z3, z_s3381z3)) with
                                                | z_s3382z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s3382z3) with
                                                    | ZSome (zrt, z_s3383z3) ->
                                                      begin
                                                        match (string_drop (z_s3382z3, z_s3383z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zrt)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3353z3 (z_s3354z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3354z3 with
    | z_s3355z3 when (string_startswith (z_s3355z3, "CIncOffset")) ->
      begin
        match (string_drop (z_s3355z3, (string_length "CIncOffset"))) with
        | z_s3356z3 ->
          begin
            match (zspc_matches_prefix z_s3356z3) with
            | ZSome ((), z_s3357z3) ->
              begin
                match (string_drop (z_s3356z3, z_s3357z3)) with
                | z_s3358z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3358z3) with
                    | ZSome (zcd, z_s3359z3) ->
                      begin
                        match (string_drop (z_s3358z3, z_s3359z3)) with
                        | z_s3360z3 ->
                          begin
                            match (zsep_matches_prefix z_s3360z3) with
                            | ZSome ((), z_s3361z3) ->
                              begin
                                match (string_drop (z_s3360z3, z_s3361z3)) with
                                | z_s3362z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3362z3) with
                                    | ZSome (zcs, z_s3363z3) ->
                                      begin
                                        match (string_drop (z_s3362z3, z_s3363z3)) with
                                        | z_s3364z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3364z3) with
                                            | ZSome ((), z_s3365z3) ->
                                              begin
                                                match (string_drop (z_s3364z3, z_s3365z3)) with
                                                | z_s3366z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s3366z3) with
                                                    | ZSome (zrt, z_s3367z3) ->
                                                      begin
                                                        match (string_drop (z_s3366z3, z_s3367z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zrt)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3337z3 (z_s3338z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3338z3 with
    | z_s3339z3 when (string_startswith (z_s3339z3, "CSetOffset")) ->
      begin
        match (string_drop (z_s3339z3, (string_length "CSetOffset"))) with
        | z_s3340z3 ->
          begin
            match (zspc_matches_prefix z_s3340z3) with
            | ZSome ((), z_s3341z3) ->
              begin
                match (string_drop (z_s3340z3, z_s3341z3)) with
                | z_s3342z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3342z3) with
                    | ZSome (zcd, z_s3343z3) ->
                      begin
                        match (string_drop (z_s3342z3, z_s3343z3)) with
                        | z_s3344z3 ->
                          begin
                            match (zsep_matches_prefix z_s3344z3) with
                            | ZSome ((), z_s3345z3) ->
                              begin
                                match (string_drop (z_s3344z3, z_s3345z3)) with
                                | z_s3346z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3346z3) with
                                    | ZSome (zcs, z_s3347z3) ->
                                      begin
                                        match (string_drop (z_s3346z3, z_s3347z3)) with
                                        | z_s3348z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3348z3) with
                                            | ZSome ((), z_s3349z3) ->
                                              begin
                                                match (string_drop (z_s3348z3, z_s3349z3)) with
                                                | z_s3350z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s3350z3) with
                                                    | ZSome (zrt, z_s3351z3) ->
                                                      begin
                                                        match (string_drop (z_s3350z3, z_s3351z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zrt)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3321z3 (z_s3322z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3322z3 with
    | z_s3323z3 when (string_startswith (z_s3323z3, "CAndPerm")) ->
      begin
        match (string_drop (z_s3323z3, (string_length "CAndPerm"))) with
        | z_s3324z3 ->
          begin
            match (zspc_matches_prefix z_s3324z3) with
            | ZSome ((), z_s3325z3) ->
              begin
                match (string_drop (z_s3324z3, z_s3325z3)) with
                | z_s3326z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3326z3) with
                    | ZSome (zcd, z_s3327z3) ->
                      begin
                        match (string_drop (z_s3326z3, z_s3327z3)) with
                        | z_s3328z3 ->
                          begin
                            match (zsep_matches_prefix z_s3328z3) with
                            | ZSome ((), z_s3329z3) ->
                              begin
                                match (string_drop (z_s3328z3, z_s3329z3)) with
                                | z_s3330z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3330z3) with
                                    | ZSome (zcs, z_s3331z3) ->
                                      begin
                                        match (string_drop (z_s3330z3, z_s3331z3)) with
                                        | z_s3332z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3332z3) with
                                            | ZSome ((), z_s3333z3) ->
                                              begin
                                                match (string_drop (z_s3332z3, z_s3333z3)) with
                                                | z_s3334z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s3334z3) with
                                                    | ZSome (zrt, z_s3335z3) ->
                                                      begin
                                                        match (string_drop (z_s3334z3, z_s3335z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zrt)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3305z3 (z_s3306z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3306z3 with
    | z_s3307z3 when (string_startswith (z_s3307z3, "CUnseal")) ->
      begin
        match (string_drop (z_s3307z3, (string_length "CUnseal"))) with
        | z_s3308z3 ->
          begin
            match (zspc_matches_prefix z_s3308z3) with
            | ZSome ((), z_s3309z3) ->
              begin
                match (string_drop (z_s3308z3, z_s3309z3)) with
                | z_s3310z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3310z3) with
                    | ZSome (zcd, z_s3311z3) ->
                      begin
                        match (string_drop (z_s3310z3, z_s3311z3)) with
                        | z_s3312z3 ->
                          begin
                            match (zsep_matches_prefix z_s3312z3) with
                            | ZSome ((), z_s3313z3) ->
                              begin
                                match (string_drop (z_s3312z3, z_s3313z3)) with
                                | z_s3314z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3314z3) with
                                    | ZSome (zcs, z_s3315z3) ->
                                      begin
                                        match (string_drop (z_s3314z3, z_s3315z3)) with
                                        | z_s3316z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3316z3) with
                                            | ZSome ((), z_s3317z3) ->
                                              begin
                                                match (string_drop (z_s3316z3, z_s3317z3)) with
                                                | z_s3318z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s3318z3) with
                                                    | ZSome (zct, z_s3319z3) ->
                                                      begin
                                                        match (string_drop (z_s3318z3, z_s3319z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zct)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3289z3 (z_s3290z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3290z3 with
    | z_s3291z3 when (string_startswith (z_s3291z3, "CSeal")) ->
      begin
        match (string_drop (z_s3291z3, (string_length "CSeal"))) with
        | z_s3292z3 ->
          begin
            match (zspc_matches_prefix z_s3292z3) with
            | ZSome ((), z_s3293z3) ->
              begin
                match (string_drop (z_s3292z3, z_s3293z3)) with
                | z_s3294z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3294z3) with
                    | ZSome (zcd, z_s3295z3) ->
                      begin
                        match (string_drop (z_s3294z3, z_s3295z3)) with
                        | z_s3296z3 ->
                          begin
                            match (zsep_matches_prefix z_s3296z3) with
                            | ZSome ((), z_s3297z3) ->
                              begin
                                match (string_drop (z_s3296z3, z_s3297z3)) with
                                | z_s3298z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3298z3) with
                                    | ZSome (zcs, z_s3299z3) ->
                                      begin
                                        match (string_drop (z_s3298z3, z_s3299z3)) with
                                        | z_s3300z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3300z3) with
                                            | ZSome ((), z_s3301z3) ->
                                              begin
                                                match (string_drop (z_s3300z3, z_s3301z3)) with
                                                | z_s3302z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s3302z3) with
                                                    | ZSome (zct, z_s3303z3) ->
                                                      begin
                                                        match (string_drop (z_s3302z3, z_s3303z3)) with
                                                        | "" ->
                                                          ZSome (zcd, zcs, zct)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3277z3 (z_s3278z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3278z3 with
    | z_s3279z3 when (string_startswith (z_s3279z3, "FPClearq")) ->
      begin
        match (string_drop (z_s3279z3, (string_length "FPClearq"))) with
        | z_s3280z3 ->
          begin
            match (zspc_matches_prefix z_s3280z3) with
            | ZSome ((), z_s3281z3) ->
              begin
                match (string_drop (z_s3280z3, z_s3281z3)) with
                | z_s3282z3 ->
                  begin
                    match (hex_bits_2_matches_prefix z_s3282z3) with
                    | ZSome (zq, z_s3283z3) ->
                      begin
                        match (string_drop (z_s3282z3, z_s3283z3)) with
                        | z_s3284z3 ->
                          begin
                            match (zsep_matches_prefix z_s3284z3) with
                            | ZSome ((), z_s3285z3) ->
                              begin
                                match (string_drop (z_s3284z3, z_s3285z3)) with
                                | z_s3286z3 ->
                                  begin
                                    match (hex_bits_8_matches_prefix z_s3286z3) with
                                    | ZSome (zm8, z_s3287z3) ->
                                      begin
                                        match (string_drop (z_s3286z3, z_s3287z3)) with
                                        | "" -> ZSome (zq, zm8)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3265z3 (z_s3266z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3266z3 with
    | z_s3267z3 when (string_startswith (z_s3267z3, "Clearq")) ->
      begin
        match (string_drop (z_s3267z3, (string_length "Clearq"))) with
        | z_s3268z3 ->
          begin
            match (zspc_matches_prefix z_s3268z3) with
            | ZSome ((), z_s3269z3) ->
              begin
                match (string_drop (z_s3268z3, z_s3269z3)) with
                | z_s3270z3 ->
                  begin
                    match (hex_bits_2_matches_prefix z_s3270z3) with
                    | ZSome (zq, z_s3271z3) ->
                      begin
                        match (string_drop (z_s3270z3, z_s3271z3)) with
                        | z_s3272z3 ->
                          begin
                            match (zsep_matches_prefix z_s3272z3) with
                            | ZSome ((), z_s3273z3) ->
                              begin
                                match (string_drop (z_s3272z3, z_s3273z3)) with
                                | z_s3274z3 ->
                                  begin
                                    match (hex_bits_8_matches_prefix z_s3274z3) with
                                    | ZSome (zm8, z_s3275z3) ->
                                      begin
                                        match (string_drop (z_s3274z3, z_s3275z3)) with
                                        | "" -> ZSome (zq, zm8)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3253z3 (z_s3254z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3254z3 with
    | z_s3255z3 when (string_startswith (z_s3255z3, "CCheckType")) ->
      begin
        match (string_drop (z_s3255z3, (string_length "CCheckType"))) with
        | z_s3256z3 ->
          begin
            match (zspc_matches_prefix z_s3256z3) with
            | ZSome ((), z_s3257z3) ->
              begin
                match (string_drop (z_s3256z3, z_s3257z3)) with
                | z_s3258z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3258z3) with
                    | ZSome (zcs, z_s3259z3) ->
                      begin
                        match (string_drop (z_s3258z3, z_s3259z3)) with
                        | z_s3260z3 ->
                          begin
                            match (zsep_matches_prefix z_s3260z3) with
                            | ZSome ((), z_s3261z3) ->
                              begin
                                match (string_drop (z_s3260z3, z_s3261z3)) with
                                | z_s3262z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3262z3) with
                                    | ZSome (zcb, z_s3263z3) ->
                                      begin
                                        match (string_drop (z_s3262z3, z_s3263z3)) with
                                        | "" -> ZSome (zcs, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3241z3 (z_s3242z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3242z3 with
    | z_s3243z3 when (string_startswith (z_s3243z3, "CCheckPerm")) ->
      begin
        match (string_drop (z_s3243z3, (string_length "CCheckPerm"))) with
        | z_s3244z3 ->
          begin
            match (zspc_matches_prefix z_s3244z3) with
            | ZSome ((), z_s3245z3) ->
              begin
                match (string_drop (z_s3244z3, z_s3245z3)) with
                | z_s3246z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3246z3) with
                    | ZSome (zcs, z_s3247z3) ->
                      begin
                        match (string_drop (z_s3246z3, z_s3247z3)) with
                        | z_s3248z3 ->
                          begin
                            match (zsep_matches_prefix z_s3248z3) with
                            | ZSome ((), z_s3249z3) ->
                              begin
                                match (string_drop (z_s3248z3, z_s3249z3)) with
                                | z_s3250z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3250z3) with
                                    | ZSome (zrt, z_s3251z3) ->
                                      begin
                                        match (string_drop (z_s3250z3, z_s3251z3)) with
                                        | "" -> ZSome (zcs, zrt)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3229z3 (z_s3230z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3230z3 with
    | z_s3231z3 when (string_startswith (z_s3231z3, "CJALR")) ->
      begin
        match (string_drop (z_s3231z3, (string_length "CJALR"))) with
        | z_s3232z3 ->
          begin
            match (zspc_matches_prefix z_s3232z3) with
            | ZSome ((), z_s3233z3) ->
              begin
                match (string_drop (z_s3232z3, z_s3233z3)) with
                | z_s3234z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3234z3) with
                    | ZSome (zcd, z_s3235z3) ->
                      begin
                        match (string_drop (z_s3234z3, z_s3235z3)) with
                        | z_s3236z3 ->
                          begin
                            match (zsep_matches_prefix z_s3236z3) with
                            | ZSome ((), z_s3237z3) ->
                              begin
                                match (string_drop (z_s3236z3, z_s3237z3)) with
                                | z_s3238z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3238z3) with
                                    | ZSome (zcb, z_s3239z3) ->
                                      begin
                                        match (string_drop (z_s3238z3, z_s3239z3)) with
                                        | "" -> ZSome (zcd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3221z3 (z_s3222z3 : (string)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match z_s3222z3 with
    | z_s3223z3 when (string_startswith (z_s3223z3, "CJR")) ->
      begin
        match (string_drop (z_s3223z3, (string_length "CJR"))) with
        | z_s3224z3 ->
          begin
            match (zspc_matches_prefix z_s3224z3) with
            | ZSome ((), z_s3225z3) ->
              begin
                match (string_drop (z_s3224z3, z_s3225z3)) with
                | z_s3226z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3226z3) with
                    | ZSome (zcb, z_s3227z3) ->
                      begin
                        match (string_drop (z_s3226z3, z_s3227z3)) with
                        | "" -> ZSome zcb
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3209z3 (z_s3210z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3210z3 with
    | z_s3211z3 when (string_startswith (z_s3211z3, "CClearTag")) ->
      begin
        match (string_drop (z_s3211z3, (string_length "CClearTag"))) with
        | z_s3212z3 ->
          begin
            match (zspc_matches_prefix z_s3212z3) with
            | ZSome ((), z_s3213z3) ->
              begin
                match (string_drop (z_s3212z3, z_s3213z3)) with
                | z_s3214z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3214z3) with
                    | ZSome (zcd, z_s3215z3) ->
                      begin
                        match (string_drop (z_s3214z3, z_s3215z3)) with
                        | z_s3216z3 ->
                          begin
                            match (zsep_matches_prefix z_s3216z3) with
                            | ZSome ((), z_s3217z3) ->
                              begin
                                match (string_drop (z_s3216z3, z_s3217z3)) with
                                | z_s3218z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3218z3) with
                                    | ZSome (zcs, z_s3219z3) ->
                                      begin
                                        match (string_drop (z_s3218z3, z_s3219z3)) with
                                        | "" -> ZSome (zcd, zcs)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3197z3 (z_s3198z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3198z3 with
    | z_s3199z3 when (string_startswith (z_s3199z3, "CMove")) ->
      begin
        match (string_drop (z_s3199z3, (string_length "CMove"))) with
        | z_s3200z3 ->
          begin
            match (zspc_matches_prefix z_s3200z3) with
            | ZSome ((), z_s3201z3) ->
              begin
                match (string_drop (z_s3200z3, z_s3201z3)) with
                | z_s3202z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3202z3) with
                    | ZSome (zcd, z_s3203z3) ->
                      begin
                        match (string_drop (z_s3202z3, z_s3203z3)) with
                        | z_s3204z3 ->
                          begin
                            match (zsep_matches_prefix z_s3204z3) with
                            | ZSome ((), z_s3205z3) ->
                              begin
                                match (string_drop (z_s3204z3, z_s3205z3)) with
                                | z_s3206z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3206z3) with
                                    | ZSome (zcs, z_s3207z3) ->
                                      begin
                                        match (string_drop (z_s3206z3, z_s3207z3)) with
                                        | "" -> ZSome (zcd, zcs)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3185z3 (z_s3186z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3186z3 with
    | z_s3187z3 when (string_startswith (z_s3187z3, "CGetAddr")) ->
      begin
        match (string_drop (z_s3187z3, (string_length "CGetAddr"))) with
        | z_s3188z3 ->
          begin
            match (zspc_matches_prefix z_s3188z3) with
            | ZSome ((), z_s3189z3) ->
              begin
                match (string_drop (z_s3188z3, z_s3189z3)) with
                | z_s3190z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3190z3) with
                    | ZSome (zrd, z_s3191z3) ->
                      begin
                        match (string_drop (z_s3190z3, z_s3191z3)) with
                        | z_s3192z3 ->
                          begin
                            match (zsep_matches_prefix z_s3192z3) with
                            | ZSome ((), z_s3193z3) ->
                              begin
                                match (string_drop (z_s3192z3, z_s3193z3)) with
                                | z_s3194z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3194z3) with
                                    | ZSome (zcb, z_s3195z3) ->
                                      begin
                                        match (string_drop (z_s3194z3, z_s3195z3)) with
                                        | "" -> ZSome (zrd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3173z3 (z_s3174z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3174z3 with
    | z_s3175z3 when (string_startswith (z_s3175z3, "CGetOffset")) ->
      begin
        match (string_drop (z_s3175z3, (string_length "CGetOffset"))) with
        | z_s3176z3 ->
          begin
            match (zspc_matches_prefix z_s3176z3) with
            | ZSome ((), z_s3177z3) ->
              begin
                match (string_drop (z_s3176z3, z_s3177z3)) with
                | z_s3178z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3178z3) with
                    | ZSome (zrd, z_s3179z3) ->
                      begin
                        match (string_drop (z_s3178z3, z_s3179z3)) with
                        | z_s3180z3 ->
                          begin
                            match (zsep_matches_prefix z_s3180z3) with
                            | ZSome ((), z_s3181z3) ->
                              begin
                                match (string_drop (z_s3180z3, z_s3181z3)) with
                                | z_s3182z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3182z3) with
                                    | ZSome (zcb, z_s3183z3) ->
                                      begin
                                        match (string_drop (z_s3182z3, z_s3183z3)) with
                                        | "" -> ZSome (zrd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3161z3 (z_s3162z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3162z3 with
    | z_s3163z3 when (string_startswith (z_s3163z3, "CGetSealed")) ->
      begin
        match (string_drop (z_s3163z3, (string_length "CGetSealed"))) with
        | z_s3164z3 ->
          begin
            match (zspc_matches_prefix z_s3164z3) with
            | ZSome ((), z_s3165z3) ->
              begin
                match (string_drop (z_s3164z3, z_s3165z3)) with
                | z_s3166z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3166z3) with
                    | ZSome (zrd, z_s3167z3) ->
                      begin
                        match (string_drop (z_s3166z3, z_s3167z3)) with
                        | z_s3168z3 ->
                          begin
                            match (zsep_matches_prefix z_s3168z3) with
                            | ZSome ((), z_s3169z3) ->
                              begin
                                match (string_drop (z_s3168z3, z_s3169z3)) with
                                | z_s3170z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3170z3) with
                                    | ZSome (zcb, z_s3171z3) ->
                                      begin
                                        match (string_drop (z_s3170z3, z_s3171z3)) with
                                        | "" -> ZSome (zrd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3149z3 (z_s3150z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3150z3 with
    | z_s3151z3 when (string_startswith (z_s3151z3, "CGetTag")) ->
      begin
        match (string_drop (z_s3151z3, (string_length "CGetTag"))) with
        | z_s3152z3 ->
          begin
            match (zspc_matches_prefix z_s3152z3) with
            | ZSome ((), z_s3153z3) ->
              begin
                match (string_drop (z_s3152z3, z_s3153z3)) with
                | z_s3154z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3154z3) with
                    | ZSome (zrd, z_s3155z3) ->
                      begin
                        match (string_drop (z_s3154z3, z_s3155z3)) with
                        | z_s3156z3 ->
                          begin
                            match (zsep_matches_prefix z_s3156z3) with
                            | ZSome ((), z_s3157z3) ->
                              begin
                                match (string_drop (z_s3156z3, z_s3157z3)) with
                                | z_s3158z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3158z3) with
                                    | ZSome (zcb, z_s3159z3) ->
                                      begin
                                        match (string_drop (z_s3158z3, z_s3159z3)) with
                                        | "" -> ZSome (zrd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3137z3 (z_s3138z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3138z3 with
    | z_s3139z3 when (string_startswith (z_s3139z3, "CGetLen")) ->
      begin
        match (string_drop (z_s3139z3, (string_length "CGetLen"))) with
        | z_s3140z3 ->
          begin
            match (zspc_matches_prefix z_s3140z3) with
            | ZSome ((), z_s3141z3) ->
              begin
                match (string_drop (z_s3140z3, z_s3141z3)) with
                | z_s3142z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3142z3) with
                    | ZSome (zrd, z_s3143z3) ->
                      begin
                        match (string_drop (z_s3142z3, z_s3143z3)) with
                        | z_s3144z3 ->
                          begin
                            match (zsep_matches_prefix z_s3144z3) with
                            | ZSome ((), z_s3145z3) ->
                              begin
                                match (string_drop (z_s3144z3, z_s3145z3)) with
                                | z_s3146z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3146z3) with
                                    | ZSome (zcb, z_s3147z3) ->
                                      begin
                                        match (string_drop (z_s3146z3, z_s3147z3)) with
                                        | "" -> ZSome (zrd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3125z3 (z_s3126z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3126z3 with
    | z_s3127z3 when (string_startswith (z_s3127z3, "CGetBase")) ->
      begin
        match (string_drop (z_s3127z3, (string_length "CGetBase"))) with
        | z_s3128z3 ->
          begin
            match (zspc_matches_prefix z_s3128z3) with
            | ZSome ((), z_s3129z3) ->
              begin
                match (string_drop (z_s3128z3, z_s3129z3)) with
                | z_s3130z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3130z3) with
                    | ZSome (zrd, z_s3131z3) ->
                      begin
                        match (string_drop (z_s3130z3, z_s3131z3)) with
                        | z_s3132z3 ->
                          begin
                            match (zsep_matches_prefix z_s3132z3) with
                            | ZSome ((), z_s3133z3) ->
                              begin
                                match (string_drop (z_s3132z3, z_s3133z3)) with
                                | z_s3134z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3134z3) with
                                    | ZSome (zcb, z_s3135z3) ->
                                      begin
                                        match (string_drop (z_s3134z3, z_s3135z3)) with
                                        | "" -> ZSome (zrd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3113z3 (z_s3114z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3114z3 with
    | z_s3115z3 when (string_startswith (z_s3115z3, "CGetType")) ->
      begin
        match (string_drop (z_s3115z3, (string_length "CGetType"))) with
        | z_s3116z3 ->
          begin
            match (zspc_matches_prefix z_s3116z3) with
            | ZSome ((), z_s3117z3) ->
              begin
                match (string_drop (z_s3116z3, z_s3117z3)) with
                | z_s3118z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3118z3) with
                    | ZSome (zrd, z_s3119z3) ->
                      begin
                        match (string_drop (z_s3118z3, z_s3119z3)) with
                        | z_s3120z3 ->
                          begin
                            match (zsep_matches_prefix z_s3120z3) with
                            | ZSome ((), z_s3121z3) ->
                              begin
                                match (string_drop (z_s3120z3, z_s3121z3)) with
                                | z_s3122z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3122z3) with
                                    | ZSome (zcb, z_s3123z3) ->
                                      begin
                                        match (string_drop (z_s3122z3, z_s3123z3)) with
                                        | "" -> ZSome (zrd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3101z3 (z_s3102z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3102z3 with
    | z_s3103z3 when (string_startswith (z_s3103z3, "CGetPerm")) ->
      begin
        match (string_drop (z_s3103z3, (string_length "CGetPerm"))) with
        | z_s3104z3 ->
          begin
            match (zspc_matches_prefix z_s3104z3) with
            | ZSome ((), z_s3105z3) ->
              begin
                match (string_drop (z_s3104z3, z_s3105z3)) with
                | z_s3106z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3106z3) with
                    | ZSome (zrd, z_s3107z3) ->
                      begin
                        match (string_drop (z_s3106z3, z_s3107z3)) with
                        | z_s3108z3 ->
                          begin
                            match (zsep_matches_prefix z_s3108z3) with
                            | ZSome ((), z_s3109z3) ->
                              begin
                                match (string_drop (z_s3108z3, z_s3109z3)) with
                                | z_s3110z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3110z3) with
                                    | ZSome (zcb, z_s3111z3) ->
                                      begin
                                        match (string_drop (z_s3110z3, z_s3111z3)) with
                                        | "" -> ZSome (zrd, zcb)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3084z3 (z_s3085z3 : (string)) : ((zcsrop * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3085z3 with
    | z_s3086z3 ->
      begin
        match (zcsr_mnemonic_matches_prefix z_s3086z3) with
        | ZSome (zop, z_s3087z3) ->
          begin
            match (string_drop (z_s3086z3, z_s3087z3)) with
            | z_s3088z3 ->
              begin
                match (zspc_matches_prefix z_s3088z3) with
                | ZSome ((), z_s3089z3) ->
                  begin
                    match (string_drop (z_s3088z3, z_s3089z3)) with
                    | z_s3090z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s3090z3) with
                        | ZSome (zrd, z_s3091z3) ->
                          begin
                            match (string_drop (z_s3090z3, z_s3091z3)) with
                            | z_s3092z3 ->
                              begin
                                match (zsep_matches_prefix z_s3092z3) with
                                | ZSome ((), z_s3093z3) ->
                                  begin
                                    match (string_drop (z_s3092z3, z_s3093z3)) with
                                    | z_s3094z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s3094z3) with
                                        | ZSome (zrs1, z_s3095z3) ->
                                          begin
                                            match (string_drop (z_s3094z3, z_s3095z3)) with
                                            | z_s3096z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s3096z3) with
                                                | ZSome ((), z_s3097z3) ->
                                                  begin
                                                    match (string_drop (z_s3096z3, z_s3097z3)) with
                                                    | z_s3098z3 ->
                                                      begin
                                                        match (zcsr_name_map_matches_prefix z_s3098z3) with
                                                        | ZSome (zcsr, z_s3099z3) ->
                                                          begin
                                                            match (string_drop (z_s3098z3, z_s3099z3)) with
                                                            | "" ->
                                                              ZSome (zop, zrd, zrs1, zcsr)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3066z3 (z_s3067z3 : (string)) : ((zcsrop * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3067z3 with
    | z_s3068z3 ->
      begin
        match (zcsr_mnemonic_matches_prefix z_s3068z3) with
        | ZSome (zop, z_s3069z3) ->
          begin
            match (string_drop (z_s3068z3, z_s3069z3)) with
            | z_s3070z3 when (string_startswith (z_s3070z3, "i")) ->
              begin
                match (string_drop (z_s3070z3, (string_length "i"))) with
                | z_s3071z3 ->
                  begin
                    match (zspc_matches_prefix z_s3071z3) with
                    | ZSome ((), z_s3072z3) ->
                      begin
                        match (string_drop (z_s3071z3, z_s3072z3)) with
                        | z_s3073z3 ->
                          begin
                            match (zreg_name_matches_prefix z_s3073z3) with
                            | ZSome (zrd, z_s3074z3) ->
                              begin
                                match (string_drop (z_s3073z3, z_s3074z3)) with
                                | z_s3075z3 ->
                                  begin
                                    match (zsep_matches_prefix z_s3075z3) with
                                    | ZSome ((), z_s3076z3) ->
                                      begin
                                        match (string_drop (z_s3075z3, z_s3076z3)) with
                                        | z_s3077z3 ->
                                          begin
                                            match (hex_bits_5_matches_prefix z_s3077z3) with
                                            | ZSome (zrs1, z_s3078z3) ->
                                              begin
                                                match (string_drop (z_s3077z3, z_s3078z3)) with
                                                | z_s3079z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s3079z3) with
                                                    | ZSome ((), z_s3080z3) ->
                                                      begin
                                                        match (string_drop (z_s3079z3, z_s3080z3)) with
                                                        | z_s3081z3 ->
                                                          begin
                                                            match (zcsr_name_map_matches_prefix z_s3081z3) with
                                                            | ZSome (zcsr, z_s3082z3) ->
                                                              begin
                                                                match (string_drop (z_s3081z3, z_s3082z3)) with
                                                                | "" ->
                                                                  ZSome (zop, zrd, zrs1, zcsr)
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3047z3 (z_s3048z3 : (string)) : ((bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3048z3 with
    | z_s3049z3 when (string_startswith (z_s3049z3, "rem")) ->
      begin
        match (string_drop (z_s3049z3, (string_length "rem"))) with
        | z_s3050z3 ->
          begin
            match (zmaybe_not_u_matches_prefix z_s3050z3) with
            | ZSome (zs, z_s3051z3) ->
              begin
                match (string_drop (z_s3050z3, z_s3051z3)) with
                | z_s3052z3 when (string_startswith (z_s3052z3, "w")) ->
                  begin
                    match (string_drop (z_s3052z3, (string_length "w"))) with
                    | z_s3053z3 ->
                      begin
                        match (zspc_matches_prefix z_s3053z3) with
                        | ZSome ((), z_s3054z3) ->
                          begin
                            match (string_drop (z_s3053z3, z_s3054z3)) with
                            | z_s3055z3 ->
                              begin
                                match (zreg_name_matches_prefix z_s3055z3) with
                                | ZSome (zrd, z_s3056z3) ->
                                  begin
                                    match (string_drop (z_s3055z3, z_s3056z3)) with
                                    | z_s3057z3 ->
                                      begin
                                        match (zsep_matches_prefix z_s3057z3) with
                                        | ZSome ((), z_s3058z3) ->
                                          begin
                                            match (string_drop (z_s3057z3, z_s3058z3)) with
                                            | z_s3059z3 ->
                                              begin
                                                match (zreg_name_matches_prefix z_s3059z3) with
                                                | ZSome (zrs1, z_s3060z3) ->
                                                  begin
                                                    match (string_drop (z_s3059z3, z_s3060z3)) with
                                                    | z_s3061z3 ->
                                                      begin
                                                        match (zsep_matches_prefix z_s3061z3) with
                                                        | ZSome ((), z_s3062z3) ->
                                                          begin
                                                            match (string_drop (z_s3061z3, z_s3062z3)) with
                                                            | z_s3063z3 ->
                                                              begin
                                                                match (zreg_name_matches_prefix z_s3063z3) with
                                                                | ZSome (zrs2, z_s3064z3) ->
                                                                  begin
                                                                    match (string_drop (z_s3063z3, z_s3064z3)) with
                                                                    | "" ->
                                                                      ZSome (zs, zrd, zrs1, zrs2)
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3028z3 (z_s3029z3 : (string)) : ((bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3029z3 with
    | z_s3030z3 when (string_startswith (z_s3030z3, "div")) ->
      begin
        match (string_drop (z_s3030z3, (string_length "div"))) with
        | z_s3031z3 ->
          begin
            match (zmaybe_not_u_matches_prefix z_s3031z3) with
            | ZSome (zs, z_s3032z3) ->
              begin
                match (string_drop (z_s3031z3, z_s3032z3)) with
                | z_s3033z3 when (string_startswith (z_s3033z3, "w")) ->
                  begin
                    match (string_drop (z_s3033z3, (string_length "w"))) with
                    | z_s3034z3 ->
                      begin
                        match (zspc_matches_prefix z_s3034z3) with
                        | ZSome ((), z_s3035z3) ->
                          begin
                            match (string_drop (z_s3034z3, z_s3035z3)) with
                            | z_s3036z3 ->
                              begin
                                match (zreg_name_matches_prefix z_s3036z3) with
                                | ZSome (zrd, z_s3037z3) ->
                                  begin
                                    match (string_drop (z_s3036z3, z_s3037z3)) with
                                    | z_s3038z3 ->
                                      begin
                                        match (zsep_matches_prefix z_s3038z3) with
                                        | ZSome ((), z_s3039z3) ->
                                          begin
                                            match (string_drop (z_s3038z3, z_s3039z3)) with
                                            | z_s3040z3 ->
                                              begin
                                                match (zreg_name_matches_prefix z_s3040z3) with
                                                | ZSome (zrs1, z_s3041z3) ->
                                                  begin
                                                    match (string_drop (z_s3040z3, z_s3041z3)) with
                                                    | z_s3042z3 ->
                                                      begin
                                                        match (zsep_matches_prefix z_s3042z3) with
                                                        | ZSome ((), z_s3043z3) ->
                                                          begin
                                                            match (string_drop (z_s3042z3, z_s3043z3)) with
                                                            | z_s3044z3 ->
                                                              begin
                                                                match (zreg_name_matches_prefix z_s3044z3) with
                                                                | ZSome (zrs2, z_s3045z3) ->
                                                                  begin
                                                                    match (string_drop (z_s3044z3, z_s3045z3)) with
                                                                    | "" ->
                                                                      ZSome (zs, zrd, zrs1, zrs2)
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3012z3 (z_s3013z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s3013z3 with
    | z_s3014z3 when (string_startswith (z_s3014z3, "mulw")) ->
      begin
        match (string_drop (z_s3014z3, (string_length "mulw"))) with
        | z_s3015z3 ->
          begin
            match (zspc_matches_prefix z_s3015z3) with
            | ZSome ((), z_s3016z3) ->
              begin
                match (string_drop (z_s3015z3, z_s3016z3)) with
                | z_s3017z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3017z3) with
                    | ZSome (zrd, z_s3018z3) ->
                      begin
                        match (string_drop (z_s3017z3, z_s3018z3)) with
                        | z_s3019z3 ->
                          begin
                            match (zsep_matches_prefix z_s3019z3) with
                            | ZSome ((), z_s3020z3) ->
                              begin
                                match (string_drop (z_s3019z3, z_s3020z3)) with
                                | z_s3021z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3021z3) with
                                    | ZSome (zrs1, z_s3022z3) ->
                                      begin
                                        match (string_drop (z_s3021z3, z_s3022z3)) with
                                        | z_s3023z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3023z3) with
                                            | ZSome ((), z_s3024z3) ->
                                              begin
                                                match (string_drop (z_s3023z3, z_s3024z3)) with
                                                | z_s3025z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s3025z3) with
                                                    | ZSome (zrs2, z_s3026z3) ->
                                                      begin
                                                        match (string_drop (z_s3025z3, z_s3026z3)) with
                                                        | "" ->
                                                          ZSome (zrd, zrs1, zrs2)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2994z3 (z_s2995z3 : (string)) : ((bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2995z3 with
    | z_s2996z3 when (string_startswith (z_s2996z3, "rem")) ->
      begin
        match (string_drop (z_s2996z3, (string_length "rem"))) with
        | z_s2997z3 ->
          begin
            match (zmaybe_not_u_matches_prefix z_s2997z3) with
            | ZSome (zs, z_s2998z3) ->
              begin
                match (string_drop (z_s2997z3, z_s2998z3)) with
                | z_s2999z3 ->
                  begin
                    match (zspc_matches_prefix z_s2999z3) with
                    | ZSome ((), z_s3000z3) ->
                      begin
                        match (string_drop (z_s2999z3, z_s3000z3)) with
                        | z_s3001z3 ->
                          begin
                            match (zreg_name_matches_prefix z_s3001z3) with
                            | ZSome (zrd, z_s3002z3) ->
                              begin
                                match (string_drop (z_s3001z3, z_s3002z3)) with
                                | z_s3003z3 ->
                                  begin
                                    match (zsep_matches_prefix z_s3003z3) with
                                    | ZSome ((), z_s3004z3) ->
                                      begin
                                        match (string_drop (z_s3003z3, z_s3004z3)) with
                                        | z_s3005z3 ->
                                          begin
                                            match (zreg_name_matches_prefix z_s3005z3) with
                                            | ZSome (zrs1, z_s3006z3) ->
                                              begin
                                                match (string_drop (z_s3005z3, z_s3006z3)) with
                                                | z_s3007z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s3007z3) with
                                                    | ZSome ((), z_s3008z3) ->
                                                      begin
                                                        match (string_drop (z_s3007z3, z_s3008z3)) with
                                                        | z_s3009z3 ->
                                                          begin
                                                            match (zreg_name_matches_prefix z_s3009z3) with
                                                            | ZSome (zrs2, z_s3010z3) ->
                                                              begin
                                                                match (string_drop (z_s3009z3, z_s3010z3)) with
                                                                | "" ->
                                                                  ZSome (zs, zrd, zrs1, zrs2)
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2976z3 (z_s2977z3 : (string)) : ((bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2977z3 with
    | z_s2978z3 when (string_startswith (z_s2978z3, "div")) ->
      begin
        match (string_drop (z_s2978z3, (string_length "div"))) with
        | z_s2979z3 ->
          begin
            match (zmaybe_not_u_matches_prefix z_s2979z3) with
            | ZSome (zs, z_s2980z3) ->
              begin
                match (string_drop (z_s2979z3, z_s2980z3)) with
                | z_s2981z3 ->
                  begin
                    match (zspc_matches_prefix z_s2981z3) with
                    | ZSome ((), z_s2982z3) ->
                      begin
                        match (string_drop (z_s2981z3, z_s2982z3)) with
                        | z_s2983z3 ->
                          begin
                            match (zreg_name_matches_prefix z_s2983z3) with
                            | ZSome (zrd, z_s2984z3) ->
                              begin
                                match (string_drop (z_s2983z3, z_s2984z3)) with
                                | z_s2985z3 ->
                                  begin
                                    match (zsep_matches_prefix z_s2985z3) with
                                    | ZSome ((), z_s2986z3) ->
                                      begin
                                        match (string_drop (z_s2985z3, z_s2986z3)) with
                                        | z_s2987z3 ->
                                          begin
                                            match (zreg_name_matches_prefix z_s2987z3) with
                                            | ZSome (zrs1, z_s2988z3) ->
                                              begin
                                                match (string_drop (z_s2987z3, z_s2988z3)) with
                                                | z_s2989z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s2989z3) with
                                                    | ZSome ((), z_s2990z3) ->
                                                      begin
                                                        match (string_drop (z_s2989z3, z_s2990z3)) with
                                                        | z_s2991z3 ->
                                                          begin
                                                            match (zreg_name_matches_prefix z_s2991z3) with
                                                            | ZSome (zrs2, z_s2992z3) ->
                                                              begin
                                                                match (string_drop (z_s2991z3, z_s2992z3)) with
                                                                | "" ->
                                                                  ZSome (zs, zrd, zrs1, zrs2)
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2959z3 (z_s2960z3 : (string)) : ((bool * bool * bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2960z3 with
    | z_s2961z3 ->
      begin
        match (zmul_mnemonic_matches_prefix z_s2961z3) with
        | ZSome ((zhigh, zsigned1, zsigned2), z_s2962z3) ->
          begin
            match (string_drop (z_s2961z3, z_s2962z3)) with
            | z_s2963z3 ->
              begin
                match (zspc_matches_prefix z_s2963z3) with
                | ZSome ((), z_s2964z3) ->
                  begin
                    match (string_drop (z_s2963z3, z_s2964z3)) with
                    | z_s2965z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s2965z3) with
                        | ZSome (zrd, z_s2966z3) ->
                          begin
                            match (string_drop (z_s2965z3, z_s2966z3)) with
                            | z_s2967z3 ->
                              begin
                                match (zsep_matches_prefix z_s2967z3) with
                                | ZSome ((), z_s2968z3) ->
                                  begin
                                    match (string_drop (z_s2967z3, z_s2968z3)) with
                                    | z_s2969z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s2969z3) with
                                        | ZSome (zrs1, z_s2970z3) ->
                                          begin
                                            match (string_drop (z_s2969z3, z_s2970z3)) with
                                            | z_s2971z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s2971z3) with
                                                | ZSome ((), z_s2972z3) ->
                                                  begin
                                                    match (string_drop (z_s2971z3, z_s2972z3)) with
                                                    | z_s2973z3 ->
                                                      begin
                                                        match (zreg_name_matches_prefix z_s2973z3) with
                                                        | ZSome (zrs2, z_s2974z3) ->
                                                          begin
                                                            match (string_drop (z_s2973z3, z_s2974z3)) with
                                                            | "" ->
                                                              ZSome (zhigh, zsigned1, zsigned2, zrd, zrs1, zrs2)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2947z3 (z_s2948z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2948z3 with
    | z_s2949z3 when (string_startswith (z_s2949z3, "c.add")) ->
      begin
        match (string_drop (z_s2949z3, (string_length "c.add"))) with
        | z_s2950z3 ->
          begin
            match (zspc_matches_prefix z_s2950z3) with
            | ZSome ((), z_s2951z3) ->
              begin
                match (string_drop (z_s2950z3, z_s2951z3)) with
                | z_s2952z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2952z3) with
                    | ZSome (zrsd, z_s2953z3) ->
                      begin
                        match (string_drop (z_s2952z3, z_s2953z3)) with
                        | z_s2954z3 ->
                          begin
                            match (zsep_matches_prefix z_s2954z3) with
                            | ZSome ((), z_s2955z3) ->
                              begin
                                match (string_drop (z_s2954z3, z_s2955z3)) with
                                | z_s2956z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2956z3) with
                                    | ZSome (zrs2, z_s2957z3) ->
                                      begin
                                        match (string_drop (z_s2956z3, z_s2957z3)) with
                                        | "" -> ZSome (zrsd, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2935z3 (z_s2936z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2936z3 with
    | z_s2937z3 when (string_startswith (z_s2937z3, "c.mv")) ->
      begin
        match (string_drop (z_s2937z3, (string_length "c.mv"))) with
        | z_s2938z3 ->
          begin
            match (zspc_matches_prefix z_s2938z3) with
            | ZSome ((), z_s2939z3) ->
              begin
                match (string_drop (z_s2938z3, z_s2939z3)) with
                | z_s2940z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2940z3) with
                    | ZSome (zrd, z_s2941z3) ->
                      begin
                        match (string_drop (z_s2940z3, z_s2941z3)) with
                        | z_s2942z3 ->
                          begin
                            match (zsep_matches_prefix z_s2942z3) with
                            | ZSome ((), z_s2943z3) ->
                              begin
                                match (string_drop (z_s2942z3, z_s2943z3)) with
                                | z_s2944z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2944z3) with
                                    | ZSome (zrs2, z_s2945z3) ->
                                      begin
                                        match (string_drop (z_s2944z3, z_s2945z3)) with
                                        | "" -> ZSome (zrd, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2927z3 (z_s2928z3 : (string)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match z_s2928z3 with
    | z_s2929z3 when (string_startswith (z_s2929z3, "c.jalr")) ->
      begin
        match (string_drop (z_s2929z3, (string_length "c.jalr"))) with
        | z_s2930z3 ->
          begin
            match (zspc_matches_prefix z_s2930z3) with
            | ZSome ((), z_s2931z3) ->
              begin
                match (string_drop (z_s2930z3, z_s2931z3)) with
                | z_s2932z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2932z3) with
                    | ZSome (zrs1, z_s2933z3) ->
                      begin
                        match (string_drop (z_s2932z3, z_s2933z3)) with
                        | "" -> ZSome zrs1
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2919z3 (z_s2920z3 : (string)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match z_s2920z3 with
    | z_s2921z3 when (string_startswith (z_s2921z3, "c.jr")) ->
      begin
        match (string_drop (z_s2921z3, (string_length "c.jr"))) with
        | z_s2922z3 ->
          begin
            match (zspc_matches_prefix z_s2922z3) with
            | ZSome ((), z_s2923z3) ->
              begin
                match (string_drop (z_s2922z3, z_s2923z3)) with
                | z_s2924z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2924z3) with
                    | ZSome (zrs1, z_s2925z3) ->
                      begin
                        match (string_drop (z_s2924z3, z_s2925z3)) with
                        | "" -> ZSome zrs1
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2907z3 (z_s2908z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2908z3 with
    | z_s2909z3 when (string_startswith (z_s2909z3, "c.sdsp")) ->
      begin
        match (string_drop (z_s2909z3, (string_length "c.sdsp"))) with
        | z_s2910z3 ->
          begin
            match (zspc_matches_prefix z_s2910z3) with
            | ZSome ((), z_s2911z3) ->
              begin
                match (string_drop (z_s2910z3, z_s2911z3)) with
                | z_s2912z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2912z3) with
                    | ZSome (zrs2, z_s2913z3) ->
                      begin
                        match (string_drop (z_s2912z3, z_s2913z3)) with
                        | z_s2914z3 ->
                          begin
                            match (zsep_matches_prefix z_s2914z3) with
                            | ZSome ((), z_s2915z3) ->
                              begin
                                match (string_drop (z_s2914z3, z_s2915z3)) with
                                | z_s2916z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s2916z3) with
                                    | ZSome (zuimm, z_s2917z3) ->
                                      begin
                                        match (string_drop (z_s2916z3, z_s2917z3)) with
                                        | "" -> ZSome (zrs2, zuimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2895z3 (z_s2896z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2896z3 with
    | z_s2897z3 when (string_startswith (z_s2897z3, "c.swsp")) ->
      begin
        match (string_drop (z_s2897z3, (string_length "c.swsp"))) with
        | z_s2898z3 ->
          begin
            match (zspc_matches_prefix z_s2898z3) with
            | ZSome ((), z_s2899z3) ->
              begin
                match (string_drop (z_s2898z3, z_s2899z3)) with
                | z_s2900z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2900z3) with
                    | ZSome (zrd, z_s2901z3) ->
                      begin
                        match (string_drop (z_s2900z3, z_s2901z3)) with
                        | z_s2902z3 ->
                          begin
                            match (zsep_matches_prefix z_s2902z3) with
                            | ZSome ((), z_s2903z3) ->
                              begin
                                match (string_drop (z_s2902z3, z_s2903z3)) with
                                | z_s2904z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s2904z3) with
                                    | ZSome (zuimm, z_s2905z3) ->
                                      begin
                                        match (string_drop (z_s2904z3, z_s2905z3)) with
                                        | "" -> ZSome (zrd, zuimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2883z3 (z_s2884z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2884z3 with
    | z_s2885z3 when (string_startswith (z_s2885z3, "c.ldsp")) ->
      begin
        match (string_drop (z_s2885z3, (string_length "c.ldsp"))) with
        | z_s2886z3 ->
          begin
            match (zspc_matches_prefix z_s2886z3) with
            | ZSome ((), z_s2887z3) ->
              begin
                match (string_drop (z_s2886z3, z_s2887z3)) with
                | z_s2888z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2888z3) with
                    | ZSome (zrd, z_s2889z3) ->
                      begin
                        match (string_drop (z_s2888z3, z_s2889z3)) with
                        | z_s2890z3 ->
                          begin
                            match (zsep_matches_prefix z_s2890z3) with
                            | ZSome ((), z_s2891z3) ->
                              begin
                                match (string_drop (z_s2890z3, z_s2891z3)) with
                                | z_s2892z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s2892z3) with
                                    | ZSome (zuimm, z_s2893z3) ->
                                      begin
                                        match (string_drop (z_s2892z3, z_s2893z3)) with
                                        | "" -> ZSome (zrd, zuimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2871z3 (z_s2872z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2872z3 with
    | z_s2873z3 when (string_startswith (z_s2873z3, "c.lwsp")) ->
      begin
        match (string_drop (z_s2873z3, (string_length "c.lwsp"))) with
        | z_s2874z3 ->
          begin
            match (zspc_matches_prefix z_s2874z3) with
            | ZSome ((), z_s2875z3) ->
              begin
                match (string_drop (z_s2874z3, z_s2875z3)) with
                | z_s2876z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2876z3) with
                    | ZSome (zrd, z_s2877z3) ->
                      begin
                        match (string_drop (z_s2876z3, z_s2877z3)) with
                        | z_s2878z3 ->
                          begin
                            match (zsep_matches_prefix z_s2878z3) with
                            | ZSome ((), z_s2879z3) ->
                              begin
                                match (string_drop (z_s2878z3, z_s2879z3)) with
                                | z_s2880z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s2880z3) with
                                    | ZSome (zuimm, z_s2881z3) ->
                                      begin
                                        match (string_drop (z_s2880z3, z_s2881z3)) with
                                        | "" -> ZSome (zrd, zuimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2859z3 (z_s2860z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2860z3 with
    | z_s2861z3 when (string_startswith (z_s2861z3, "c.slli")) ->
      begin
        match (string_drop (z_s2861z3, (string_length "c.slli"))) with
        | z_s2862z3 ->
          begin
            match (zspc_matches_prefix z_s2862z3) with
            | ZSome ((), z_s2863z3) ->
              begin
                match (string_drop (z_s2862z3, z_s2863z3)) with
                | z_s2864z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2864z3) with
                    | ZSome (zrsd, z_s2865z3) ->
                      begin
                        match (string_drop (z_s2864z3, z_s2865z3)) with
                        | z_s2866z3 ->
                          begin
                            match (zsep_matches_prefix z_s2866z3) with
                            | ZSome ((), z_s2867z3) ->
                              begin
                                match (string_drop (z_s2866z3, z_s2867z3)) with
                                | z_s2868z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s2868z3) with
                                    | ZSome (zshamt, z_s2869z3) ->
                                      begin
                                        match (string_drop (z_s2868z3, z_s2869z3)) with
                                        | "" -> ZSome (zrsd, zshamt)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2847z3 (z_s2848z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2848z3 with
    | z_s2849z3 when (string_startswith (z_s2849z3, "c.bnez")) ->
      begin
        match (string_drop (z_s2849z3, (string_length "c.bnez"))) with
        | z_s2850z3 ->
          begin
            match (zspc_matches_prefix z_s2850z3) with
            | ZSome ((), z_s2851z3) ->
              begin
                match (string_drop (z_s2850z3, z_s2851z3)) with
                | z_s2852z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s2852z3) with
                    | ZSome (zrs, z_s2853z3) ->
                      begin
                        match (string_drop (z_s2852z3, z_s2853z3)) with
                        | z_s2854z3 ->
                          begin
                            match (zsep_matches_prefix z_s2854z3) with
                            | ZSome ((), z_s2855z3) ->
                              begin
                                match (string_drop (z_s2854z3, z_s2855z3)) with
                                | z_s2856z3 ->
                                  begin
                                    match (hex_bits_8_matches_prefix z_s2856z3) with
                                    | ZSome (zimm, z_s2857z3) ->
                                      begin
                                        match (string_drop (z_s2856z3, z_s2857z3)) with
                                        | "" -> ZSome (zrs, zimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2835z3 (z_s2836z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2836z3 with
    | z_s2837z3 when (string_startswith (z_s2837z3, "c.beqz")) ->
      begin
        match (string_drop (z_s2837z3, (string_length "c.beqz"))) with
        | z_s2838z3 ->
          begin
            match (zspc_matches_prefix z_s2838z3) with
            | ZSome ((), z_s2839z3) ->
              begin
                match (string_drop (z_s2838z3, z_s2839z3)) with
                | z_s2840z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s2840z3) with
                    | ZSome (zrs, z_s2841z3) ->
                      begin
                        match (string_drop (z_s2840z3, z_s2841z3)) with
                        | z_s2842z3 ->
                          begin
                            match (zsep_matches_prefix z_s2842z3) with
                            | ZSome ((), z_s2843z3) ->
                              begin
                                match (string_drop (z_s2842z3, z_s2843z3)) with
                                | z_s2844z3 ->
                                  begin
                                    match (hex_bits_8_matches_prefix z_s2844z3) with
                                    | ZSome (zimm, z_s2845z3) ->
                                      begin
                                        match (string_drop (z_s2844z3, z_s2845z3)) with
                                        | "" -> ZSome (zrs, zimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2827z3 (z_s2828z3 : (string)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match z_s2828z3 with
    | z_s2829z3 when (string_startswith (z_s2829z3, "c.j")) ->
      begin
        match (string_drop (z_s2829z3, (string_length "c.j"))) with
        | z_s2830z3 ->
          begin
            match (zspc_matches_prefix z_s2830z3) with
            | ZSome ((), z_s2831z3) ->
              begin
                match (string_drop (z_s2830z3, z_s2831z3)) with
                | z_s2832z3 ->
                  begin
                    match (hex_bits_11_matches_prefix z_s2832z3) with
                    | ZSome (zimm, z_s2833z3) ->
                      begin
                        match (string_drop (z_s2832z3, z_s2833z3)) with
                        | "" -> ZSome zimm
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2815z3 (z_s2816z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2816z3 with
    | z_s2817z3 when (string_startswith (z_s2817z3, "c.addw")) ->
      begin
        match (string_drop (z_s2817z3, (string_length "c.addw"))) with
        | z_s2818z3 ->
          begin
            match (zspc_matches_prefix z_s2818z3) with
            | ZSome ((), z_s2819z3) ->
              begin
                match (string_drop (z_s2818z3, z_s2819z3)) with
                | z_s2820z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s2820z3) with
                    | ZSome (zrsd, z_s2821z3) ->
                      begin
                        match (string_drop (z_s2820z3, z_s2821z3)) with
                        | z_s2822z3 ->
                          begin
                            match (zsep_matches_prefix z_s2822z3) with
                            | ZSome ((), z_s2823z3) ->
                              begin
                                match (string_drop (z_s2822z3, z_s2823z3)) with
                                | z_s2824z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s2824z3) with
                                    | ZSome (zrs2, z_s2825z3) ->
                                      begin
                                        match (string_drop (z_s2824z3, z_s2825z3)) with
                                        | "" -> ZSome (zrsd, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2803z3 (z_s2804z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2804z3 with
    | z_s2805z3 when (string_startswith (z_s2805z3, "c.subw")) ->
      begin
        match (string_drop (z_s2805z3, (string_length "c.subw"))) with
        | z_s2806z3 ->
          begin
            match (zspc_matches_prefix z_s2806z3) with
            | ZSome ((), z_s2807z3) ->
              begin
                match (string_drop (z_s2806z3, z_s2807z3)) with
                | z_s2808z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s2808z3) with
                    | ZSome (zrsd, z_s2809z3) ->
                      begin
                        match (string_drop (z_s2808z3, z_s2809z3)) with
                        | z_s2810z3 ->
                          begin
                            match (zsep_matches_prefix z_s2810z3) with
                            | ZSome ((), z_s2811z3) ->
                              begin
                                match (string_drop (z_s2810z3, z_s2811z3)) with
                                | z_s2812z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s2812z3) with
                                    | ZSome (zrs2, z_s2813z3) ->
                                      begin
                                        match (string_drop (z_s2812z3, z_s2813z3)) with
                                        | "" -> ZSome (zrsd, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2791z3 (z_s2792z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2792z3 with
    | z_s2793z3 when (string_startswith (z_s2793z3, "c.and")) ->
      begin
        match (string_drop (z_s2793z3, (string_length "c.and"))) with
        | z_s2794z3 ->
          begin
            match (zspc_matches_prefix z_s2794z3) with
            | ZSome ((), z_s2795z3) ->
              begin
                match (string_drop (z_s2794z3, z_s2795z3)) with
                | z_s2796z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s2796z3) with
                    | ZSome (zrsd, z_s2797z3) ->
                      begin
                        match (string_drop (z_s2796z3, z_s2797z3)) with
                        | z_s2798z3 ->
                          begin
                            match (zsep_matches_prefix z_s2798z3) with
                            | ZSome ((), z_s2799z3) ->
                              begin
                                match (string_drop (z_s2798z3, z_s2799z3)) with
                                | z_s2800z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s2800z3) with
                                    | ZSome (zrs2, z_s2801z3) ->
                                      begin
                                        match (string_drop (z_s2800z3, z_s2801z3)) with
                                        | "" -> ZSome (zrsd, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2779z3 (z_s2780z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2780z3 with
    | z_s2781z3 when (string_startswith (z_s2781z3, "c.or")) ->
      begin
        match (string_drop (z_s2781z3, (string_length "c.or"))) with
        | z_s2782z3 ->
          begin
            match (zspc_matches_prefix z_s2782z3) with
            | ZSome ((), z_s2783z3) ->
              begin
                match (string_drop (z_s2782z3, z_s2783z3)) with
                | z_s2784z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s2784z3) with
                    | ZSome (zrsd, z_s2785z3) ->
                      begin
                        match (string_drop (z_s2784z3, z_s2785z3)) with
                        | z_s2786z3 ->
                          begin
                            match (zsep_matches_prefix z_s2786z3) with
                            | ZSome ((), z_s2787z3) ->
                              begin
                                match (string_drop (z_s2786z3, z_s2787z3)) with
                                | z_s2788z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s2788z3) with
                                    | ZSome (zrs2, z_s2789z3) ->
                                      begin
                                        match (string_drop (z_s2788z3, z_s2789z3)) with
                                        | "" -> ZSome (zrsd, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2767z3 (z_s2768z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2768z3 with
    | z_s2769z3 when (string_startswith (z_s2769z3, "c.xor")) ->
      begin
        match (string_drop (z_s2769z3, (string_length "c.xor"))) with
        | z_s2770z3 ->
          begin
            match (zspc_matches_prefix z_s2770z3) with
            | ZSome ((), z_s2771z3) ->
              begin
                match (string_drop (z_s2770z3, z_s2771z3)) with
                | z_s2772z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s2772z3) with
                    | ZSome (zrsd, z_s2773z3) ->
                      begin
                        match (string_drop (z_s2772z3, z_s2773z3)) with
                        | z_s2774z3 ->
                          begin
                            match (zsep_matches_prefix z_s2774z3) with
                            | ZSome ((), z_s2775z3) ->
                              begin
                                match (string_drop (z_s2774z3, z_s2775z3)) with
                                | z_s2776z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s2776z3) with
                                    | ZSome (zrs2, z_s2777z3) ->
                                      begin
                                        match (string_drop (z_s2776z3, z_s2777z3)) with
                                        | "" -> ZSome (zrsd, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2755z3 (z_s2756z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2756z3 with
    | z_s2757z3 when (string_startswith (z_s2757z3, "c.sub")) ->
      begin
        match (string_drop (z_s2757z3, (string_length "c.sub"))) with
        | z_s2758z3 ->
          begin
            match (zspc_matches_prefix z_s2758z3) with
            | ZSome ((), z_s2759z3) ->
              begin
                match (string_drop (z_s2758z3, z_s2759z3)) with
                | z_s2760z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s2760z3) with
                    | ZSome (zrsd, z_s2761z3) ->
                      begin
                        match (string_drop (z_s2760z3, z_s2761z3)) with
                        | z_s2762z3 ->
                          begin
                            match (zsep_matches_prefix z_s2762z3) with
                            | ZSome ((), z_s2763z3) ->
                              begin
                                match (string_drop (z_s2762z3, z_s2763z3)) with
                                | z_s2764z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s2764z3) with
                                    | ZSome (zrs2, z_s2765z3) ->
                                      begin
                                        match (string_drop (z_s2764z3, z_s2765z3)) with
                                        | "" -> ZSome (zrsd, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2743z3 (z_s2744z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2744z3 with
    | z_s2745z3 when (string_startswith (z_s2745z3, "c.andi")) ->
      begin
        match (string_drop (z_s2745z3, (string_length "c.andi"))) with
        | z_s2746z3 ->
          begin
            match (zspc_matches_prefix z_s2746z3) with
            | ZSome ((), z_s2747z3) ->
              begin
                match (string_drop (z_s2746z3, z_s2747z3)) with
                | z_s2748z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s2748z3) with
                    | ZSome (zrsd, z_s2749z3) ->
                      begin
                        match (string_drop (z_s2748z3, z_s2749z3)) with
                        | z_s2750z3 ->
                          begin
                            match (zsep_matches_prefix z_s2750z3) with
                            | ZSome ((), z_s2751z3) ->
                              begin
                                match (string_drop (z_s2750z3, z_s2751z3)) with
                                | z_s2752z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s2752z3) with
                                    | ZSome (zimm, z_s2753z3) ->
                                      begin
                                        match (string_drop (z_s2752z3, z_s2753z3)) with
                                        | "" -> ZSome (zrsd, zimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2731z3 (z_s2732z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2732z3 with
    | z_s2733z3 when (string_startswith (z_s2733z3, "c.srai")) ->
      begin
        match (string_drop (z_s2733z3, (string_length "c.srai"))) with
        | z_s2734z3 ->
          begin
            match (zspc_matches_prefix z_s2734z3) with
            | ZSome ((), z_s2735z3) ->
              begin
                match (string_drop (z_s2734z3, z_s2735z3)) with
                | z_s2736z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s2736z3) with
                    | ZSome (zrsd, z_s2737z3) ->
                      begin
                        match (string_drop (z_s2736z3, z_s2737z3)) with
                        | z_s2738z3 ->
                          begin
                            match (zsep_matches_prefix z_s2738z3) with
                            | ZSome ((), z_s2739z3) ->
                              begin
                                match (string_drop (z_s2738z3, z_s2739z3)) with
                                | z_s2740z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s2740z3) with
                                    | ZSome (zshamt, z_s2741z3) ->
                                      begin
                                        match (string_drop (z_s2740z3, z_s2741z3)) with
                                        | "" -> ZSome (zrsd, zshamt)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2719z3 (z_s2720z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2720z3 with
    | z_s2721z3 when (string_startswith (z_s2721z3, "c.srli")) ->
      begin
        match (string_drop (z_s2721z3, (string_length "c.srli"))) with
        | z_s2722z3 ->
          begin
            match (zspc_matches_prefix z_s2722z3) with
            | ZSome ((), z_s2723z3) ->
              begin
                match (string_drop (z_s2722z3, z_s2723z3)) with
                | z_s2724z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s2724z3) with
                    | ZSome (zrsd, z_s2725z3) ->
                      begin
                        match (string_drop (z_s2724z3, z_s2725z3)) with
                        | z_s2726z3 ->
                          begin
                            match (zsep_matches_prefix z_s2726z3) with
                            | ZSome ((), z_s2727z3) ->
                              begin
                                match (string_drop (z_s2726z3, z_s2727z3)) with
                                | z_s2728z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s2728z3) with
                                    | ZSome (zshamt, z_s2729z3) ->
                                      begin
                                        match (string_drop (z_s2728z3, z_s2729z3)) with
                                        | "" -> ZSome (zrsd, zshamt)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2707z3 (z_s2708z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2708z3 with
    | z_s2709z3 when (string_startswith (z_s2709z3, "c.lui")) ->
      begin
        match (string_drop (z_s2709z3, (string_length "c.lui"))) with
        | z_s2710z3 ->
          begin
            match (zspc_matches_prefix z_s2710z3) with
            | ZSome ((), z_s2711z3) ->
              begin
                match (string_drop (z_s2710z3, z_s2711z3)) with
                | z_s2712z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2712z3) with
                    | ZSome (zrd, z_s2713z3) ->
                      begin
                        match (string_drop (z_s2712z3, z_s2713z3)) with
                        | z_s2714z3 ->
                          begin
                            match (zsep_matches_prefix z_s2714z3) with
                            | ZSome ((), z_s2715z3) ->
                              begin
                                match (string_drop (z_s2714z3, z_s2715z3)) with
                                | z_s2716z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s2716z3) with
                                    | ZSome (zimm, z_s2717z3) ->
                                      begin
                                        match (string_drop (z_s2716z3, z_s2717z3)) with
                                        | "" -> ZSome (zrd, zimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2699z3 (z_s2700z3 : (string)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match z_s2700z3 with
    | z_s2701z3 when (string_startswith (z_s2701z3, "c.addi16sp")) ->
      begin
        match (string_drop (z_s2701z3, (string_length "c.addi16sp"))) with
        | z_s2702z3 ->
          begin
            match (zspc_matches_prefix z_s2702z3) with
            | ZSome ((), z_s2703z3) ->
              begin
                match (string_drop (z_s2702z3, z_s2703z3)) with
                | z_s2704z3 ->
                  begin
                    match (hex_bits_6_matches_prefix z_s2704z3) with
                    | ZSome (zimm, z_s2705z3) ->
                      begin
                        match (string_drop (z_s2704z3, z_s2705z3)) with
                        | "" -> ZSome zimm
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2687z3 (z_s2688z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2688z3 with
    | z_s2689z3 when (string_startswith (z_s2689z3, "c.li")) ->
      begin
        match (string_drop (z_s2689z3, (string_length "c.li"))) with
        | z_s2690z3 ->
          begin
            match (zspc_matches_prefix z_s2690z3) with
            | ZSome ((), z_s2691z3) ->
              begin
                match (string_drop (z_s2690z3, z_s2691z3)) with
                | z_s2692z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2692z3) with
                    | ZSome (zrd, z_s2693z3) ->
                      begin
                        match (string_drop (z_s2692z3, z_s2693z3)) with
                        | z_s2694z3 ->
                          begin
                            match (zsep_matches_prefix z_s2694z3) with
                            | ZSome ((), z_s2695z3) ->
                              begin
                                match (string_drop (z_s2694z3, z_s2695z3)) with
                                | z_s2696z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s2696z3) with
                                    | ZSome (zimm, z_s2697z3) ->
                                      begin
                                        match (string_drop (z_s2696z3, z_s2697z3)) with
                                        | "" -> ZSome (zrd, zimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2675z3 (z_s2676z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2676z3 with
    | z_s2677z3 when (string_startswith (z_s2677z3, "c.addiw")) ->
      begin
        match (string_drop (z_s2677z3, (string_length "c.addiw"))) with
        | z_s2678z3 ->
          begin
            match (zspc_matches_prefix z_s2678z3) with
            | ZSome ((), z_s2679z3) ->
              begin
                match (string_drop (z_s2678z3, z_s2679z3)) with
                | z_s2680z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2680z3) with
                    | ZSome (zrsd, z_s2681z3) ->
                      begin
                        match (string_drop (z_s2680z3, z_s2681z3)) with
                        | z_s2682z3 ->
                          begin
                            match (zsep_matches_prefix z_s2682z3) with
                            | ZSome ((), z_s2683z3) ->
                              begin
                                match (string_drop (z_s2682z3, z_s2683z3)) with
                                | z_s2684z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s2684z3) with
                                    | ZSome (zimm, z_s2685z3) ->
                                      begin
                                        match (string_drop (z_s2684z3, z_s2685z3)) with
                                        | "" -> ZSome (zrsd, zimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2667z3 (z_s2668z3 : (string)) : ((bit) list) zoption = sail_call (fun r ->
  begin
    match z_s2668z3 with
    | z_s2669z3 when (string_startswith (z_s2669z3, "c.jal")) ->
      begin
        match (string_drop (z_s2669z3, (string_length "c.jal"))) with
        | z_s2670z3 ->
          begin
            match (zspc_matches_prefix z_s2670z3) with
            | ZSome ((), z_s2671z3) ->
              begin
                match (string_drop (z_s2670z3, z_s2671z3)) with
                | z_s2672z3 ->
                  begin
                    match (hex_bits_12_matches_prefix z_s2672z3) with
                    | ZSome (zv__1380, z_s2673z3) when (let zp0z3 = (access (zv__1380, Big_int.zero)) in
                    eq_bit (zp0z3, B0)) ->
                      let zimm = (subrange (zv__1380, (Big_int.of_int (11)), (Big_int.of_int (1)))) in
                      let zimm = (subrange (zv__1380, (Big_int.of_int (11)), (Big_int.of_int (1)))) in
                      begin
                        match (string_drop (z_s2672z3, z_s2673z3)) with
                        | "" -> ZSome zimm
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2655z3 (z_s2656z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2656z3 with
    | z_s2657z3 when (string_startswith (z_s2657z3, "c.addi")) ->
      begin
        match (string_drop (z_s2657z3, (string_length "c.addi"))) with
        | z_s2658z3 ->
          begin
            match (zspc_matches_prefix z_s2658z3) with
            | ZSome ((), z_s2659z3) ->
              begin
                match (string_drop (z_s2658z3, z_s2659z3)) with
                | z_s2660z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2660z3) with
                    | ZSome (zrsd, z_s2661z3) ->
                      begin
                        match (string_drop (z_s2660z3, z_s2661z3)) with
                        | z_s2662z3 ->
                          begin
                            match (zsep_matches_prefix z_s2662z3) with
                            | ZSome ((), z_s2663z3) ->
                              begin
                                match (string_drop (z_s2662z3, z_s2663z3)) with
                                | z_s2664z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s2664z3) with
                                    | ZSome (znzzi, z_s2665z3) ->
                                      begin
                                        match (string_drop (z_s2664z3, z_s2665z3)) with
                                        | "" -> ZSome (zrsd, znzzi)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2639z3 (z_s2640z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2640z3 with
    | z_s2641z3 when (string_startswith (z_s2641z3, "c.sd")) ->
      begin
        match (string_drop (z_s2641z3, (string_length "c.sd"))) with
        | z_s2642z3 ->
          begin
            match (zspc_matches_prefix z_s2642z3) with
            | ZSome ((), z_s2643z3) ->
              begin
                match (string_drop (z_s2642z3, z_s2643z3)) with
                | z_s2644z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s2644z3) with
                    | ZSome (zrsc1, z_s2645z3) ->
                      begin
                        match (string_drop (z_s2644z3, z_s2645z3)) with
                        | z_s2646z3 ->
                          begin
                            match (zsep_matches_prefix z_s2646z3) with
                            | ZSome ((), z_s2647z3) ->
                              begin
                                match (string_drop (z_s2646z3, z_s2647z3)) with
                                | z_s2648z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s2648z3) with
                                    | ZSome (zrsc2, z_s2649z3) ->
                                      begin
                                        match (string_drop (z_s2648z3, z_s2649z3)) with
                                        | z_s2650z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s2650z3) with
                                            | ZSome ((), z_s2651z3) ->
                                              begin
                                                match (string_drop (z_s2650z3, z_s2651z3)) with
                                                | z_s2652z3 ->
                                                  begin
                                                    match (hex_bits_8_matches_prefix z_s2652z3) with
                                                    | ZSome (zv__1382, z_s2653z3) when (let zp0z3 = (access (zv__1382, (Big_int.of_int (2)))) in
                                                    let zp1z3 = (access (zv__1382, (Big_int.of_int (1)))) in
                                                    let zp2z3 = (access (zv__1382, Big_int.zero)) in
                                                    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
                                                      let zuimm = (subrange (zv__1382, (Big_int.of_int (7)), (Big_int.of_int (3)))) in
                                                      let zuimm = (subrange (zv__1382, (Big_int.of_int (7)), (Big_int.of_int (3)))) in
                                                      begin
                                                        match (string_drop (z_s2652z3, z_s2653z3)) with
                                                        | "" ->
                                                          ZSome (zrsc1, zrsc2, zuimm)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2623z3 (z_s2624z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2624z3 with
    | z_s2625z3 when (string_startswith (z_s2625z3, "c.sw")) ->
      begin
        match (string_drop (z_s2625z3, (string_length "c.sw"))) with
        | z_s2626z3 ->
          begin
            match (zspc_matches_prefix z_s2626z3) with
            | ZSome ((), z_s2627z3) ->
              begin
                match (string_drop (z_s2626z3, z_s2627z3)) with
                | z_s2628z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s2628z3) with
                    | ZSome (zrsc1, z_s2629z3) ->
                      begin
                        match (string_drop (z_s2628z3, z_s2629z3)) with
                        | z_s2630z3 ->
                          begin
                            match (zsep_matches_prefix z_s2630z3) with
                            | ZSome ((), z_s2631z3) ->
                              begin
                                match (string_drop (z_s2630z3, z_s2631z3)) with
                                | z_s2632z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s2632z3) with
                                    | ZSome (zrsc2, z_s2633z3) ->
                                      begin
                                        match (string_drop (z_s2632z3, z_s2633z3)) with
                                        | z_s2634z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s2634z3) with
                                            | ZSome ((), z_s2635z3) ->
                                              begin
                                                match (string_drop (z_s2634z3, z_s2635z3)) with
                                                | z_s2636z3 ->
                                                  begin
                                                    match (hex_bits_7_matches_prefix z_s2636z3) with
                                                    | ZSome (zv__1384, z_s2637z3) when (let zp0z3 = (access (zv__1384, (Big_int.of_int (1)))) in
                                                    let zp1z3 = (access (zv__1384, Big_int.zero)) in
                                                    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B0))) ->
                                                      let zuimm = (subrange (zv__1384, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
                                                      let zuimm = (subrange (zv__1384, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
                                                      begin
                                                        match (string_drop (z_s2636z3, z_s2637z3)) with
                                                        | "" ->
                                                          ZSome (zrsc1, zrsc2, zuimm)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2607z3 (z_s2608z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2608z3 with
    | z_s2609z3 when (string_startswith (z_s2609z3, "c.ld")) ->
      begin
        match (string_drop (z_s2609z3, (string_length "c.ld"))) with
        | z_s2610z3 ->
          begin
            match (zspc_matches_prefix z_s2610z3) with
            | ZSome ((), z_s2611z3) ->
              begin
                match (string_drop (z_s2610z3, z_s2611z3)) with
                | z_s2612z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s2612z3) with
                    | ZSome (zrdc, z_s2613z3) ->
                      begin
                        match (string_drop (z_s2612z3, z_s2613z3)) with
                        | z_s2614z3 ->
                          begin
                            match (zsep_matches_prefix z_s2614z3) with
                            | ZSome ((), z_s2615z3) ->
                              begin
                                match (string_drop (z_s2614z3, z_s2615z3)) with
                                | z_s2616z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s2616z3) with
                                    | ZSome (zrsc, z_s2617z3) ->
                                      begin
                                        match (string_drop (z_s2616z3, z_s2617z3)) with
                                        | z_s2618z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s2618z3) with
                                            | ZSome ((), z_s2619z3) ->
                                              begin
                                                match (string_drop (z_s2618z3, z_s2619z3)) with
                                                | z_s2620z3 ->
                                                  begin
                                                    match (hex_bits_8_matches_prefix z_s2620z3) with
                                                    | ZSome (zv__1386, z_s2621z3) when (let zp0z3 = (access (zv__1386, (Big_int.of_int (2)))) in
                                                    let zp1z3 = (access (zv__1386, (Big_int.of_int (1)))) in
                                                    let zp2z3 = (access (zv__1386, Big_int.zero)) in
                                                    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
                                                      let zuimm = (subrange (zv__1386, (Big_int.of_int (7)), (Big_int.of_int (3)))) in
                                                      let zuimm = (subrange (zv__1386, (Big_int.of_int (7)), (Big_int.of_int (3)))) in
                                                      begin
                                                        match (string_drop (z_s2620z3, z_s2621z3)) with
                                                        | "" ->
                                                          ZSome (zrdc, zrsc, zuimm)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2591z3 (z_s2592z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2592z3 with
    | z_s2593z3 when (string_startswith (z_s2593z3, "c.lw")) ->
      begin
        match (string_drop (z_s2593z3, (string_length "c.lw"))) with
        | z_s2594z3 ->
          begin
            match (zspc_matches_prefix z_s2594z3) with
            | ZSome ((), z_s2595z3) ->
              begin
                match (string_drop (z_s2594z3, z_s2595z3)) with
                | z_s2596z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s2596z3) with
                    | ZSome (zrdc, z_s2597z3) ->
                      begin
                        match (string_drop (z_s2596z3, z_s2597z3)) with
                        | z_s2598z3 ->
                          begin
                            match (zsep_matches_prefix z_s2598z3) with
                            | ZSome ((), z_s2599z3) ->
                              begin
                                match (string_drop (z_s2598z3, z_s2599z3)) with
                                | z_s2600z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s2600z3) with
                                    | ZSome (zrsc, z_s2601z3) ->
                                      begin
                                        match (string_drop (z_s2600z3, z_s2601z3)) with
                                        | z_s2602z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s2602z3) with
                                            | ZSome ((), z_s2603z3) ->
                                              begin
                                                match (string_drop (z_s2602z3, z_s2603z3)) with
                                                | z_s2604z3 ->
                                                  begin
                                                    match (hex_bits_7_matches_prefix z_s2604z3) with
                                                    | ZSome (zv__1388, z_s2605z3) when (let zp0z3 = (access (zv__1388, (Big_int.of_int (1)))) in
                                                    let zp1z3 = (access (zv__1388, Big_int.zero)) in
                                                    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B0))) ->
                                                      let zuimm = (subrange (zv__1388, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
                                                      let zuimm = (subrange (zv__1388, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
                                                      begin
                                                        match (string_drop (z_s2604z3, z_s2605z3)) with
                                                        | "" ->
                                                          ZSome (zrdc, zrsc, zuimm)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2579z3 (z_s2580z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2580z3 with
    | z_s2581z3 when (string_startswith (z_s2581z3, "c.addi4spn")) ->
      begin
        match (string_drop (z_s2581z3, (string_length "c.addi4spn"))) with
        | z_s2582z3 ->
          begin
            match (zspc_matches_prefix z_s2582z3) with
            | ZSome ((), z_s2583z3) ->
              begin
                match (string_drop (z_s2582z3, z_s2583z3)) with
                | z_s2584z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s2584z3) with
                    | ZSome (zrdc, z_s2585z3) ->
                      begin
                        match (string_drop (z_s2584z3, z_s2585z3)) with
                        | z_s2586z3 ->
                          begin
                            match (zsep_matches_prefix z_s2586z3) with
                            | ZSome ((), z_s2587z3) ->
                              begin
                                match (string_drop (z_s2586z3, z_s2587z3)) with
                                | z_s2588z3 ->
                                  begin
                                    match (hex_bits_10_matches_prefix z_s2588z3) with
                                    | ZSome (zv__1390, z_s2589z3) when (let zp0z3 = (access (zv__1390, (Big_int.of_int (1)))) in
                                    let zp1z3 = (access (zv__1390, Big_int.zero)) in
                                    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B0))) ->
                                      let znzzimm = (subrange (zv__1390, (Big_int.of_int (9)), (Big_int.of_int (2)))) in
                                      let znzzimm = (subrange (zv__1390, (Big_int.of_int (9)), (Big_int.of_int (2)))) in
                                      begin
                                        match (string_drop (z_s2588z3, z_s2589z3)) with
                                        | "" -> ZSome (zrdc, znzzimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2555z3 (z_s2556z3 : (string)) : ((zamoop * zword_width * bool * bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2556z3 with
    | z_s2557z3 ->
      begin
        match (zamo_mnemonic_matches_prefix z_s2557z3) with
        | ZSome (zop, z_s2558z3) ->
          begin
            match (string_drop (z_s2557z3, z_s2558z3)) with
            | z_s2559z3 when (string_startswith (z_s2559z3, ".")) ->
              begin
                match (string_drop (z_s2559z3, (string_length "."))) with
                | z_s2560z3 ->
                  begin
                    match (zsizze_mnemonic_matches_prefix z_s2560z3) with
                    | ZSome (zwidth, z_s2561z3) ->
                      begin
                        match (string_drop (z_s2560z3, z_s2561z3)) with
                        | z_s2562z3 ->
                          begin
                            match (zmaybe_aq_matches_prefix z_s2562z3) with
                            | ZSome (zaq, z_s2563z3) ->
                              begin
                                match (string_drop (z_s2562z3, z_s2563z3)) with
                                | z_s2564z3 ->
                                  begin
                                    match (zmaybe_rl_matches_prefix z_s2564z3) with
                                    | ZSome (zrl, z_s2565z3) ->
                                      begin
                                        match (string_drop (z_s2564z3, z_s2565z3)) with
                                        | z_s2566z3 ->
                                          begin
                                            match (zspc_matches_prefix z_s2566z3) with
                                            | ZSome ((), z_s2567z3) ->
                                              begin
                                                match (string_drop (z_s2566z3, z_s2567z3)) with
                                                | z_s2568z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s2568z3) with
                                                    | ZSome (zrd, z_s2569z3) ->
                                                      begin
                                                        match (string_drop (z_s2568z3, z_s2569z3)) with
                                                        | z_s2570z3 ->
                                                          begin
                                                            match (zsep_matches_prefix z_s2570z3) with
                                                            | ZSome ((), z_s2571z3) ->
                                                              begin
                                                                match (string_drop (z_s2570z3, z_s2571z3)) with
                                                                | z_s2572z3 ->
                                                                  begin
                                                                    match (zreg_name_matches_prefix z_s2572z3) with
                                                                    | ZSome (zrs1, z_s2573z3) ->
                                                                      begin
                                                                        match (string_drop (z_s2572z3, z_s2573z3)) with
                                                                        | z_s2574z3 ->
                                                                          begin
                                                                            match (zsep_matches_prefix z_s2574z3) with
                                                                            | ZSome ((), z_s2575z3) ->
                                                                              begin
                                                                                match (string_drop (z_s2574z3, z_s2575z3)) with
                                                                                | z_s2576z3 ->
                                                                                  begin
                                                                                    match (zreg_name_matches_prefix z_s2576z3) with
                                                                                    | ZSome (zrs2, z_s2577z3) ->
                                                                                      begin
                                                                                        match (string_drop (z_s2576z3, z_s2577z3)) with
                                                                                        | "" ->
                                                                                          ZSome (zop, zwidth, zaq, zrl, zrd, zrs1, zrs2)
                                                                                        | _ ->
                                                                                          ZNone ()
                                                                                      end
                                                                                    | _ ->
                                                                                      ZNone ()
                                                                                  end
                                                                                | _ ->
                                                                                  ZNone ()
                                                                              end
                                                                            | _ ->
                                                                              ZNone ()
                                                                          end
                                                                        | _ ->
                                                                          ZNone ()
                                                                      end
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2533z3 (z_s2534z3 : (string)) : ((zword_width * bool * bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2534z3 with
    | z_s2535z3 when (string_startswith (z_s2535z3, "sc.")) ->
      begin
        match (string_drop (z_s2535z3, (string_length "sc."))) with
        | z_s2536z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s2536z3) with
            | ZSome (zsizze, z_s2537z3) ->
              begin
                match (string_drop (z_s2536z3, z_s2537z3)) with
                | z_s2538z3 ->
                  begin
                    match (zmaybe_aq_matches_prefix z_s2538z3) with
                    | ZSome (zaq, z_s2539z3) ->
                      begin
                        match (string_drop (z_s2538z3, z_s2539z3)) with
                        | z_s2540z3 ->
                          begin
                            match (zmaybe_rl_matches_prefix z_s2540z3) with
                            | ZSome (zrl, z_s2541z3) ->
                              begin
                                match (string_drop (z_s2540z3, z_s2541z3)) with
                                | z_s2542z3 ->
                                  begin
                                    match (zspc_matches_prefix z_s2542z3) with
                                    | ZSome ((), z_s2543z3) ->
                                      begin
                                        match (string_drop (z_s2542z3, z_s2543z3)) with
                                        | z_s2544z3 ->
                                          begin
                                            match (zreg_name_matches_prefix z_s2544z3) with
                                            | ZSome (zrd, z_s2545z3) ->
                                              begin
                                                match (string_drop (z_s2544z3, z_s2545z3)) with
                                                | z_s2546z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s2546z3) with
                                                    | ZSome ((), z_s2547z3) ->
                                                      begin
                                                        match (string_drop (z_s2546z3, z_s2547z3)) with
                                                        | z_s2548z3 ->
                                                          begin
                                                            match (zreg_name_matches_prefix z_s2548z3) with
                                                            | ZSome (zrs1, z_s2549z3) ->
                                                              begin
                                                                match (string_drop (z_s2548z3, z_s2549z3)) with
                                                                | z_s2550z3 ->
                                                                  begin
                                                                    match (zsep_matches_prefix z_s2550z3) with
                                                                    | ZSome ((), z_s2551z3) ->
                                                                      begin
                                                                        match (string_drop (z_s2550z3, z_s2551z3)) with
                                                                        | z_s2552z3 ->
                                                                          begin
                                                                            match (zreg_name_matches_prefix z_s2552z3) with
                                                                            | ZSome (zrs2, z_s2553z3) ->
                                                                              begin
                                                                                match (string_drop (z_s2552z3, z_s2553z3)) with
                                                                                | "" ->
                                                                                  ZSome (zsizze, zaq, zrl, zrd, zrs1, zrs2)
                                                                                | _ ->
                                                                                  ZNone ()
                                                                              end
                                                                            | _ ->
                                                                              ZNone ()
                                                                          end
                                                                        | _ ->
                                                                          ZNone ()
                                                                      end
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2515z3 (z_s2516z3 : (string)) : ((zword_width * bool * bool * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2516z3 with
    | z_s2517z3 when (string_startswith (z_s2517z3, "lr.")) ->
      begin
        match (string_drop (z_s2517z3, (string_length "lr."))) with
        | z_s2518z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s2518z3) with
            | ZSome (zsizze, z_s2519z3) ->
              begin
                match (string_drop (z_s2518z3, z_s2519z3)) with
                | z_s2520z3 ->
                  begin
                    match (zmaybe_aq_matches_prefix z_s2520z3) with
                    | ZSome (zaq, z_s2521z3) ->
                      begin
                        match (string_drop (z_s2520z3, z_s2521z3)) with
                        | z_s2522z3 ->
                          begin
                            match (zmaybe_rl_matches_prefix z_s2522z3) with
                            | ZSome (zrl, z_s2523z3) ->
                              begin
                                match (string_drop (z_s2522z3, z_s2523z3)) with
                                | z_s2524z3 ->
                                  begin
                                    match (zspc_matches_prefix z_s2524z3) with
                                    | ZSome ((), z_s2525z3) ->
                                      begin
                                        match (string_drop (z_s2524z3, z_s2525z3)) with
                                        | z_s2526z3 ->
                                          begin
                                            match (zreg_name_matches_prefix z_s2526z3) with
                                            | ZSome (zrd, z_s2527z3) ->
                                              begin
                                                match (string_drop (z_s2526z3, z_s2527z3)) with
                                                | z_s2528z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s2528z3) with
                                                    | ZSome ((), z_s2529z3) ->
                                                      begin
                                                        match (string_drop (z_s2528z3, z_s2529z3)) with
                                                        | z_s2530z3 ->
                                                          begin
                                                            match (zreg_name_matches_prefix z_s2530z3) with
                                                            | ZSome (zrs1, z_s2531z3) ->
                                                              begin
                                                                match (string_drop (z_s2530z3, z_s2531z3)) with
                                                                | "" ->
                                                                  ZSome (zsizze, zaq, zrl, zrd, zrs1)
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2503z3 (z_s2504z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2504z3 with
    | z_s2505z3 when (string_startswith (z_s2505z3, "sfence.vma")) ->
      begin
        match (string_drop (z_s2505z3, (string_length "sfence.vma"))) with
        | z_s2506z3 ->
          begin
            match (zspc_matches_prefix z_s2506z3) with
            | ZSome ((), z_s2507z3) ->
              begin
                match (string_drop (z_s2506z3, z_s2507z3)) with
                | z_s2508z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2508z3) with
                    | ZSome (zrs1, z_s2509z3) ->
                      begin
                        match (string_drop (z_s2508z3, z_s2509z3)) with
                        | z_s2510z3 ->
                          begin
                            match (zsep_matches_prefix z_s2510z3) with
                            | ZSome ((), z_s2511z3) ->
                              begin
                                match (string_drop (z_s2510z3, z_s2511z3)) with
                                | z_s2512z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2512z3) with
                                    | ZSome (zrs2, z_s2513z3) ->
                                      begin
                                        match (string_drop (z_s2512z3, z_s2513z3)) with
                                        | "" -> ZSome (zrs1, zrs2)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2491z3 (z_s2492z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2492z3 with
    | z_s2493z3 when (string_startswith (z_s2493z3, "fence.tso")) ->
      begin
        match (string_drop (z_s2493z3, (string_length "fence.tso"))) with
        | z_s2494z3 ->
          begin
            match (zspc_matches_prefix z_s2494z3) with
            | ZSome ((), z_s2495z3) ->
              begin
                match (string_drop (z_s2494z3, z_s2495z3)) with
                | z_s2496z3 ->
                  begin
                    match (zfence_bits_matches_prefix z_s2496z3) with
                    | ZSome (zpred, z_s2497z3) ->
                      begin
                        match (string_drop (z_s2496z3, z_s2497z3)) with
                        | z_s2498z3 ->
                          begin
                            match (zsep_matches_prefix z_s2498z3) with
                            | ZSome ((), z_s2499z3) ->
                              begin
                                match (string_drop (z_s2498z3, z_s2499z3)) with
                                | z_s2500z3 ->
                                  begin
                                    match (zfence_bits_matches_prefix z_s2500z3) with
                                    | ZSome (zsucc, z_s2501z3) ->
                                      begin
                                        match (string_drop (z_s2500z3, z_s2501z3)) with
                                        | "" -> ZSome (zpred, zsucc)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2479z3 (z_s2480z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2480z3 with
    | z_s2481z3 when (string_startswith (z_s2481z3, "fence")) ->
      begin
        match (string_drop (z_s2481z3, (string_length "fence"))) with
        | z_s2482z3 ->
          begin
            match (zspc_matches_prefix z_s2482z3) with
            | ZSome ((), z_s2483z3) ->
              begin
                match (string_drop (z_s2482z3, z_s2483z3)) with
                | z_s2484z3 ->
                  begin
                    match (zfence_bits_matches_prefix z_s2484z3) with
                    | ZSome (zpred, z_s2485z3) ->
                      begin
                        match (string_drop (z_s2484z3, z_s2485z3)) with
                        | z_s2486z3 ->
                          begin
                            match (zsep_matches_prefix z_s2486z3) with
                            | ZSome ((), z_s2487z3) ->
                              begin
                                match (string_drop (z_s2486z3, z_s2487z3)) with
                                | z_s2488z3 ->
                                  begin
                                    match (zfence_bits_matches_prefix z_s2488z3) with
                                    | ZSome (zsucc, z_s2489z3) ->
                                      begin
                                        match (string_drop (z_s2488z3, z_s2489z3)) with
                                        | "" -> ZSome (zpred, zsucc)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2464z3 (z_s2465z3 : (string)) : ((zsopw * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2465z3 with
    | z_s2466z3 ->
      begin
        match (zshiftiwop_mnemonic_matches_prefix z_s2466z3) with
        | ZSome (zop, z_s2467z3) ->
          begin
            match (string_drop (z_s2466z3, z_s2467z3)) with
            | z_s2468z3 ->
              begin
                match (zspc_matches_prefix z_s2468z3) with
                | ZSome ((), z_s2469z3) ->
                  begin
                    match (string_drop (z_s2468z3, z_s2469z3)) with
                    | z_s2470z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s2470z3) with
                        | ZSome (zrd, z_s2471z3) ->
                          begin
                            match (string_drop (z_s2470z3, z_s2471z3)) with
                            | z_s2472z3 ->
                              begin
                                match (zsep_matches_prefix z_s2472z3) with
                                | ZSome ((), z_s2473z3) ->
                                  begin
                                    match (string_drop (z_s2472z3, z_s2473z3)) with
                                    | z_s2474z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s2474z3) with
                                        | ZSome (zrs1, z_s2475z3) ->
                                          begin
                                            match (string_drop (z_s2474z3, z_s2475z3)) with
                                            | z_s2476z3 ->
                                              begin
                                                match (hex_bits_5_matches_prefix z_s2476z3) with
                                                | ZSome (zshamt, z_s2477z3) ->
                                                  begin
                                                    match (string_drop (z_s2476z3, z_s2477z3)) with
                                                    | "" ->
                                                      ZSome (zop, zrd, zrs1, zshamt)
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2447z3 (z_s2448z3 : (string)) : ((zropw * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2448z3 with
    | z_s2449z3 ->
      begin
        match (zrtypew_mnemonic_matches_prefix z_s2449z3) with
        | ZSome (zop, z_s2450z3) ->
          begin
            match (string_drop (z_s2449z3, z_s2450z3)) with
            | z_s2451z3 ->
              begin
                match (zspc_matches_prefix z_s2451z3) with
                | ZSome ((), z_s2452z3) ->
                  begin
                    match (string_drop (z_s2451z3, z_s2452z3)) with
                    | z_s2453z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s2453z3) with
                        | ZSome (zrd, z_s2454z3) ->
                          begin
                            match (string_drop (z_s2453z3, z_s2454z3)) with
                            | z_s2455z3 ->
                              begin
                                match (zsep_matches_prefix z_s2455z3) with
                                | ZSome ((), z_s2456z3) ->
                                  begin
                                    match (string_drop (z_s2455z3, z_s2456z3)) with
                                    | z_s2457z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s2457z3) with
                                        | ZSome (zrs1, z_s2458z3) ->
                                          begin
                                            match (string_drop (z_s2457z3, z_s2458z3)) with
                                            | z_s2459z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s2459z3) with
                                                | ZSome ((), z_s2460z3) ->
                                                  begin
                                                    match (string_drop (z_s2459z3, z_s2460z3)) with
                                                    | z_s2461z3 ->
                                                      begin
                                                        match (zreg_name_matches_prefix z_s2461z3) with
                                                        | ZSome (zrs2, z_s2462z3) ->
                                                          begin
                                                            match (string_drop (z_s2461z3, z_s2462z3)) with
                                                            | "" ->
                                                              ZSome (zop, zrd, zrs1, zrs2)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2430z3 (z_s2431z3 : (string)) : ((zsop * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2431z3 with
    | z_s2432z3 ->
      begin
        match (zshiftw_mnemonic_matches_prefix z_s2432z3) with
        | ZSome (zop, z_s2433z3) ->
          begin
            match (string_drop (z_s2432z3, z_s2433z3)) with
            | z_s2434z3 ->
              begin
                match (zspc_matches_prefix z_s2434z3) with
                | ZSome ((), z_s2435z3) ->
                  begin
                    match (string_drop (z_s2434z3, z_s2435z3)) with
                    | z_s2436z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s2436z3) with
                        | ZSome (zrd, z_s2437z3) ->
                          begin
                            match (string_drop (z_s2436z3, z_s2437z3)) with
                            | z_s2438z3 ->
                              begin
                                match (zsep_matches_prefix z_s2438z3) with
                                | ZSome ((), z_s2439z3) ->
                                  begin
                                    match (string_drop (z_s2438z3, z_s2439z3)) with
                                    | z_s2440z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s2440z3) with
                                        | ZSome (zrs1, z_s2441z3) ->
                                          begin
                                            match (string_drop (z_s2440z3, z_s2441z3)) with
                                            | z_s2442z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s2442z3) with
                                                | ZSome ((), z_s2443z3) ->
                                                  begin
                                                    match (string_drop (z_s2442z3, z_s2443z3)) with
                                                    | z_s2444z3 ->
                                                      begin
                                                        match (hex_bits_5_matches_prefix z_s2444z3) with
                                                        | ZSome (zshamt, z_s2445z3) ->
                                                          begin
                                                            match (string_drop (z_s2444z3, z_s2445z3)) with
                                                            | "" ->
                                                              ZSome (zop, zrd, zrs1, zshamt)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2414z3 (z_s2415z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2415z3 with
    | z_s2416z3 when (string_startswith (z_s2416z3, "addiw")) ->
      begin
        match (string_drop (z_s2416z3, (string_length "addiw"))) with
        | z_s2417z3 ->
          begin
            match (zspc_matches_prefix z_s2417z3) with
            | ZSome ((), z_s2418z3) ->
              begin
                match (string_drop (z_s2417z3, z_s2418z3)) with
                | z_s2419z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2419z3) with
                    | ZSome (zrd, z_s2420z3) ->
                      begin
                        match (string_drop (z_s2419z3, z_s2420z3)) with
                        | z_s2421z3 ->
                          begin
                            match (zsep_matches_prefix z_s2421z3) with
                            | ZSome ((), z_s2422z3) ->
                              begin
                                match (string_drop (z_s2421z3, z_s2422z3)) with
                                | z_s2423z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2423z3) with
                                    | ZSome (zrs1, z_s2424z3) ->
                                      begin
                                        match (string_drop (z_s2423z3, z_s2424z3)) with
                                        | z_s2425z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s2425z3) with
                                            | ZSome ((), z_s2426z3) ->
                                              begin
                                                match (string_drop (z_s2425z3, z_s2426z3)) with
                                                | z_s2427z3 ->
                                                  begin
                                                    match (hex_bits_12_matches_prefix z_s2427z3) with
                                                    | ZSome (zimm, z_s2428z3) ->
                                                      begin
                                                        match (string_drop (z_s2427z3, z_s2428z3)) with
                                                        | "" ->
                                                          ZSome (zrd, zrs1, zimm)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2392z3 (z_s2393z3 : (string)) : ((zword_width * bool * bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2393z3 with
    | z_s2394z3 when (string_startswith (z_s2394z3, "s")) ->
      begin
        match (string_drop (z_s2394z3, (string_length "s"))) with
        | z_s2395z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s2395z3) with
            | ZSome (zsizze, z_s2396z3) ->
              begin
                match (string_drop (z_s2395z3, z_s2396z3)) with
                | z_s2397z3 ->
                  begin
                    match (zmaybe_aq_matches_prefix z_s2397z3) with
                    | ZSome (zaq, z_s2398z3) ->
                      begin
                        match (string_drop (z_s2397z3, z_s2398z3)) with
                        | z_s2399z3 ->
                          begin
                            match (zmaybe_rl_matches_prefix z_s2399z3) with
                            | ZSome (zrl, z_s2400z3) ->
                              begin
                                match (string_drop (z_s2399z3, z_s2400z3)) with
                                | z_s2401z3 ->
                                  begin
                                    match (zspc_matches_prefix z_s2401z3) with
                                    | ZSome ((), z_s2402z3) ->
                                      begin
                                        match (string_drop (z_s2401z3, z_s2402z3)) with
                                        | z_s2403z3 ->
                                          begin
                                            match (zreg_name_matches_prefix z_s2403z3) with
                                            | ZSome (zrd, z_s2404z3) ->
                                              begin
                                                match (string_drop (z_s2403z3, z_s2404z3)) with
                                                | z_s2405z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s2405z3) with
                                                    | ZSome ((), z_s2406z3) ->
                                                      begin
                                                        match (string_drop (z_s2405z3, z_s2406z3)) with
                                                        | z_s2407z3 ->
                                                          begin
                                                            match (zreg_name_matches_prefix z_s2407z3) with
                                                            | ZSome (zrs1, z_s2408z3) ->
                                                              begin
                                                                match (string_drop (z_s2407z3, z_s2408z3)) with
                                                                | z_s2409z3 ->
                                                                  begin
                                                                    match (zsep_matches_prefix z_s2409z3) with
                                                                    | ZSome ((), z_s2410z3) ->
                                                                      begin
                                                                        match (string_drop (z_s2409z3, z_s2410z3)) with
                                                                        | z_s2411z3 ->
                                                                          begin
                                                                            match (hex_bits_12_matches_prefix z_s2411z3) with
                                                                            | ZSome (zimm, z_s2412z3) ->
                                                                              begin
                                                                                match (string_drop (z_s2411z3, z_s2412z3)) with
                                                                                | "" ->
                                                                                  ZSome (zsizze, zaq, zrl, zrd, zrs1, zimm)
                                                                                | _ ->
                                                                                  ZNone ()
                                                                              end
                                                                            | _ ->
                                                                              ZNone ()
                                                                          end
                                                                        | _ ->
                                                                          ZNone ()
                                                                      end
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2368z3 (z_s2369z3 : (string)) : ((zword_width * bool * bool * bool * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2369z3 with
    | z_s2370z3 when (string_startswith (z_s2370z3, "l")) ->
      begin
        match (string_drop (z_s2370z3, (string_length "l"))) with
        | z_s2371z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s2371z3) with
            | ZSome (zsizze, z_s2372z3) ->
              begin
                match (string_drop (z_s2371z3, z_s2372z3)) with
                | z_s2373z3 ->
                  begin
                    match (zmaybe_u_matches_prefix z_s2373z3) with
                    | ZSome (zis_unsigned, z_s2374z3) ->
                      begin
                        match (string_drop (z_s2373z3, z_s2374z3)) with
                        | z_s2375z3 ->
                          begin
                            match (zmaybe_aq_matches_prefix z_s2375z3) with
                            | ZSome (zaq, z_s2376z3) ->
                              begin
                                match (string_drop (z_s2375z3, z_s2376z3)) with
                                | z_s2377z3 ->
                                  begin
                                    match (zmaybe_rl_matches_prefix z_s2377z3) with
                                    | ZSome (zrl, z_s2378z3) ->
                                      begin
                                        match (string_drop (z_s2377z3, z_s2378z3)) with
                                        | z_s2379z3 ->
                                          begin
                                            match (zspc_matches_prefix z_s2379z3) with
                                            | ZSome ((), z_s2380z3) ->
                                              begin
                                                match (string_drop (z_s2379z3, z_s2380z3)) with
                                                | z_s2381z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s2381z3) with
                                                    | ZSome (zrd, z_s2382z3) ->
                                                      begin
                                                        match (string_drop (z_s2381z3, z_s2382z3)) with
                                                        | z_s2383z3 ->
                                                          begin
                                                            match (zsep_matches_prefix z_s2383z3) with
                                                            | ZSome ((), z_s2384z3) ->
                                                              begin
                                                                match (string_drop (z_s2383z3, z_s2384z3)) with
                                                                | z_s2385z3 ->
                                                                  begin
                                                                    match (zreg_name_matches_prefix z_s2385z3) with
                                                                    | ZSome (zrs1, z_s2386z3) ->
                                                                      begin
                                                                        match (string_drop (z_s2385z3, z_s2386z3)) with
                                                                        | z_s2387z3 ->
                                                                          begin
                                                                            match (zsep_matches_prefix z_s2387z3) with
                                                                            | ZSome ((), z_s2388z3) ->
                                                                              begin
                                                                                match (string_drop (z_s2387z3, z_s2388z3)) with
                                                                                | z_s2389z3 ->
                                                                                  begin
                                                                                    match (hex_bits_12_matches_prefix z_s2389z3) with
                                                                                    | ZSome (zimm, z_s2390z3) ->
                                                                                      begin
                                                                                        match (string_drop (z_s2389z3, z_s2390z3)) with
                                                                                        | "" ->
                                                                                          ZSome (zsizze, zis_unsigned, zaq, zrl, zrd, zrs1, zimm)
                                                                                        | _ ->
                                                                                          ZNone ()
                                                                                      end
                                                                                    | _ ->
                                                                                      ZNone ()
                                                                                  end
                                                                                | _ ->
                                                                                  ZNone ()
                                                                              end
                                                                            | _ ->
                                                                              ZNone ()
                                                                          end
                                                                        | _ ->
                                                                          ZNone ()
                                                                      end
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2351z3 (z_s2352z3 : (string)) : ((zrop * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2352z3 with
    | z_s2353z3 ->
      begin
        match (zrtype_mnemonic_matches_prefix z_s2353z3) with
        | ZSome (zop, z_s2354z3) ->
          begin
            match (string_drop (z_s2353z3, z_s2354z3)) with
            | z_s2355z3 ->
              begin
                match (zspc_matches_prefix z_s2355z3) with
                | ZSome ((), z_s2356z3) ->
                  begin
                    match (string_drop (z_s2355z3, z_s2356z3)) with
                    | z_s2357z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s2357z3) with
                        | ZSome (zrd, z_s2358z3) ->
                          begin
                            match (string_drop (z_s2357z3, z_s2358z3)) with
                            | z_s2359z3 ->
                              begin
                                match (zsep_matches_prefix z_s2359z3) with
                                | ZSome ((), z_s2360z3) ->
                                  begin
                                    match (string_drop (z_s2359z3, z_s2360z3)) with
                                    | z_s2361z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s2361z3) with
                                        | ZSome (zrs1, z_s2362z3) ->
                                          begin
                                            match (string_drop (z_s2361z3, z_s2362z3)) with
                                            | z_s2363z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s2363z3) with
                                                | ZSome ((), z_s2364z3) ->
                                                  begin
                                                    match (string_drop (z_s2363z3, z_s2364z3)) with
                                                    | z_s2365z3 ->
                                                      begin
                                                        match (zreg_name_matches_prefix z_s2365z3) with
                                                        | ZSome (zrs2, z_s2366z3) ->
                                                          begin
                                                            match (string_drop (z_s2365z3, z_s2366z3)) with
                                                            | "" ->
                                                              ZSome (zop, zrd, zrs1, zrs2)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2336z3 (z_s2337z3 : (string)) : ((zsop * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2337z3 with
    | z_s2338z3 ->
      begin
        match (zshiftiop_mnemonic_matches_prefix z_s2338z3) with
        | ZSome (zop, z_s2339z3) ->
          begin
            match (string_drop (z_s2338z3, z_s2339z3)) with
            | z_s2340z3 ->
              begin
                match (zspc_matches_prefix z_s2340z3) with
                | ZSome ((), z_s2341z3) ->
                  begin
                    match (string_drop (z_s2340z3, z_s2341z3)) with
                    | z_s2342z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s2342z3) with
                        | ZSome (zrd, z_s2343z3) ->
                          begin
                            match (string_drop (z_s2342z3, z_s2343z3)) with
                            | z_s2344z3 ->
                              begin
                                match (zsep_matches_prefix z_s2344z3) with
                                | ZSome ((), z_s2345z3) ->
                                  begin
                                    match (string_drop (z_s2344z3, z_s2345z3)) with
                                    | z_s2346z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s2346z3) with
                                        | ZSome (zrs1, z_s2347z3) ->
                                          begin
                                            match (string_drop (z_s2346z3, z_s2347z3)) with
                                            | z_s2348z3 ->
                                              begin
                                                match (hex_bits_6_matches_prefix z_s2348z3) with
                                                | ZSome (zshamt, z_s2349z3) ->
                                                  begin
                                                    match (string_drop (z_s2348z3, z_s2349z3)) with
                                                    | "" ->
                                                      ZSome (zop, zrd, zrs1, zshamt)
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2319z3 (z_s2320z3 : (string)) : ((ziop * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2320z3 with
    | z_s2321z3 ->
      begin
        match (zitype_mnemonic_matches_prefix z_s2321z3) with
        | ZSome (zop, z_s2322z3) ->
          begin
            match (string_drop (z_s2321z3, z_s2322z3)) with
            | z_s2323z3 ->
              begin
                match (zspc_matches_prefix z_s2323z3) with
                | ZSome ((), z_s2324z3) ->
                  begin
                    match (string_drop (z_s2323z3, z_s2324z3)) with
                    | z_s2325z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s2325z3) with
                        | ZSome (zrd, z_s2326z3) ->
                          begin
                            match (string_drop (z_s2325z3, z_s2326z3)) with
                            | z_s2327z3 ->
                              begin
                                match (zsep_matches_prefix z_s2327z3) with
                                | ZSome ((), z_s2328z3) ->
                                  begin
                                    match (string_drop (z_s2327z3, z_s2328z3)) with
                                    | z_s2329z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s2329z3) with
                                        | ZSome (zrs1, z_s2330z3) ->
                                          begin
                                            match (string_drop (z_s2329z3, z_s2330z3)) with
                                            | z_s2331z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s2331z3) with
                                                | ZSome ((), z_s2332z3) ->
                                                  begin
                                                    match (string_drop (z_s2331z3, z_s2332z3)) with
                                                    | z_s2333z3 ->
                                                      begin
                                                        match (hex_bits_12_matches_prefix z_s2333z3) with
                                                        | ZSome (zimm, z_s2334z3) ->
                                                          begin
                                                            match (string_drop (z_s2333z3, z_s2334z3)) with
                                                            | "" ->
                                                              ZSome (zop, zrd, zrs1, zimm)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2302z3 (z_s2303z3 : (string)) : ((zbop * (bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2303z3 with
    | z_s2304z3 ->
      begin
        match (zbtype_mnemonic_matches_prefix z_s2304z3) with
        | ZSome (zop, z_s2305z3) ->
          begin
            match (string_drop (z_s2304z3, z_s2305z3)) with
            | z_s2306z3 ->
              begin
                match (zspc_matches_prefix z_s2306z3) with
                | ZSome ((), z_s2307z3) ->
                  begin
                    match (string_drop (z_s2306z3, z_s2307z3)) with
                    | z_s2308z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s2308z3) with
                        | ZSome (zrs1, z_s2309z3) ->
                          begin
                            match (string_drop (z_s2308z3, z_s2309z3)) with
                            | z_s2310z3 ->
                              begin
                                match (zsep_matches_prefix z_s2310z3) with
                                | ZSome ((), z_s2311z3) ->
                                  begin
                                    match (string_drop (z_s2310z3, z_s2311z3)) with
                                    | z_s2312z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s2312z3) with
                                        | ZSome (zrs2, z_s2313z3) ->
                                          begin
                                            match (string_drop (z_s2312z3, z_s2313z3)) with
                                            | z_s2314z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s2314z3) with
                                                | ZSome ((), z_s2315z3) ->
                                                  begin
                                                    match (string_drop (z_s2314z3, z_s2315z3)) with
                                                    | z_s2316z3 ->
                                                      begin
                                                        match (hex_bits_13_matches_prefix z_s2316z3) with
                                                        | ZSome (zimm, z_s2317z3) ->
                                                          begin
                                                            match (string_drop (z_s2316z3, z_s2317z3)) with
                                                            | "" ->
                                                              ZSome (zop, zrs1, zrs2, zimm)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2286z3 (z_s2287z3 : (string)) : (((bit) list * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2287z3 with
    | z_s2288z3 when (string_startswith (z_s2288z3, "jalr")) ->
      begin
        match (string_drop (z_s2288z3, (string_length "jalr"))) with
        | z_s2289z3 ->
          begin
            match (zspc_matches_prefix z_s2289z3) with
            | ZSome ((), z_s2290z3) ->
              begin
                match (string_drop (z_s2289z3, z_s2290z3)) with
                | z_s2291z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2291z3) with
                    | ZSome (zrd, z_s2292z3) ->
                      begin
                        match (string_drop (z_s2291z3, z_s2292z3)) with
                        | z_s2293z3 ->
                          begin
                            match (zsep_matches_prefix z_s2293z3) with
                            | ZSome ((), z_s2294z3) ->
                              begin
                                match (string_drop (z_s2293z3, z_s2294z3)) with
                                | z_s2295z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s2295z3) with
                                    | ZSome (zrs1, z_s2296z3) ->
                                      begin
                                        match (string_drop (z_s2295z3, z_s2296z3)) with
                                        | z_s2297z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s2297z3) with
                                            | ZSome ((), z_s2298z3) ->
                                              begin
                                                match (string_drop (z_s2297z3, z_s2298z3)) with
                                                | z_s2299z3 ->
                                                  begin
                                                    match (hex_bits_12_matches_prefix z_s2299z3) with
                                                    | ZSome (zimm, z_s2300z3) ->
                                                      begin
                                                        match (string_drop (z_s2299z3, z_s2300z3)) with
                                                        | "" ->
                                                          ZSome (zrd, zrs1, zimm)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2274z3 (z_s2275z3 : (string)) : (((bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2275z3 with
    | z_s2276z3 when (string_startswith (z_s2276z3, "jal")) ->
      begin
        match (string_drop (z_s2276z3, (string_length "jal"))) with
        | z_s2277z3 ->
          begin
            match (zspc_matches_prefix z_s2277z3) with
            | ZSome ((), z_s2278z3) ->
              begin
                match (string_drop (z_s2277z3, z_s2278z3)) with
                | z_s2279z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s2279z3) with
                    | ZSome (zrd, z_s2280z3) ->
                      begin
                        match (string_drop (z_s2279z3, z_s2280z3)) with
                        | z_s2281z3 ->
                          begin
                            match (zsep_matches_prefix z_s2281z3) with
                            | ZSome ((), z_s2282z3) ->
                              begin
                                match (string_drop (z_s2281z3, z_s2282z3)) with
                                | z_s2283z3 ->
                                  begin
                                    match (hex_bits_21_matches_prefix z_s2283z3) with
                                    | ZSome (zimm, z_s2284z3) ->
                                      begin
                                        match (string_drop (z_s2283z3, z_s2284z3)) with
                                        | "" -> ZSome (zrd, zimm)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s2261z3 (z_s2262z3 : (string)) : ((zuop * (bit) list * (bit) list)) zoption = sail_call (fun r ->
  begin
    match z_s2262z3 with
    | z_s2263z3 ->
      begin
        match (zutype_mnemonic_matches_prefix z_s2263z3) with
        | ZSome (zop, z_s2264z3) ->
          begin
            match (string_drop (z_s2263z3, z_s2264z3)) with
            | z_s2265z3 ->
              begin
                match (zspc_matches_prefix z_s2265z3) with
                | ZSome ((), z_s2266z3) ->
                  begin
                    match (string_drop (z_s2265z3, z_s2266z3)) with
                    | z_s2267z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s2267z3) with
                        | ZSome (zrd, z_s2268z3) ->
                          begin
                            match (string_drop (z_s2267z3, z_s2268z3)) with
                            | z_s2269z3 ->
                              begin
                                match (zsep_matches_prefix z_s2269z3) with
                                | ZSome ((), z_s2270z3) ->
                                  begin
                                    match (string_drop (z_s2269z3, z_s2270z3)) with
                                    | z_s2271z3 ->
                                      begin
                                        match (hex_bits_20_matches_prefix z_s2271z3) with
                                        | ZSome (zimm, z_s2272z3) ->
                                          begin
                                            match (string_drop (z_s2271z3, z_s2272z3)) with
                                            | "" -> ZSome (zop, zrd, zimm)
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zassembly_backwards_matches (zargz3 : (string)) : bool = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s2273z3 when (begin
      match (z_s2261z3 z_s2273z3) with
      | ZSome (zop, zrd, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zimm) = (z_s2261z3 z_s2273z3) in true
    | z_s2285z3 when (begin
      match (z_s2274z3 z_s2285z3) with
      | ZSome (zrd, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zimm) = (z_s2274z3 z_s2285z3) in true
    | z_s2301z3 when (begin
      match (z_s2286z3 z_s2301z3) with
      | ZSome (zrd, zrs1, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs1, zimm) = (z_s2286z3 z_s2301z3) in true
    | z_s2318z3 when (begin
      match (z_s2302z3 z_s2318z3) with
      | ZSome (zop, zrs1, zrs2, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrs1, zrs2, zimm) = (z_s2302z3 z_s2318z3) in true
    | z_s2335z3 when (begin
      match (z_s2319z3 z_s2335z3) with
      | ZSome (zop, zrd, zrs1, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zimm) = (z_s2319z3 z_s2335z3) in true
    | z_s2350z3 when (begin
      match (z_s2336z3 z_s2350z3) with
      | ZSome (zop, zrd, zrs1, zshamt) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zshamt) = (z_s2336z3 z_s2350z3) in true
    | z_s2367z3 when (begin
      match (z_s2351z3 z_s2367z3) with
      | ZSome (zop, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zrs2) = (z_s2351z3 z_s2367z3) in true
    | z_s2391z3 when (begin
      match (z_s2368z3 z_s2391z3) with
      | ZSome (zsizze, zis_unsigned, zaq, zrl, zrd, zrs1, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zsizze, zis_unsigned, zaq, zrl, zrd, zrs1, zimm) = (z_s2368z3 z_s2391z3) in
      true
    | z_s2413z3 when (begin
      match (z_s2392z3 z_s2413z3) with
      | ZSome (zsizze, zaq, zrl, zrd, zrs1, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zsizze, zaq, zrl, zrd, zrs1, zimm) = (z_s2392z3 z_s2413z3) in
      true
    | z_s2429z3 when (begin
      match (z_s2414z3 z_s2429z3) with
      | ZSome (zrd, zrs1, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs1, zimm) = (z_s2414z3 z_s2429z3) in true
    | z_s2446z3 when (begin
      match (z_s2430z3 z_s2446z3) with
      | ZSome (zop, zrd, zrs1, zshamt) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zshamt) = (z_s2430z3 z_s2446z3) in true
    | z_s2463z3 when (begin
      match (z_s2447z3 z_s2463z3) with
      | ZSome (zop, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zrs2) = (z_s2447z3 z_s2463z3) in true
    | z_s2478z3 when (begin
      match (z_s2464z3 z_s2478z3) with
      | ZSome (zop, zrd, zrs1, zshamt) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zshamt) = (z_s2464z3 z_s2478z3) in true
    | z_s2490z3 when (begin
      match (z_s2479z3 z_s2490z3) with
      | ZSome (zpred, zsucc) -> true
      | _ -> false
    end) ->
      let ZSome (zpred, zsucc) = (z_s2479z3 z_s2490z3) in true
    | z_s2502z3 when (begin
      match (z_s2491z3 z_s2502z3) with
      | ZSome (zpred, zsucc) -> true
      | _ -> false
    end) ->
      let ZSome (zpred, zsucc) = (z_s2491z3 z_s2502z3) in true
    | "fence.i" -> true
    | "ecall" -> true
    | "mret" -> true
    | "sret" -> true
    | "ebreak" -> true
    | "wfi" -> true
    | z_s2514z3 when (begin
      match (z_s2503z3 z_s2514z3) with
      | ZSome (zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zrs1, zrs2) = (z_s2503z3 z_s2514z3) in true
    | z_s2532z3 when (begin
      match (z_s2515z3 z_s2532z3) with
      | ZSome (zsizze, zaq, zrl, zrd, zrs1) -> true
      | _ -> false
    end) ->
      let ZSome (zsizze, zaq, zrl, zrd, zrs1) = (z_s2515z3 z_s2532z3) in true
    | z_s2554z3 when (begin
      match (z_s2533z3 z_s2554z3) with
      | ZSome (zsizze, zaq, zrl, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zsizze, zaq, zrl, zrd, zrs1, zrs2) = (z_s2533z3 z_s2554z3) in
      true
    | z_s2578z3 when (begin
      match (z_s2555z3 z_s2578z3) with
      | ZSome (zop, zwidth, zaq, zrl, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zwidth, zaq, zrl, zrd, zrs1, zrs2) = (z_s2555z3 z_s2578z3) in
      true
    | "c.nop" -> true
    | z_s2590z3 when (begin
      match (z_s2579z3 z_s2590z3) with
      | ZSome (zrdc, znzzimm) ->
        zneq_vec (znzzimm, [B0; B0; B0; B0; B0; B0; B0; B0])
      | _ -> false
    end) ->
      let ZSome (zrdc, znzzimm) = (z_s2579z3 z_s2590z3) in true
    | z_s2606z3 when (begin
      match (z_s2591z3 z_s2606z3) with
      | ZSome (zrdc, zrsc, zuimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrdc, zrsc, zuimm) = (z_s2591z3 z_s2606z3) in true
    | z_s2622z3 when (begin
      match (z_s2607z3 z_s2622z3) with
      | ZSome (zrdc, zrsc, zuimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrdc, zrsc, zuimm) = (z_s2607z3 z_s2622z3) in true
    | z_s2638z3 when (begin
      match (z_s2623z3 z_s2638z3) with
      | ZSome (zrsc1, zrsc2, zuimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrsc1, zrsc2, zuimm) = (z_s2623z3 z_s2638z3) in true
    | z_s2654z3 when (begin
      match (z_s2639z3 z_s2654z3) with
      | ZSome (zrsc1, zrsc2, zuimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrsc1, zrsc2, zuimm) = (z_s2639z3 z_s2654z3) in true
    | z_s2666z3 when (begin
      match (z_s2655z3 z_s2666z3) with
      | ZSome (zrsd, znzzi) ->
        (zneq_vec (znzzi, [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))
      | _ -> false
    end) ->
      let ZSome (zrsd, znzzi) = (z_s2655z3 z_s2666z3) in true
    | z_s2674z3 when (begin
      match (z_s2667z3 z_s2674z3) with
      | ZSome (zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zimm) = (z_s2667z3 z_s2674z3) in true
    | z_s2686z3 when (begin
      match (z_s2675z3 z_s2686z3) with
      | ZSome (zrsd, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zimm) = (z_s2675z3 z_s2686z3) in true
    | z_s2698z3 when (begin
      match (z_s2687z3 z_s2698z3) with
      | ZSome (zrd, zimm) ->
        zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))
      | _ -> false
    end) ->
      let ZSome (zrd, zimm) = (z_s2687z3 z_s2698z3) in true
    | z_s2706z3 when (begin
      match (z_s2699z3 z_s2706z3) with
      | ZSome (zimm) -> zneq_vec (zimm, [B0; B0; B0; B0; B0; B0])
      | _ -> false
    end) ->
      let ZSome (zimm) = (z_s2699z3 z_s2706z3) in true
    | z_s2718z3 when (begin
      match (z_s2707z3 z_s2718z3) with
      | ZSome (zrd, zimm) ->
        (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && ((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zsp))) && (zneq_vec (zimm, [B0; B0; B0; B0; B0; B0])))
      | _ -> false
    end) ->
      let ZSome (zrd, zimm) = (z_s2707z3 z_s2718z3) in true
    | z_s2730z3 when (begin
      match (z_s2719z3 z_s2730z3) with
      | ZSome (zrsd, zshamt) -> zneq_vec (zshamt, [B0; B0; B0; B0; B0; B0])
      | _ -> false
    end) ->
      let ZSome (zrsd, zshamt) = (z_s2719z3 z_s2730z3) in true
    | z_s2742z3 when (begin
      match (z_s2731z3 z_s2742z3) with
      | ZSome (zrsd, zshamt) -> zneq_vec (zshamt, [B0; B0; B0; B0; B0; B0])
      | _ -> false
    end) ->
      let ZSome (zrsd, zshamt) = (z_s2731z3 z_s2742z3) in true
    | z_s2754z3 when (begin
      match (z_s2743z3 z_s2754z3) with
      | ZSome (zrsd, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zimm) = (z_s2743z3 z_s2754z3) in true
    | z_s2766z3 when (begin
      match (z_s2755z3 z_s2766z3) with
      | ZSome (zrsd, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2) = (z_s2755z3 z_s2766z3) in true
    | z_s2778z3 when (begin
      match (z_s2767z3 z_s2778z3) with
      | ZSome (zrsd, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2) = (z_s2767z3 z_s2778z3) in true
    | z_s2790z3 when (begin
      match (z_s2779z3 z_s2790z3) with
      | ZSome (zrsd, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2) = (z_s2779z3 z_s2790z3) in true
    | z_s2802z3 when (begin
      match (z_s2791z3 z_s2802z3) with
      | ZSome (zrsd, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2) = (z_s2791z3 z_s2802z3) in true
    | z_s2814z3 when (begin
      match (z_s2803z3 z_s2814z3) with
      | ZSome (zrsd, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2) = (z_s2803z3 z_s2814z3) in true
    | z_s2826z3 when (begin
      match (z_s2815z3 z_s2826z3) with
      | ZSome (zrsd, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2) = (z_s2815z3 z_s2826z3) in true
    | z_s2834z3 when (begin
      match (z_s2827z3 z_s2834z3) with
      | ZSome (zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zimm) = (z_s2827z3 z_s2834z3) in true
    | z_s2846z3 when (begin
      match (z_s2835z3 z_s2846z3) with
      | ZSome (zrs, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrs, zimm) = (z_s2835z3 z_s2846z3) in true
    | z_s2858z3 when (begin
      match (z_s2847z3 z_s2858z3) with
      | ZSome (zrs, zimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrs, zimm) = (z_s2847z3 z_s2858z3) in true
    | z_s2870z3 when (begin
      match (z_s2859z3 z_s2870z3) with
      | ZSome (zrsd, zshamt) ->
        (zneq_vec (zshamt, [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))
      | _ -> false
    end) ->
      let ZSome (zrsd, zshamt) = (z_s2859z3 z_s2870z3) in true
    | z_s2882z3 when (begin
      match (z_s2871z3 z_s2882z3) with
      | ZSome (zrd, zuimm) ->
        zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))
      | _ -> false
    end) ->
      let ZSome (zrd, zuimm) = (z_s2871z3 z_s2882z3) in true
    | z_s2894z3 when (begin
      match (z_s2883z3 z_s2894z3) with
      | ZSome (zrd, zuimm) ->
        zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))
      | _ -> false
    end) ->
      let ZSome (zrd, zuimm) = (z_s2883z3 z_s2894z3) in true
    | z_s2906z3 when (begin
      match (z_s2895z3 z_s2906z3) with
      | ZSome (zrd, zuimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zuimm) = (z_s2895z3 z_s2906z3) in true
    | z_s2918z3 when (begin
      match (z_s2907z3 z_s2918z3) with
      | ZSome (zrs2, zuimm) -> true
      | _ -> false
    end) ->
      let ZSome (zrs2, zuimm) = (z_s2907z3 z_s2918z3) in true
    | z_s2926z3 when (begin
      match (z_s2919z3 z_s2926z3) with
      | ZSome (zrs1) ->
        zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))
      | _ -> false
    end) ->
      let ZSome (zrs1) = (z_s2919z3 z_s2926z3) in true
    | z_s2934z3 when (begin
      match (z_s2927z3 z_s2934z3) with
      | ZSome (zrs1) ->
        zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))
      | _ -> false
    end) ->
      let ZSome (zrs1) = (z_s2927z3 z_s2934z3) in true
    | z_s2946z3 when (begin
      match (z_s2935z3 z_s2946z3) with
      | ZSome (zrd, zrs2) ->
        (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))
      | _ -> false
    end) ->
      let ZSome (zrd, zrs2) = (z_s2935z3 z_s2946z3) in true
    | "c.ebreak" -> true
    | z_s2958z3 when (begin
      match (z_s2947z3 z_s2958z3) with
      | ZSome (zrsd, zrs2) ->
        (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2) = (z_s2947z3 z_s2958z3) in true
    | z_s2975z3 when (begin
      match (z_s2959z3 z_s2975z3) with
      | ZSome (zhigh, zsigned1, zsigned2, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zhigh, zsigned1, zsigned2, zrd, zrs1, zrs2) = (z_s2959z3 z_s2975z3) in
      true
    | z_s2993z3 when (begin
      match (z_s2976z3 z_s2993z3) with
      | ZSome (zs, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zs, zrd, zrs1, zrs2) = (z_s2976z3 z_s2993z3) in true
    | z_s3011z3 when (begin
      match (z_s2994z3 z_s3011z3) with
      | ZSome (zs, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zs, zrd, zrs1, zrs2) = (z_s2994z3 z_s3011z3) in true
    | z_s3027z3 when (begin
      match (z_s3012z3 z_s3027z3) with
      | ZSome (zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs1, zrs2) = (z_s3012z3 z_s3027z3) in true
    | z_s3046z3 when (begin
      match (z_s3028z3 z_s3046z3) with
      | ZSome (zs, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zs, zrd, zrs1, zrs2) = (z_s3028z3 z_s3046z3) in true
    | z_s3065z3 when (begin
      match (z_s3047z3 z_s3065z3) with
      | ZSome (zs, zrd, zrs1, zrs2) -> true
      | _ -> false
    end) ->
      let ZSome (zs, zrd, zrs1, zrs2) = (z_s3047z3 z_s3065z3) in true
    | z_s3083z3 when (begin
      match (z_s3066z3 z_s3083z3) with
      | ZSome (zop, zrd, zrs1, zcsr) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zcsr) = (z_s3066z3 z_s3083z3) in true
    | z_s3100z3 when (begin
      match (z_s3084z3 z_s3100z3) with
      | ZSome (zop, zrd, zrs1, zcsr) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zcsr) = (z_s3084z3 z_s3100z3) in true
    | z_s3112z3 when (begin
      match (z_s3101z3 z_s3112z3) with
      | ZSome (zrd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb) = (z_s3101z3 z_s3112z3) in true
    | z_s3124z3 when (begin
      match (z_s3113z3 z_s3124z3) with
      | ZSome (zrd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb) = (z_s3113z3 z_s3124z3) in true
    | z_s3136z3 when (begin
      match (z_s3125z3 z_s3136z3) with
      | ZSome (zrd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb) = (z_s3125z3 z_s3136z3) in true
    | z_s3148z3 when (begin
      match (z_s3137z3 z_s3148z3) with
      | ZSome (zrd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb) = (z_s3137z3 z_s3148z3) in true
    | z_s3160z3 when (begin
      match (z_s3149z3 z_s3160z3) with
      | ZSome (zrd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb) = (z_s3149z3 z_s3160z3) in true
    | z_s3172z3 when (begin
      match (z_s3161z3 z_s3172z3) with
      | ZSome (zrd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb) = (z_s3161z3 z_s3172z3) in true
    | z_s3184z3 when (begin
      match (z_s3173z3 z_s3184z3) with
      | ZSome (zrd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb) = (z_s3173z3 z_s3184z3) in true
    | z_s3196z3 when (begin
      match (z_s3185z3 z_s3196z3) with
      | ZSome (zrd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb) = (z_s3185z3 z_s3196z3) in true
    | z_s3208z3 when (begin
      match (z_s3197z3 z_s3208z3) with
      | ZSome (zcd, zcs) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs) = (z_s3197z3 z_s3208z3) in true
    | z_s3220z3 when (begin
      match (z_s3209z3 z_s3220z3) with
      | ZSome (zcd, zcs) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs) = (z_s3209z3 z_s3220z3) in true
    | z_s3228z3 when (begin
      match (z_s3221z3 z_s3228z3) with
      | ZSome (zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zcb) = (z_s3221z3 z_s3228z3) in true
    | z_s3240z3 when (begin
      match (z_s3229z3 z_s3240z3) with
      | ZSome (zcd, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb) = (z_s3229z3 z_s3240z3) in true
    | z_s3252z3 when (begin
      match (z_s3241z3 z_s3252z3) with
      | ZSome (zcs, zrt) -> true
      | _ -> false
    end) ->
      let ZSome (zcs, zrt) = (z_s3241z3 z_s3252z3) in true
    | z_s3264z3 when (begin
      match (z_s3253z3 z_s3264z3) with
      | ZSome (zcs, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zcs, zcb) = (z_s3253z3 z_s3264z3) in true
    | z_s3276z3 when (begin
      match (z_s3265z3 z_s3276z3) with
      | ZSome (zq, zm8) -> true
      | _ -> false
    end) ->
      let ZSome (zq, zm8) = (z_s3265z3 z_s3276z3) in true
    | z_s3288z3 when (begin
      match (z_s3277z3 z_s3288z3) with
      | ZSome (zq, zm8) -> true
      | _ -> false
    end) ->
      let ZSome (zq, zm8) = (z_s3277z3 z_s3288z3) in true
    | z_s3304z3 when (begin
      match (z_s3289z3 z_s3304z3) with
      | ZSome (zcd, zcs, zct) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zct) = (z_s3289z3 z_s3304z3) in true
    | z_s3320z3 when (begin
      match (z_s3305z3 z_s3320z3) with
      | ZSome (zcd, zcs, zct) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zct) = (z_s3305z3 z_s3320z3) in true
    | z_s3336z3 when (begin
      match (z_s3321z3 z_s3336z3) with
      | ZSome (zcd, zcs, zrt) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zrt) = (z_s3321z3 z_s3336z3) in true
    | z_s3352z3 when (begin
      match (z_s3337z3 z_s3352z3) with
      | ZSome (zcd, zcs, zrt) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zrt) = (z_s3337z3 z_s3352z3) in true
    | z_s3368z3 when (begin
      match (z_s3353z3 z_s3368z3) with
      | ZSome (zcd, zcs, zrt) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zrt) = (z_s3353z3 z_s3368z3) in true
    | z_s3384z3 when (begin
      match (z_s3369z3 z_s3384z3) with
      | ZSome (zcd, zcs, zrt) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zrt) = (z_s3369z3 z_s3384z3) in true
    | z_s3400z3 when (begin
      match (z_s3385z3 z_s3400z3) with
      | ZSome (zcd, zcs, zrt) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zrt) = (z_s3385z3 z_s3400z3) in true
    | z_s3416z3 when (begin
      match (z_s3401z3 z_s3416z3) with
      | ZSome (zcd, zcb, zct) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb, zct) = (z_s3401z3 z_s3416z3) in true
    | z_s3432z3 when (begin
      match (z_s3417z3 z_s3432z3) with
      | ZSome (zcd, zcb, zct) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb, zct) = (z_s3417z3 z_s3432z3) in true
    | z_s3448z3 when (begin
      match (z_s3433z3 z_s3448z3) with
      | ZSome (zcd, zcs, zct) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zct) = (z_s3433z3 z_s3448z3) in true
    | z_s3464z3 when (begin
      match (z_s3449z3 z_s3464z3) with
      | ZSome (zrd, zcb, zcs) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb, zcs) = (z_s3449z3 z_s3464z3) in true
    | z_s3480z3 when (begin
      match (z_s3465z3 z_s3480z3) with
      | ZSome (zcd, zcb, zrs) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb, zrs) = (z_s3465z3 z_s3480z3) in true
    | z_s3492z3 when (begin
      match (z_s3481z3 z_s3492z3) with
      | ZSome (zcs, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zcs, zcb) = (z_s3481z3 z_s3492z3) in true
    | z_s3504z3 when (begin
      match (z_s3493z3 z_s3504z3) with
      | ZSome (zcs, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zcs, zcb) = (z_s3493z3 z_s3504z3) in true
    | z_s3516z3 when (begin
      match (z_s3505z3 z_s3516z3) with
      | ZSome (zcs, zcb) -> true
      | _ -> false
    end) ->
      let ZSome (zcs, zcb) = (z_s3505z3 z_s3516z3) in true
    | z_s3532z3 when (begin
      match (z_s3517z3 z_s3532z3) with
      | ZSome (zrd, zcb, zct) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb, zct) = (z_s3517z3 z_s3532z3) in true
    | z_s3548z3 when (begin
      match (z_s3533z3 z_s3548z3) with
      | ZSome (zcd, zcs, zidx) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zidx) = (z_s3533z3 z_s3548z3) in true
    | z_s3564z3 when (begin
      match (z_s3549z3 z_s3564z3) with
      | ZSome (zcd, zcb, zimm12) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb, zimm12) = (z_s3549z3 z_s3564z3) in true
    | z_s3580z3 when (begin
      match (z_s3565z3 z_s3580z3) with
      | ZSome (zcd, zcb, zimm12) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb, zimm12) = (z_s3565z3 z_s3580z3) in true
    | z_s3597z3 when (begin
      match (z_s3581z3 z_s3597z3) with
      | ZSome (zw, zu, zrd, zrs) -> true
      | _ -> false
    end) ->
      let ZSome (zw, zu, zrd, zrs) = (z_s3581z3 z_s3597z3) in true
    | z_s3614z3 when (begin
      match (z_s3598z3 z_s3614z3) with
      | ZSome (zw, zu, zrd, zcs) -> true
      | _ -> false
    end) ->
      let ZSome (zw, zu, zrd, zcs) = (z_s3598z3 z_s3614z3) in true
    | z_s3629z3 when (begin
      match (z_s3615z3 z_s3629z3) with
      | ZSome (zw, zrd, zrs) -> true
      | _ -> false
    end) ->
      let ZSome (zw, zrd, zrs) = (z_s3615z3 z_s3629z3) in true
    | z_s3644z3 when (begin
      match (z_s3630z3 z_s3644z3) with
      | ZSome (zw, zrd, zrs) -> true
      | _ -> false
    end) ->
      let ZSome (zw, zrd, zrs) = (z_s3630z3 z_s3644z3) in true
    | z_s3656z3 when (begin
      match (z_s3645z3 z_s3656z3) with
      | ZSome (zrd, zrs) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs) = (z_s3645z3 z_s3656z3) in true
    | z_s3668z3 when (begin
      match (z_s3657z3 z_s3668z3) with
      | ZSome (zrd, zrs) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs) = (z_s3657z3 z_s3668z3) in true
    | z_s3680z3 when (begin
      match (z_s3669z3 z_s3680z3) with
      | ZSome (zrd, zrs) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs) = (z_s3669z3 z_s3680z3) in true
    | z_s3692z3 when (begin
      match (z_s3681z3 z_s3692z3) with
      | ZSome (zrd, zrs) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs) = (z_s3681z3 z_s3692z3) in true
    | z_s3700z3 when (begin
      match (z_s3693z3 z_s3700z3) with
      | ZSome (zs) -> true
      | _ -> false
    end) ->
      let ZSome (zs) = (z_s3693z3 z_s3700z3) in true
    | z_s3708z3 when (begin
      match (z_s3701z3 z_s3708z3) with
      | ZSome (zs) -> true
      | _ -> false
    end) ->
      let ZSome (zs) = (z_s3701z3 z_s3708z3) in true
    | _ -> false
  end)

and z_s5181z3 (z_s5182z3 : (string)) : (((bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s5182z3 with
    | z_s5183z3 when (string_startswith (z_s5183z3, "c.illegal")) ->
      begin
        match (string_drop (z_s5183z3, (string_length "c.illegal"))) with
        | z_s5184z3 ->
          begin
            match (zspc_matches_prefix z_s5184z3) with
            | ZSome ((), z_s5185z3) ->
              begin
                match (string_drop (z_s5184z3, z_s5185z3)) with
                | z_s5186z3 ->
                  begin
                    match (hex_bits_16_matches_prefix z_s5186z3) with
                    | ZSome (zs, z_s5187z3) ->
                      begin
                        match (string_drop (z_s5186z3, z_s5187z3)) with
                        | zsz3 -> ZSome (zs, zsz3)
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s5173z3 (z_s5174z3 : (string)) : (((bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s5174z3 with
    | z_s5175z3 when (string_startswith (z_s5175z3, "illegal")) ->
      begin
        match (string_drop (z_s5175z3, (string_length "illegal"))) with
        | z_s5176z3 ->
          begin
            match (zspc_matches_prefix z_s5176z3) with
            | ZSome ((), z_s5177z3) ->
              begin
                match (string_drop (z_s5176z3, z_s5177z3)) with
                | z_s5178z3 ->
                  begin
                    match (hex_bits_32_matches_prefix z_s5178z3) with
                    | ZSome (zs, z_s5179z3) ->
                      begin
                        match (string_drop (z_s5178z3, z_s5179z3)) with
                        | zsz3 -> ZSome (zs, zsz3)
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s5161z3 (z_s5162z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s5162z3 with
    | z_s5163z3 when (string_startswith (z_s5163z3, "sqCap")) ->
      begin
        match (string_drop (z_s5163z3, (string_length "sqCap"))) with
        | z_s5164z3 ->
          begin
            match (zspc_matches_prefix z_s5164z3) with
            | ZSome ((), z_s5165z3) ->
              begin
                match (string_drop (z_s5164z3, z_s5165z3)) with
                | z_s5166z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s5166z3) with
                    | ZSome (zrd, z_s5167z3) ->
                      begin
                        match (string_drop (z_s5166z3, z_s5167z3)) with
                        | z_s5168z3 ->
                          begin
                            match (zsep_matches_prefix z_s5168z3) with
                            | ZSome ((), z_s5169z3) ->
                              begin
                                match (string_drop (z_s5168z3, z_s5169z3)) with
                                | z_s5170z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s5170z3) with
                                    | ZSome (zrs, z_s5171z3) ->
                                      begin
                                        match (string_drop (z_s5170z3, z_s5171z3)) with
                                        | zsz3 -> ZSome (zrd, zrs, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s5149z3 (z_s5150z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s5150z3 with
    | z_s5151z3 when (string_startswith (z_s5151z3, "lqCap")) ->
      begin
        match (string_drop (z_s5151z3, (string_length "lqCap"))) with
        | z_s5152z3 ->
          begin
            match (zspc_matches_prefix z_s5152z3) with
            | ZSome ((), z_s5153z3) ->
              begin
                match (string_drop (z_s5152z3, z_s5153z3)) with
                | z_s5154z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s5154z3) with
                    | ZSome (zrd, z_s5155z3) ->
                      begin
                        match (string_drop (z_s5154z3, z_s5155z3)) with
                        | z_s5156z3 ->
                          begin
                            match (zsep_matches_prefix z_s5156z3) with
                            | ZSome ((), z_s5157z3) ->
                              begin
                                match (string_drop (z_s5156z3, z_s5157z3)) with
                                | z_s5158z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s5158z3) with
                                    | ZSome (zrs, z_s5159z3) ->
                                      begin
                                        match (string_drop (z_s5158z3, z_s5159z3)) with
                                        | zsz3 -> ZSome (zrd, zrs, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s5137z3 (z_s5138z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s5138z3 with
    | z_s5139z3 when (string_startswith (z_s5139z3, "sqDDC")) ->
      begin
        match (string_drop (z_s5139z3, (string_length "sqDDC"))) with
        | z_s5140z3 ->
          begin
            match (zspc_matches_prefix z_s5140z3) with
            | ZSome ((), z_s5141z3) ->
              begin
                match (string_drop (z_s5140z3, z_s5141z3)) with
                | z_s5142z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s5142z3) with
                    | ZSome (zrd, z_s5143z3) ->
                      begin
                        match (string_drop (z_s5142z3, z_s5143z3)) with
                        | z_s5144z3 ->
                          begin
                            match (zsep_matches_prefix z_s5144z3) with
                            | ZSome ((), z_s5145z3) ->
                              begin
                                match (string_drop (z_s5144z3, z_s5145z3)) with
                                | z_s5146z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s5146z3) with
                                    | ZSome (zrs, z_s5147z3) ->
                                      begin
                                        match (string_drop (z_s5146z3, z_s5147z3)) with
                                        | zsz3 -> ZSome (zrd, zrs, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s5125z3 (z_s5126z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s5126z3 with
    | z_s5127z3 when (string_startswith (z_s5127z3, "lqDDC")) ->
      begin
        match (string_drop (z_s5127z3, (string_length "lqDDC"))) with
        | z_s5128z3 ->
          begin
            match (zspc_matches_prefix z_s5128z3) with
            | ZSome ((), z_s5129z3) ->
              begin
                match (string_drop (z_s5128z3, z_s5129z3)) with
                | z_s5130z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s5130z3) with
                    | ZSome (zrd, z_s5131z3) ->
                      begin
                        match (string_drop (z_s5130z3, z_s5131z3)) with
                        | z_s5132z3 ->
                          begin
                            match (zsep_matches_prefix z_s5132z3) with
                            | ZSome ((), z_s5133z3) ->
                              begin
                                match (string_drop (z_s5132z3, z_s5133z3)) with
                                | z_s5134z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s5134z3) with
                                    | ZSome (zrs, z_s5135z3) ->
                                      begin
                                        match (string_drop (z_s5134z3, z_s5135z3)) with
                                        | zsz3 -> ZSome (zrd, zrs, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s5110z3 (z_s5111z3 : (string)) : ((zword_width * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s5111z3 with
    | z_s5112z3 when (string_startswith (z_s5112z3, "s")) ->
      begin
        match (string_drop (z_s5112z3, (string_length "s"))) with
        | z_s5113z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s5113z3) with
            | ZSome (zw, z_s5114z3) ->
              begin
                match (string_drop (z_s5113z3, z_s5114z3)) with
                | z_s5115z3 when (string_startswith (z_s5115z3, "Cap")) ->
                  begin
                    match (string_drop (z_s5115z3, (string_length "Cap"))) with
                    | z_s5116z3 ->
                      begin
                        match (zspc_matches_prefix z_s5116z3) with
                        | ZSome ((), z_s5117z3) ->
                          begin
                            match (string_drop (z_s5116z3, z_s5117z3)) with
                            | z_s5118z3 ->
                              begin
                                match (zreg_name_matches_prefix z_s5118z3) with
                                | ZSome (zrd, z_s5119z3) ->
                                  begin
                                    match (string_drop (z_s5118z3, z_s5119z3)) with
                                    | z_s5120z3 ->
                                      begin
                                        match (zsep_matches_prefix z_s5120z3) with
                                        | ZSome ((), z_s5121z3) ->
                                          begin
                                            match (string_drop (z_s5120z3, z_s5121z3)) with
                                            | z_s5122z3 ->
                                              begin
                                                match (zreg_name_matches_prefix z_s5122z3) with
                                                | ZSome (zrs, z_s5123z3) ->
                                                  begin
                                                    match (string_drop (z_s5122z3, z_s5123z3)) with
                                                    | zsz3 ->
                                                      ZSome (zw, zrd, zrs, zsz3)
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s5095z3 (z_s5096z3 : (string)) : ((zword_width * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s5096z3 with
    | z_s5097z3 when (string_startswith (z_s5097z3, "s")) ->
      begin
        match (string_drop (z_s5097z3, (string_length "s"))) with
        | z_s5098z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s5098z3) with
            | ZSome (zw, z_s5099z3) ->
              begin
                match (string_drop (z_s5098z3, z_s5099z3)) with
                | z_s5100z3 when (string_startswith (z_s5100z3, "DDC")) ->
                  begin
                    match (string_drop (z_s5100z3, (string_length "DDC"))) with
                    | z_s5101z3 ->
                      begin
                        match (zspc_matches_prefix z_s5101z3) with
                        | ZSome ((), z_s5102z3) ->
                          begin
                            match (string_drop (z_s5101z3, z_s5102z3)) with
                            | z_s5103z3 ->
                              begin
                                match (zreg_name_matches_prefix z_s5103z3) with
                                | ZSome (zrd, z_s5104z3) ->
                                  begin
                                    match (string_drop (z_s5103z3, z_s5104z3)) with
                                    | z_s5105z3 ->
                                      begin
                                        match (zsep_matches_prefix z_s5105z3) with
                                        | ZSome ((), z_s5106z3) ->
                                          begin
                                            match (string_drop (z_s5105z3, z_s5106z3)) with
                                            | z_s5107z3 ->
                                              begin
                                                match (zreg_name_matches_prefix z_s5107z3) with
                                                | ZSome (zrs, z_s5108z3) ->
                                                  begin
                                                    match (string_drop (z_s5107z3, z_s5108z3)) with
                                                    | zsz3 ->
                                                      ZSome (zw, zrd, zrs, zsz3)
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s5078z3 (z_s5079z3 : (string)) : ((zword_width * bool * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s5079z3 with
    | z_s5080z3 when (string_startswith (z_s5080z3, "l")) ->
      begin
        match (string_drop (z_s5080z3, (string_length "l"))) with
        | z_s5081z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s5081z3) with
            | ZSome (zw, z_s5082z3) ->
              begin
                match (string_drop (z_s5081z3, z_s5082z3)) with
                | z_s5083z3 ->
                  begin
                    match (zmaybe_u_matches_prefix z_s5083z3) with
                    | ZSome (zu, z_s5084z3) ->
                      begin
                        match (string_drop (z_s5083z3, z_s5084z3)) with
                        | z_s5085z3 when (string_startswith (z_s5085z3, "Cap")) ->
                          begin
                            match (string_drop (z_s5085z3, (string_length "Cap"))) with
                            | z_s5086z3 ->
                              begin
                                match (zspc_matches_prefix z_s5086z3) with
                                | ZSome ((), z_s5087z3) ->
                                  begin
                                    match (string_drop (z_s5086z3, z_s5087z3)) with
                                    | z_s5088z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s5088z3) with
                                        | ZSome (zrd, z_s5089z3) ->
                                          begin
                                            match (string_drop (z_s5088z3, z_s5089z3)) with
                                            | z_s5090z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s5090z3) with
                                                | ZSome ((), z_s5091z3) ->
                                                  begin
                                                    match (string_drop (z_s5090z3, z_s5091z3)) with
                                                    | z_s5092z3 ->
                                                      begin
                                                        match (zreg_name_matches_prefix z_s5092z3) with
                                                        | ZSome (zcs, z_s5093z3) ->
                                                          begin
                                                            match (string_drop (z_s5092z3, z_s5093z3)) with
                                                            | zsz3 ->
                                                              ZSome (zw, zu, zrd, zcs, zsz3)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s5061z3 (z_s5062z3 : (string)) : ((zword_width * bool * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s5062z3 with
    | z_s5063z3 when (string_startswith (z_s5063z3, "l")) ->
      begin
        match (string_drop (z_s5063z3, (string_length "l"))) with
        | z_s5064z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s5064z3) with
            | ZSome (zw, z_s5065z3) ->
              begin
                match (string_drop (z_s5064z3, z_s5065z3)) with
                | z_s5066z3 ->
                  begin
                    match (zmaybe_u_matches_prefix z_s5066z3) with
                    | ZSome (zu, z_s5067z3) ->
                      begin
                        match (string_drop (z_s5066z3, z_s5067z3)) with
                        | z_s5068z3 when (string_startswith (z_s5068z3, "DDC")) ->
                          begin
                            match (string_drop (z_s5068z3, (string_length "DDC"))) with
                            | z_s5069z3 ->
                              begin
                                match (zspc_matches_prefix z_s5069z3) with
                                | ZSome ((), z_s5070z3) ->
                                  begin
                                    match (string_drop (z_s5069z3, z_s5070z3)) with
                                    | z_s5071z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s5071z3) with
                                        | ZSome (zrd, z_s5072z3) ->
                                          begin
                                            match (string_drop (z_s5071z3, z_s5072z3)) with
                                            | z_s5073z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s5073z3) with
                                                | ZSome ((), z_s5074z3) ->
                                                  begin
                                                    match (string_drop (z_s5073z3, z_s5074z3)) with
                                                    | z_s5075z3 ->
                                                      begin
                                                        match (zreg_name_matches_prefix z_s5075z3) with
                                                        | ZSome (zrs, z_s5076z3) ->
                                                          begin
                                                            match (string_drop (z_s5075z3, z_s5076z3)) with
                                                            | zsz3 ->
                                                              ZSome (zw, zu, zrd, zrs, zsz3)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s5045z3 (z_s5046z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s5046z3 with
    | z_s5047z3 when (string_startswith (z_s5047z3, "CSetBoundsImmediate")) ->
      begin
        match (string_drop (z_s5047z3, (string_length "CSetBoundsImmediate"))) with
        | z_s5048z3 ->
          begin
            match (zspc_matches_prefix z_s5048z3) with
            | ZSome ((), z_s5049z3) ->
              begin
                match (string_drop (z_s5048z3, z_s5049z3)) with
                | z_s5050z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s5050z3) with
                    | ZSome (zcd, z_s5051z3) ->
                      begin
                        match (string_drop (z_s5050z3, z_s5051z3)) with
                        | z_s5052z3 ->
                          begin
                            match (zsep_matches_prefix z_s5052z3) with
                            | ZSome ((), z_s5053z3) ->
                              begin
                                match (string_drop (z_s5052z3, z_s5053z3)) with
                                | z_s5054z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s5054z3) with
                                    | ZSome (zcb, z_s5055z3) ->
                                      begin
                                        match (string_drop (z_s5054z3, z_s5055z3)) with
                                        | z_s5056z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s5056z3) with
                                            | ZSome ((), z_s5057z3) ->
                                              begin
                                                match (string_drop (z_s5056z3, z_s5057z3)) with
                                                | z_s5058z3 ->
                                                  begin
                                                    match (hex_bits_12_matches_prefix z_s5058z3) with
                                                    | ZSome (zimm12, z_s5059z3) ->
                                                      begin
                                                        match (string_drop (z_s5058z3, z_s5059z3)) with
                                                        | zsz3 ->
                                                          ZSome (zcd, zcb, zimm12, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s5029z3 (z_s5030z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s5030z3 with
    | z_s5031z3 when (string_startswith (z_s5031z3, "CIncOffsetImmediate")) ->
      begin
        match (string_drop (z_s5031z3, (string_length "CIncOffsetImmediate"))) with
        | z_s5032z3 ->
          begin
            match (zspc_matches_prefix z_s5032z3) with
            | ZSome ((), z_s5033z3) ->
              begin
                match (string_drop (z_s5032z3, z_s5033z3)) with
                | z_s5034z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s5034z3) with
                    | ZSome (zcd, z_s5035z3) ->
                      begin
                        match (string_drop (z_s5034z3, z_s5035z3)) with
                        | z_s5036z3 ->
                          begin
                            match (zsep_matches_prefix z_s5036z3) with
                            | ZSome ((), z_s5037z3) ->
                              begin
                                match (string_drop (z_s5036z3, z_s5037z3)) with
                                | z_s5038z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s5038z3) with
                                    | ZSome (zcb, z_s5039z3) ->
                                      begin
                                        match (string_drop (z_s5038z3, z_s5039z3)) with
                                        | z_s5040z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s5040z3) with
                                            | ZSome ((), z_s5041z3) ->
                                              begin
                                                match (string_drop (z_s5040z3, z_s5041z3)) with
                                                | z_s5042z3 ->
                                                  begin
                                                    match (hex_bits_12_matches_prefix z_s5042z3) with
                                                    | ZSome (zimm12, z_s5043z3) ->
                                                      begin
                                                        match (string_drop (z_s5042z3, z_s5043z3)) with
                                                        | zsz3 ->
                                                          ZSome (zcd, zcb, zimm12, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s5013z3 (z_s5014z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s5014z3 with
    | z_s5015z3 when (string_startswith (z_s5015z3, "CSpecialRW")) ->
      begin
        match (string_drop (z_s5015z3, (string_length "CSpecialRW"))) with
        | z_s5016z3 ->
          begin
            match (zspc_matches_prefix z_s5016z3) with
            | ZSome ((), z_s5017z3) ->
              begin
                match (string_drop (z_s5016z3, z_s5017z3)) with
                | z_s5018z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s5018z3) with
                    | ZSome (zcd, z_s5019z3) ->
                      begin
                        match (string_drop (z_s5018z3, z_s5019z3)) with
                        | z_s5020z3 ->
                          begin
                            match (zsep_matches_prefix z_s5020z3) with
                            | ZSome ((), z_s5021z3) ->
                              begin
                                match (string_drop (z_s5020z3, z_s5021z3)) with
                                | z_s5022z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s5022z3) with
                                    | ZSome (zcs, z_s5023z3) ->
                                      begin
                                        match (string_drop (z_s5022z3, z_s5023z3)) with
                                        | z_s5024z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s5024z3) with
                                            | ZSome ((), z_s5025z3) ->
                                              begin
                                                match (string_drop (z_s5024z3, z_s5025z3)) with
                                                | z_s5026z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s5026z3) with
                                                    | ZSome (zidx, z_s5027z3) ->
                                                      begin
                                                        match (string_drop (z_s5026z3, z_s5027z3)) with
                                                        | zsz3 ->
                                                          ZSome (zcd, zcs, zidx, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4997z3 (z_s4998z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4998z3 with
    | z_s4999z3 when (string_startswith (z_s4999z3, "CTestSubset")) ->
      begin
        match (string_drop (z_s4999z3, (string_length "CTestSubset"))) with
        | z_s5000z3 ->
          begin
            match (zspc_matches_prefix z_s5000z3) with
            | ZSome ((), z_s5001z3) ->
              begin
                match (string_drop (z_s5000z3, z_s5001z3)) with
                | z_s5002z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s5002z3) with
                    | ZSome (zrd, z_s5003z3) ->
                      begin
                        match (string_drop (z_s5002z3, z_s5003z3)) with
                        | z_s5004z3 ->
                          begin
                            match (zsep_matches_prefix z_s5004z3) with
                            | ZSome ((), z_s5005z3) ->
                              begin
                                match (string_drop (z_s5004z3, z_s5005z3)) with
                                | z_s5006z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s5006z3) with
                                    | ZSome (zcb, z_s5007z3) ->
                                      begin
                                        match (string_drop (z_s5006z3, z_s5007z3)) with
                                        | z_s5008z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s5008z3) with
                                            | ZSome ((), z_s5009z3) ->
                                              begin
                                                match (string_drop (z_s5008z3, z_s5009z3)) with
                                                | z_s5010z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s5010z3) with
                                                    | ZSome (zct, z_s5011z3) ->
                                                      begin
                                                        match (string_drop (z_s5010z3, z_s5011z3)) with
                                                        | zsz3 ->
                                                          ZSome (zrd, zcb, zct, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4985z3 (z_s4986z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4986z3 with
    | z_s4987z3 when (string_startswith (z_s4987z3, "CCallReturn")) ->
      begin
        match (string_drop (z_s4987z3, (string_length "CCallReturn"))) with
        | z_s4988z3 ->
          begin
            match (zspc_matches_prefix z_s4988z3) with
            | ZSome ((), z_s4989z3) ->
              begin
                match (string_drop (z_s4988z3, z_s4989z3)) with
                | z_s4990z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4990z3) with
                    | ZSome (zcs, z_s4991z3) ->
                      begin
                        match (string_drop (z_s4990z3, z_s4991z3)) with
                        | z_s4992z3 ->
                          begin
                            match (zsep_matches_prefix z_s4992z3) with
                            | ZSome ((), z_s4993z3) ->
                              begin
                                match (string_drop (z_s4992z3, z_s4993z3)) with
                                | z_s4994z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4994z3) with
                                    | ZSome (zcb, z_s4995z3) ->
                                      begin
                                        match (string_drop (z_s4994z3, z_s4995z3)) with
                                        | zsz3 -> ZSome (zcs, zcb, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4973z3 (z_s4974z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4974z3 with
    | z_s4975z3 when (string_startswith (z_s4975z3, "CCallFast")) ->
      begin
        match (string_drop (z_s4975z3, (string_length "CCallFast"))) with
        | z_s4976z3 ->
          begin
            match (zspc_matches_prefix z_s4976z3) with
            | ZSome ((), z_s4977z3) ->
              begin
                match (string_drop (z_s4976z3, z_s4977z3)) with
                | z_s4978z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4978z3) with
                    | ZSome (zcs, z_s4979z3) ->
                      begin
                        match (string_drop (z_s4978z3, z_s4979z3)) with
                        | z_s4980z3 ->
                          begin
                            match (zsep_matches_prefix z_s4980z3) with
                            | ZSome ((), z_s4981z3) ->
                              begin
                                match (string_drop (z_s4980z3, z_s4981z3)) with
                                | z_s4982z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4982z3) with
                                    | ZSome (zcb, z_s4983z3) ->
                                      begin
                                        match (string_drop (z_s4982z3, z_s4983z3)) with
                                        | zsz3 -> ZSome (zcs, zcb, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4961z3 (z_s4962z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4962z3 with
    | z_s4963z3 when (string_startswith (z_s4963z3, "CCall")) ->
      begin
        match (string_drop (z_s4963z3, (string_length "CCall"))) with
        | z_s4964z3 ->
          begin
            match (zspc_matches_prefix z_s4964z3) with
            | ZSome ((), z_s4965z3) ->
              begin
                match (string_drop (z_s4964z3, z_s4965z3)) with
                | z_s4966z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4966z3) with
                    | ZSome (zcs, z_s4967z3) ->
                      begin
                        match (string_drop (z_s4966z3, z_s4967z3)) with
                        | z_s4968z3 ->
                          begin
                            match (zsep_matches_prefix z_s4968z3) with
                            | ZSome ((), z_s4969z3) ->
                              begin
                                match (string_drop (z_s4968z3, z_s4969z3)) with
                                | z_s4970z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4970z3) with
                                    | ZSome (zcb, z_s4971z3) ->
                                      begin
                                        match (string_drop (z_s4970z3, z_s4971z3)) with
                                        | zsz3 -> ZSome (zcs, zcb, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4945z3 (z_s4946z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4946z3 with
    | z_s4947z3 when (string_startswith (z_s4947z3, "CFromPtr")) ->
      begin
        match (string_drop (z_s4947z3, (string_length "CFromPtr"))) with
        | z_s4948z3 ->
          begin
            match (zspc_matches_prefix z_s4948z3) with
            | ZSome ((), z_s4949z3) ->
              begin
                match (string_drop (z_s4948z3, z_s4949z3)) with
                | z_s4950z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4950z3) with
                    | ZSome (zcd, z_s4951z3) ->
                      begin
                        match (string_drop (z_s4950z3, z_s4951z3)) with
                        | z_s4952z3 ->
                          begin
                            match (zsep_matches_prefix z_s4952z3) with
                            | ZSome ((), z_s4953z3) ->
                              begin
                                match (string_drop (z_s4952z3, z_s4953z3)) with
                                | z_s4954z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4954z3) with
                                    | ZSome (zcb, z_s4955z3) ->
                                      begin
                                        match (string_drop (z_s4954z3, z_s4955z3)) with
                                        | z_s4956z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4956z3) with
                                            | ZSome ((), z_s4957z3) ->
                                              begin
                                                match (string_drop (z_s4956z3, z_s4957z3)) with
                                                | z_s4958z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s4958z3) with
                                                    | ZSome (zrs, z_s4959z3) ->
                                                      begin
                                                        match (string_drop (z_s4958z3, z_s4959z3)) with
                                                        | zsz3 ->
                                                          ZSome (zcd, zcb, zrs, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4929z3 (z_s4930z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4930z3 with
    | z_s4931z3 when (string_startswith (z_s4931z3, "CToPtr")) ->
      begin
        match (string_drop (z_s4931z3, (string_length "CToPtr"))) with
        | z_s4932z3 ->
          begin
            match (zspc_matches_prefix z_s4932z3) with
            | ZSome ((), z_s4933z3) ->
              begin
                match (string_drop (z_s4932z3, z_s4933z3)) with
                | z_s4934z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4934z3) with
                    | ZSome (zrd, z_s4935z3) ->
                      begin
                        match (string_drop (z_s4934z3, z_s4935z3)) with
                        | z_s4936z3 ->
                          begin
                            match (zsep_matches_prefix z_s4936z3) with
                            | ZSome ((), z_s4937z3) ->
                              begin
                                match (string_drop (z_s4936z3, z_s4937z3)) with
                                | z_s4938z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4938z3) with
                                    | ZSome (zcb, z_s4939z3) ->
                                      begin
                                        match (string_drop (z_s4938z3, z_s4939z3)) with
                                        | z_s4940z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4940z3) with
                                            | ZSome ((), z_s4941z3) ->
                                              begin
                                                match (string_drop (z_s4940z3, z_s4941z3)) with
                                                | z_s4942z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s4942z3) with
                                                    | ZSome (zcs, z_s4943z3) ->
                                                      begin
                                                        match (string_drop (z_s4942z3, z_s4943z3)) with
                                                        | zsz3 ->
                                                          ZSome (zrd, zcb, zcs, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4913z3 (z_s4914z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4914z3 with
    | z_s4915z3 when (string_startswith (z_s4915z3, "CCSeal")) ->
      begin
        match (string_drop (z_s4915z3, (string_length "CCSeal"))) with
        | z_s4916z3 ->
          begin
            match (zspc_matches_prefix z_s4916z3) with
            | ZSome ((), z_s4917z3) ->
              begin
                match (string_drop (z_s4916z3, z_s4917z3)) with
                | z_s4918z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4918z3) with
                    | ZSome (zcd, z_s4919z3) ->
                      begin
                        match (string_drop (z_s4918z3, z_s4919z3)) with
                        | z_s4920z3 ->
                          begin
                            match (zsep_matches_prefix z_s4920z3) with
                            | ZSome ((), z_s4921z3) ->
                              begin
                                match (string_drop (z_s4920z3, z_s4921z3)) with
                                | z_s4922z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4922z3) with
                                    | ZSome (zcs, z_s4923z3) ->
                                      begin
                                        match (string_drop (z_s4922z3, z_s4923z3)) with
                                        | z_s4924z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4924z3) with
                                            | ZSome ((), z_s4925z3) ->
                                              begin
                                                match (string_drop (z_s4924z3, z_s4925z3)) with
                                                | z_s4926z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s4926z3) with
                                                    | ZSome (zct, z_s4927z3) ->
                                                      begin
                                                        match (string_drop (z_s4926z3, z_s4927z3)) with
                                                        | zsz3 ->
                                                          ZSome (zcd, zcs, zct, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4897z3 (z_s4898z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4898z3 with
    | z_s4899z3 when (string_startswith (z_s4899z3, "CCopyType")) ->
      begin
        match (string_drop (z_s4899z3, (string_length "CCopyType"))) with
        | z_s4900z3 ->
          begin
            match (zspc_matches_prefix z_s4900z3) with
            | ZSome ((), z_s4901z3) ->
              begin
                match (string_drop (z_s4900z3, z_s4901z3)) with
                | z_s4902z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4902z3) with
                    | ZSome (zcd, z_s4903z3) ->
                      begin
                        match (string_drop (z_s4902z3, z_s4903z3)) with
                        | z_s4904z3 ->
                          begin
                            match (zsep_matches_prefix z_s4904z3) with
                            | ZSome ((), z_s4905z3) ->
                              begin
                                match (string_drop (z_s4904z3, z_s4905z3)) with
                                | z_s4906z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4906z3) with
                                    | ZSome (zcb, z_s4907z3) ->
                                      begin
                                        match (string_drop (z_s4906z3, z_s4907z3)) with
                                        | z_s4908z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4908z3) with
                                            | ZSome ((), z_s4909z3) ->
                                              begin
                                                match (string_drop (z_s4908z3, z_s4909z3)) with
                                                | z_s4910z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s4910z3) with
                                                    | ZSome (zct, z_s4911z3) ->
                                                      begin
                                                        match (string_drop (z_s4910z3, z_s4911z3)) with
                                                        | zsz3 ->
                                                          ZSome (zcd, zcb, zct, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4881z3 (z_s4882z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4882z3 with
    | z_s4883z3 when (string_startswith (z_s4883z3, "CBuildCap")) ->
      begin
        match (string_drop (z_s4883z3, (string_length "CBuildCap"))) with
        | z_s4884z3 ->
          begin
            match (zspc_matches_prefix z_s4884z3) with
            | ZSome ((), z_s4885z3) ->
              begin
                match (string_drop (z_s4884z3, z_s4885z3)) with
                | z_s4886z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4886z3) with
                    | ZSome (zcd, z_s4887z3) ->
                      begin
                        match (string_drop (z_s4886z3, z_s4887z3)) with
                        | z_s4888z3 ->
                          begin
                            match (zsep_matches_prefix z_s4888z3) with
                            | ZSome ((), z_s4889z3) ->
                              begin
                                match (string_drop (z_s4888z3, z_s4889z3)) with
                                | z_s4890z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4890z3) with
                                    | ZSome (zcb, z_s4891z3) ->
                                      begin
                                        match (string_drop (z_s4890z3, z_s4891z3)) with
                                        | z_s4892z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4892z3) with
                                            | ZSome ((), z_s4893z3) ->
                                              begin
                                                match (string_drop (z_s4892z3, z_s4893z3)) with
                                                | z_s4894z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s4894z3) with
                                                    | ZSome (zct, z_s4895z3) ->
                                                      begin
                                                        match (string_drop (z_s4894z3, z_s4895z3)) with
                                                        | zsz3 ->
                                                          ZSome (zcd, zcb, zct, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4865z3 (z_s4866z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4866z3 with
    | z_s4867z3 when (string_startswith (z_s4867z3, "CSetBoundsExact")) ->
      begin
        match (string_drop (z_s4867z3, (string_length "CSetBoundsExact"))) with
        | z_s4868z3 ->
          begin
            match (zspc_matches_prefix z_s4868z3) with
            | ZSome ((), z_s4869z3) ->
              begin
                match (string_drop (z_s4868z3, z_s4869z3)) with
                | z_s4870z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4870z3) with
                    | ZSome (zcd, z_s4871z3) ->
                      begin
                        match (string_drop (z_s4870z3, z_s4871z3)) with
                        | z_s4872z3 ->
                          begin
                            match (zsep_matches_prefix z_s4872z3) with
                            | ZSome ((), z_s4873z3) ->
                              begin
                                match (string_drop (z_s4872z3, z_s4873z3)) with
                                | z_s4874z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4874z3) with
                                    | ZSome (zcs, z_s4875z3) ->
                                      begin
                                        match (string_drop (z_s4874z3, z_s4875z3)) with
                                        | z_s4876z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4876z3) with
                                            | ZSome ((), z_s4877z3) ->
                                              begin
                                                match (string_drop (z_s4876z3, z_s4877z3)) with
                                                | z_s4878z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s4878z3) with
                                                    | ZSome (zrt, z_s4879z3) ->
                                                      begin
                                                        match (string_drop (z_s4878z3, z_s4879z3)) with
                                                        | zsz3 ->
                                                          ZSome (zcd, zcs, zrt, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4849z3 (z_s4850z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4850z3 with
    | z_s4851z3 when (string_startswith (z_s4851z3, "CSetBounds")) ->
      begin
        match (string_drop (z_s4851z3, (string_length "CSetBounds"))) with
        | z_s4852z3 ->
          begin
            match (zspc_matches_prefix z_s4852z3) with
            | ZSome ((), z_s4853z3) ->
              begin
                match (string_drop (z_s4852z3, z_s4853z3)) with
                | z_s4854z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4854z3) with
                    | ZSome (zcd, z_s4855z3) ->
                      begin
                        match (string_drop (z_s4854z3, z_s4855z3)) with
                        | z_s4856z3 ->
                          begin
                            match (zsep_matches_prefix z_s4856z3) with
                            | ZSome ((), z_s4857z3) ->
                              begin
                                match (string_drop (z_s4856z3, z_s4857z3)) with
                                | z_s4858z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4858z3) with
                                    | ZSome (zcs, z_s4859z3) ->
                                      begin
                                        match (string_drop (z_s4858z3, z_s4859z3)) with
                                        | z_s4860z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4860z3) with
                                            | ZSome ((), z_s4861z3) ->
                                              begin
                                                match (string_drop (z_s4860z3, z_s4861z3)) with
                                                | z_s4862z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s4862z3) with
                                                    | ZSome (zrt, z_s4863z3) ->
                                                      begin
                                                        match (string_drop (z_s4862z3, z_s4863z3)) with
                                                        | zsz3 ->
                                                          ZSome (zcd, zcs, zrt, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4833z3 (z_s4834z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4834z3 with
    | z_s4835z3 when (string_startswith (z_s4835z3, "CIncOffset")) ->
      begin
        match (string_drop (z_s4835z3, (string_length "CIncOffset"))) with
        | z_s4836z3 ->
          begin
            match (zspc_matches_prefix z_s4836z3) with
            | ZSome ((), z_s4837z3) ->
              begin
                match (string_drop (z_s4836z3, z_s4837z3)) with
                | z_s4838z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4838z3) with
                    | ZSome (zcd, z_s4839z3) ->
                      begin
                        match (string_drop (z_s4838z3, z_s4839z3)) with
                        | z_s4840z3 ->
                          begin
                            match (zsep_matches_prefix z_s4840z3) with
                            | ZSome ((), z_s4841z3) ->
                              begin
                                match (string_drop (z_s4840z3, z_s4841z3)) with
                                | z_s4842z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4842z3) with
                                    | ZSome (zcs, z_s4843z3) ->
                                      begin
                                        match (string_drop (z_s4842z3, z_s4843z3)) with
                                        | z_s4844z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4844z3) with
                                            | ZSome ((), z_s4845z3) ->
                                              begin
                                                match (string_drop (z_s4844z3, z_s4845z3)) with
                                                | z_s4846z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s4846z3) with
                                                    | ZSome (zrt, z_s4847z3) ->
                                                      begin
                                                        match (string_drop (z_s4846z3, z_s4847z3)) with
                                                        | zsz3 ->
                                                          ZSome (zcd, zcs, zrt, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4817z3 (z_s4818z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4818z3 with
    | z_s4819z3 when (string_startswith (z_s4819z3, "CSetOffset")) ->
      begin
        match (string_drop (z_s4819z3, (string_length "CSetOffset"))) with
        | z_s4820z3 ->
          begin
            match (zspc_matches_prefix z_s4820z3) with
            | ZSome ((), z_s4821z3) ->
              begin
                match (string_drop (z_s4820z3, z_s4821z3)) with
                | z_s4822z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4822z3) with
                    | ZSome (zcd, z_s4823z3) ->
                      begin
                        match (string_drop (z_s4822z3, z_s4823z3)) with
                        | z_s4824z3 ->
                          begin
                            match (zsep_matches_prefix z_s4824z3) with
                            | ZSome ((), z_s4825z3) ->
                              begin
                                match (string_drop (z_s4824z3, z_s4825z3)) with
                                | z_s4826z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4826z3) with
                                    | ZSome (zcs, z_s4827z3) ->
                                      begin
                                        match (string_drop (z_s4826z3, z_s4827z3)) with
                                        | z_s4828z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4828z3) with
                                            | ZSome ((), z_s4829z3) ->
                                              begin
                                                match (string_drop (z_s4828z3, z_s4829z3)) with
                                                | z_s4830z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s4830z3) with
                                                    | ZSome (zrt, z_s4831z3) ->
                                                      begin
                                                        match (string_drop (z_s4830z3, z_s4831z3)) with
                                                        | zsz3 ->
                                                          ZSome (zcd, zcs, zrt, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4801z3 (z_s4802z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4802z3 with
    | z_s4803z3 when (string_startswith (z_s4803z3, "CAndPerm")) ->
      begin
        match (string_drop (z_s4803z3, (string_length "CAndPerm"))) with
        | z_s4804z3 ->
          begin
            match (zspc_matches_prefix z_s4804z3) with
            | ZSome ((), z_s4805z3) ->
              begin
                match (string_drop (z_s4804z3, z_s4805z3)) with
                | z_s4806z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4806z3) with
                    | ZSome (zcd, z_s4807z3) ->
                      begin
                        match (string_drop (z_s4806z3, z_s4807z3)) with
                        | z_s4808z3 ->
                          begin
                            match (zsep_matches_prefix z_s4808z3) with
                            | ZSome ((), z_s4809z3) ->
                              begin
                                match (string_drop (z_s4808z3, z_s4809z3)) with
                                | z_s4810z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4810z3) with
                                    | ZSome (zcs, z_s4811z3) ->
                                      begin
                                        match (string_drop (z_s4810z3, z_s4811z3)) with
                                        | z_s4812z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4812z3) with
                                            | ZSome ((), z_s4813z3) ->
                                              begin
                                                match (string_drop (z_s4812z3, z_s4813z3)) with
                                                | z_s4814z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s4814z3) with
                                                    | ZSome (zrt, z_s4815z3) ->
                                                      begin
                                                        match (string_drop (z_s4814z3, z_s4815z3)) with
                                                        | zsz3 ->
                                                          ZSome (zcd, zcs, zrt, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4785z3 (z_s4786z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4786z3 with
    | z_s4787z3 when (string_startswith (z_s4787z3, "CUnseal")) ->
      begin
        match (string_drop (z_s4787z3, (string_length "CUnseal"))) with
        | z_s4788z3 ->
          begin
            match (zspc_matches_prefix z_s4788z3) with
            | ZSome ((), z_s4789z3) ->
              begin
                match (string_drop (z_s4788z3, z_s4789z3)) with
                | z_s4790z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4790z3) with
                    | ZSome (zcd, z_s4791z3) ->
                      begin
                        match (string_drop (z_s4790z3, z_s4791z3)) with
                        | z_s4792z3 ->
                          begin
                            match (zsep_matches_prefix z_s4792z3) with
                            | ZSome ((), z_s4793z3) ->
                              begin
                                match (string_drop (z_s4792z3, z_s4793z3)) with
                                | z_s4794z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4794z3) with
                                    | ZSome (zcs, z_s4795z3) ->
                                      begin
                                        match (string_drop (z_s4794z3, z_s4795z3)) with
                                        | z_s4796z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4796z3) with
                                            | ZSome ((), z_s4797z3) ->
                                              begin
                                                match (string_drop (z_s4796z3, z_s4797z3)) with
                                                | z_s4798z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s4798z3) with
                                                    | ZSome (zct, z_s4799z3) ->
                                                      begin
                                                        match (string_drop (z_s4798z3, z_s4799z3)) with
                                                        | zsz3 ->
                                                          ZSome (zcd, zcs, zct, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4769z3 (z_s4770z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4770z3 with
    | z_s4771z3 when (string_startswith (z_s4771z3, "CSeal")) ->
      begin
        match (string_drop (z_s4771z3, (string_length "CSeal"))) with
        | z_s4772z3 ->
          begin
            match (zspc_matches_prefix z_s4772z3) with
            | ZSome ((), z_s4773z3) ->
              begin
                match (string_drop (z_s4772z3, z_s4773z3)) with
                | z_s4774z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4774z3) with
                    | ZSome (zcd, z_s4775z3) ->
                      begin
                        match (string_drop (z_s4774z3, z_s4775z3)) with
                        | z_s4776z3 ->
                          begin
                            match (zsep_matches_prefix z_s4776z3) with
                            | ZSome ((), z_s4777z3) ->
                              begin
                                match (string_drop (z_s4776z3, z_s4777z3)) with
                                | z_s4778z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4778z3) with
                                    | ZSome (zcs, z_s4779z3) ->
                                      begin
                                        match (string_drop (z_s4778z3, z_s4779z3)) with
                                        | z_s4780z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4780z3) with
                                            | ZSome ((), z_s4781z3) ->
                                              begin
                                                match (string_drop (z_s4780z3, z_s4781z3)) with
                                                | z_s4782z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s4782z3) with
                                                    | ZSome (zct, z_s4783z3) ->
                                                      begin
                                                        match (string_drop (z_s4782z3, z_s4783z3)) with
                                                        | zsz3 ->
                                                          ZSome (zcd, zcs, zct, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4757z3 (z_s4758z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4758z3 with
    | z_s4759z3 when (string_startswith (z_s4759z3, "FPClearq")) ->
      begin
        match (string_drop (z_s4759z3, (string_length "FPClearq"))) with
        | z_s4760z3 ->
          begin
            match (zspc_matches_prefix z_s4760z3) with
            | ZSome ((), z_s4761z3) ->
              begin
                match (string_drop (z_s4760z3, z_s4761z3)) with
                | z_s4762z3 ->
                  begin
                    match (hex_bits_2_matches_prefix z_s4762z3) with
                    | ZSome (zq, z_s4763z3) ->
                      begin
                        match (string_drop (z_s4762z3, z_s4763z3)) with
                        | z_s4764z3 ->
                          begin
                            match (zsep_matches_prefix z_s4764z3) with
                            | ZSome ((), z_s4765z3) ->
                              begin
                                match (string_drop (z_s4764z3, z_s4765z3)) with
                                | z_s4766z3 ->
                                  begin
                                    match (hex_bits_8_matches_prefix z_s4766z3) with
                                    | ZSome (zm8, z_s4767z3) ->
                                      begin
                                        match (string_drop (z_s4766z3, z_s4767z3)) with
                                        | zsz3 -> ZSome (zq, zm8, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4745z3 (z_s4746z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4746z3 with
    | z_s4747z3 when (string_startswith (z_s4747z3, "Clearq")) ->
      begin
        match (string_drop (z_s4747z3, (string_length "Clearq"))) with
        | z_s4748z3 ->
          begin
            match (zspc_matches_prefix z_s4748z3) with
            | ZSome ((), z_s4749z3) ->
              begin
                match (string_drop (z_s4748z3, z_s4749z3)) with
                | z_s4750z3 ->
                  begin
                    match (hex_bits_2_matches_prefix z_s4750z3) with
                    | ZSome (zq, z_s4751z3) ->
                      begin
                        match (string_drop (z_s4750z3, z_s4751z3)) with
                        | z_s4752z3 ->
                          begin
                            match (zsep_matches_prefix z_s4752z3) with
                            | ZSome ((), z_s4753z3) ->
                              begin
                                match (string_drop (z_s4752z3, z_s4753z3)) with
                                | z_s4754z3 ->
                                  begin
                                    match (hex_bits_8_matches_prefix z_s4754z3) with
                                    | ZSome (zm8, z_s4755z3) ->
                                      begin
                                        match (string_drop (z_s4754z3, z_s4755z3)) with
                                        | zsz3 -> ZSome (zq, zm8, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4733z3 (z_s4734z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4734z3 with
    | z_s4735z3 when (string_startswith (z_s4735z3, "CCheckType")) ->
      begin
        match (string_drop (z_s4735z3, (string_length "CCheckType"))) with
        | z_s4736z3 ->
          begin
            match (zspc_matches_prefix z_s4736z3) with
            | ZSome ((), z_s4737z3) ->
              begin
                match (string_drop (z_s4736z3, z_s4737z3)) with
                | z_s4738z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4738z3) with
                    | ZSome (zcs, z_s4739z3) ->
                      begin
                        match (string_drop (z_s4738z3, z_s4739z3)) with
                        | z_s4740z3 ->
                          begin
                            match (zsep_matches_prefix z_s4740z3) with
                            | ZSome ((), z_s4741z3) ->
                              begin
                                match (string_drop (z_s4740z3, z_s4741z3)) with
                                | z_s4742z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4742z3) with
                                    | ZSome (zcb, z_s4743z3) ->
                                      begin
                                        match (string_drop (z_s4742z3, z_s4743z3)) with
                                        | zsz3 -> ZSome (zcs, zcb, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4721z3 (z_s4722z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4722z3 with
    | z_s4723z3 when (string_startswith (z_s4723z3, "CCheckPerm")) ->
      begin
        match (string_drop (z_s4723z3, (string_length "CCheckPerm"))) with
        | z_s4724z3 ->
          begin
            match (zspc_matches_prefix z_s4724z3) with
            | ZSome ((), z_s4725z3) ->
              begin
                match (string_drop (z_s4724z3, z_s4725z3)) with
                | z_s4726z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4726z3) with
                    | ZSome (zcs, z_s4727z3) ->
                      begin
                        match (string_drop (z_s4726z3, z_s4727z3)) with
                        | z_s4728z3 ->
                          begin
                            match (zsep_matches_prefix z_s4728z3) with
                            | ZSome ((), z_s4729z3) ->
                              begin
                                match (string_drop (z_s4728z3, z_s4729z3)) with
                                | z_s4730z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4730z3) with
                                    | ZSome (zrt, z_s4731z3) ->
                                      begin
                                        match (string_drop (z_s4730z3, z_s4731z3)) with
                                        | zsz3 -> ZSome (zcs, zrt, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4709z3 (z_s4710z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4710z3 with
    | z_s4711z3 when (string_startswith (z_s4711z3, "CJALR")) ->
      begin
        match (string_drop (z_s4711z3, (string_length "CJALR"))) with
        | z_s4712z3 ->
          begin
            match (zspc_matches_prefix z_s4712z3) with
            | ZSome ((), z_s4713z3) ->
              begin
                match (string_drop (z_s4712z3, z_s4713z3)) with
                | z_s4714z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4714z3) with
                    | ZSome (zcd, z_s4715z3) ->
                      begin
                        match (string_drop (z_s4714z3, z_s4715z3)) with
                        | z_s4716z3 ->
                          begin
                            match (zsep_matches_prefix z_s4716z3) with
                            | ZSome ((), z_s4717z3) ->
                              begin
                                match (string_drop (z_s4716z3, z_s4717z3)) with
                                | z_s4718z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4718z3) with
                                    | ZSome (zcb, z_s4719z3) ->
                                      begin
                                        match (string_drop (z_s4718z3, z_s4719z3)) with
                                        | zsz3 -> ZSome (zcd, zcb, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4701z3 (z_s4702z3 : (string)) : (((bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4702z3 with
    | z_s4703z3 when (string_startswith (z_s4703z3, "CJR")) ->
      begin
        match (string_drop (z_s4703z3, (string_length "CJR"))) with
        | z_s4704z3 ->
          begin
            match (zspc_matches_prefix z_s4704z3) with
            | ZSome ((), z_s4705z3) ->
              begin
                match (string_drop (z_s4704z3, z_s4705z3)) with
                | z_s4706z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4706z3) with
                    | ZSome (zcb, z_s4707z3) ->
                      begin
                        match (string_drop (z_s4706z3, z_s4707z3)) with
                        | zsz3 -> ZSome (zcb, zsz3)
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4689z3 (z_s4690z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4690z3 with
    | z_s4691z3 when (string_startswith (z_s4691z3, "CClearTag")) ->
      begin
        match (string_drop (z_s4691z3, (string_length "CClearTag"))) with
        | z_s4692z3 ->
          begin
            match (zspc_matches_prefix z_s4692z3) with
            | ZSome ((), z_s4693z3) ->
              begin
                match (string_drop (z_s4692z3, z_s4693z3)) with
                | z_s4694z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4694z3) with
                    | ZSome (zcd, z_s4695z3) ->
                      begin
                        match (string_drop (z_s4694z3, z_s4695z3)) with
                        | z_s4696z3 ->
                          begin
                            match (zsep_matches_prefix z_s4696z3) with
                            | ZSome ((), z_s4697z3) ->
                              begin
                                match (string_drop (z_s4696z3, z_s4697z3)) with
                                | z_s4698z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4698z3) with
                                    | ZSome (zcs, z_s4699z3) ->
                                      begin
                                        match (string_drop (z_s4698z3, z_s4699z3)) with
                                        | zsz3 -> ZSome (zcd, zcs, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4677z3 (z_s4678z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4678z3 with
    | z_s4679z3 when (string_startswith (z_s4679z3, "CMove")) ->
      begin
        match (string_drop (z_s4679z3, (string_length "CMove"))) with
        | z_s4680z3 ->
          begin
            match (zspc_matches_prefix z_s4680z3) with
            | ZSome ((), z_s4681z3) ->
              begin
                match (string_drop (z_s4680z3, z_s4681z3)) with
                | z_s4682z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4682z3) with
                    | ZSome (zcd, z_s4683z3) ->
                      begin
                        match (string_drop (z_s4682z3, z_s4683z3)) with
                        | z_s4684z3 ->
                          begin
                            match (zsep_matches_prefix z_s4684z3) with
                            | ZSome ((), z_s4685z3) ->
                              begin
                                match (string_drop (z_s4684z3, z_s4685z3)) with
                                | z_s4686z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4686z3) with
                                    | ZSome (zcs, z_s4687z3) ->
                                      begin
                                        match (string_drop (z_s4686z3, z_s4687z3)) with
                                        | zsz3 -> ZSome (zcd, zcs, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4665z3 (z_s4666z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4666z3 with
    | z_s4667z3 when (string_startswith (z_s4667z3, "CGetAddr")) ->
      begin
        match (string_drop (z_s4667z3, (string_length "CGetAddr"))) with
        | z_s4668z3 ->
          begin
            match (zspc_matches_prefix z_s4668z3) with
            | ZSome ((), z_s4669z3) ->
              begin
                match (string_drop (z_s4668z3, z_s4669z3)) with
                | z_s4670z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4670z3) with
                    | ZSome (zrd, z_s4671z3) ->
                      begin
                        match (string_drop (z_s4670z3, z_s4671z3)) with
                        | z_s4672z3 ->
                          begin
                            match (zsep_matches_prefix z_s4672z3) with
                            | ZSome ((), z_s4673z3) ->
                              begin
                                match (string_drop (z_s4672z3, z_s4673z3)) with
                                | z_s4674z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4674z3) with
                                    | ZSome (zcb, z_s4675z3) ->
                                      begin
                                        match (string_drop (z_s4674z3, z_s4675z3)) with
                                        | zsz3 -> ZSome (zrd, zcb, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4653z3 (z_s4654z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4654z3 with
    | z_s4655z3 when (string_startswith (z_s4655z3, "CGetOffset")) ->
      begin
        match (string_drop (z_s4655z3, (string_length "CGetOffset"))) with
        | z_s4656z3 ->
          begin
            match (zspc_matches_prefix z_s4656z3) with
            | ZSome ((), z_s4657z3) ->
              begin
                match (string_drop (z_s4656z3, z_s4657z3)) with
                | z_s4658z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4658z3) with
                    | ZSome (zrd, z_s4659z3) ->
                      begin
                        match (string_drop (z_s4658z3, z_s4659z3)) with
                        | z_s4660z3 ->
                          begin
                            match (zsep_matches_prefix z_s4660z3) with
                            | ZSome ((), z_s4661z3) ->
                              begin
                                match (string_drop (z_s4660z3, z_s4661z3)) with
                                | z_s4662z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4662z3) with
                                    | ZSome (zcb, z_s4663z3) ->
                                      begin
                                        match (string_drop (z_s4662z3, z_s4663z3)) with
                                        | zsz3 -> ZSome (zrd, zcb, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4641z3 (z_s4642z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4642z3 with
    | z_s4643z3 when (string_startswith (z_s4643z3, "CGetSealed")) ->
      begin
        match (string_drop (z_s4643z3, (string_length "CGetSealed"))) with
        | z_s4644z3 ->
          begin
            match (zspc_matches_prefix z_s4644z3) with
            | ZSome ((), z_s4645z3) ->
              begin
                match (string_drop (z_s4644z3, z_s4645z3)) with
                | z_s4646z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4646z3) with
                    | ZSome (zrd, z_s4647z3) ->
                      begin
                        match (string_drop (z_s4646z3, z_s4647z3)) with
                        | z_s4648z3 ->
                          begin
                            match (zsep_matches_prefix z_s4648z3) with
                            | ZSome ((), z_s4649z3) ->
                              begin
                                match (string_drop (z_s4648z3, z_s4649z3)) with
                                | z_s4650z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4650z3) with
                                    | ZSome (zcb, z_s4651z3) ->
                                      begin
                                        match (string_drop (z_s4650z3, z_s4651z3)) with
                                        | zsz3 -> ZSome (zrd, zcb, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4629z3 (z_s4630z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4630z3 with
    | z_s4631z3 when (string_startswith (z_s4631z3, "CGetTag")) ->
      begin
        match (string_drop (z_s4631z3, (string_length "CGetTag"))) with
        | z_s4632z3 ->
          begin
            match (zspc_matches_prefix z_s4632z3) with
            | ZSome ((), z_s4633z3) ->
              begin
                match (string_drop (z_s4632z3, z_s4633z3)) with
                | z_s4634z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4634z3) with
                    | ZSome (zrd, z_s4635z3) ->
                      begin
                        match (string_drop (z_s4634z3, z_s4635z3)) with
                        | z_s4636z3 ->
                          begin
                            match (zsep_matches_prefix z_s4636z3) with
                            | ZSome ((), z_s4637z3) ->
                              begin
                                match (string_drop (z_s4636z3, z_s4637z3)) with
                                | z_s4638z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4638z3) with
                                    | ZSome (zcb, z_s4639z3) ->
                                      begin
                                        match (string_drop (z_s4638z3, z_s4639z3)) with
                                        | zsz3 -> ZSome (zrd, zcb, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4617z3 (z_s4618z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4618z3 with
    | z_s4619z3 when (string_startswith (z_s4619z3, "CGetLen")) ->
      begin
        match (string_drop (z_s4619z3, (string_length "CGetLen"))) with
        | z_s4620z3 ->
          begin
            match (zspc_matches_prefix z_s4620z3) with
            | ZSome ((), z_s4621z3) ->
              begin
                match (string_drop (z_s4620z3, z_s4621z3)) with
                | z_s4622z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4622z3) with
                    | ZSome (zrd, z_s4623z3) ->
                      begin
                        match (string_drop (z_s4622z3, z_s4623z3)) with
                        | z_s4624z3 ->
                          begin
                            match (zsep_matches_prefix z_s4624z3) with
                            | ZSome ((), z_s4625z3) ->
                              begin
                                match (string_drop (z_s4624z3, z_s4625z3)) with
                                | z_s4626z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4626z3) with
                                    | ZSome (zcb, z_s4627z3) ->
                                      begin
                                        match (string_drop (z_s4626z3, z_s4627z3)) with
                                        | zsz3 -> ZSome (zrd, zcb, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4605z3 (z_s4606z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4606z3 with
    | z_s4607z3 when (string_startswith (z_s4607z3, "CGetBase")) ->
      begin
        match (string_drop (z_s4607z3, (string_length "CGetBase"))) with
        | z_s4608z3 ->
          begin
            match (zspc_matches_prefix z_s4608z3) with
            | ZSome ((), z_s4609z3) ->
              begin
                match (string_drop (z_s4608z3, z_s4609z3)) with
                | z_s4610z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4610z3) with
                    | ZSome (zrd, z_s4611z3) ->
                      begin
                        match (string_drop (z_s4610z3, z_s4611z3)) with
                        | z_s4612z3 ->
                          begin
                            match (zsep_matches_prefix z_s4612z3) with
                            | ZSome ((), z_s4613z3) ->
                              begin
                                match (string_drop (z_s4612z3, z_s4613z3)) with
                                | z_s4614z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4614z3) with
                                    | ZSome (zcb, z_s4615z3) ->
                                      begin
                                        match (string_drop (z_s4614z3, z_s4615z3)) with
                                        | zsz3 -> ZSome (zrd, zcb, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4593z3 (z_s4594z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4594z3 with
    | z_s4595z3 when (string_startswith (z_s4595z3, "CGetType")) ->
      begin
        match (string_drop (z_s4595z3, (string_length "CGetType"))) with
        | z_s4596z3 ->
          begin
            match (zspc_matches_prefix z_s4596z3) with
            | ZSome ((), z_s4597z3) ->
              begin
                match (string_drop (z_s4596z3, z_s4597z3)) with
                | z_s4598z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4598z3) with
                    | ZSome (zrd, z_s4599z3) ->
                      begin
                        match (string_drop (z_s4598z3, z_s4599z3)) with
                        | z_s4600z3 ->
                          begin
                            match (zsep_matches_prefix z_s4600z3) with
                            | ZSome ((), z_s4601z3) ->
                              begin
                                match (string_drop (z_s4600z3, z_s4601z3)) with
                                | z_s4602z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4602z3) with
                                    | ZSome (zcb, z_s4603z3) ->
                                      begin
                                        match (string_drop (z_s4602z3, z_s4603z3)) with
                                        | zsz3 -> ZSome (zrd, zcb, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4581z3 (z_s4582z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4582z3 with
    | z_s4583z3 when (string_startswith (z_s4583z3, "CGetPerm")) ->
      begin
        match (string_drop (z_s4583z3, (string_length "CGetPerm"))) with
        | z_s4584z3 ->
          begin
            match (zspc_matches_prefix z_s4584z3) with
            | ZSome ((), z_s4585z3) ->
              begin
                match (string_drop (z_s4584z3, z_s4585z3)) with
                | z_s4586z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4586z3) with
                    | ZSome (zrd, z_s4587z3) ->
                      begin
                        match (string_drop (z_s4586z3, z_s4587z3)) with
                        | z_s4588z3 ->
                          begin
                            match (zsep_matches_prefix z_s4588z3) with
                            | ZSome ((), z_s4589z3) ->
                              begin
                                match (string_drop (z_s4588z3, z_s4589z3)) with
                                | z_s4590z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4590z3) with
                                    | ZSome (zcb, z_s4591z3) ->
                                      begin
                                        match (string_drop (z_s4590z3, z_s4591z3)) with
                                        | zsz3 -> ZSome (zrd, zcb, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4564z3 (z_s4565z3 : (string)) : ((zcsrop * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4565z3 with
    | z_s4566z3 ->
      begin
        match (zcsr_mnemonic_matches_prefix z_s4566z3) with
        | ZSome (zop, z_s4567z3) ->
          begin
            match (string_drop (z_s4566z3, z_s4567z3)) with
            | z_s4568z3 ->
              begin
                match (zspc_matches_prefix z_s4568z3) with
                | ZSome ((), z_s4569z3) ->
                  begin
                    match (string_drop (z_s4568z3, z_s4569z3)) with
                    | z_s4570z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s4570z3) with
                        | ZSome (zrd, z_s4571z3) ->
                          begin
                            match (string_drop (z_s4570z3, z_s4571z3)) with
                            | z_s4572z3 ->
                              begin
                                match (zsep_matches_prefix z_s4572z3) with
                                | ZSome ((), z_s4573z3) ->
                                  begin
                                    match (string_drop (z_s4572z3, z_s4573z3)) with
                                    | z_s4574z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s4574z3) with
                                        | ZSome (zrs1, z_s4575z3) ->
                                          begin
                                            match (string_drop (z_s4574z3, z_s4575z3)) with
                                            | z_s4576z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s4576z3) with
                                                | ZSome ((), z_s4577z3) ->
                                                  begin
                                                    match (string_drop (z_s4576z3, z_s4577z3)) with
                                                    | z_s4578z3 ->
                                                      begin
                                                        match (zcsr_name_map_matches_prefix z_s4578z3) with
                                                        | ZSome (zcsr, z_s4579z3) ->
                                                          begin
                                                            match (string_drop (z_s4578z3, z_s4579z3)) with
                                                            | zsz3 ->
                                                              ZSome (zop, zrd, zrs1, zcsr, zsz3)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4546z3 (z_s4547z3 : (string)) : ((zcsrop * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4547z3 with
    | z_s4548z3 ->
      begin
        match (zcsr_mnemonic_matches_prefix z_s4548z3) with
        | ZSome (zop, z_s4549z3) ->
          begin
            match (string_drop (z_s4548z3, z_s4549z3)) with
            | z_s4550z3 when (string_startswith (z_s4550z3, "i")) ->
              begin
                match (string_drop (z_s4550z3, (string_length "i"))) with
                | z_s4551z3 ->
                  begin
                    match (zspc_matches_prefix z_s4551z3) with
                    | ZSome ((), z_s4552z3) ->
                      begin
                        match (string_drop (z_s4551z3, z_s4552z3)) with
                        | z_s4553z3 ->
                          begin
                            match (zreg_name_matches_prefix z_s4553z3) with
                            | ZSome (zrd, z_s4554z3) ->
                              begin
                                match (string_drop (z_s4553z3, z_s4554z3)) with
                                | z_s4555z3 ->
                                  begin
                                    match (zsep_matches_prefix z_s4555z3) with
                                    | ZSome ((), z_s4556z3) ->
                                      begin
                                        match (string_drop (z_s4555z3, z_s4556z3)) with
                                        | z_s4557z3 ->
                                          begin
                                            match (hex_bits_5_matches_prefix z_s4557z3) with
                                            | ZSome (zrs1, z_s4558z3) ->
                                              begin
                                                match (string_drop (z_s4557z3, z_s4558z3)) with
                                                | z_s4559z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s4559z3) with
                                                    | ZSome ((), z_s4560z3) ->
                                                      begin
                                                        match (string_drop (z_s4559z3, z_s4560z3)) with
                                                        | z_s4561z3 ->
                                                          begin
                                                            match (zcsr_name_map_matches_prefix z_s4561z3) with
                                                            | ZSome (zcsr, z_s4562z3) ->
                                                              begin
                                                                match (string_drop (z_s4561z3, z_s4562z3)) with
                                                                | zsz3 ->
                                                                  ZSome (zop, zrd, zrs1, zcsr, zsz3)
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4527z3 (z_s4528z3 : (string)) : ((bool * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4528z3 with
    | z_s4529z3 when (string_startswith (z_s4529z3, "rem")) ->
      begin
        match (string_drop (z_s4529z3, (string_length "rem"))) with
        | z_s4530z3 ->
          begin
            match (zmaybe_not_u_matches_prefix z_s4530z3) with
            | ZSome (zs, z_s4531z3) ->
              begin
                match (string_drop (z_s4530z3, z_s4531z3)) with
                | z_s4532z3 when (string_startswith (z_s4532z3, "w")) ->
                  begin
                    match (string_drop (z_s4532z3, (string_length "w"))) with
                    | z_s4533z3 ->
                      begin
                        match (zspc_matches_prefix z_s4533z3) with
                        | ZSome ((), z_s4534z3) ->
                          begin
                            match (string_drop (z_s4533z3, z_s4534z3)) with
                            | z_s4535z3 ->
                              begin
                                match (zreg_name_matches_prefix z_s4535z3) with
                                | ZSome (zrd, z_s4536z3) ->
                                  begin
                                    match (string_drop (z_s4535z3, z_s4536z3)) with
                                    | z_s4537z3 ->
                                      begin
                                        match (zsep_matches_prefix z_s4537z3) with
                                        | ZSome ((), z_s4538z3) ->
                                          begin
                                            match (string_drop (z_s4537z3, z_s4538z3)) with
                                            | z_s4539z3 ->
                                              begin
                                                match (zreg_name_matches_prefix z_s4539z3) with
                                                | ZSome (zrs1, z_s4540z3) ->
                                                  begin
                                                    match (string_drop (z_s4539z3, z_s4540z3)) with
                                                    | z_s4541z3 ->
                                                      begin
                                                        match (zsep_matches_prefix z_s4541z3) with
                                                        | ZSome ((), z_s4542z3) ->
                                                          begin
                                                            match (string_drop (z_s4541z3, z_s4542z3)) with
                                                            | z_s4543z3 ->
                                                              begin
                                                                match (zreg_name_matches_prefix z_s4543z3) with
                                                                | ZSome (zrs2, z_s4544z3) ->
                                                                  begin
                                                                    match (string_drop (z_s4543z3, z_s4544z3)) with
                                                                    | zsz3 ->
                                                                      ZSome (zs, zrd, zrs1, zrs2, zsz3)
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4508z3 (z_s4509z3 : (string)) : ((bool * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4509z3 with
    | z_s4510z3 when (string_startswith (z_s4510z3, "div")) ->
      begin
        match (string_drop (z_s4510z3, (string_length "div"))) with
        | z_s4511z3 ->
          begin
            match (zmaybe_not_u_matches_prefix z_s4511z3) with
            | ZSome (zs, z_s4512z3) ->
              begin
                match (string_drop (z_s4511z3, z_s4512z3)) with
                | z_s4513z3 when (string_startswith (z_s4513z3, "w")) ->
                  begin
                    match (string_drop (z_s4513z3, (string_length "w"))) with
                    | z_s4514z3 ->
                      begin
                        match (zspc_matches_prefix z_s4514z3) with
                        | ZSome ((), z_s4515z3) ->
                          begin
                            match (string_drop (z_s4514z3, z_s4515z3)) with
                            | z_s4516z3 ->
                              begin
                                match (zreg_name_matches_prefix z_s4516z3) with
                                | ZSome (zrd, z_s4517z3) ->
                                  begin
                                    match (string_drop (z_s4516z3, z_s4517z3)) with
                                    | z_s4518z3 ->
                                      begin
                                        match (zsep_matches_prefix z_s4518z3) with
                                        | ZSome ((), z_s4519z3) ->
                                          begin
                                            match (string_drop (z_s4518z3, z_s4519z3)) with
                                            | z_s4520z3 ->
                                              begin
                                                match (zreg_name_matches_prefix z_s4520z3) with
                                                | ZSome (zrs1, z_s4521z3) ->
                                                  begin
                                                    match (string_drop (z_s4520z3, z_s4521z3)) with
                                                    | z_s4522z3 ->
                                                      begin
                                                        match (zsep_matches_prefix z_s4522z3) with
                                                        | ZSome ((), z_s4523z3) ->
                                                          begin
                                                            match (string_drop (z_s4522z3, z_s4523z3)) with
                                                            | z_s4524z3 ->
                                                              begin
                                                                match (zreg_name_matches_prefix z_s4524z3) with
                                                                | ZSome (zrs2, z_s4525z3) ->
                                                                  begin
                                                                    match (string_drop (z_s4524z3, z_s4525z3)) with
                                                                    | zsz3 ->
                                                                      ZSome (zs, zrd, zrs1, zrs2, zsz3)
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4492z3 (z_s4493z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4493z3 with
    | z_s4494z3 when (string_startswith (z_s4494z3, "mulw")) ->
      begin
        match (string_drop (z_s4494z3, (string_length "mulw"))) with
        | z_s4495z3 ->
          begin
            match (zspc_matches_prefix z_s4495z3) with
            | ZSome ((), z_s4496z3) ->
              begin
                match (string_drop (z_s4495z3, z_s4496z3)) with
                | z_s4497z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4497z3) with
                    | ZSome (zrd, z_s4498z3) ->
                      begin
                        match (string_drop (z_s4497z3, z_s4498z3)) with
                        | z_s4499z3 ->
                          begin
                            match (zsep_matches_prefix z_s4499z3) with
                            | ZSome ((), z_s4500z3) ->
                              begin
                                match (string_drop (z_s4499z3, z_s4500z3)) with
                                | z_s4501z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4501z3) with
                                    | ZSome (zrs1, z_s4502z3) ->
                                      begin
                                        match (string_drop (z_s4501z3, z_s4502z3)) with
                                        | z_s4503z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4503z3) with
                                            | ZSome ((), z_s4504z3) ->
                                              begin
                                                match (string_drop (z_s4503z3, z_s4504z3)) with
                                                | z_s4505z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s4505z3) with
                                                    | ZSome (zrs2, z_s4506z3) ->
                                                      begin
                                                        match (string_drop (z_s4505z3, z_s4506z3)) with
                                                        | zsz3 ->
                                                          ZSome (zrd, zrs1, zrs2, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4474z3 (z_s4475z3 : (string)) : ((bool * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4475z3 with
    | z_s4476z3 when (string_startswith (z_s4476z3, "rem")) ->
      begin
        match (string_drop (z_s4476z3, (string_length "rem"))) with
        | z_s4477z3 ->
          begin
            match (zmaybe_not_u_matches_prefix z_s4477z3) with
            | ZSome (zs, z_s4478z3) ->
              begin
                match (string_drop (z_s4477z3, z_s4478z3)) with
                | z_s4479z3 ->
                  begin
                    match (zspc_matches_prefix z_s4479z3) with
                    | ZSome ((), z_s4480z3) ->
                      begin
                        match (string_drop (z_s4479z3, z_s4480z3)) with
                        | z_s4481z3 ->
                          begin
                            match (zreg_name_matches_prefix z_s4481z3) with
                            | ZSome (zrd, z_s4482z3) ->
                              begin
                                match (string_drop (z_s4481z3, z_s4482z3)) with
                                | z_s4483z3 ->
                                  begin
                                    match (zsep_matches_prefix z_s4483z3) with
                                    | ZSome ((), z_s4484z3) ->
                                      begin
                                        match (string_drop (z_s4483z3, z_s4484z3)) with
                                        | z_s4485z3 ->
                                          begin
                                            match (zreg_name_matches_prefix z_s4485z3) with
                                            | ZSome (zrs1, z_s4486z3) ->
                                              begin
                                                match (string_drop (z_s4485z3, z_s4486z3)) with
                                                | z_s4487z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s4487z3) with
                                                    | ZSome ((), z_s4488z3) ->
                                                      begin
                                                        match (string_drop (z_s4487z3, z_s4488z3)) with
                                                        | z_s4489z3 ->
                                                          begin
                                                            match (zreg_name_matches_prefix z_s4489z3) with
                                                            | ZSome (zrs2, z_s4490z3) ->
                                                              begin
                                                                match (string_drop (z_s4489z3, z_s4490z3)) with
                                                                | zsz3 ->
                                                                  ZSome (zs, zrd, zrs1, zrs2, zsz3)
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4456z3 (z_s4457z3 : (string)) : ((bool * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4457z3 with
    | z_s4458z3 when (string_startswith (z_s4458z3, "div")) ->
      begin
        match (string_drop (z_s4458z3, (string_length "div"))) with
        | z_s4459z3 ->
          begin
            match (zmaybe_not_u_matches_prefix z_s4459z3) with
            | ZSome (zs, z_s4460z3) ->
              begin
                match (string_drop (z_s4459z3, z_s4460z3)) with
                | z_s4461z3 ->
                  begin
                    match (zspc_matches_prefix z_s4461z3) with
                    | ZSome ((), z_s4462z3) ->
                      begin
                        match (string_drop (z_s4461z3, z_s4462z3)) with
                        | z_s4463z3 ->
                          begin
                            match (zreg_name_matches_prefix z_s4463z3) with
                            | ZSome (zrd, z_s4464z3) ->
                              begin
                                match (string_drop (z_s4463z3, z_s4464z3)) with
                                | z_s4465z3 ->
                                  begin
                                    match (zsep_matches_prefix z_s4465z3) with
                                    | ZSome ((), z_s4466z3) ->
                                      begin
                                        match (string_drop (z_s4465z3, z_s4466z3)) with
                                        | z_s4467z3 ->
                                          begin
                                            match (zreg_name_matches_prefix z_s4467z3) with
                                            | ZSome (zrs1, z_s4468z3) ->
                                              begin
                                                match (string_drop (z_s4467z3, z_s4468z3)) with
                                                | z_s4469z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s4469z3) with
                                                    | ZSome ((), z_s4470z3) ->
                                                      begin
                                                        match (string_drop (z_s4469z3, z_s4470z3)) with
                                                        | z_s4471z3 ->
                                                          begin
                                                            match (zreg_name_matches_prefix z_s4471z3) with
                                                            | ZSome (zrs2, z_s4472z3) ->
                                                              begin
                                                                match (string_drop (z_s4471z3, z_s4472z3)) with
                                                                | zsz3 ->
                                                                  ZSome (zs, zrd, zrs1, zrs2, zsz3)
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4439z3 (z_s4440z3 : (string)) : ((bool * bool * bool * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4440z3 with
    | z_s4441z3 ->
      begin
        match (zmul_mnemonic_matches_prefix z_s4441z3) with
        | ZSome ((zhigh, zsigned1, zsigned2), z_s4442z3) ->
          begin
            match (string_drop (z_s4441z3, z_s4442z3)) with
            | z_s4443z3 ->
              begin
                match (zspc_matches_prefix z_s4443z3) with
                | ZSome ((), z_s4444z3) ->
                  begin
                    match (string_drop (z_s4443z3, z_s4444z3)) with
                    | z_s4445z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s4445z3) with
                        | ZSome (zrd, z_s4446z3) ->
                          begin
                            match (string_drop (z_s4445z3, z_s4446z3)) with
                            | z_s4447z3 ->
                              begin
                                match (zsep_matches_prefix z_s4447z3) with
                                | ZSome ((), z_s4448z3) ->
                                  begin
                                    match (string_drop (z_s4447z3, z_s4448z3)) with
                                    | z_s4449z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s4449z3) with
                                        | ZSome (zrs1, z_s4450z3) ->
                                          begin
                                            match (string_drop (z_s4449z3, z_s4450z3)) with
                                            | z_s4451z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s4451z3) with
                                                | ZSome ((), z_s4452z3) ->
                                                  begin
                                                    match (string_drop (z_s4451z3, z_s4452z3)) with
                                                    | z_s4453z3 ->
                                                      begin
                                                        match (zreg_name_matches_prefix z_s4453z3) with
                                                        | ZSome (zrs2, z_s4454z3) ->
                                                          begin
                                                            match (string_drop (z_s4453z3, z_s4454z3)) with
                                                            | zsz3 ->
                                                              ZSome (zhigh, zsigned1, zsigned2, zrd, zrs1, zrs2, zsz3)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4427z3 (z_s4428z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4428z3 with
    | z_s4429z3 when (string_startswith (z_s4429z3, "c.add")) ->
      begin
        match (string_drop (z_s4429z3, (string_length "c.add"))) with
        | z_s4430z3 ->
          begin
            match (zspc_matches_prefix z_s4430z3) with
            | ZSome ((), z_s4431z3) ->
              begin
                match (string_drop (z_s4430z3, z_s4431z3)) with
                | z_s4432z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4432z3) with
                    | ZSome (zrsd, z_s4433z3) ->
                      begin
                        match (string_drop (z_s4432z3, z_s4433z3)) with
                        | z_s4434z3 ->
                          begin
                            match (zsep_matches_prefix z_s4434z3) with
                            | ZSome ((), z_s4435z3) ->
                              begin
                                match (string_drop (z_s4434z3, z_s4435z3)) with
                                | z_s4436z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4436z3) with
                                    | ZSome (zrs2, z_s4437z3) ->
                                      begin
                                        match (string_drop (z_s4436z3, z_s4437z3)) with
                                        | zsz3 -> ZSome (zrsd, zrs2, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4423z3 (z_s4424z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s4424z3 with
    | z_s4425z3 when (string_startswith (z_s4425z3, "c.ebreak")) ->
      begin
        match (string_drop (z_s4425z3, (string_length "c.ebreak"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4411z3 (z_s4412z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4412z3 with
    | z_s4413z3 when (string_startswith (z_s4413z3, "c.mv")) ->
      begin
        match (string_drop (z_s4413z3, (string_length "c.mv"))) with
        | z_s4414z3 ->
          begin
            match (zspc_matches_prefix z_s4414z3) with
            | ZSome ((), z_s4415z3) ->
              begin
                match (string_drop (z_s4414z3, z_s4415z3)) with
                | z_s4416z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4416z3) with
                    | ZSome (zrd, z_s4417z3) ->
                      begin
                        match (string_drop (z_s4416z3, z_s4417z3)) with
                        | z_s4418z3 ->
                          begin
                            match (zsep_matches_prefix z_s4418z3) with
                            | ZSome ((), z_s4419z3) ->
                              begin
                                match (string_drop (z_s4418z3, z_s4419z3)) with
                                | z_s4420z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s4420z3) with
                                    | ZSome (zrs2, z_s4421z3) ->
                                      begin
                                        match (string_drop (z_s4420z3, z_s4421z3)) with
                                        | zsz3 -> ZSome (zrd, zrs2, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4403z3 (z_s4404z3 : (string)) : (((bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4404z3 with
    | z_s4405z3 when (string_startswith (z_s4405z3, "c.jalr")) ->
      begin
        match (string_drop (z_s4405z3, (string_length "c.jalr"))) with
        | z_s4406z3 ->
          begin
            match (zspc_matches_prefix z_s4406z3) with
            | ZSome ((), z_s4407z3) ->
              begin
                match (string_drop (z_s4406z3, z_s4407z3)) with
                | z_s4408z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4408z3) with
                    | ZSome (zrs1, z_s4409z3) ->
                      begin
                        match (string_drop (z_s4408z3, z_s4409z3)) with
                        | zsz3 -> ZSome (zrs1, zsz3)
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4395z3 (z_s4396z3 : (string)) : (((bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4396z3 with
    | z_s4397z3 when (string_startswith (z_s4397z3, "c.jr")) ->
      begin
        match (string_drop (z_s4397z3, (string_length "c.jr"))) with
        | z_s4398z3 ->
          begin
            match (zspc_matches_prefix z_s4398z3) with
            | ZSome ((), z_s4399z3) ->
              begin
                match (string_drop (z_s4398z3, z_s4399z3)) with
                | z_s4400z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4400z3) with
                    | ZSome (zrs1, z_s4401z3) ->
                      begin
                        match (string_drop (z_s4400z3, z_s4401z3)) with
                        | zsz3 -> ZSome (zrs1, zsz3)
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4383z3 (z_s4384z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4384z3 with
    | z_s4385z3 when (string_startswith (z_s4385z3, "c.sdsp")) ->
      begin
        match (string_drop (z_s4385z3, (string_length "c.sdsp"))) with
        | z_s4386z3 ->
          begin
            match (zspc_matches_prefix z_s4386z3) with
            | ZSome ((), z_s4387z3) ->
              begin
                match (string_drop (z_s4386z3, z_s4387z3)) with
                | z_s4388z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4388z3) with
                    | ZSome (zrs2, z_s4389z3) ->
                      begin
                        match (string_drop (z_s4388z3, z_s4389z3)) with
                        | z_s4390z3 ->
                          begin
                            match (zsep_matches_prefix z_s4390z3) with
                            | ZSome ((), z_s4391z3) ->
                              begin
                                match (string_drop (z_s4390z3, z_s4391z3)) with
                                | z_s4392z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s4392z3) with
                                    | ZSome (zuimm, z_s4393z3) ->
                                      begin
                                        match (string_drop (z_s4392z3, z_s4393z3)) with
                                        | zsz3 -> ZSome (zrs2, zuimm, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4371z3 (z_s4372z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4372z3 with
    | z_s4373z3 when (string_startswith (z_s4373z3, "c.swsp")) ->
      begin
        match (string_drop (z_s4373z3, (string_length "c.swsp"))) with
        | z_s4374z3 ->
          begin
            match (zspc_matches_prefix z_s4374z3) with
            | ZSome ((), z_s4375z3) ->
              begin
                match (string_drop (z_s4374z3, z_s4375z3)) with
                | z_s4376z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4376z3) with
                    | ZSome (zrd, z_s4377z3) ->
                      begin
                        match (string_drop (z_s4376z3, z_s4377z3)) with
                        | z_s4378z3 ->
                          begin
                            match (zsep_matches_prefix z_s4378z3) with
                            | ZSome ((), z_s4379z3) ->
                              begin
                                match (string_drop (z_s4378z3, z_s4379z3)) with
                                | z_s4380z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s4380z3) with
                                    | ZSome (zuimm, z_s4381z3) ->
                                      begin
                                        match (string_drop (z_s4380z3, z_s4381z3)) with
                                        | zsz3 -> ZSome (zrd, zuimm, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4359z3 (z_s4360z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4360z3 with
    | z_s4361z3 when (string_startswith (z_s4361z3, "c.ldsp")) ->
      begin
        match (string_drop (z_s4361z3, (string_length "c.ldsp"))) with
        | z_s4362z3 ->
          begin
            match (zspc_matches_prefix z_s4362z3) with
            | ZSome ((), z_s4363z3) ->
              begin
                match (string_drop (z_s4362z3, z_s4363z3)) with
                | z_s4364z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4364z3) with
                    | ZSome (zrd, z_s4365z3) ->
                      begin
                        match (string_drop (z_s4364z3, z_s4365z3)) with
                        | z_s4366z3 ->
                          begin
                            match (zsep_matches_prefix z_s4366z3) with
                            | ZSome ((), z_s4367z3) ->
                              begin
                                match (string_drop (z_s4366z3, z_s4367z3)) with
                                | z_s4368z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s4368z3) with
                                    | ZSome (zuimm, z_s4369z3) ->
                                      begin
                                        match (string_drop (z_s4368z3, z_s4369z3)) with
                                        | zsz3 -> ZSome (zrd, zuimm, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4347z3 (z_s4348z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4348z3 with
    | z_s4349z3 when (string_startswith (z_s4349z3, "c.lwsp")) ->
      begin
        match (string_drop (z_s4349z3, (string_length "c.lwsp"))) with
        | z_s4350z3 ->
          begin
            match (zspc_matches_prefix z_s4350z3) with
            | ZSome ((), z_s4351z3) ->
              begin
                match (string_drop (z_s4350z3, z_s4351z3)) with
                | z_s4352z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4352z3) with
                    | ZSome (zrd, z_s4353z3) ->
                      begin
                        match (string_drop (z_s4352z3, z_s4353z3)) with
                        | z_s4354z3 ->
                          begin
                            match (zsep_matches_prefix z_s4354z3) with
                            | ZSome ((), z_s4355z3) ->
                              begin
                                match (string_drop (z_s4354z3, z_s4355z3)) with
                                | z_s4356z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s4356z3) with
                                    | ZSome (zuimm, z_s4357z3) ->
                                      begin
                                        match (string_drop (z_s4356z3, z_s4357z3)) with
                                        | zsz3 -> ZSome (zrd, zuimm, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4335z3 (z_s4336z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4336z3 with
    | z_s4337z3 when (string_startswith (z_s4337z3, "c.slli")) ->
      begin
        match (string_drop (z_s4337z3, (string_length "c.slli"))) with
        | z_s4338z3 ->
          begin
            match (zspc_matches_prefix z_s4338z3) with
            | ZSome ((), z_s4339z3) ->
              begin
                match (string_drop (z_s4338z3, z_s4339z3)) with
                | z_s4340z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4340z3) with
                    | ZSome (zrsd, z_s4341z3) ->
                      begin
                        match (string_drop (z_s4340z3, z_s4341z3)) with
                        | z_s4342z3 ->
                          begin
                            match (zsep_matches_prefix z_s4342z3) with
                            | ZSome ((), z_s4343z3) ->
                              begin
                                match (string_drop (z_s4342z3, z_s4343z3)) with
                                | z_s4344z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s4344z3) with
                                    | ZSome (zshamt, z_s4345z3) ->
                                      begin
                                        match (string_drop (z_s4344z3, z_s4345z3)) with
                                        | zsz3 -> ZSome (zrsd, zshamt, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4323z3 (z_s4324z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4324z3 with
    | z_s4325z3 when (string_startswith (z_s4325z3, "c.bnez")) ->
      begin
        match (string_drop (z_s4325z3, (string_length "c.bnez"))) with
        | z_s4326z3 ->
          begin
            match (zspc_matches_prefix z_s4326z3) with
            | ZSome ((), z_s4327z3) ->
              begin
                match (string_drop (z_s4326z3, z_s4327z3)) with
                | z_s4328z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s4328z3) with
                    | ZSome (zrs, z_s4329z3) ->
                      begin
                        match (string_drop (z_s4328z3, z_s4329z3)) with
                        | z_s4330z3 ->
                          begin
                            match (zsep_matches_prefix z_s4330z3) with
                            | ZSome ((), z_s4331z3) ->
                              begin
                                match (string_drop (z_s4330z3, z_s4331z3)) with
                                | z_s4332z3 ->
                                  begin
                                    match (hex_bits_8_matches_prefix z_s4332z3) with
                                    | ZSome (zimm, z_s4333z3) ->
                                      begin
                                        match (string_drop (z_s4332z3, z_s4333z3)) with
                                        | zsz3 -> ZSome (zrs, zimm, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4311z3 (z_s4312z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4312z3 with
    | z_s4313z3 when (string_startswith (z_s4313z3, "c.beqz")) ->
      begin
        match (string_drop (z_s4313z3, (string_length "c.beqz"))) with
        | z_s4314z3 ->
          begin
            match (zspc_matches_prefix z_s4314z3) with
            | ZSome ((), z_s4315z3) ->
              begin
                match (string_drop (z_s4314z3, z_s4315z3)) with
                | z_s4316z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s4316z3) with
                    | ZSome (zrs, z_s4317z3) ->
                      begin
                        match (string_drop (z_s4316z3, z_s4317z3)) with
                        | z_s4318z3 ->
                          begin
                            match (zsep_matches_prefix z_s4318z3) with
                            | ZSome ((), z_s4319z3) ->
                              begin
                                match (string_drop (z_s4318z3, z_s4319z3)) with
                                | z_s4320z3 ->
                                  begin
                                    match (hex_bits_8_matches_prefix z_s4320z3) with
                                    | ZSome (zimm, z_s4321z3) ->
                                      begin
                                        match (string_drop (z_s4320z3, z_s4321z3)) with
                                        | zsz3 -> ZSome (zrs, zimm, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4303z3 (z_s4304z3 : (string)) : (((bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4304z3 with
    | z_s4305z3 when (string_startswith (z_s4305z3, "c.j")) ->
      begin
        match (string_drop (z_s4305z3, (string_length "c.j"))) with
        | z_s4306z3 ->
          begin
            match (zspc_matches_prefix z_s4306z3) with
            | ZSome ((), z_s4307z3) ->
              begin
                match (string_drop (z_s4306z3, z_s4307z3)) with
                | z_s4308z3 ->
                  begin
                    match (hex_bits_11_matches_prefix z_s4308z3) with
                    | ZSome (zimm, z_s4309z3) ->
                      begin
                        match (string_drop (z_s4308z3, z_s4309z3)) with
                        | zsz3 -> ZSome (zimm, zsz3)
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4291z3 (z_s4292z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4292z3 with
    | z_s4293z3 when (string_startswith (z_s4293z3, "c.addw")) ->
      begin
        match (string_drop (z_s4293z3, (string_length "c.addw"))) with
        | z_s4294z3 ->
          begin
            match (zspc_matches_prefix z_s4294z3) with
            | ZSome ((), z_s4295z3) ->
              begin
                match (string_drop (z_s4294z3, z_s4295z3)) with
                | z_s4296z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s4296z3) with
                    | ZSome (zrsd, z_s4297z3) ->
                      begin
                        match (string_drop (z_s4296z3, z_s4297z3)) with
                        | z_s4298z3 ->
                          begin
                            match (zsep_matches_prefix z_s4298z3) with
                            | ZSome ((), z_s4299z3) ->
                              begin
                                match (string_drop (z_s4298z3, z_s4299z3)) with
                                | z_s4300z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s4300z3) with
                                    | ZSome (zrs2, z_s4301z3) ->
                                      begin
                                        match (string_drop (z_s4300z3, z_s4301z3)) with
                                        | zsz3 -> ZSome (zrsd, zrs2, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4279z3 (z_s4280z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4280z3 with
    | z_s4281z3 when (string_startswith (z_s4281z3, "c.subw")) ->
      begin
        match (string_drop (z_s4281z3, (string_length "c.subw"))) with
        | z_s4282z3 ->
          begin
            match (zspc_matches_prefix z_s4282z3) with
            | ZSome ((), z_s4283z3) ->
              begin
                match (string_drop (z_s4282z3, z_s4283z3)) with
                | z_s4284z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s4284z3) with
                    | ZSome (zrsd, z_s4285z3) ->
                      begin
                        match (string_drop (z_s4284z3, z_s4285z3)) with
                        | z_s4286z3 ->
                          begin
                            match (zsep_matches_prefix z_s4286z3) with
                            | ZSome ((), z_s4287z3) ->
                              begin
                                match (string_drop (z_s4286z3, z_s4287z3)) with
                                | z_s4288z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s4288z3) with
                                    | ZSome (zrs2, z_s4289z3) ->
                                      begin
                                        match (string_drop (z_s4288z3, z_s4289z3)) with
                                        | zsz3 -> ZSome (zrsd, zrs2, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4267z3 (z_s4268z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4268z3 with
    | z_s4269z3 when (string_startswith (z_s4269z3, "c.and")) ->
      begin
        match (string_drop (z_s4269z3, (string_length "c.and"))) with
        | z_s4270z3 ->
          begin
            match (zspc_matches_prefix z_s4270z3) with
            | ZSome ((), z_s4271z3) ->
              begin
                match (string_drop (z_s4270z3, z_s4271z3)) with
                | z_s4272z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s4272z3) with
                    | ZSome (zrsd, z_s4273z3) ->
                      begin
                        match (string_drop (z_s4272z3, z_s4273z3)) with
                        | z_s4274z3 ->
                          begin
                            match (zsep_matches_prefix z_s4274z3) with
                            | ZSome ((), z_s4275z3) ->
                              begin
                                match (string_drop (z_s4274z3, z_s4275z3)) with
                                | z_s4276z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s4276z3) with
                                    | ZSome (zrs2, z_s4277z3) ->
                                      begin
                                        match (string_drop (z_s4276z3, z_s4277z3)) with
                                        | zsz3 -> ZSome (zrsd, zrs2, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4255z3 (z_s4256z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4256z3 with
    | z_s4257z3 when (string_startswith (z_s4257z3, "c.or")) ->
      begin
        match (string_drop (z_s4257z3, (string_length "c.or"))) with
        | z_s4258z3 ->
          begin
            match (zspc_matches_prefix z_s4258z3) with
            | ZSome ((), z_s4259z3) ->
              begin
                match (string_drop (z_s4258z3, z_s4259z3)) with
                | z_s4260z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s4260z3) with
                    | ZSome (zrsd, z_s4261z3) ->
                      begin
                        match (string_drop (z_s4260z3, z_s4261z3)) with
                        | z_s4262z3 ->
                          begin
                            match (zsep_matches_prefix z_s4262z3) with
                            | ZSome ((), z_s4263z3) ->
                              begin
                                match (string_drop (z_s4262z3, z_s4263z3)) with
                                | z_s4264z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s4264z3) with
                                    | ZSome (zrs2, z_s4265z3) ->
                                      begin
                                        match (string_drop (z_s4264z3, z_s4265z3)) with
                                        | zsz3 -> ZSome (zrsd, zrs2, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4243z3 (z_s4244z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4244z3 with
    | z_s4245z3 when (string_startswith (z_s4245z3, "c.xor")) ->
      begin
        match (string_drop (z_s4245z3, (string_length "c.xor"))) with
        | z_s4246z3 ->
          begin
            match (zspc_matches_prefix z_s4246z3) with
            | ZSome ((), z_s4247z3) ->
              begin
                match (string_drop (z_s4246z3, z_s4247z3)) with
                | z_s4248z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s4248z3) with
                    | ZSome (zrsd, z_s4249z3) ->
                      begin
                        match (string_drop (z_s4248z3, z_s4249z3)) with
                        | z_s4250z3 ->
                          begin
                            match (zsep_matches_prefix z_s4250z3) with
                            | ZSome ((), z_s4251z3) ->
                              begin
                                match (string_drop (z_s4250z3, z_s4251z3)) with
                                | z_s4252z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s4252z3) with
                                    | ZSome (zrs2, z_s4253z3) ->
                                      begin
                                        match (string_drop (z_s4252z3, z_s4253z3)) with
                                        | zsz3 -> ZSome (zrsd, zrs2, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4231z3 (z_s4232z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4232z3 with
    | z_s4233z3 when (string_startswith (z_s4233z3, "c.sub")) ->
      begin
        match (string_drop (z_s4233z3, (string_length "c.sub"))) with
        | z_s4234z3 ->
          begin
            match (zspc_matches_prefix z_s4234z3) with
            | ZSome ((), z_s4235z3) ->
              begin
                match (string_drop (z_s4234z3, z_s4235z3)) with
                | z_s4236z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s4236z3) with
                    | ZSome (zrsd, z_s4237z3) ->
                      begin
                        match (string_drop (z_s4236z3, z_s4237z3)) with
                        | z_s4238z3 ->
                          begin
                            match (zsep_matches_prefix z_s4238z3) with
                            | ZSome ((), z_s4239z3) ->
                              begin
                                match (string_drop (z_s4238z3, z_s4239z3)) with
                                | z_s4240z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s4240z3) with
                                    | ZSome (zrs2, z_s4241z3) ->
                                      begin
                                        match (string_drop (z_s4240z3, z_s4241z3)) with
                                        | zsz3 -> ZSome (zrsd, zrs2, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4219z3 (z_s4220z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4220z3 with
    | z_s4221z3 when (string_startswith (z_s4221z3, "c.andi")) ->
      begin
        match (string_drop (z_s4221z3, (string_length "c.andi"))) with
        | z_s4222z3 ->
          begin
            match (zspc_matches_prefix z_s4222z3) with
            | ZSome ((), z_s4223z3) ->
              begin
                match (string_drop (z_s4222z3, z_s4223z3)) with
                | z_s4224z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s4224z3) with
                    | ZSome (zrsd, z_s4225z3) ->
                      begin
                        match (string_drop (z_s4224z3, z_s4225z3)) with
                        | z_s4226z3 ->
                          begin
                            match (zsep_matches_prefix z_s4226z3) with
                            | ZSome ((), z_s4227z3) ->
                              begin
                                match (string_drop (z_s4226z3, z_s4227z3)) with
                                | z_s4228z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s4228z3) with
                                    | ZSome (zimm, z_s4229z3) ->
                                      begin
                                        match (string_drop (z_s4228z3, z_s4229z3)) with
                                        | zsz3 -> ZSome (zrsd, zimm, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4207z3 (z_s4208z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4208z3 with
    | z_s4209z3 when (string_startswith (z_s4209z3, "c.srai")) ->
      begin
        match (string_drop (z_s4209z3, (string_length "c.srai"))) with
        | z_s4210z3 ->
          begin
            match (zspc_matches_prefix z_s4210z3) with
            | ZSome ((), z_s4211z3) ->
              begin
                match (string_drop (z_s4210z3, z_s4211z3)) with
                | z_s4212z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s4212z3) with
                    | ZSome (zrsd, z_s4213z3) ->
                      begin
                        match (string_drop (z_s4212z3, z_s4213z3)) with
                        | z_s4214z3 ->
                          begin
                            match (zsep_matches_prefix z_s4214z3) with
                            | ZSome ((), z_s4215z3) ->
                              begin
                                match (string_drop (z_s4214z3, z_s4215z3)) with
                                | z_s4216z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s4216z3) with
                                    | ZSome (zshamt, z_s4217z3) ->
                                      begin
                                        match (string_drop (z_s4216z3, z_s4217z3)) with
                                        | zsz3 -> ZSome (zrsd, zshamt, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4195z3 (z_s4196z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4196z3 with
    | z_s4197z3 when (string_startswith (z_s4197z3, "c.srli")) ->
      begin
        match (string_drop (z_s4197z3, (string_length "c.srli"))) with
        | z_s4198z3 ->
          begin
            match (zspc_matches_prefix z_s4198z3) with
            | ZSome ((), z_s4199z3) ->
              begin
                match (string_drop (z_s4198z3, z_s4199z3)) with
                | z_s4200z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s4200z3) with
                    | ZSome (zrsd, z_s4201z3) ->
                      begin
                        match (string_drop (z_s4200z3, z_s4201z3)) with
                        | z_s4202z3 ->
                          begin
                            match (zsep_matches_prefix z_s4202z3) with
                            | ZSome ((), z_s4203z3) ->
                              begin
                                match (string_drop (z_s4202z3, z_s4203z3)) with
                                | z_s4204z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s4204z3) with
                                    | ZSome (zshamt, z_s4205z3) ->
                                      begin
                                        match (string_drop (z_s4204z3, z_s4205z3)) with
                                        | zsz3 -> ZSome (zrsd, zshamt, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4183z3 (z_s4184z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4184z3 with
    | z_s4185z3 when (string_startswith (z_s4185z3, "c.lui")) ->
      begin
        match (string_drop (z_s4185z3, (string_length "c.lui"))) with
        | z_s4186z3 ->
          begin
            match (zspc_matches_prefix z_s4186z3) with
            | ZSome ((), z_s4187z3) ->
              begin
                match (string_drop (z_s4186z3, z_s4187z3)) with
                | z_s4188z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4188z3) with
                    | ZSome (zrd, z_s4189z3) ->
                      begin
                        match (string_drop (z_s4188z3, z_s4189z3)) with
                        | z_s4190z3 ->
                          begin
                            match (zsep_matches_prefix z_s4190z3) with
                            | ZSome ((), z_s4191z3) ->
                              begin
                                match (string_drop (z_s4190z3, z_s4191z3)) with
                                | z_s4192z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s4192z3) with
                                    | ZSome (zimm, z_s4193z3) ->
                                      begin
                                        match (string_drop (z_s4192z3, z_s4193z3)) with
                                        | zsz3 -> ZSome (zrd, zimm, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4175z3 (z_s4176z3 : (string)) : (((bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4176z3 with
    | z_s4177z3 when (string_startswith (z_s4177z3, "c.addi16sp")) ->
      begin
        match (string_drop (z_s4177z3, (string_length "c.addi16sp"))) with
        | z_s4178z3 ->
          begin
            match (zspc_matches_prefix z_s4178z3) with
            | ZSome ((), z_s4179z3) ->
              begin
                match (string_drop (z_s4178z3, z_s4179z3)) with
                | z_s4180z3 ->
                  begin
                    match (hex_bits_6_matches_prefix z_s4180z3) with
                    | ZSome (zimm, z_s4181z3) ->
                      begin
                        match (string_drop (z_s4180z3, z_s4181z3)) with
                        | zsz3 -> ZSome (zimm, zsz3)
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4163z3 (z_s4164z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4164z3 with
    | z_s4165z3 when (string_startswith (z_s4165z3, "c.li")) ->
      begin
        match (string_drop (z_s4165z3, (string_length "c.li"))) with
        | z_s4166z3 ->
          begin
            match (zspc_matches_prefix z_s4166z3) with
            | ZSome ((), z_s4167z3) ->
              begin
                match (string_drop (z_s4166z3, z_s4167z3)) with
                | z_s4168z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4168z3) with
                    | ZSome (zrd, z_s4169z3) ->
                      begin
                        match (string_drop (z_s4168z3, z_s4169z3)) with
                        | z_s4170z3 ->
                          begin
                            match (zsep_matches_prefix z_s4170z3) with
                            | ZSome ((), z_s4171z3) ->
                              begin
                                match (string_drop (z_s4170z3, z_s4171z3)) with
                                | z_s4172z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s4172z3) with
                                    | ZSome (zimm, z_s4173z3) ->
                                      begin
                                        match (string_drop (z_s4172z3, z_s4173z3)) with
                                        | zsz3 -> ZSome (zrd, zimm, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4151z3 (z_s4152z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4152z3 with
    | z_s4153z3 when (string_startswith (z_s4153z3, "c.addiw")) ->
      begin
        match (string_drop (z_s4153z3, (string_length "c.addiw"))) with
        | z_s4154z3 ->
          begin
            match (zspc_matches_prefix z_s4154z3) with
            | ZSome ((), z_s4155z3) ->
              begin
                match (string_drop (z_s4154z3, z_s4155z3)) with
                | z_s4156z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4156z3) with
                    | ZSome (zrsd, z_s4157z3) ->
                      begin
                        match (string_drop (z_s4156z3, z_s4157z3)) with
                        | z_s4158z3 ->
                          begin
                            match (zsep_matches_prefix z_s4158z3) with
                            | ZSome ((), z_s4159z3) ->
                              begin
                                match (string_drop (z_s4158z3, z_s4159z3)) with
                                | z_s4160z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s4160z3) with
                                    | ZSome (zimm, z_s4161z3) ->
                                      begin
                                        match (string_drop (z_s4160z3, z_s4161z3)) with
                                        | zsz3 -> ZSome (zrsd, zimm, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4143z3 (z_s4144z3 : (string)) : (((bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4144z3 with
    | z_s4145z3 when (string_startswith (z_s4145z3, "c.jal")) ->
      begin
        match (string_drop (z_s4145z3, (string_length "c.jal"))) with
        | z_s4146z3 ->
          begin
            match (zspc_matches_prefix z_s4146z3) with
            | ZSome ((), z_s4147z3) ->
              begin
                match (string_drop (z_s4146z3, z_s4147z3)) with
                | z_s4148z3 ->
                  begin
                    match (hex_bits_12_matches_prefix z_s4148z3) with
                    | ZSome (zv__1392, z_s4149z3) when (let zp0z3 = (access (zv__1392, Big_int.zero)) in
                    eq_bit (zp0z3, B0)) ->
                      let zimm = (subrange (zv__1392, (Big_int.of_int (11)), (Big_int.of_int (1)))) in
                      let zimm = (subrange (zv__1392, (Big_int.of_int (11)), (Big_int.of_int (1)))) in
                      begin
                        match (string_drop (z_s4148z3, z_s4149z3)) with
                        | zsz3 -> ZSome (zimm, zsz3)
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4131z3 (z_s4132z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4132z3 with
    | z_s4133z3 when (string_startswith (z_s4133z3, "c.addi")) ->
      begin
        match (string_drop (z_s4133z3, (string_length "c.addi"))) with
        | z_s4134z3 ->
          begin
            match (zspc_matches_prefix z_s4134z3) with
            | ZSome ((), z_s4135z3) ->
              begin
                match (string_drop (z_s4134z3, z_s4135z3)) with
                | z_s4136z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s4136z3) with
                    | ZSome (zrsd, z_s4137z3) ->
                      begin
                        match (string_drop (z_s4136z3, z_s4137z3)) with
                        | z_s4138z3 ->
                          begin
                            match (zsep_matches_prefix z_s4138z3) with
                            | ZSome ((), z_s4139z3) ->
                              begin
                                match (string_drop (z_s4138z3, z_s4139z3)) with
                                | z_s4140z3 ->
                                  begin
                                    match (hex_bits_6_matches_prefix z_s4140z3) with
                                    | ZSome (znzzi, z_s4141z3) ->
                                      begin
                                        match (string_drop (z_s4140z3, z_s4141z3)) with
                                        | zsz3 -> ZSome (zrsd, znzzi, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4115z3 (z_s4116z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4116z3 with
    | z_s4117z3 when (string_startswith (z_s4117z3, "c.sd")) ->
      begin
        match (string_drop (z_s4117z3, (string_length "c.sd"))) with
        | z_s4118z3 ->
          begin
            match (zspc_matches_prefix z_s4118z3) with
            | ZSome ((), z_s4119z3) ->
              begin
                match (string_drop (z_s4118z3, z_s4119z3)) with
                | z_s4120z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s4120z3) with
                    | ZSome (zrsc1, z_s4121z3) ->
                      begin
                        match (string_drop (z_s4120z3, z_s4121z3)) with
                        | z_s4122z3 ->
                          begin
                            match (zsep_matches_prefix z_s4122z3) with
                            | ZSome ((), z_s4123z3) ->
                              begin
                                match (string_drop (z_s4122z3, z_s4123z3)) with
                                | z_s4124z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s4124z3) with
                                    | ZSome (zrsc2, z_s4125z3) ->
                                      begin
                                        match (string_drop (z_s4124z3, z_s4125z3)) with
                                        | z_s4126z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4126z3) with
                                            | ZSome ((), z_s4127z3) ->
                                              begin
                                                match (string_drop (z_s4126z3, z_s4127z3)) with
                                                | z_s4128z3 ->
                                                  begin
                                                    match (hex_bits_8_matches_prefix z_s4128z3) with
                                                    | ZSome (zv__1394, z_s4129z3) when (let zp0z3 = (access (zv__1394, (Big_int.of_int (2)))) in
                                                    let zp1z3 = (access (zv__1394, (Big_int.of_int (1)))) in
                                                    let zp2z3 = (access (zv__1394, Big_int.zero)) in
                                                    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
                                                      let zuimm = (subrange (zv__1394, (Big_int.of_int (7)), (Big_int.of_int (3)))) in
                                                      let zuimm = (subrange (zv__1394, (Big_int.of_int (7)), (Big_int.of_int (3)))) in
                                                      begin
                                                        match (string_drop (z_s4128z3, z_s4129z3)) with
                                                        | zsz3 ->
                                                          ZSome (zrsc1, zrsc2, zuimm, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4099z3 (z_s4100z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4100z3 with
    | z_s4101z3 when (string_startswith (z_s4101z3, "c.sw")) ->
      begin
        match (string_drop (z_s4101z3, (string_length "c.sw"))) with
        | z_s4102z3 ->
          begin
            match (zspc_matches_prefix z_s4102z3) with
            | ZSome ((), z_s4103z3) ->
              begin
                match (string_drop (z_s4102z3, z_s4103z3)) with
                | z_s4104z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s4104z3) with
                    | ZSome (zrsc1, z_s4105z3) ->
                      begin
                        match (string_drop (z_s4104z3, z_s4105z3)) with
                        | z_s4106z3 ->
                          begin
                            match (zsep_matches_prefix z_s4106z3) with
                            | ZSome ((), z_s4107z3) ->
                              begin
                                match (string_drop (z_s4106z3, z_s4107z3)) with
                                | z_s4108z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s4108z3) with
                                    | ZSome (zrsc2, z_s4109z3) ->
                                      begin
                                        match (string_drop (z_s4108z3, z_s4109z3)) with
                                        | z_s4110z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4110z3) with
                                            | ZSome ((), z_s4111z3) ->
                                              begin
                                                match (string_drop (z_s4110z3, z_s4111z3)) with
                                                | z_s4112z3 ->
                                                  begin
                                                    match (hex_bits_7_matches_prefix z_s4112z3) with
                                                    | ZSome (zv__1396, z_s4113z3) when (let zp0z3 = (access (zv__1396, (Big_int.of_int (1)))) in
                                                    let zp1z3 = (access (zv__1396, Big_int.zero)) in
                                                    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B0))) ->
                                                      let zuimm = (subrange (zv__1396, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
                                                      let zuimm = (subrange (zv__1396, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
                                                      begin
                                                        match (string_drop (z_s4112z3, z_s4113z3)) with
                                                        | zsz3 ->
                                                          ZSome (zrsc1, zrsc2, zuimm, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4083z3 (z_s4084z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4084z3 with
    | z_s4085z3 when (string_startswith (z_s4085z3, "c.ld")) ->
      begin
        match (string_drop (z_s4085z3, (string_length "c.ld"))) with
        | z_s4086z3 ->
          begin
            match (zspc_matches_prefix z_s4086z3) with
            | ZSome ((), z_s4087z3) ->
              begin
                match (string_drop (z_s4086z3, z_s4087z3)) with
                | z_s4088z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s4088z3) with
                    | ZSome (zrdc, z_s4089z3) ->
                      begin
                        match (string_drop (z_s4088z3, z_s4089z3)) with
                        | z_s4090z3 ->
                          begin
                            match (zsep_matches_prefix z_s4090z3) with
                            | ZSome ((), z_s4091z3) ->
                              begin
                                match (string_drop (z_s4090z3, z_s4091z3)) with
                                | z_s4092z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s4092z3) with
                                    | ZSome (zrsc, z_s4093z3) ->
                                      begin
                                        match (string_drop (z_s4092z3, z_s4093z3)) with
                                        | z_s4094z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4094z3) with
                                            | ZSome ((), z_s4095z3) ->
                                              begin
                                                match (string_drop (z_s4094z3, z_s4095z3)) with
                                                | z_s4096z3 ->
                                                  begin
                                                    match (hex_bits_8_matches_prefix z_s4096z3) with
                                                    | ZSome (zv__1398, z_s4097z3) when (let zp0z3 = (access (zv__1398, (Big_int.of_int (2)))) in
                                                    let zp1z3 = (access (zv__1398, (Big_int.of_int (1)))) in
                                                    let zp2z3 = (access (zv__1398, Big_int.zero)) in
                                                    ((eq_bit (zp2z3, B0)) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
                                                      let zuimm = (subrange (zv__1398, (Big_int.of_int (7)), (Big_int.of_int (3)))) in
                                                      let zuimm = (subrange (zv__1398, (Big_int.of_int (7)), (Big_int.of_int (3)))) in
                                                      begin
                                                        match (string_drop (z_s4096z3, z_s4097z3)) with
                                                        | zsz3 ->
                                                          ZSome (zrdc, zrsc, zuimm, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4067z3 (z_s4068z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4068z3 with
    | z_s4069z3 when (string_startswith (z_s4069z3, "c.lw")) ->
      begin
        match (string_drop (z_s4069z3, (string_length "c.lw"))) with
        | z_s4070z3 ->
          begin
            match (zspc_matches_prefix z_s4070z3) with
            | ZSome ((), z_s4071z3) ->
              begin
                match (string_drop (z_s4070z3, z_s4071z3)) with
                | z_s4072z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s4072z3) with
                    | ZSome (zrdc, z_s4073z3) ->
                      begin
                        match (string_drop (z_s4072z3, z_s4073z3)) with
                        | z_s4074z3 ->
                          begin
                            match (zsep_matches_prefix z_s4074z3) with
                            | ZSome ((), z_s4075z3) ->
                              begin
                                match (string_drop (z_s4074z3, z_s4075z3)) with
                                | z_s4076z3 ->
                                  begin
                                    match (zcreg_name_matches_prefix z_s4076z3) with
                                    | ZSome (zrsc, z_s4077z3) ->
                                      begin
                                        match (string_drop (z_s4076z3, z_s4077z3)) with
                                        | z_s4078z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s4078z3) with
                                            | ZSome ((), z_s4079z3) ->
                                              begin
                                                match (string_drop (z_s4078z3, z_s4079z3)) with
                                                | z_s4080z3 ->
                                                  begin
                                                    match (hex_bits_7_matches_prefix z_s4080z3) with
                                                    | ZSome (zv__1400, z_s4081z3) when (let zp0z3 = (access (zv__1400, (Big_int.of_int (1)))) in
                                                    let zp1z3 = (access (zv__1400, Big_int.zero)) in
                                                    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B0))) ->
                                                      let zuimm = (subrange (zv__1400, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
                                                      let zuimm = (subrange (zv__1400, (Big_int.of_int (6)), (Big_int.of_int (2)))) in
                                                      begin
                                                        match (string_drop (z_s4080z3, z_s4081z3)) with
                                                        | zsz3 ->
                                                          ZSome (zrdc, zrsc, zuimm, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4055z3 (z_s4056z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4056z3 with
    | z_s4057z3 when (string_startswith (z_s4057z3, "c.addi4spn")) ->
      begin
        match (string_drop (z_s4057z3, (string_length "c.addi4spn"))) with
        | z_s4058z3 ->
          begin
            match (zspc_matches_prefix z_s4058z3) with
            | ZSome ((), z_s4059z3) ->
              begin
                match (string_drop (z_s4058z3, z_s4059z3)) with
                | z_s4060z3 ->
                  begin
                    match (zcreg_name_matches_prefix z_s4060z3) with
                    | ZSome (zrdc, z_s4061z3) ->
                      begin
                        match (string_drop (z_s4060z3, z_s4061z3)) with
                        | z_s4062z3 ->
                          begin
                            match (zsep_matches_prefix z_s4062z3) with
                            | ZSome ((), z_s4063z3) ->
                              begin
                                match (string_drop (z_s4062z3, z_s4063z3)) with
                                | z_s4064z3 ->
                                  begin
                                    match (hex_bits_10_matches_prefix z_s4064z3) with
                                    | ZSome (zv__1402, z_s4065z3) when (let zp0z3 = (access (zv__1402, (Big_int.of_int (1)))) in
                                    let zp1z3 = (access (zv__1402, Big_int.zero)) in
                                    (eq_bit (zp1z3, B0)) && (eq_bit (zp0z3, B0))) ->
                                      let znzzimm = (subrange (zv__1402, (Big_int.of_int (9)), (Big_int.of_int (2)))) in
                                      let znzzimm = (subrange (zv__1402, (Big_int.of_int (9)), (Big_int.of_int (2)))) in
                                      begin
                                        match (string_drop (z_s4064z3, z_s4065z3)) with
                                        | zsz3 -> ZSome (zrdc, znzzimm, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4051z3 (z_s4052z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s4052z3 with
    | z_s4053z3 when (string_startswith (z_s4053z3, "c.nop")) ->
      begin
        match (string_drop (z_s4053z3, (string_length "c.nop"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4027z3 (z_s4028z3 : (string)) : ((zamoop * zword_width * bool * bool * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4028z3 with
    | z_s4029z3 ->
      begin
        match (zamo_mnemonic_matches_prefix z_s4029z3) with
        | ZSome (zop, z_s4030z3) ->
          begin
            match (string_drop (z_s4029z3, z_s4030z3)) with
            | z_s4031z3 when (string_startswith (z_s4031z3, ".")) ->
              begin
                match (string_drop (z_s4031z3, (string_length "."))) with
                | z_s4032z3 ->
                  begin
                    match (zsizze_mnemonic_matches_prefix z_s4032z3) with
                    | ZSome (zwidth, z_s4033z3) ->
                      begin
                        match (string_drop (z_s4032z3, z_s4033z3)) with
                        | z_s4034z3 ->
                          begin
                            match (zmaybe_aq_matches_prefix z_s4034z3) with
                            | ZSome (zaq, z_s4035z3) ->
                              begin
                                match (string_drop (z_s4034z3, z_s4035z3)) with
                                | z_s4036z3 ->
                                  begin
                                    match (zmaybe_rl_matches_prefix z_s4036z3) with
                                    | ZSome (zrl, z_s4037z3) ->
                                      begin
                                        match (string_drop (z_s4036z3, z_s4037z3)) with
                                        | z_s4038z3 ->
                                          begin
                                            match (zspc_matches_prefix z_s4038z3) with
                                            | ZSome ((), z_s4039z3) ->
                                              begin
                                                match (string_drop (z_s4038z3, z_s4039z3)) with
                                                | z_s4040z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s4040z3) with
                                                    | ZSome (zrd, z_s4041z3) ->
                                                      begin
                                                        match (string_drop (z_s4040z3, z_s4041z3)) with
                                                        | z_s4042z3 ->
                                                          begin
                                                            match (zsep_matches_prefix z_s4042z3) with
                                                            | ZSome ((), z_s4043z3) ->
                                                              begin
                                                                match (string_drop (z_s4042z3, z_s4043z3)) with
                                                                | z_s4044z3 ->
                                                                  begin
                                                                    match (zreg_name_matches_prefix z_s4044z3) with
                                                                    | ZSome (zrs1, z_s4045z3) ->
                                                                      begin
                                                                        match (string_drop (z_s4044z3, z_s4045z3)) with
                                                                        | z_s4046z3 ->
                                                                          begin
                                                                            match (zsep_matches_prefix z_s4046z3) with
                                                                            | ZSome ((), z_s4047z3) ->
                                                                              begin
                                                                                match (string_drop (z_s4046z3, z_s4047z3)) with
                                                                                | z_s4048z3 ->
                                                                                  begin
                                                                                    match (zreg_name_matches_prefix z_s4048z3) with
                                                                                    | ZSome (zrs2, z_s4049z3) ->
                                                                                      begin
                                                                                        match (string_drop (z_s4048z3, z_s4049z3)) with
                                                                                        | zsz3 ->
                                                                                          ZSome (zop, zwidth, zaq, zrl, zrd, zrs1, zrs2, zsz3)
                                                                                        | _ ->
                                                                                          ZNone ()
                                                                                      end
                                                                                    | _ ->
                                                                                      ZNone ()
                                                                                  end
                                                                                | _ ->
                                                                                  ZNone ()
                                                                              end
                                                                            | _ ->
                                                                              ZNone ()
                                                                          end
                                                                        | _ ->
                                                                          ZNone ()
                                                                      end
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s4005z3 (z_s4006z3 : (string)) : ((zword_width * bool * bool * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s4006z3 with
    | z_s4007z3 when (string_startswith (z_s4007z3, "sc.")) ->
      begin
        match (string_drop (z_s4007z3, (string_length "sc."))) with
        | z_s4008z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s4008z3) with
            | ZSome (zsizze, z_s4009z3) ->
              begin
                match (string_drop (z_s4008z3, z_s4009z3)) with
                | z_s4010z3 ->
                  begin
                    match (zmaybe_aq_matches_prefix z_s4010z3) with
                    | ZSome (zaq, z_s4011z3) ->
                      begin
                        match (string_drop (z_s4010z3, z_s4011z3)) with
                        | z_s4012z3 ->
                          begin
                            match (zmaybe_rl_matches_prefix z_s4012z3) with
                            | ZSome (zrl, z_s4013z3) ->
                              begin
                                match (string_drop (z_s4012z3, z_s4013z3)) with
                                | z_s4014z3 ->
                                  begin
                                    match (zspc_matches_prefix z_s4014z3) with
                                    | ZSome ((), z_s4015z3) ->
                                      begin
                                        match (string_drop (z_s4014z3, z_s4015z3)) with
                                        | z_s4016z3 ->
                                          begin
                                            match (zreg_name_matches_prefix z_s4016z3) with
                                            | ZSome (zrd, z_s4017z3) ->
                                              begin
                                                match (string_drop (z_s4016z3, z_s4017z3)) with
                                                | z_s4018z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s4018z3) with
                                                    | ZSome ((), z_s4019z3) ->
                                                      begin
                                                        match (string_drop (z_s4018z3, z_s4019z3)) with
                                                        | z_s4020z3 ->
                                                          begin
                                                            match (zreg_name_matches_prefix z_s4020z3) with
                                                            | ZSome (zrs1, z_s4021z3) ->
                                                              begin
                                                                match (string_drop (z_s4020z3, z_s4021z3)) with
                                                                | z_s4022z3 ->
                                                                  begin
                                                                    match (zsep_matches_prefix z_s4022z3) with
                                                                    | ZSome ((), z_s4023z3) ->
                                                                      begin
                                                                        match (string_drop (z_s4022z3, z_s4023z3)) with
                                                                        | z_s4024z3 ->
                                                                          begin
                                                                            match (zreg_name_matches_prefix z_s4024z3) with
                                                                            | ZSome (zrs2, z_s4025z3) ->
                                                                              begin
                                                                                match (string_drop (z_s4024z3, z_s4025z3)) with
                                                                                | zsz3 ->
                                                                                  ZSome (zsizze, zaq, zrl, zrd, zrs1, zrs2, zsz3)
                                                                                | _ ->
                                                                                  ZNone ()
                                                                              end
                                                                            | _ ->
                                                                              ZNone ()
                                                                          end
                                                                        | _ ->
                                                                          ZNone ()
                                                                      end
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3987z3 (z_s3988z3 : (string)) : ((zword_width * bool * bool * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3988z3 with
    | z_s3989z3 when (string_startswith (z_s3989z3, "lr.")) ->
      begin
        match (string_drop (z_s3989z3, (string_length "lr."))) with
        | z_s3990z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s3990z3) with
            | ZSome (zsizze, z_s3991z3) ->
              begin
                match (string_drop (z_s3990z3, z_s3991z3)) with
                | z_s3992z3 ->
                  begin
                    match (zmaybe_aq_matches_prefix z_s3992z3) with
                    | ZSome (zaq, z_s3993z3) ->
                      begin
                        match (string_drop (z_s3992z3, z_s3993z3)) with
                        | z_s3994z3 ->
                          begin
                            match (zmaybe_rl_matches_prefix z_s3994z3) with
                            | ZSome (zrl, z_s3995z3) ->
                              begin
                                match (string_drop (z_s3994z3, z_s3995z3)) with
                                | z_s3996z3 ->
                                  begin
                                    match (zspc_matches_prefix z_s3996z3) with
                                    | ZSome ((), z_s3997z3) ->
                                      begin
                                        match (string_drop (z_s3996z3, z_s3997z3)) with
                                        | z_s3998z3 ->
                                          begin
                                            match (zreg_name_matches_prefix z_s3998z3) with
                                            | ZSome (zrd, z_s3999z3) ->
                                              begin
                                                match (string_drop (z_s3998z3, z_s3999z3)) with
                                                | z_s4000z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s4000z3) with
                                                    | ZSome ((), z_s4001z3) ->
                                                      begin
                                                        match (string_drop (z_s4000z3, z_s4001z3)) with
                                                        | z_s4002z3 ->
                                                          begin
                                                            match (zreg_name_matches_prefix z_s4002z3) with
                                                            | ZSome (zrs1, z_s4003z3) ->
                                                              begin
                                                                match (string_drop (z_s4002z3, z_s4003z3)) with
                                                                | zsz3 ->
                                                                  ZSome (zsizze, zaq, zrl, zrd, zrs1, zsz3)
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3975z3 (z_s3976z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3976z3 with
    | z_s3977z3 when (string_startswith (z_s3977z3, "sfence.vma")) ->
      begin
        match (string_drop (z_s3977z3, (string_length "sfence.vma"))) with
        | z_s3978z3 ->
          begin
            match (zspc_matches_prefix z_s3978z3) with
            | ZSome ((), z_s3979z3) ->
              begin
                match (string_drop (z_s3978z3, z_s3979z3)) with
                | z_s3980z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3980z3) with
                    | ZSome (zrs1, z_s3981z3) ->
                      begin
                        match (string_drop (z_s3980z3, z_s3981z3)) with
                        | z_s3982z3 ->
                          begin
                            match (zsep_matches_prefix z_s3982z3) with
                            | ZSome ((), z_s3983z3) ->
                              begin
                                match (string_drop (z_s3982z3, z_s3983z3)) with
                                | z_s3984z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3984z3) with
                                    | ZSome (zrs2, z_s3985z3) ->
                                      begin
                                        match (string_drop (z_s3984z3, z_s3985z3)) with
                                        | zsz3 -> ZSome (zrs1, zrs2, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3971z3 (z_s3972z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s3972z3 with
    | z_s3973z3 when (string_startswith (z_s3973z3, "wfi")) ->
      begin
        match (string_drop (z_s3973z3, (string_length "wfi"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3967z3 (z_s3968z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s3968z3 with
    | z_s3969z3 when (string_startswith (z_s3969z3, "ebreak")) ->
      begin
        match (string_drop (z_s3969z3, (string_length "ebreak"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3963z3 (z_s3964z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s3964z3 with
    | z_s3965z3 when (string_startswith (z_s3965z3, "sret")) ->
      begin
        match (string_drop (z_s3965z3, (string_length "sret"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3959z3 (z_s3960z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s3960z3 with
    | z_s3961z3 when (string_startswith (z_s3961z3, "mret")) ->
      begin
        match (string_drop (z_s3961z3, (string_length "mret"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3955z3 (z_s3956z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s3956z3 with
    | z_s3957z3 when (string_startswith (z_s3957z3, "ecall")) ->
      begin
        match (string_drop (z_s3957z3, (string_length "ecall"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3951z3 (z_s3952z3 : (string)) : (string) zoption = sail_call (fun r ->
  begin
    match z_s3952z3 with
    | z_s3953z3 when (string_startswith (z_s3953z3, "fence.i")) ->
      begin
        match (string_drop (z_s3953z3, (string_length "fence.i"))) with
        | zsz3 -> ZSome zsz3
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3939z3 (z_s3940z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3940z3 with
    | z_s3941z3 when (string_startswith (z_s3941z3, "fence.tso")) ->
      begin
        match (string_drop (z_s3941z3, (string_length "fence.tso"))) with
        | z_s3942z3 ->
          begin
            match (zspc_matches_prefix z_s3942z3) with
            | ZSome ((), z_s3943z3) ->
              begin
                match (string_drop (z_s3942z3, z_s3943z3)) with
                | z_s3944z3 ->
                  begin
                    match (zfence_bits_matches_prefix z_s3944z3) with
                    | ZSome (zpred, z_s3945z3) ->
                      begin
                        match (string_drop (z_s3944z3, z_s3945z3)) with
                        | z_s3946z3 ->
                          begin
                            match (zsep_matches_prefix z_s3946z3) with
                            | ZSome ((), z_s3947z3) ->
                              begin
                                match (string_drop (z_s3946z3, z_s3947z3)) with
                                | z_s3948z3 ->
                                  begin
                                    match (zfence_bits_matches_prefix z_s3948z3) with
                                    | ZSome (zsucc, z_s3949z3) ->
                                      begin
                                        match (string_drop (z_s3948z3, z_s3949z3)) with
                                        | zsz3 -> ZSome (zpred, zsucc, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3927z3 (z_s3928z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3928z3 with
    | z_s3929z3 when (string_startswith (z_s3929z3, "fence")) ->
      begin
        match (string_drop (z_s3929z3, (string_length "fence"))) with
        | z_s3930z3 ->
          begin
            match (zspc_matches_prefix z_s3930z3) with
            | ZSome ((), z_s3931z3) ->
              begin
                match (string_drop (z_s3930z3, z_s3931z3)) with
                | z_s3932z3 ->
                  begin
                    match (zfence_bits_matches_prefix z_s3932z3) with
                    | ZSome (zpred, z_s3933z3) ->
                      begin
                        match (string_drop (z_s3932z3, z_s3933z3)) with
                        | z_s3934z3 ->
                          begin
                            match (zsep_matches_prefix z_s3934z3) with
                            | ZSome ((), z_s3935z3) ->
                              begin
                                match (string_drop (z_s3934z3, z_s3935z3)) with
                                | z_s3936z3 ->
                                  begin
                                    match (zfence_bits_matches_prefix z_s3936z3) with
                                    | ZSome (zsucc, z_s3937z3) ->
                                      begin
                                        match (string_drop (z_s3936z3, z_s3937z3)) with
                                        | zsz3 -> ZSome (zpred, zsucc, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3912z3 (z_s3913z3 : (string)) : ((zsopw * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3913z3 with
    | z_s3914z3 ->
      begin
        match (zshiftiwop_mnemonic_matches_prefix z_s3914z3) with
        | ZSome (zop, z_s3915z3) ->
          begin
            match (string_drop (z_s3914z3, z_s3915z3)) with
            | z_s3916z3 ->
              begin
                match (zspc_matches_prefix z_s3916z3) with
                | ZSome ((), z_s3917z3) ->
                  begin
                    match (string_drop (z_s3916z3, z_s3917z3)) with
                    | z_s3918z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s3918z3) with
                        | ZSome (zrd, z_s3919z3) ->
                          begin
                            match (string_drop (z_s3918z3, z_s3919z3)) with
                            | z_s3920z3 ->
                              begin
                                match (zsep_matches_prefix z_s3920z3) with
                                | ZSome ((), z_s3921z3) ->
                                  begin
                                    match (string_drop (z_s3920z3, z_s3921z3)) with
                                    | z_s3922z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s3922z3) with
                                        | ZSome (zrs1, z_s3923z3) ->
                                          begin
                                            match (string_drop (z_s3922z3, z_s3923z3)) with
                                            | z_s3924z3 ->
                                              begin
                                                match (hex_bits_5_matches_prefix z_s3924z3) with
                                                | ZSome (zshamt, z_s3925z3) ->
                                                  begin
                                                    match (string_drop (z_s3924z3, z_s3925z3)) with
                                                    | zsz3 ->
                                                      ZSome (zop, zrd, zrs1, zshamt, zsz3)
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3895z3 (z_s3896z3 : (string)) : ((zropw * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3896z3 with
    | z_s3897z3 ->
      begin
        match (zrtypew_mnemonic_matches_prefix z_s3897z3) with
        | ZSome (zop, z_s3898z3) ->
          begin
            match (string_drop (z_s3897z3, z_s3898z3)) with
            | z_s3899z3 ->
              begin
                match (zspc_matches_prefix z_s3899z3) with
                | ZSome ((), z_s3900z3) ->
                  begin
                    match (string_drop (z_s3899z3, z_s3900z3)) with
                    | z_s3901z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s3901z3) with
                        | ZSome (zrd, z_s3902z3) ->
                          begin
                            match (string_drop (z_s3901z3, z_s3902z3)) with
                            | z_s3903z3 ->
                              begin
                                match (zsep_matches_prefix z_s3903z3) with
                                | ZSome ((), z_s3904z3) ->
                                  begin
                                    match (string_drop (z_s3903z3, z_s3904z3)) with
                                    | z_s3905z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s3905z3) with
                                        | ZSome (zrs1, z_s3906z3) ->
                                          begin
                                            match (string_drop (z_s3905z3, z_s3906z3)) with
                                            | z_s3907z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s3907z3) with
                                                | ZSome ((), z_s3908z3) ->
                                                  begin
                                                    match (string_drop (z_s3907z3, z_s3908z3)) with
                                                    | z_s3909z3 ->
                                                      begin
                                                        match (zreg_name_matches_prefix z_s3909z3) with
                                                        | ZSome (zrs2, z_s3910z3) ->
                                                          begin
                                                            match (string_drop (z_s3909z3, z_s3910z3)) with
                                                            | zsz3 ->
                                                              ZSome (zop, zrd, zrs1, zrs2, zsz3)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3878z3 (z_s3879z3 : (string)) : ((zsop * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3879z3 with
    | z_s3880z3 ->
      begin
        match (zshiftw_mnemonic_matches_prefix z_s3880z3) with
        | ZSome (zop, z_s3881z3) ->
          begin
            match (string_drop (z_s3880z3, z_s3881z3)) with
            | z_s3882z3 ->
              begin
                match (zspc_matches_prefix z_s3882z3) with
                | ZSome ((), z_s3883z3) ->
                  begin
                    match (string_drop (z_s3882z3, z_s3883z3)) with
                    | z_s3884z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s3884z3) with
                        | ZSome (zrd, z_s3885z3) ->
                          begin
                            match (string_drop (z_s3884z3, z_s3885z3)) with
                            | z_s3886z3 ->
                              begin
                                match (zsep_matches_prefix z_s3886z3) with
                                | ZSome ((), z_s3887z3) ->
                                  begin
                                    match (string_drop (z_s3886z3, z_s3887z3)) with
                                    | z_s3888z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s3888z3) with
                                        | ZSome (zrs1, z_s3889z3) ->
                                          begin
                                            match (string_drop (z_s3888z3, z_s3889z3)) with
                                            | z_s3890z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s3890z3) with
                                                | ZSome ((), z_s3891z3) ->
                                                  begin
                                                    match (string_drop (z_s3890z3, z_s3891z3)) with
                                                    | z_s3892z3 ->
                                                      begin
                                                        match (hex_bits_5_matches_prefix z_s3892z3) with
                                                        | ZSome (zshamt, z_s3893z3) ->
                                                          begin
                                                            match (string_drop (z_s3892z3, z_s3893z3)) with
                                                            | zsz3 ->
                                                              ZSome (zop, zrd, zrs1, zshamt, zsz3)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3862z3 (z_s3863z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3863z3 with
    | z_s3864z3 when (string_startswith (z_s3864z3, "addiw")) ->
      begin
        match (string_drop (z_s3864z3, (string_length "addiw"))) with
        | z_s3865z3 ->
          begin
            match (zspc_matches_prefix z_s3865z3) with
            | ZSome ((), z_s3866z3) ->
              begin
                match (string_drop (z_s3865z3, z_s3866z3)) with
                | z_s3867z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3867z3) with
                    | ZSome (zrd, z_s3868z3) ->
                      begin
                        match (string_drop (z_s3867z3, z_s3868z3)) with
                        | z_s3869z3 ->
                          begin
                            match (zsep_matches_prefix z_s3869z3) with
                            | ZSome ((), z_s3870z3) ->
                              begin
                                match (string_drop (z_s3869z3, z_s3870z3)) with
                                | z_s3871z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3871z3) with
                                    | ZSome (zrs1, z_s3872z3) ->
                                      begin
                                        match (string_drop (z_s3871z3, z_s3872z3)) with
                                        | z_s3873z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3873z3) with
                                            | ZSome ((), z_s3874z3) ->
                                              begin
                                                match (string_drop (z_s3873z3, z_s3874z3)) with
                                                | z_s3875z3 ->
                                                  begin
                                                    match (hex_bits_12_matches_prefix z_s3875z3) with
                                                    | ZSome (zimm, z_s3876z3) ->
                                                      begin
                                                        match (string_drop (z_s3875z3, z_s3876z3)) with
                                                        | zsz3 ->
                                                          ZSome (zrd, zrs1, zimm, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3840z3 (z_s3841z3 : (string)) : ((zword_width * bool * bool * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3841z3 with
    | z_s3842z3 when (string_startswith (z_s3842z3, "s")) ->
      begin
        match (string_drop (z_s3842z3, (string_length "s"))) with
        | z_s3843z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s3843z3) with
            | ZSome (zsizze, z_s3844z3) ->
              begin
                match (string_drop (z_s3843z3, z_s3844z3)) with
                | z_s3845z3 ->
                  begin
                    match (zmaybe_aq_matches_prefix z_s3845z3) with
                    | ZSome (zaq, z_s3846z3) ->
                      begin
                        match (string_drop (z_s3845z3, z_s3846z3)) with
                        | z_s3847z3 ->
                          begin
                            match (zmaybe_rl_matches_prefix z_s3847z3) with
                            | ZSome (zrl, z_s3848z3) ->
                              begin
                                match (string_drop (z_s3847z3, z_s3848z3)) with
                                | z_s3849z3 ->
                                  begin
                                    match (zspc_matches_prefix z_s3849z3) with
                                    | ZSome ((), z_s3850z3) ->
                                      begin
                                        match (string_drop (z_s3849z3, z_s3850z3)) with
                                        | z_s3851z3 ->
                                          begin
                                            match (zreg_name_matches_prefix z_s3851z3) with
                                            | ZSome (zrd, z_s3852z3) ->
                                              begin
                                                match (string_drop (z_s3851z3, z_s3852z3)) with
                                                | z_s3853z3 ->
                                                  begin
                                                    match (zsep_matches_prefix z_s3853z3) with
                                                    | ZSome ((), z_s3854z3) ->
                                                      begin
                                                        match (string_drop (z_s3853z3, z_s3854z3)) with
                                                        | z_s3855z3 ->
                                                          begin
                                                            match (zreg_name_matches_prefix z_s3855z3) with
                                                            | ZSome (zrs1, z_s3856z3) ->
                                                              begin
                                                                match (string_drop (z_s3855z3, z_s3856z3)) with
                                                                | z_s3857z3 ->
                                                                  begin
                                                                    match (zsep_matches_prefix z_s3857z3) with
                                                                    | ZSome ((), z_s3858z3) ->
                                                                      begin
                                                                        match (string_drop (z_s3857z3, z_s3858z3)) with
                                                                        | z_s3859z3 ->
                                                                          begin
                                                                            match (hex_bits_12_matches_prefix z_s3859z3) with
                                                                            | ZSome (zimm, z_s3860z3) ->
                                                                              begin
                                                                                match (string_drop (z_s3859z3, z_s3860z3)) with
                                                                                | zsz3 ->
                                                                                  ZSome (zsizze, zaq, zrl, zrd, zrs1, zimm, zsz3)
                                                                                | _ ->
                                                                                  ZNone ()
                                                                              end
                                                                            | _ ->
                                                                              ZNone ()
                                                                          end
                                                                        | _ ->
                                                                          ZNone ()
                                                                      end
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3816z3 (z_s3817z3 : (string)) : ((zword_width * bool * bool * bool * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3817z3 with
    | z_s3818z3 when (string_startswith (z_s3818z3, "l")) ->
      begin
        match (string_drop (z_s3818z3, (string_length "l"))) with
        | z_s3819z3 ->
          begin
            match (zsizze_mnemonic_matches_prefix z_s3819z3) with
            | ZSome (zsizze, z_s3820z3) ->
              begin
                match (string_drop (z_s3819z3, z_s3820z3)) with
                | z_s3821z3 ->
                  begin
                    match (zmaybe_u_matches_prefix z_s3821z3) with
                    | ZSome (zis_unsigned, z_s3822z3) ->
                      begin
                        match (string_drop (z_s3821z3, z_s3822z3)) with
                        | z_s3823z3 ->
                          begin
                            match (zmaybe_aq_matches_prefix z_s3823z3) with
                            | ZSome (zaq, z_s3824z3) ->
                              begin
                                match (string_drop (z_s3823z3, z_s3824z3)) with
                                | z_s3825z3 ->
                                  begin
                                    match (zmaybe_rl_matches_prefix z_s3825z3) with
                                    | ZSome (zrl, z_s3826z3) ->
                                      begin
                                        match (string_drop (z_s3825z3, z_s3826z3)) with
                                        | z_s3827z3 ->
                                          begin
                                            match (zspc_matches_prefix z_s3827z3) with
                                            | ZSome ((), z_s3828z3) ->
                                              begin
                                                match (string_drop (z_s3827z3, z_s3828z3)) with
                                                | z_s3829z3 ->
                                                  begin
                                                    match (zreg_name_matches_prefix z_s3829z3) with
                                                    | ZSome (zrd, z_s3830z3) ->
                                                      begin
                                                        match (string_drop (z_s3829z3, z_s3830z3)) with
                                                        | z_s3831z3 ->
                                                          begin
                                                            match (zsep_matches_prefix z_s3831z3) with
                                                            | ZSome ((), z_s3832z3) ->
                                                              begin
                                                                match (string_drop (z_s3831z3, z_s3832z3)) with
                                                                | z_s3833z3 ->
                                                                  begin
                                                                    match (zreg_name_matches_prefix z_s3833z3) with
                                                                    | ZSome (zrs1, z_s3834z3) ->
                                                                      begin
                                                                        match (string_drop (z_s3833z3, z_s3834z3)) with
                                                                        | z_s3835z3 ->
                                                                          begin
                                                                            match (zsep_matches_prefix z_s3835z3) with
                                                                            | ZSome ((), z_s3836z3) ->
                                                                              begin
                                                                                match (string_drop (z_s3835z3, z_s3836z3)) with
                                                                                | z_s3837z3 ->
                                                                                  begin
                                                                                    match (hex_bits_12_matches_prefix z_s3837z3) with
                                                                                    | ZSome (zimm, z_s3838z3) ->
                                                                                      begin
                                                                                        match (string_drop (z_s3837z3, z_s3838z3)) with
                                                                                        | zsz3 ->
                                                                                          ZSome (zsizze, zis_unsigned, zaq, zrl, zrd, zrs1, zimm, zsz3)
                                                                                        | _ ->
                                                                                          ZNone ()
                                                                                      end
                                                                                    | _ ->
                                                                                      ZNone ()
                                                                                  end
                                                                                | _ ->
                                                                                  ZNone ()
                                                                              end
                                                                            | _ ->
                                                                              ZNone ()
                                                                          end
                                                                        | _ ->
                                                                          ZNone ()
                                                                      end
                                                                    | _ ->
                                                                      ZNone ()
                                                                  end
                                                                | _ -> ZNone ()
                                                              end
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3799z3 (z_s3800z3 : (string)) : ((zrop * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3800z3 with
    | z_s3801z3 ->
      begin
        match (zrtype_mnemonic_matches_prefix z_s3801z3) with
        | ZSome (zop, z_s3802z3) ->
          begin
            match (string_drop (z_s3801z3, z_s3802z3)) with
            | z_s3803z3 ->
              begin
                match (zspc_matches_prefix z_s3803z3) with
                | ZSome ((), z_s3804z3) ->
                  begin
                    match (string_drop (z_s3803z3, z_s3804z3)) with
                    | z_s3805z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s3805z3) with
                        | ZSome (zrd, z_s3806z3) ->
                          begin
                            match (string_drop (z_s3805z3, z_s3806z3)) with
                            | z_s3807z3 ->
                              begin
                                match (zsep_matches_prefix z_s3807z3) with
                                | ZSome ((), z_s3808z3) ->
                                  begin
                                    match (string_drop (z_s3807z3, z_s3808z3)) with
                                    | z_s3809z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s3809z3) with
                                        | ZSome (zrs1, z_s3810z3) ->
                                          begin
                                            match (string_drop (z_s3809z3, z_s3810z3)) with
                                            | z_s3811z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s3811z3) with
                                                | ZSome ((), z_s3812z3) ->
                                                  begin
                                                    match (string_drop (z_s3811z3, z_s3812z3)) with
                                                    | z_s3813z3 ->
                                                      begin
                                                        match (zreg_name_matches_prefix z_s3813z3) with
                                                        | ZSome (zrs2, z_s3814z3) ->
                                                          begin
                                                            match (string_drop (z_s3813z3, z_s3814z3)) with
                                                            | zsz3 ->
                                                              ZSome (zop, zrd, zrs1, zrs2, zsz3)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3784z3 (z_s3785z3 : (string)) : ((zsop * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3785z3 with
    | z_s3786z3 ->
      begin
        match (zshiftiop_mnemonic_matches_prefix z_s3786z3) with
        | ZSome (zop, z_s3787z3) ->
          begin
            match (string_drop (z_s3786z3, z_s3787z3)) with
            | z_s3788z3 ->
              begin
                match (zspc_matches_prefix z_s3788z3) with
                | ZSome ((), z_s3789z3) ->
                  begin
                    match (string_drop (z_s3788z3, z_s3789z3)) with
                    | z_s3790z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s3790z3) with
                        | ZSome (zrd, z_s3791z3) ->
                          begin
                            match (string_drop (z_s3790z3, z_s3791z3)) with
                            | z_s3792z3 ->
                              begin
                                match (zsep_matches_prefix z_s3792z3) with
                                | ZSome ((), z_s3793z3) ->
                                  begin
                                    match (string_drop (z_s3792z3, z_s3793z3)) with
                                    | z_s3794z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s3794z3) with
                                        | ZSome (zrs1, z_s3795z3) ->
                                          begin
                                            match (string_drop (z_s3794z3, z_s3795z3)) with
                                            | z_s3796z3 ->
                                              begin
                                                match (hex_bits_6_matches_prefix z_s3796z3) with
                                                | ZSome (zshamt, z_s3797z3) ->
                                                  begin
                                                    match (string_drop (z_s3796z3, z_s3797z3)) with
                                                    | zsz3 ->
                                                      ZSome (zop, zrd, zrs1, zshamt, zsz3)
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3767z3 (z_s3768z3 : (string)) : ((ziop * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3768z3 with
    | z_s3769z3 ->
      begin
        match (zitype_mnemonic_matches_prefix z_s3769z3) with
        | ZSome (zop, z_s3770z3) ->
          begin
            match (string_drop (z_s3769z3, z_s3770z3)) with
            | z_s3771z3 ->
              begin
                match (zspc_matches_prefix z_s3771z3) with
                | ZSome ((), z_s3772z3) ->
                  begin
                    match (string_drop (z_s3771z3, z_s3772z3)) with
                    | z_s3773z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s3773z3) with
                        | ZSome (zrd, z_s3774z3) ->
                          begin
                            match (string_drop (z_s3773z3, z_s3774z3)) with
                            | z_s3775z3 ->
                              begin
                                match (zsep_matches_prefix z_s3775z3) with
                                | ZSome ((), z_s3776z3) ->
                                  begin
                                    match (string_drop (z_s3775z3, z_s3776z3)) with
                                    | z_s3777z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s3777z3) with
                                        | ZSome (zrs1, z_s3778z3) ->
                                          begin
                                            match (string_drop (z_s3777z3, z_s3778z3)) with
                                            | z_s3779z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s3779z3) with
                                                | ZSome ((), z_s3780z3) ->
                                                  begin
                                                    match (string_drop (z_s3779z3, z_s3780z3)) with
                                                    | z_s3781z3 ->
                                                      begin
                                                        match (hex_bits_12_matches_prefix z_s3781z3) with
                                                        | ZSome (zimm, z_s3782z3) ->
                                                          begin
                                                            match (string_drop (z_s3781z3, z_s3782z3)) with
                                                            | zsz3 ->
                                                              ZSome (zop, zrd, zrs1, zimm, zsz3)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3750z3 (z_s3751z3 : (string)) : ((zbop * (bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3751z3 with
    | z_s3752z3 ->
      begin
        match (zbtype_mnemonic_matches_prefix z_s3752z3) with
        | ZSome (zop, z_s3753z3) ->
          begin
            match (string_drop (z_s3752z3, z_s3753z3)) with
            | z_s3754z3 ->
              begin
                match (zspc_matches_prefix z_s3754z3) with
                | ZSome ((), z_s3755z3) ->
                  begin
                    match (string_drop (z_s3754z3, z_s3755z3)) with
                    | z_s3756z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s3756z3) with
                        | ZSome (zrs1, z_s3757z3) ->
                          begin
                            match (string_drop (z_s3756z3, z_s3757z3)) with
                            | z_s3758z3 ->
                              begin
                                match (zsep_matches_prefix z_s3758z3) with
                                | ZSome ((), z_s3759z3) ->
                                  begin
                                    match (string_drop (z_s3758z3, z_s3759z3)) with
                                    | z_s3760z3 ->
                                      begin
                                        match (zreg_name_matches_prefix z_s3760z3) with
                                        | ZSome (zrs2, z_s3761z3) ->
                                          begin
                                            match (string_drop (z_s3760z3, z_s3761z3)) with
                                            | z_s3762z3 ->
                                              begin
                                                match (zsep_matches_prefix z_s3762z3) with
                                                | ZSome ((), z_s3763z3) ->
                                                  begin
                                                    match (string_drop (z_s3762z3, z_s3763z3)) with
                                                    | z_s3764z3 ->
                                                      begin
                                                        match (hex_bits_13_matches_prefix z_s3764z3) with
                                                        | ZSome (zimm, z_s3765z3) ->
                                                          begin
                                                            match (string_drop (z_s3764z3, z_s3765z3)) with
                                                            | zsz3 ->
                                                              ZSome (zop, zrs1, zrs2, zimm, zsz3)
                                                            | _ -> ZNone ()
                                                          end
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3734z3 (z_s3735z3 : (string)) : (((bit) list * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3735z3 with
    | z_s3736z3 when (string_startswith (z_s3736z3, "jalr")) ->
      begin
        match (string_drop (z_s3736z3, (string_length "jalr"))) with
        | z_s3737z3 ->
          begin
            match (zspc_matches_prefix z_s3737z3) with
            | ZSome ((), z_s3738z3) ->
              begin
                match (string_drop (z_s3737z3, z_s3738z3)) with
                | z_s3739z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3739z3) with
                    | ZSome (zrd, z_s3740z3) ->
                      begin
                        match (string_drop (z_s3739z3, z_s3740z3)) with
                        | z_s3741z3 ->
                          begin
                            match (zsep_matches_prefix z_s3741z3) with
                            | ZSome ((), z_s3742z3) ->
                              begin
                                match (string_drop (z_s3741z3, z_s3742z3)) with
                                | z_s3743z3 ->
                                  begin
                                    match (zreg_name_matches_prefix z_s3743z3) with
                                    | ZSome (zrs1, z_s3744z3) ->
                                      begin
                                        match (string_drop (z_s3743z3, z_s3744z3)) with
                                        | z_s3745z3 ->
                                          begin
                                            match (zsep_matches_prefix z_s3745z3) with
                                            | ZSome ((), z_s3746z3) ->
                                              begin
                                                match (string_drop (z_s3745z3, z_s3746z3)) with
                                                | z_s3747z3 ->
                                                  begin
                                                    match (hex_bits_12_matches_prefix z_s3747z3) with
                                                    | ZSome (zimm, z_s3748z3) ->
                                                      begin
                                                        match (string_drop (z_s3747z3, z_s3748z3)) with
                                                        | zsz3 ->
                                                          ZSome (zrd, zrs1, zimm, zsz3)
                                                        | _ -> ZNone ()
                                                      end
                                                    | _ -> ZNone ()
                                                  end
                                                | _ -> ZNone ()
                                              end
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3722z3 (z_s3723z3 : (string)) : (((bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3723z3 with
    | z_s3724z3 when (string_startswith (z_s3724z3, "jal")) ->
      begin
        match (string_drop (z_s3724z3, (string_length "jal"))) with
        | z_s3725z3 ->
          begin
            match (zspc_matches_prefix z_s3725z3) with
            | ZSome ((), z_s3726z3) ->
              begin
                match (string_drop (z_s3725z3, z_s3726z3)) with
                | z_s3727z3 ->
                  begin
                    match (zreg_name_matches_prefix z_s3727z3) with
                    | ZSome (zrd, z_s3728z3) ->
                      begin
                        match (string_drop (z_s3727z3, z_s3728z3)) with
                        | z_s3729z3 ->
                          begin
                            match (zsep_matches_prefix z_s3729z3) with
                            | ZSome ((), z_s3730z3) ->
                              begin
                                match (string_drop (z_s3729z3, z_s3730z3)) with
                                | z_s3731z3 ->
                                  begin
                                    match (hex_bits_21_matches_prefix z_s3731z3) with
                                    | ZSome (zimm, z_s3732z3) ->
                                      begin
                                        match (string_drop (z_s3731z3, z_s3732z3)) with
                                        | zsz3 -> ZSome (zrd, zimm, zsz3)
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and z_s3709z3 (z_s3710z3 : (string)) : ((zuop * (bit) list * (bit) list * string)) zoption = sail_call (fun r ->
  begin
    match z_s3710z3 with
    | z_s3711z3 ->
      begin
        match (zutype_mnemonic_matches_prefix z_s3711z3) with
        | ZSome (zop, z_s3712z3) ->
          begin
            match (string_drop (z_s3711z3, z_s3712z3)) with
            | z_s3713z3 ->
              begin
                match (zspc_matches_prefix z_s3713z3) with
                | ZSome ((), z_s3714z3) ->
                  begin
                    match (string_drop (z_s3713z3, z_s3714z3)) with
                    | z_s3715z3 ->
                      begin
                        match (zreg_name_matches_prefix z_s3715z3) with
                        | ZSome (zrd, z_s3716z3) ->
                          begin
                            match (string_drop (z_s3715z3, z_s3716z3)) with
                            | z_s3717z3 ->
                              begin
                                match (zsep_matches_prefix z_s3717z3) with
                                | ZSome ((), z_s3718z3) ->
                                  begin
                                    match (string_drop (z_s3717z3, z_s3718z3)) with
                                    | z_s3719z3 ->
                                      begin
                                        match (hex_bits_20_matches_prefix z_s3719z3) with
                                        | ZSome (zimm, z_s3720z3) ->
                                          begin
                                            match (string_drop (z_s3719z3, z_s3720z3)) with
                                            | zsz3 ->
                                              ZSome (zop, zrd, zimm, zsz3)
                                            | _ -> ZNone ()
                                          end
                                        | _ -> ZNone ()
                                      end
                                    | _ -> ZNone ()
                                  end
                                | _ -> ZNone ()
                              end
                            | _ -> ZNone ()
                          end
                        | _ -> ZNone ()
                      end
                    | _ -> ZNone ()
                  end
                | _ -> ZNone ()
              end
            | _ -> ZNone ()
          end
        | _ -> ZNone ()
      end
    | _ -> ZNone ()
  end)

and zassembly_matches_prefix (zargz3 : (string)) : ((zast * Big_int.num)) zoption = sail_call (fun r ->
  begin
    match zargz3 with
    | z_s3721z3 when (begin
      match (z_s3709z3 z_s3721z3) with
      | ZSome (zop, zrd, zimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zimm, zsz3) = (z_s3709z3 z_s3721z3) in
      ZSome (ZUTYPE (zimm, zrd, zop), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3733z3 when (begin
      match (z_s3722z3 z_s3733z3) with
      | ZSome (zrd, zimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zimm, zsz3) = (z_s3722z3 z_s3733z3) in
      ZSome (ZRISCV_JAL (zimm, zrd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3749z3 when (begin
      match (z_s3734z3 z_s3749z3) with
      | ZSome (zrd, zrs1, zimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs1, zimm, zsz3) = (z_s3734z3 z_s3749z3) in
      ZSome (ZRISCV_JALR (zimm, zrs1, zrd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3766z3 when (begin
      match (z_s3750z3 z_s3766z3) with
      | ZSome (zop, zrs1, zrs2, zimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrs1, zrs2, zimm, zsz3) = (z_s3750z3 z_s3766z3) in
      ZSome (ZBTYPE (zimm, zrs2, zrs1, zop), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3783z3 when (begin
      match (z_s3767z3 z_s3783z3) with
      | ZSome (zop, zrd, zrs1, zimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zimm, zsz3) = (z_s3767z3 z_s3783z3) in
      ZSome (ZITYPE (zimm, zrs1, zrd, zop), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3798z3 when (begin
      match (z_s3784z3 z_s3798z3) with
      | ZSome (zop, zrd, zrs1, zshamt, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zshamt, zsz3) = (z_s3784z3 z_s3798z3) in
      ZSome (ZSHIFTIOP (zshamt, zrs1, zrd, zop), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3815z3 when (begin
      match (z_s3799z3 z_s3815z3) with
      | ZSome (zop, zrd, zrs1, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zrs2, zsz3) = (z_s3799z3 z_s3815z3) in
      ZSome (ZRTYPE (zrs2, zrs1, zrd, zop), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3839z3 when (begin
      match (z_s3816z3 z_s3839z3) with
      | ZSome (zsizze, zis_unsigned, zaq, zrl, zrd, zrs1, zimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsizze, zis_unsigned, zaq, zrl, zrd, zrs1, zimm, zsz3) = (z_s3816z3 z_s3839z3) in
      ZSome (ZLOAD (zimm, zrs1, zrd, zis_unsigned, zsizze, zaq, zrl), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3861z3 when (begin
      match (z_s3840z3 z_s3861z3) with
      | ZSome (zsizze, zaq, zrl, zrd, zrs1, zimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsizze, zaq, zrl, zrd, zrs1, zimm, zsz3) = (z_s3840z3 z_s3861z3) in
      ZSome (ZSTORE (zimm, zrs1, zrd, zsizze, zaq, zrl), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3877z3 when (begin
      match (z_s3862z3 z_s3877z3) with
      | ZSome (zrd, zrs1, zimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs1, zimm, zsz3) = (z_s3862z3 z_s3877z3) in
      ZSome (ZADDIW (zimm, zrs1, zrd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3894z3 when (begin
      match (z_s3878z3 z_s3894z3) with
      | ZSome (zop, zrd, zrs1, zshamt, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zshamt, zsz3) = (z_s3878z3 z_s3894z3) in
      ZSome (ZSHIFTW (zshamt, zrs1, zrd, zop), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3911z3 when (begin
      match (z_s3895z3 z_s3911z3) with
      | ZSome (zop, zrd, zrs1, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zrs2, zsz3) = (z_s3895z3 z_s3911z3) in
      ZSome (ZRTYPEW (zrs2, zrs1, zrd, zop), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3926z3 when (begin
      match (z_s3912z3 z_s3926z3) with
      | ZSome (zop, zrd, zrs1, zshamt, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zshamt, zsz3) = (z_s3912z3 z_s3926z3) in
      ZSome (ZSHIFTIWOP (zshamt, zrs1, zrd, zop), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3938z3 when (begin
      match (z_s3927z3 z_s3938z3) with
      | ZSome (zpred, zsucc, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zpred, zsucc, zsz3) = (z_s3927z3 z_s3938z3) in
      ZSome (ZFENCE (zpred, zsucc), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3950z3 when (begin
      match (z_s3939z3 z_s3950z3) with
      | ZSome (zpred, zsucc, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zpred, zsucc, zsz3) = (z_s3939z3 z_s3950z3) in
      ZSome (ZFENCE_TSO (zpred, zsucc), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3954z3 when (begin
      match (z_s3951z3 z_s3954z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s3951z3 z_s3954z3) in
      ZSome (ZFENCEI (), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3958z3 when (begin
      match (z_s3955z3 z_s3958z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s3955z3 z_s3958z3) in
      ZSome (ZECALL (), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3962z3 when (begin
      match (z_s3959z3 z_s3962z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s3959z3 z_s3962z3) in
      ZSome (ZMRET (), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3966z3 when (begin
      match (z_s3963z3 z_s3966z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s3963z3 z_s3966z3) in
      ZSome (ZSRET (), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3970z3 when (begin
      match (z_s3967z3 z_s3970z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s3967z3 z_s3970z3) in
      ZSome (ZEBREAK (), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3974z3 when (begin
      match (z_s3971z3 z_s3974z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s3971z3 z_s3974z3) in
      ZSome (ZWFI (), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s3986z3 when (begin
      match (z_s3975z3 z_s3986z3) with
      | ZSome (zrs1, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrs1, zrs2, zsz3) = (z_s3975z3 z_s3986z3) in
      ZSome (ZSFENCE_VMA (zrs1, zrs2), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4004z3 when (begin
      match (z_s3987z3 z_s4004z3) with
      | ZSome (zsizze, zaq, zrl, zrd, zrs1, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsizze, zaq, zrl, zrd, zrs1, zsz3) = (z_s3987z3 z_s4004z3) in
      ZSome (ZLOADRES (zaq, zrl, zrs1, zsizze, zrd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4026z3 when (begin
      match (z_s4005z3 z_s4026z3) with
      | ZSome (zsizze, zaq, zrl, zrd, zrs1, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsizze, zaq, zrl, zrd, zrs1, zrs2, zsz3) = (z_s4005z3 z_s4026z3) in
      ZSome (ZSTORECON (zaq, zrl, zrs2, zrs1, zsizze, zrd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4050z3 when (begin
      match (z_s4027z3 z_s4050z3) with
      | ZSome (zop, zwidth, zaq, zrl, zrd, zrs1, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zwidth, zaq, zrl, zrd, zrs1, zrs2, zsz3) = (z_s4027z3 z_s4050z3) in
      ZSome (ZAMO (zop, zaq, zrl, zrs2, zrs1, zwidth, zrd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4054z3 when (begin
      match (z_s4051z3 z_s4054z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s4051z3 z_s4054z3) in
      ZSome (ZC_NOP (), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4066z3 when (begin
      match (z_s4055z3 z_s4066z3) with
      | ZSome (zrdc, znzzimm, zsz3) ->
        zneq_vec (znzzimm, [B0; B0; B0; B0; B0; B0; B0; B0])
      | _ -> false
    end) ->
      let ZSome (zrdc, znzzimm, zsz3) = (z_s4055z3 z_s4066z3) in
      ZSome (ZC_ADDI4SPN (zrdc, znzzimm), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4082z3 when (begin
      match (z_s4067z3 z_s4082z3) with
      | ZSome (zrdc, zrsc, zuimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrdc, zrsc, zuimm, zsz3) = (z_s4067z3 z_s4082z3) in
      ZSome (ZC_LW (zuimm, zrsc, zrdc), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4098z3 when (begin
      match (z_s4083z3 z_s4098z3) with
      | ZSome (zrdc, zrsc, zuimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrdc, zrsc, zuimm, zsz3) = (z_s4083z3 z_s4098z3) in
      ZSome (ZC_LD (zuimm, zrsc, zrdc), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4114z3 when (begin
      match (z_s4099z3 z_s4114z3) with
      | ZSome (zrsc1, zrsc2, zuimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrsc1, zrsc2, zuimm, zsz3) = (z_s4099z3 z_s4114z3) in
      ZSome (ZC_SW (zuimm, zrsc1, zrsc2), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4130z3 when (begin
      match (z_s4115z3 z_s4130z3) with
      | ZSome (zrsc1, zrsc2, zuimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrsc1, zrsc2, zuimm, zsz3) = (z_s4115z3 z_s4130z3) in
      ZSome (ZC_SD (zuimm, zrsc1, zrsc2), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4142z3 when (begin
      match (z_s4131z3 z_s4142z3) with
      | ZSome (zrsd, znzzi, zsz3) ->
        (zneq_vec (znzzi, [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))
      | _ -> false
    end) ->
      let ZSome (zrsd, znzzi, zsz3) = (z_s4131z3 z_s4142z3) in
      ZSome (ZC_ADDI (znzzi, zrsd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4150z3 when (begin
      match (z_s4143z3 z_s4150z3) with
      | ZSome (zimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zimm, zsz3) = (z_s4143z3 z_s4150z3) in
      ZSome (ZC_JAL zimm, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4162z3 when (begin
      match (z_s4151z3 z_s4162z3) with
      | ZSome (zrsd, zimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zimm, zsz3) = (z_s4151z3 z_s4162z3) in
      ZSome (ZC_ADDIW (zimm, zrsd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4174z3 when (begin
      match (z_s4163z3 z_s4174z3) with
      | ZSome (zrd, zimm, zsz3) ->
        zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))
      | _ -> false
    end) ->
      let ZSome (zrd, zimm, zsz3) = (z_s4163z3 z_s4174z3) in
      ZSome (ZC_LI (zimm, zrd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4182z3 when (begin
      match (z_s4175z3 z_s4182z3) with
      | ZSome (zimm, zsz3) -> zneq_vec (zimm, [B0; B0; B0; B0; B0; B0])
      | _ -> false
    end) ->
      let ZSome (zimm, zsz3) = (z_s4175z3 z_s4182z3) in
      ZSome (ZC_ADDI16SP zimm, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4194z3 when (begin
      match (z_s4183z3 z_s4194z3) with
      | ZSome (zrd, zimm, zsz3) ->
        (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && ((zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zsp))) && (zneq_vec (zimm, [B0; B0; B0; B0; B0; B0])))
      | _ -> false
    end) ->
      let ZSome (zrd, zimm, zsz3) = (z_s4183z3 z_s4194z3) in
      ZSome (ZC_LUI (zimm, zrd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4206z3 when (begin
      match (z_s4195z3 z_s4206z3) with
      | ZSome (zrsd, zshamt, zsz3) ->
        zneq_vec (zshamt, [B0; B0; B0; B0; B0; B0])
      | _ -> false
    end) ->
      let ZSome (zrsd, zshamt, zsz3) = (z_s4195z3 z_s4206z3) in
      ZSome (ZC_SRLI (zshamt, zrsd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4218z3 when (begin
      match (z_s4207z3 z_s4218z3) with
      | ZSome (zrsd, zshamt, zsz3) ->
        zneq_vec (zshamt, [B0; B0; B0; B0; B0; B0])
      | _ -> false
    end) ->
      let ZSome (zrsd, zshamt, zsz3) = (z_s4207z3 z_s4218z3) in
      ZSome (ZC_SRAI (zshamt, zrsd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4230z3 when (begin
      match (z_s4219z3 z_s4230z3) with
      | ZSome (zrsd, zimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zimm, zsz3) = (z_s4219z3 z_s4230z3) in
      ZSome (ZC_ANDI (zimm, zrsd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4242z3 when (begin
      match (z_s4231z3 z_s4242z3) with
      | ZSome (zrsd, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2, zsz3) = (z_s4231z3 z_s4242z3) in
      ZSome (ZC_SUB (zrsd, zrs2), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4254z3 when (begin
      match (z_s4243z3 z_s4254z3) with
      | ZSome (zrsd, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2, zsz3) = (z_s4243z3 z_s4254z3) in
      ZSome (ZC_XOR (zrsd, zrs2), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4266z3 when (begin
      match (z_s4255z3 z_s4266z3) with
      | ZSome (zrsd, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2, zsz3) = (z_s4255z3 z_s4266z3) in
      ZSome (ZC_OR (zrsd, zrs2), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4278z3 when (begin
      match (z_s4267z3 z_s4278z3) with
      | ZSome (zrsd, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2, zsz3) = (z_s4267z3 z_s4278z3) in
      ZSome (ZC_AND (zrsd, zrs2), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4290z3 when (begin
      match (z_s4279z3 z_s4290z3) with
      | ZSome (zrsd, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2, zsz3) = (z_s4279z3 z_s4290z3) in
      ZSome (ZC_SUBW (zrsd, zrs2), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4302z3 when (begin
      match (z_s4291z3 z_s4302z3) with
      | ZSome (zrsd, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2, zsz3) = (z_s4291z3 z_s4302z3) in
      ZSome (ZC_ADDW (zrsd, zrs2), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4310z3 when (begin
      match (z_s4303z3 z_s4310z3) with
      | ZSome (zimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zimm, zsz3) = (z_s4303z3 z_s4310z3) in
      ZSome (ZC_J zimm, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4322z3 when (begin
      match (z_s4311z3 z_s4322z3) with
      | ZSome (zrs, zimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrs, zimm, zsz3) = (z_s4311z3 z_s4322z3) in
      ZSome (ZC_BEQZ (zimm, zrs), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4334z3 when (begin
      match (z_s4323z3 z_s4334z3) with
      | ZSome (zrs, zimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrs, zimm, zsz3) = (z_s4323z3 z_s4334z3) in
      ZSome (ZC_BNEZ (zimm, zrs), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4346z3 when (begin
      match (z_s4335z3 z_s4346z3) with
      | ZSome (zrsd, zshamt, zsz3) ->
        (zneq_vec (zshamt, [B0; B0; B0; B0; B0; B0])) && (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg)))
      | _ -> false
    end) ->
      let ZSome (zrsd, zshamt, zsz3) = (z_s4335z3 z_s4346z3) in
      ZSome (ZC_SLLI (zshamt, zrsd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4358z3 when (begin
      match (z_s4347z3 z_s4358z3) with
      | ZSome (zrd, zuimm, zsz3) ->
        zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))
      | _ -> false
    end) ->
      let ZSome (zrd, zuimm, zsz3) = (z_s4347z3 z_s4358z3) in
      ZSome (ZC_LWSP (zuimm, zrd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4370z3 when (begin
      match (z_s4359z3 z_s4370z3) with
      | ZSome (zrd, zuimm, zsz3) ->
        zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))
      | _ -> false
    end) ->
      let ZSome (zrd, zuimm, zsz3) = (z_s4359z3 z_s4370z3) in
      ZSome (ZC_LDSP (zuimm, zrd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4382z3 when (begin
      match (z_s4371z3 z_s4382z3) with
      | ZSome (zrd, zuimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zuimm, zsz3) = (z_s4371z3 z_s4382z3) in
      ZSome (ZC_SWSP (zuimm, zrd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4394z3 when (begin
      match (z_s4383z3 z_s4394z3) with
      | ZSome (zrs2, zuimm, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrs2, zuimm, zsz3) = (z_s4383z3 z_s4394z3) in
      ZSome (ZC_SDSP (zuimm, zrs2), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4402z3 when (begin
      match (z_s4395z3 z_s4402z3) with
      | ZSome (zrs1, zsz3) ->
        zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))
      | _ -> false
    end) ->
      let ZSome (zrs1, zsz3) = (z_s4395z3 z_s4402z3) in
      ZSome (ZC_JR zrs1, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4410z3 when (begin
      match (z_s4403z3 z_s4410z3) with
      | ZSome (zrs1, zsz3) ->
        zneq_int ((zregbits_to_regno zrs1), (zregbits_to_regno zzzreg))
      | _ -> false
    end) ->
      let ZSome (zrs1, zsz3) = (z_s4403z3 z_s4410z3) in
      ZSome (ZC_JALR zrs1, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4422z3 when (begin
      match (z_s4411z3 z_s4422z3) with
      | ZSome (zrd, zrs2, zsz3) ->
        (zneq_int ((zregbits_to_regno zrd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))
      | _ -> false
    end) ->
      let ZSome (zrd, zrs2, zsz3) = (z_s4411z3 z_s4422z3) in
      ZSome (ZC_MV (zrd, zrs2), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4426z3 when (begin
      match (z_s4423z3 z_s4426z3) with
      | ZSome (zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zsz3) = (z_s4423z3 z_s4426z3) in
      ZSome (ZC_EBREAK (), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4438z3 when (begin
      match (z_s4427z3 z_s4438z3) with
      | ZSome (zrsd, zrs2, zsz3) ->
        (zneq_int ((zregbits_to_regno zrsd), (zregbits_to_regno zzzreg))) && (zneq_int ((zregbits_to_regno zrs2), (zregbits_to_regno zzzreg)))
      | _ -> false
    end) ->
      let ZSome (zrsd, zrs2, zsz3) = (z_s4427z3 z_s4438z3) in
      ZSome (ZC_ADD (zrsd, zrs2), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4455z3 when (begin
      match (z_s4439z3 z_s4455z3) with
      | ZSome (zhigh, zsigned1, zsigned2, zrd, zrs1, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zhigh, zsigned1, zsigned2, zrd, zrs1, zrs2, zsz3) = (z_s4439z3 z_s4455z3) in
      ZSome (ZMUL (zrs2, zrs1, zrd, zhigh, zsigned1, zsigned2), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4473z3 when (begin
      match (z_s4456z3 z_s4473z3) with
      | ZSome (zs, zrd, zrs1, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zs, zrd, zrs1, zrs2, zsz3) = (z_s4456z3 z_s4473z3) in
      ZSome (ZDIV (zrs2, zrs1, zrd, zs), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4491z3 when (begin
      match (z_s4474z3 z_s4491z3) with
      | ZSome (zs, zrd, zrs1, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zs, zrd, zrs1, zrs2, zsz3) = (z_s4474z3 z_s4491z3) in
      ZSome (ZREM (zrs2, zrs1, zrd, zs), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4507z3 when (begin
      match (z_s4492z3 z_s4507z3) with
      | ZSome (zrd, zrs1, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs1, zrs2, zsz3) = (z_s4492z3 z_s4507z3) in
      ZSome (ZMULW (zrs2, zrs1, zrd), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4526z3 when (begin
      match (z_s4508z3 z_s4526z3) with
      | ZSome (zs, zrd, zrs1, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zs, zrd, zrs1, zrs2, zsz3) = (z_s4508z3 z_s4526z3) in
      ZSome (ZDIVW (zrs2, zrs1, zrd, zs), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4545z3 when (begin
      match (z_s4527z3 z_s4545z3) with
      | ZSome (zs, zrd, zrs1, zrs2, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zs, zrd, zrs1, zrs2, zsz3) = (z_s4527z3 z_s4545z3) in
      ZSome (ZREMW (zrs2, zrs1, zrd, zs), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4563z3 when (begin
      match (z_s4546z3 z_s4563z3) with
      | ZSome (zop, zrd, zrs1, zcsr, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zcsr, zsz3) = (z_s4546z3 z_s4563z3) in
      ZSome (ZCSR (zcsr, zrs1, zrd, true, zop), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4580z3 when (begin
      match (z_s4564z3 z_s4580z3) with
      | ZSome (zop, zrd, zrs1, zcsr, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zop, zrd, zrs1, zcsr, zsz3) = (z_s4564z3 z_s4580z3) in
      ZSome (ZCSR (zcsr, zrs1, zrd, false, zop), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4592z3 when (begin
      match (z_s4581z3 z_s4592z3) with
      | ZSome (zrd, zcb, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb, zsz3) = (z_s4581z3 z_s4592z3) in
      ZSome (ZCGetPerm (zrd, zcb), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4604z3 when (begin
      match (z_s4593z3 z_s4604z3) with
      | ZSome (zrd, zcb, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb, zsz3) = (z_s4593z3 z_s4604z3) in
      ZSome (ZCGetType (zrd, zcb), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4616z3 when (begin
      match (z_s4605z3 z_s4616z3) with
      | ZSome (zrd, zcb, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb, zsz3) = (z_s4605z3 z_s4616z3) in
      ZSome (ZCGetBase (zrd, zcb), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4628z3 when (begin
      match (z_s4617z3 z_s4628z3) with
      | ZSome (zrd, zcb, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb, zsz3) = (z_s4617z3 z_s4628z3) in
      ZSome (ZCGetLen (zrd, zcb), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4640z3 when (begin
      match (z_s4629z3 z_s4640z3) with
      | ZSome (zrd, zcb, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb, zsz3) = (z_s4629z3 z_s4640z3) in
      ZSome (ZCGetTag (zrd, zcb), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4652z3 when (begin
      match (z_s4641z3 z_s4652z3) with
      | ZSome (zrd, zcb, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb, zsz3) = (z_s4641z3 z_s4652z3) in
      ZSome (ZCGetSealed (zrd, zcb), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4664z3 when (begin
      match (z_s4653z3 z_s4664z3) with
      | ZSome (zrd, zcb, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb, zsz3) = (z_s4653z3 z_s4664z3) in
      ZSome (ZCGetOffset (zrd, zcb), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4676z3 when (begin
      match (z_s4665z3 z_s4676z3) with
      | ZSome (zrd, zcb, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb, zsz3) = (z_s4665z3 z_s4676z3) in
      ZSome (ZCGetAddr (zrd, zcb), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4688z3 when (begin
      match (z_s4677z3 z_s4688z3) with
      | ZSome (zcd, zcs, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zsz3) = (z_s4677z3 z_s4688z3) in
      ZSome (ZCMove (zcd, zcs), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4700z3 when (begin
      match (z_s4689z3 z_s4700z3) with
      | ZSome (zcd, zcs, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zsz3) = (z_s4689z3 z_s4700z3) in
      ZSome (ZCClearTag (zcd, zcs), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4708z3 when (begin
      match (z_s4701z3 z_s4708z3) with
      | ZSome (zcb, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcb, zsz3) = (z_s4701z3 z_s4708z3) in
      ZSome (ZCJALR ([B0; B0; B0; B0; B0], zcb), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4720z3 when (begin
      match (z_s4709z3 z_s4720z3) with
      | ZSome (zcd, zcb, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb, zsz3) = (z_s4709z3 z_s4720z3) in
      ZSome (ZCJALR (zcd, zcb), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4732z3 when (begin
      match (z_s4721z3 z_s4732z3) with
      | ZSome (zcs, zrt, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcs, zrt, zsz3) = (z_s4721z3 z_s4732z3) in
      ZSome (ZCCheckPerm (zcs, zrt), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4744z3 when (begin
      match (z_s4733z3 z_s4744z3) with
      | ZSome (zcs, zcb, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcs, zcb, zsz3) = (z_s4733z3 z_s4744z3) in
      ZSome (ZCCheckType (zcs, zcb), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4756z3 when (begin
      match (z_s4745z3 z_s4756z3) with
      | ZSome (zq, zm8, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zq, zm8, zsz3) = (z_s4745z3 z_s4756z3) in
      ZSome (ZClearRegs (ZGPRegs, zq, zm8), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4768z3 when (begin
      match (z_s4757z3 z_s4768z3) with
      | ZSome (zq, zm8, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zq, zm8, zsz3) = (z_s4757z3 z_s4768z3) in
      ZSome (ZClearRegs (ZFPRegs, zq, zm8), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4784z3 when (begin
      match (z_s4769z3 z_s4784z3) with
      | ZSome (zcd, zcs, zct, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zct, zsz3) = (z_s4769z3 z_s4784z3) in
      ZSome (ZCSeal (zcd, zcs, zct), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4800z3 when (begin
      match (z_s4785z3 z_s4800z3) with
      | ZSome (zcd, zcs, zct, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zct, zsz3) = (z_s4785z3 z_s4800z3) in
      ZSome (ZCUnseal (zcd, zcs, zct), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4816z3 when (begin
      match (z_s4801z3 z_s4816z3) with
      | ZSome (zcd, zcs, zrt, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zrt, zsz3) = (z_s4801z3 z_s4816z3) in
      ZSome (ZCAndPerm (zcd, zcs, zrt), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4832z3 when (begin
      match (z_s4817z3 z_s4832z3) with
      | ZSome (zcd, zcs, zrt, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zrt, zsz3) = (z_s4817z3 z_s4832z3) in
      ZSome (ZCSetOffset (zcd, zcs, zrt), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4848z3 when (begin
      match (z_s4833z3 z_s4848z3) with
      | ZSome (zcd, zcs, zrt, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zrt, zsz3) = (z_s4833z3 z_s4848z3) in
      ZSome (ZCIncOffset (zcd, zcs, zrt), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4864z3 when (begin
      match (z_s4849z3 z_s4864z3) with
      | ZSome (zcd, zcs, zrt, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zrt, zsz3) = (z_s4849z3 z_s4864z3) in
      ZSome (ZCSetBounds (zcd, zcs, zrt), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4880z3 when (begin
      match (z_s4865z3 z_s4880z3) with
      | ZSome (zcd, zcs, zrt, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zrt, zsz3) = (z_s4865z3 z_s4880z3) in
      ZSome (ZCSetBoundsExact (zcd, zcs, zrt), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4896z3 when (begin
      match (z_s4881z3 z_s4896z3) with
      | ZSome (zcd, zcb, zct, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb, zct, zsz3) = (z_s4881z3 z_s4896z3) in
      ZSome (ZCBuildCap (zcd, zcb, zct), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4912z3 when (begin
      match (z_s4897z3 z_s4912z3) with
      | ZSome (zcd, zcb, zct, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb, zct, zsz3) = (z_s4897z3 z_s4912z3) in
      ZSome (ZCCopyType (zcd, zcb, zct), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4928z3 when (begin
      match (z_s4913z3 z_s4928z3) with
      | ZSome (zcd, zcs, zct, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zct, zsz3) = (z_s4913z3 z_s4928z3) in
      ZSome (ZCCSeal (zcd, zcs, zct), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4944z3 when (begin
      match (z_s4929z3 z_s4944z3) with
      | ZSome (zrd, zcb, zcs, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb, zcs, zsz3) = (z_s4929z3 z_s4944z3) in
      ZSome (ZCToPtr (zrd, zcb, zcs), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4960z3 when (begin
      match (z_s4945z3 z_s4960z3) with
      | ZSome (zcd, zcb, zrs, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb, zrs, zsz3) = (z_s4945z3 z_s4960z3) in
      ZSome (ZCFromPtr (zcd, zcb, zrs), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4972z3 when (begin
      match (z_s4961z3 z_s4972z3) with
      | ZSome (zcs, zcb, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcs, zcb, zsz3) = (z_s4961z3 z_s4972z3) in
      ZSome (ZCCall (zcs, zcb, [B0; B0; B0; B0; B0]), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4984z3 when (begin
      match (z_s4973z3 z_s4984z3) with
      | ZSome (zcs, zcb, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcs, zcb, zsz3) = (z_s4973z3 z_s4984z3) in
      ZSome (ZCCall (zcs, zcb, [B0; B0; B0; B0; B1]), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s4996z3 when (begin
      match (z_s4985z3 z_s4996z3) with
      | ZSome (zcs, zcb, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcs, zcb, zsz3) = (z_s4985z3 z_s4996z3) in
      ZSome (ZCCall (zcs, zcb, [B1; B1; B1; B1; B1]), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s5012z3 when (begin
      match (z_s4997z3 z_s5012z3) with
      | ZSome (zrd, zcb, zct, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zcb, zct, zsz3) = (z_s4997z3 z_s5012z3) in
      ZSome (ZCTestSubset (zrd, zcb, zct), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s5028z3 when (begin
      match (z_s5013z3 z_s5028z3) with
      | ZSome (zcd, zcs, zidx, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcs, zidx, zsz3) = (z_s5013z3 z_s5028z3) in
      ZSome (ZCSpecialRW (zcd, zcs, zidx), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s5044z3 when (begin
      match (z_s5029z3 z_s5044z3) with
      | ZSome (zcd, zcb, zimm12, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb, zimm12, zsz3) = (z_s5029z3 z_s5044z3) in
      ZSome (ZCIncOffsetImmediate (zcd, zcb, zimm12), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s5060z3 when (begin
      match (z_s5045z3 z_s5060z3) with
      | ZSome (zcd, zcb, zimm12, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zcd, zcb, zimm12, zsz3) = (z_s5045z3 z_s5060z3) in
      ZSome (ZCSetBoundsImmediate (zcd, zcb, zimm12), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s5077z3 when (begin
      match (z_s5061z3 z_s5077z3) with
      | ZSome (zw, zu, zrd, zrs, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zw, zu, zrd, zrs, zsz3) = (z_s5061z3 z_s5077z3) in
      ZSome (ZCLoadDDC (zrd, zrs, zu, zw), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s5094z3 when (begin
      match (z_s5078z3 z_s5094z3) with
      | ZSome (zw, zu, zrd, zcs, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zw, zu, zrd, zcs, zsz3) = (z_s5078z3 z_s5094z3) in
      ZSome (ZCLoadCap (zrd, zcs, zu, zw), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s5109z3 when (begin
      match (z_s5095z3 z_s5109z3) with
      | ZSome (zw, zrd, zrs, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zw, zrd, zrs, zsz3) = (z_s5095z3 z_s5109z3) in
      ZSome (ZCStoreDDC (zrd, zrs, zw), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s5124z3 when (begin
      match (z_s5110z3 z_s5124z3) with
      | ZSome (zw, zrd, zrs, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zw, zrd, zrs, zsz3) = (z_s5110z3 z_s5124z3) in
      ZSome (ZCStoreCap (zrd, zrs, zw), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s5136z3 when (begin
      match (z_s5125z3 z_s5136z3) with
      | ZSome (zrd, zrs, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs, zsz3) = (z_s5125z3 z_s5136z3) in
      ZSome (ZCStoreCapDDC (zrd, zrs), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s5148z3 when (begin
      match (z_s5137z3 z_s5148z3) with
      | ZSome (zrd, zrs, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs, zsz3) = (z_s5137z3 z_s5148z3) in
      ZSome (ZCLoadCapDDC (zrd, zrs), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s5160z3 when (begin
      match (z_s5149z3 z_s5160z3) with
      | ZSome (zrd, zrs, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs, zsz3) = (z_s5149z3 z_s5160z3) in
      ZSome (ZCStoreCapCap (zrd, zrs), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s5172z3 when (begin
      match (z_s5161z3 z_s5172z3) with
      | ZSome (zrd, zrs, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zrd, zrs, zsz3) = (z_s5161z3 z_s5172z3) in
      ZSome (ZCLoadCapCap (zrd, zrs), (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s5180z3 when (begin
      match (z_s5173z3 z_s5180z3) with
      | ZSome (zs, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zs, zsz3) = (z_s5173z3 z_s5180z3) in
      ZSome (ZILLEGAL zs, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | z_s5188z3 when (begin
      match (z_s5181z3 z_s5188z3) with
      | ZSome (zs, zsz3) -> true
      | _ -> false
    end) ->
      let ZSome (zs, zsz3) = (z_s5181z3 z_s5188z3) in
      ZSome (ZC_ILLEGAL zs, (fun (x,y) -> let n = sub_int (x,y) in if Big_int.less_equal n Big_int.zero then Big_int.zero else n) ((string_length zargz3), (string_length zsz3)))
    | _ -> ZNone ()
  end)

and zprint_insn (zinsn : (zast)) : string = sail_call (fun r ->
  zassembly_forwards zinsn)

and zdecode (zbv : ((bit) list)) : (zast) zoption = sail_call (fun r ->
  ZSome (zencdec_backwards zbv))

and zdecodeCompressed (zbv : ((bit) list)) : (zast) zoption = sail_call (fun r ->
  ZSome (zencdec_compressed_backwards zbv))

type  zFetchResult =
  | ZF_Base of zword
  | ZF_RVC of zhalf
  | ZF_Error of (zExceptionType * zxlenbits)
  | ZF_CHERI_Err of (zCapEx * zxlenbits);;

let string_of_zFetchResult _ = "VARIANT";;

let rec zundefined_FetchResult (() : (unit)) : zFetchResult = sail_call (fun r ->
  let zu_0 = (zundefined_CapEx ()) in
  let zu_1 = (zundefined_ExceptionType ()) in
  let zu_2 = (undefined_vector ((Big_int.of_int (16)), (undefined_bit ()))) in
  let zu_3 = (undefined_vector ((Big_int.of_int (32)), (undefined_bit ()))) in
  let zu_4 = (undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))) in
  internal_pick [ZF_Base zu_3; ZF_RVC zu_2; ZF_Error (zu_1, zu_4); ZF_CHERI_Err (zu_0, zu_4)])

and zisRVC (zh : (zhalf)) : bool = sail_call (fun r ->
  not (eq_list ((subrange (zh, (Big_int.of_int (1)), Big_int.zero)), [B1; B1])))

and zfetch (() : (unit)) : zFetchResult = sail_call (fun r ->
  let zabs_pc = (add_int ((zgetCapBase !zPCC), (uint !zPC))) in
  let zabs_pc_bits = (zto_bits (zxlen, zabs_pc)) in
  let (zpcc_base, zpcc_top) = (zgetCapBounds !zPCC) in
  if (not (!zPCC.ztag)) then (ZF_CHERI_Err (ZCapEx_TagViolation, !zPC)) else (if (!zPCC.zsealed) then (ZF_CHERI_Err (ZCapEx_SealViolation, !zPC)) else (if (not (!zPCC.zpermit_execute)) then (ZF_CHERI_Err (ZCapEx_PermitExecuteViolation, !zPC)) else (if ((lt (zabs_pc, zpcc_base)) || (gt ((add_int (zabs_pc, (Big_int.of_int (2)))), zpcc_top))) then (ZF_CHERI_Err (ZCapEx_LengthViolation, !zPC)) else (if ((zneq_vec ((zcast_unit_vec (access (zabs_pc_bits, Big_int.zero))), [B0])) || ((zneq_vec ((zcast_unit_vec (access (zabs_pc_bits, (Big_int.of_int (1))))), [B0])) && (not (zhaveRVC ())))) then (ZF_Error (ZE_Fetch_Addr_Align, !zPC)) else (begin
    match (ztranslateAddr (zabs_pc_bits, ZExecute, ZInstruction)) with
    | ZTR_Failure (ze) -> ZF_Error (ze, !zPC)
    | ZTR_Address (zppclo) ->
      begin
        match (zchecked_mem_read (ZInstruction, zppclo, (Big_int.of_int (2)), false, false, false)) with
        | ZMemException (ze) -> ZF_Error (ZE_Fetch_Access_Fault, !zPC)
        | ZMemValue (zilo) ->
          if (zisRVC zilo) then (ZF_RVC zilo) else (if (gt ((add_int (zabs_pc, (Big_int.of_int (4)))), zpcc_top)) then (ZF_CHERI_Err (ZCapEx_LengthViolation, !zPC)) else (let zPChi = ref ((add_vec_int (zabs_pc_bits, (Big_int.of_int (2)))) : (bit) list) in
          begin
            match (ztranslateAddr (!zPChi, ZExecute, ZInstruction)) with
            | ZTR_Failure (ze) -> ZF_Error (ze, !zPChi)
            | ZTR_Address (zppchi) ->
              begin
                match (zchecked_mem_read (ZInstruction, zppchi, (Big_int.of_int (2)), false, false, false)) with
                | ZMemException (ze) -> ZF_Error (ZE_Fetch_Access_Fault, !zPChi)
                | ZMemValue (zihi) -> ZF_Base (append (zihi, zilo))
              end
          end))
      end
  end))))))

and zstep (zstep_no : (Big_int.num)) : bool = sail_call (fun r ->
  begin
    zminstret_written := false;
    let (zretired, zstepped) = (begin
      match (zdispatchInterrupt !zcur_privilege) with
      | ZSome (zintr, zpriv) ->
        begin
          print_bits ("Handling interrupt: ", (zinterruptType_to_bits zintr));
          zhandle_interrupt (zintr, zpriv);
          (false, false)
        end
      | ZNone (()) ->
        begin
          match (zfetch ()) with
          | ZF_Error (ze, zaddr) ->
            begin zhandle_mem_exception (zaddr, ze); (false, false) end
          | ZF_CHERI_Err (ze, zaddr) ->
            let _ = (zraise_c2_exception_pcc ze) in (false, false)
          | ZF_RVC (zh) ->
            begin
              match (zdecodeCompressed zh) with
              | ZNone (()) ->
                begin
                  Platform.print_instr (concat_str ("[", (concat_str ((string_of_int zstep_no), (concat_str ("] [", (concat_str ((zprivLevel_to_str !zcur_privilege), (concat_str ("]: ", (concat_str ((string_of_bits !zPC), (concat_str (" (", (concat_str ((string_of_bits zh), ") <no-decode>"))))))))))))))));
                  zinstbits := (zEXTZ ((Big_int.of_int (64)), zh));
                  zhandle_illegal ();
                  (false, true)
                end
              | ZSome (zast) ->
                begin
                  Platform.print_instr (concat_str ("[", (concat_str ((string_of_int zstep_no), (concat_str ("] [", (concat_str ((zprivLevel_to_str !zcur_privilege), (concat_str ("]: ", (concat_str ((string_of_bits !zPC), (concat_str (" (", (concat_str ((string_of_bits zh), (concat_str (") ", (zprint_insn zast)))))))))))))))))));
                  if (zhaveRVC ()) then (begin
                    znextPC := (add_vec_int (!zPC, (Big_int.of_int (2))));
                    (zexecute zast, true)
                  end) else ((false, true))
                end
            end
          | ZF_Base (zw) ->
            begin
              match (zdecode zw) with
              | ZNone (()) ->
                begin
                  Platform.print_instr (concat_str ("[", (concat_str ((string_of_int zstep_no), (concat_str ("] [", (concat_str ((zprivLevel_to_str !zcur_privilege), (concat_str ("]: ", (concat_str ((string_of_bits !zPC), (concat_str (" (", (concat_str ((string_of_bits zw), ") <no-decode>"))))))))))))))));
                  zinstbits := (zEXTZ ((Big_int.of_int (64)), zw));
                  zhandle_illegal ();
                  (false, true)
                end
              | ZSome (zast) ->
                begin
                  Platform.print_instr (concat_str ("[", (concat_str ((string_of_int zstep_no), (concat_str ("] [", (concat_str ((zprivLevel_to_str !zcur_privilege), (concat_str ("]: ", (concat_str ((string_of_bits !zPC), (concat_str (" (", (concat_str ((string_of_bits zw), (concat_str (") ", (zprint_insn zast)))))))))))))))))));
                  znextPC := (add_vec_int (!zPC, (Big_int.of_int (4))));
                  (zexecute zast, true)
                end
            end
        end
    end) in
    begin
      zPC := !znextPC;
      zPCC := !znextPCC;
      if zretired then (zretire_instruction ()) else ();
      zstepped
    end
  end)

and zloop (() : (unit)) : unit = sail_call (fun r ->
  let zinsns_per_tick = (Platform.insns_per_tick ()) in
  let zi = ref (Big_int.zero : Big_int.num) in
  let zstep_no = ref (Big_int.zero : Big_int.num) in
  let rec loop () =
    if (not !zhtif_done) then ((let zstepped = (zstep !zstep_no) in
    begin
      if zstepped then (zstep_no := (add_int (!zstep_no, (Big_int.of_int (1))))) else ();
      if !zhtif_done then (let zexit_val = (uint !zhtif_exit_code) in
      if (eq_int (zexit_val, Big_int.zero)) then (print_endline "SUCCESS") else (print_int ("FAILURE: ", zexit_val))) else (begin
        zi := (add_int (!zi, (Big_int.of_int (1))));
        if (eq_int (!zi, zinsns_per_tick)) then (begin
          ztick_clock ();
          ztick_platform ();
          zi := (Big_int.zero)
        end) else ()
      end)
    end); loop ()) else ()
  in
  loop ())

type  zregfp =
  | ZRFull of string
  | ZRSlice of (string * Big_int.num * Big_int.num)
  | ZRSliceBit of (string * Big_int.num)
  | ZRField of (string * string);;

let string_of_zregfp _ = "VARIANT";;

let rec zundefined_regfp (() : (unit)) : zregfp = sail_call (fun r ->
  let zu_1 = (undefined_nat ()) in
  let zu_0 = (undefined_nat ()) in
  let zu_3 = (undefined_string ()) in
  let zu_2 = (undefined_string ()) in
  internal_pick [ZRFull zu_2; ZRSlice (zu_2, zu_1, zu_0); ZRSliceBit (zu_2, zu_0); ZRField (zu_3, zu_2)])

type  zregfps = (zregfp) list;;

let string_of_zregfps (gs7281 : zregfps) =
  string_of_list ", " (fun gs7282 -> string_of_zregfp gs7282) gs7281;;

type  zniafp =
  | ZNIAFP_successor of unit
  | ZNIAFP_concrete_address of zbits
  | ZNIAFP_indirect_address of unit;;

let string_of_zniafp _ = "VARIANT";;

let rec zundefined_niafp (() : (unit)) : zniafp = sail_call (fun r ->
  let zu_0 = (undefined_unit ()) in
  let zu_1 = (undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))) in
  internal_pick [ZNIAFP_successor zu_0; ZNIAFP_concrete_address zu_1; ZNIAFP_indirect_address zu_0])

type  zniafps = (zniafp) list;;

let string_of_zniafps (gs7287 : zniafps) =
  string_of_list ", " (fun gs7288 -> string_of_zniafp gs7288) gs7287;;

type  zdiafp =
  | ZDIAFP_none of unit
  | ZDIAFP_concrete of zbits
  | ZDIAFP_reg of zregfp;;

let string_of_zdiafp _ = "VARIANT";;

let rec zundefined_diafp (() : (unit)) : zdiafp = sail_call (fun r ->
  let zu_0 = (zundefined_regfp ()) in
  let zu_1 = (undefined_unit ()) in
  let zu_2 = (undefined_vector ((Big_int.of_int (64)), (undefined_bit ()))) in
  internal_pick [ZDIAFP_none zu_1; ZDIAFP_concrete zu_2; ZDIAFP_reg zu_0])

type zread_kind =
  | ZRead_plain
  | ZRead_reserve
  | ZRead_acquire
  | ZRead_exclusive
  | ZRead_exclusive_acquire
  | ZRead_stream
  | ZRead_RISCV_acquire
  | ZRead_RISCV_strong_acquire
  | ZRead_RISCV_reserved
  | ZRead_RISCV_reserved_acquire
  | ZRead_RISCV_reserved_strong_acquire
  | ZRead_X86_locked;;

let string_of_zread_kind = function
  | ZRead_plain -> "Read_plain"
  | ZRead_reserve -> "Read_reserve"
  | ZRead_acquire -> "Read_acquire"
  | ZRead_exclusive -> "Read_exclusive"
  | ZRead_exclusive_acquire -> "Read_exclusive_acquire"
  | ZRead_stream -> "Read_stream"
  | ZRead_RISCV_acquire -> "Read_RISCV_acquire"
  | ZRead_RISCV_strong_acquire -> "Read_RISCV_strong_acquire"
  | ZRead_RISCV_reserved -> "Read_RISCV_reserved"
  | ZRead_RISCV_reserved_acquire -> "Read_RISCV_reserved_acquire"
  | ZRead_RISCV_reserved_strong_acquire -> "Read_RISCV_reserved_strong_acquire"
  | ZRead_X86_locked -> "Read_X86_locked";;

let rec zread_kind_of_num (zargz3 : (Big_int.num)) : zread_kind = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__35 when (eq_int (zl__35, Big_int.zero)) -> ZRead_plain
    | zl__36 when (eq_int (zl__36, (Big_int.of_int (1)))) -> ZRead_reserve
    | zl__37 when (eq_int (zl__37, (Big_int.of_int (2)))) -> ZRead_acquire
    | zl__38 when (eq_int (zl__38, (Big_int.of_int (3)))) -> ZRead_exclusive
    | zl__39 when (eq_int (zl__39, (Big_int.of_int (4)))) ->
      ZRead_exclusive_acquire
    | zl__40 when (eq_int (zl__40, (Big_int.of_int (5)))) -> ZRead_stream
    | zl__41 when (eq_int (zl__41, (Big_int.of_int (6)))) -> ZRead_RISCV_acquire
    | zl__42 when (eq_int (zl__42, (Big_int.of_int (7)))) ->
      ZRead_RISCV_strong_acquire
    | zl__43 when (eq_int (zl__43, (Big_int.of_int (8)))) ->
      ZRead_RISCV_reserved
    | zl__44 when (eq_int (zl__44, (Big_int.of_int (9)))) ->
      ZRead_RISCV_reserved_acquire
    | zl__45 when (eq_int (zl__45, (Big_int.of_int (10)))) ->
      ZRead_RISCV_reserved_strong_acquire
    | _ -> ZRead_X86_locked
  end)

and znum_of_read_kind (zargz3 : (zread_kind)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZRead_plain -> Big_int.zero
    | ZRead_reserve -> (Big_int.of_int (1))
    | ZRead_acquire -> (Big_int.of_int (2))
    | ZRead_exclusive -> (Big_int.of_int (3))
    | ZRead_exclusive_acquire -> (Big_int.of_int (4))
    | ZRead_stream -> (Big_int.of_int (5))
    | ZRead_RISCV_acquire -> (Big_int.of_int (6))
    | ZRead_RISCV_strong_acquire -> (Big_int.of_int (7))
    | ZRead_RISCV_reserved -> (Big_int.of_int (8))
    | ZRead_RISCV_reserved_acquire -> (Big_int.of_int (9))
    | ZRead_RISCV_reserved_strong_acquire -> (Big_int.of_int (10))
    | ZRead_X86_locked -> (Big_int.of_int (11))
  end)

and zundefined_read_kind (() : (unit)) : zread_kind = sail_call (fun r ->
  internal_pick [ZRead_plain; ZRead_reserve; ZRead_acquire; ZRead_exclusive; ZRead_exclusive_acquire; ZRead_stream; ZRead_RISCV_acquire; ZRead_RISCV_strong_acquire; ZRead_RISCV_reserved; ZRead_RISCV_reserved_acquire; ZRead_RISCV_reserved_strong_acquire; ZRead_X86_locked])

type zwrite_kind =
  | ZWrite_plain
  | ZWrite_conditional
  | ZWrite_release
  | ZWrite_exclusive
  | ZWrite_exclusive_release
  | ZWrite_RISCV_release
  | ZWrite_RISCV_strong_release
  | ZWrite_RISCV_conditional
  | ZWrite_RISCV_conditional_release
  | ZWrite_RISCV_conditional_strong_release
  | ZWrite_X86_locked;;

let string_of_zwrite_kind = function
  | ZWrite_plain -> "Write_plain"
  | ZWrite_conditional -> "Write_conditional"
  | ZWrite_release -> "Write_release"
  | ZWrite_exclusive -> "Write_exclusive"
  | ZWrite_exclusive_release -> "Write_exclusive_release"
  | ZWrite_RISCV_release -> "Write_RISCV_release"
  | ZWrite_RISCV_strong_release -> "Write_RISCV_strong_release"
  | ZWrite_RISCV_conditional -> "Write_RISCV_conditional"
  | ZWrite_RISCV_conditional_release -> "Write_RISCV_conditional_release"
  | ZWrite_RISCV_conditional_strong_release -> "Write_RISCV_conditional_strong_release"
  | ZWrite_X86_locked -> "Write_X86_locked";;

let rec zwrite_kind_of_num (zargz3 : (Big_int.num)) : zwrite_kind = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__25 when (eq_int (zl__25, Big_int.zero)) -> ZWrite_plain
    | zl__26 when (eq_int (zl__26, (Big_int.of_int (1)))) -> ZWrite_conditional
    | zl__27 when (eq_int (zl__27, (Big_int.of_int (2)))) -> ZWrite_release
    | zl__28 when (eq_int (zl__28, (Big_int.of_int (3)))) -> ZWrite_exclusive
    | zl__29 when (eq_int (zl__29, (Big_int.of_int (4)))) ->
      ZWrite_exclusive_release
    | zl__30 when (eq_int (zl__30, (Big_int.of_int (5)))) ->
      ZWrite_RISCV_release
    | zl__31 when (eq_int (zl__31, (Big_int.of_int (6)))) ->
      ZWrite_RISCV_strong_release
    | zl__32 when (eq_int (zl__32, (Big_int.of_int (7)))) ->
      ZWrite_RISCV_conditional
    | zl__33 when (eq_int (zl__33, (Big_int.of_int (8)))) ->
      ZWrite_RISCV_conditional_release
    | zl__34 when (eq_int (zl__34, (Big_int.of_int (9)))) ->
      ZWrite_RISCV_conditional_strong_release
    | _ -> ZWrite_X86_locked
  end)

and znum_of_write_kind (zargz3 : (zwrite_kind)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZWrite_plain -> Big_int.zero
    | ZWrite_conditional -> (Big_int.of_int (1))
    | ZWrite_release -> (Big_int.of_int (2))
    | ZWrite_exclusive -> (Big_int.of_int (3))
    | ZWrite_exclusive_release -> (Big_int.of_int (4))
    | ZWrite_RISCV_release -> (Big_int.of_int (5))
    | ZWrite_RISCV_strong_release -> (Big_int.of_int (6))
    | ZWrite_RISCV_conditional -> (Big_int.of_int (7))
    | ZWrite_RISCV_conditional_release -> (Big_int.of_int (8))
    | ZWrite_RISCV_conditional_strong_release -> (Big_int.of_int (9))
    | ZWrite_X86_locked -> (Big_int.of_int (10))
  end)

and zundefined_write_kind (() : (unit)) : zwrite_kind = sail_call (fun r ->
  internal_pick [ZWrite_plain; ZWrite_conditional; ZWrite_release; ZWrite_exclusive; ZWrite_exclusive_release; ZWrite_RISCV_release; ZWrite_RISCV_strong_release; ZWrite_RISCV_conditional; ZWrite_RISCV_conditional_release; ZWrite_RISCV_conditional_strong_release; ZWrite_X86_locked])

type zbarrier_kind =
  | ZBarrier_Sync
  | ZBarrier_LwSync
  | ZBarrier_Eieio
  | ZBarrier_Isync
  | ZBarrier_DMB
  | ZBarrier_DMB_ST
  | ZBarrier_DMB_LD
  | ZBarrier_DSB
  | ZBarrier_DSB_ST
  | ZBarrier_DSB_LD
  | ZBarrier_ISB
  | ZBarrier_MIPS_SYNC
  | ZBarrier_RISCV_rw_rw
  | ZBarrier_RISCV_r_rw
  | ZBarrier_RISCV_r_r
  | ZBarrier_RISCV_rw_w
  | ZBarrier_RISCV_w_w
  | ZBarrier_RISCV_w_rw
  | ZBarrier_RISCV_rw_r
  | ZBarrier_RISCV_r_w
  | ZBarrier_RISCV_w_r
  | ZBarrier_RISCV_tso
  | ZBarrier_RISCV_i
  | ZBarrier_x86_MFENCE;;

let string_of_zbarrier_kind = function
  | ZBarrier_Sync -> "Barrier_Sync"
  | ZBarrier_LwSync -> "Barrier_LwSync"
  | ZBarrier_Eieio -> "Barrier_Eieio"
  | ZBarrier_Isync -> "Barrier_Isync"
  | ZBarrier_DMB -> "Barrier_DMB"
  | ZBarrier_DMB_ST -> "Barrier_DMB_ST"
  | ZBarrier_DMB_LD -> "Barrier_DMB_LD"
  | ZBarrier_DSB -> "Barrier_DSB"
  | ZBarrier_DSB_ST -> "Barrier_DSB_ST"
  | ZBarrier_DSB_LD -> "Barrier_DSB_LD"
  | ZBarrier_ISB -> "Barrier_ISB"
  | ZBarrier_MIPS_SYNC -> "Barrier_MIPS_SYNC"
  | ZBarrier_RISCV_rw_rw -> "Barrier_RISCV_rw_rw"
  | ZBarrier_RISCV_r_rw -> "Barrier_RISCV_r_rw"
  | ZBarrier_RISCV_r_r -> "Barrier_RISCV_r_r"
  | ZBarrier_RISCV_rw_w -> "Barrier_RISCV_rw_w"
  | ZBarrier_RISCV_w_w -> "Barrier_RISCV_w_w"
  | ZBarrier_RISCV_w_rw -> "Barrier_RISCV_w_rw"
  | ZBarrier_RISCV_rw_r -> "Barrier_RISCV_rw_r"
  | ZBarrier_RISCV_r_w -> "Barrier_RISCV_r_w"
  | ZBarrier_RISCV_w_r -> "Barrier_RISCV_w_r"
  | ZBarrier_RISCV_tso -> "Barrier_RISCV_tso"
  | ZBarrier_RISCV_i -> "Barrier_RISCV_i"
  | ZBarrier_x86_MFENCE -> "Barrier_x86_MFENCE";;

let rec zbarrier_kind_of_num (zargz3 : (Big_int.num)) : zbarrier_kind = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__2 when (eq_int (zl__2, Big_int.zero)) -> ZBarrier_Sync
    | zl__3 when (eq_int (zl__3, (Big_int.of_int (1)))) -> ZBarrier_LwSync
    | zl__4 when (eq_int (zl__4, (Big_int.of_int (2)))) -> ZBarrier_Eieio
    | zl__5 when (eq_int (zl__5, (Big_int.of_int (3)))) -> ZBarrier_Isync
    | zl__6 when (eq_int (zl__6, (Big_int.of_int (4)))) -> ZBarrier_DMB
    | zl__7 when (eq_int (zl__7, (Big_int.of_int (5)))) -> ZBarrier_DMB_ST
    | zl__8 when (eq_int (zl__8, (Big_int.of_int (6)))) -> ZBarrier_DMB_LD
    | zl__9 when (eq_int (zl__9, (Big_int.of_int (7)))) -> ZBarrier_DSB
    | zl__10 when (eq_int (zl__10, (Big_int.of_int (8)))) -> ZBarrier_DSB_ST
    | zl__11 when (eq_int (zl__11, (Big_int.of_int (9)))) -> ZBarrier_DSB_LD
    | zl__12 when (eq_int (zl__12, (Big_int.of_int (10)))) -> ZBarrier_ISB
    | zl__13 when (eq_int (zl__13, (Big_int.of_int (11)))) -> ZBarrier_MIPS_SYNC
    | zl__14 when (eq_int (zl__14, (Big_int.of_int (12)))) ->
      ZBarrier_RISCV_rw_rw
    | zl__15 when (eq_int (zl__15, (Big_int.of_int (13)))) ->
      ZBarrier_RISCV_r_rw
    | zl__16 when (eq_int (zl__16, (Big_int.of_int (14)))) -> ZBarrier_RISCV_r_r
    | zl__17 when (eq_int (zl__17, (Big_int.of_int (15)))) ->
      ZBarrier_RISCV_rw_w
    | zl__18 when (eq_int (zl__18, (Big_int.of_int (16)))) -> ZBarrier_RISCV_w_w
    | zl__19 when (eq_int (zl__19, (Big_int.of_int (17)))) ->
      ZBarrier_RISCV_w_rw
    | zl__20 when (eq_int (zl__20, (Big_int.of_int (18)))) ->
      ZBarrier_RISCV_rw_r
    | zl__21 when (eq_int (zl__21, (Big_int.of_int (19)))) -> ZBarrier_RISCV_r_w
    | zl__22 when (eq_int (zl__22, (Big_int.of_int (20)))) -> ZBarrier_RISCV_w_r
    | zl__23 when (eq_int (zl__23, (Big_int.of_int (21)))) -> ZBarrier_RISCV_tso
    | zl__24 when (eq_int (zl__24, (Big_int.of_int (22)))) -> ZBarrier_RISCV_i
    | _ -> ZBarrier_x86_MFENCE
  end)

and znum_of_barrier_kind (zargz3 : (zbarrier_kind)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZBarrier_Sync -> Big_int.zero
    | ZBarrier_LwSync -> (Big_int.of_int (1))
    | ZBarrier_Eieio -> (Big_int.of_int (2))
    | ZBarrier_Isync -> (Big_int.of_int (3))
    | ZBarrier_DMB -> (Big_int.of_int (4))
    | ZBarrier_DMB_ST -> (Big_int.of_int (5))
    | ZBarrier_DMB_LD -> (Big_int.of_int (6))
    | ZBarrier_DSB -> (Big_int.of_int (7))
    | ZBarrier_DSB_ST -> (Big_int.of_int (8))
    | ZBarrier_DSB_LD -> (Big_int.of_int (9))
    | ZBarrier_ISB -> (Big_int.of_int (10))
    | ZBarrier_MIPS_SYNC -> (Big_int.of_int (11))
    | ZBarrier_RISCV_rw_rw -> (Big_int.of_int (12))
    | ZBarrier_RISCV_r_rw -> (Big_int.of_int (13))
    | ZBarrier_RISCV_r_r -> (Big_int.of_int (14))
    | ZBarrier_RISCV_rw_w -> (Big_int.of_int (15))
    | ZBarrier_RISCV_w_w -> (Big_int.of_int (16))
    | ZBarrier_RISCV_w_rw -> (Big_int.of_int (17))
    | ZBarrier_RISCV_rw_r -> (Big_int.of_int (18))
    | ZBarrier_RISCV_r_w -> (Big_int.of_int (19))
    | ZBarrier_RISCV_w_r -> (Big_int.of_int (20))
    | ZBarrier_RISCV_tso -> (Big_int.of_int (21))
    | ZBarrier_RISCV_i -> (Big_int.of_int (22))
    | ZBarrier_x86_MFENCE -> (Big_int.of_int (23))
  end)

and zundefined_barrier_kind (() : (unit)) : zbarrier_kind = sail_call (fun r ->
  internal_pick [ZBarrier_Sync; ZBarrier_LwSync; ZBarrier_Eieio; ZBarrier_Isync; ZBarrier_DMB; ZBarrier_DMB_ST; ZBarrier_DMB_LD; ZBarrier_DSB; ZBarrier_DSB_ST; ZBarrier_DSB_LD; ZBarrier_ISB; ZBarrier_MIPS_SYNC; ZBarrier_RISCV_rw_rw; ZBarrier_RISCV_r_rw; ZBarrier_RISCV_r_r; ZBarrier_RISCV_rw_w; ZBarrier_RISCV_w_w; ZBarrier_RISCV_w_rw; ZBarrier_RISCV_rw_r; ZBarrier_RISCV_r_w; ZBarrier_RISCV_w_r; ZBarrier_RISCV_tso; ZBarrier_RISCV_i; ZBarrier_x86_MFENCE])

type ztrans_kind =
  | ZTransaction_start
  | ZTransaction_commit
  | ZTransaction_abort;;

let string_of_ztrans_kind = function
  | ZTransaction_start -> "Transaction_start"
  | ZTransaction_commit -> "Transaction_commit"
  | ZTransaction_abort -> "Transaction_abort";;

let rec ztrans_kind_of_num (zargz3 : (Big_int.num)) : ztrans_kind = sail_call (fun r ->
  begin
    match zargz3 with
    | zl__0 when (eq_int (zl__0, Big_int.zero)) -> ZTransaction_start
    | zl__1 when (eq_int (zl__1, (Big_int.of_int (1)))) -> ZTransaction_commit
    | _ -> ZTransaction_abort
  end)

and znum_of_trans_kind (zargz3 : (ztrans_kind)) : Big_int.num = sail_call (fun r ->
  begin
    match zargz3 with
    | ZTransaction_start -> Big_int.zero
    | ZTransaction_commit -> (Big_int.of_int (1))
    | ZTransaction_abort -> (Big_int.of_int (2))
  end)

and zundefined_trans_kind (() : (unit)) : ztrans_kind = sail_call (fun r ->
  internal_pick [ZTransaction_start; ZTransaction_commit; ZTransaction_abort])

type  zinstruction_kind =
  | ZIK_barrier of zbarrier_kind
  | ZIK_mem_read of zread_kind
  | ZIK_mem_write of zwrite_kind
  | ZIK_mem_rmw of (zread_kind * zwrite_kind)
  | ZIK_branch of unit
  | ZIK_trans of ztrans_kind
  | ZIK_simple of unit;;

let string_of_zinstruction_kind _ = "VARIANT";;

let rec zundefined_instruction_kind (() : (unit)) : zinstruction_kind = sail_call (fun r ->
  let zu_0 = (zundefined_barrier_kind ()) in
  let zu_1 = (zundefined_read_kind ()) in
  let zu_2 = (zundefined_trans_kind ()) in
  let zu_3 = (undefined_unit ()) in
  let zu_4 = (zundefined_write_kind ()) in
  internal_pick [ZIK_barrier zu_0; ZIK_mem_read zu_1; ZIK_mem_write zu_4; ZIK_mem_rmw (zu_1, zu_4); ZIK_branch zu_3; ZIK_trans zu_2; ZIK_simple zu_3])

let zGPRstr = ["x31"; "x30"; "x29"; "x28"; "x27"; "x26"; "x25"; "x24"; "x23"; "x22"; "x21"; "x20"; "x19"; "x18"; "x17"; "x16"; "x15"; "x14"; "x13"; "x12"; "x11"; "x10"; "x9"; "x8"; "x7"; "x6"; "x5"; "x4"; "x3"; "x2"; "x1"; "x0"];;

let zCIA_fp = (ZRFull "CIA");;

let zNIA_fp = (ZRFull "NIA");;

let rec zinitial_analysis (zinstr : (zast)) : (zregfps * zregfps * zregfps * zniafps * zdiafp * zinstruction_kind) = sail_call (fun r ->
  let ziR = ref (([]) : (zregfp) list) in
  let zoR = ref (([]) : (zregfp) list) in
  let zaR = ref (([]) : (zregfp) list) in
  let zik = ref ((ZIK_simple ()) : zinstruction_kind) in
  let zNias = ref (([ZNIAFP_successor ()]) : (zniafp) list) in
  let zDia = ref ((ZDIAFP_none ()) : zdiafp) in
  begin
    begin
      match zinstr with
      | ZEBREAK (()) -> ()
      | ZUTYPE (zimm, zrd, zop) ->
        if (eq_int ((zregbits_to_regno zrd), Big_int.zero)) then () else (zoR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrd))) :: !zoR))
      | ZRISCV_JAL (zimm, zrd) ->
        begin
          if (eq_int ((zregbits_to_regno zrd), Big_int.zero)) then () else (zoR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrd))) :: !zoR));
          let zoffset = (zEXTS ((Big_int.of_int (64)), zimm)) in
          zNias := ([ZNIAFP_concrete_address (add_vec (!zPC, zoffset))]);
          zik := (ZIK_branch ())
        end
      | ZRISCV_JALR (zimm, zrs, zrd) ->
        begin
          if (eq_int ((zregbits_to_regno zrs), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrd), Big_int.zero)) then () else (zoR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrd))) :: !zoR));
          let zoffset = (zEXTS ((Big_int.of_int (64)), zimm)) in
          zNias := ([ZNIAFP_indirect_address ()]);
          zik := (ZIK_branch ())
        end
      | ZBTYPE (zimm, zrs2, zrs1, zop) ->
        begin
          if (eq_int ((zregbits_to_regno zrs2), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs2))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrs1), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs1))) :: !ziR));
          zik := (ZIK_branch ());
          let zoffset = (zEXTS ((Big_int.of_int (64)), zimm)) in
          zNias := ([ZNIAFP_concrete_address (add_vec (!zPC, zoffset)); ZNIAFP_successor ()])
        end
      | ZITYPE (zimm, zrs, zrd, zop) ->
        begin
          if (eq_int ((zregbits_to_regno zrs), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrd), Big_int.zero)) then () else (zoR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrd))) :: !zoR))
        end
      | ZSHIFTIOP (zimm, zrs, zrd, zop) ->
        begin
          if (eq_int ((zregbits_to_regno zrs), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrd), Big_int.zero)) then () else (zoR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrd))) :: !zoR))
        end
      | ZRTYPE (zrs2, zrs1, zrd, zop) ->
        begin
          if (eq_int ((zregbits_to_regno zrs2), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs2))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrs1), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs1))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrd), Big_int.zero)) then () else (zoR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrd))) :: !zoR))
        end
      | ZCSR (zcsr, zrs1, zrd, zis_imm, zop) ->
        let zisWrite = (begin
          match zop with
          | ZCSRRW -> true
          | _ ->
            if zis_imm then (zneq_int ((uint zrs1), Big_int.zero)) else (zneq_int ((uint zrs1), Big_int.zero))
        end) in
        begin
          ziR := (ZRFull (zcsr_name zcsr) :: !ziR);
          if (not zis_imm) then (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs1))) :: !ziR)) else ();
          if zisWrite then (zoR := (ZRFull (zcsr_name zcsr) :: !zoR)) else ();
          zoR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrd))) :: !zoR)
        end
      | ZLOAD (zimm, zrs, zrd, zunsign, zwidth, zaq, zrl) ->
        begin
          if (eq_int ((zregbits_to_regno zrs), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrd), Big_int.zero)) then () else (zoR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrd))) :: !zoR));
          zaR := (!ziR);
          zik := (begin
            match (zaq, zrl) with
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, false)) && (eq_bool (zp0z3, false))) ->
              ZIK_mem_read ZRead_plain
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, false)) && (eq_bool (zp0z3, true))) ->
              ZIK_mem_read ZRead_RISCV_acquire
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, true)) && (eq_bool (zp0z3, true))) ->
              ZIK_mem_read ZRead_RISCV_strong_acquire
            | _ ->
              zinternal_error "LOAD type not implemented in initial_analysis"
          end)
        end
      | ZSTORE (zimm, zrs2, zrs1, zwidth, zaq, zrl) ->
        begin
          if (eq_int ((zregbits_to_regno zrs2), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs2))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrs1), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs1))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrs1), Big_int.zero)) then () else (zaR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs1))) :: !zaR));
          zik := (begin
            match (zaq, zrl) with
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, false)) && (eq_bool (zp0z3, false))) ->
              ZIK_mem_write ZWrite_plain
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, true)) && (eq_bool (zp0z3, false))) ->
              ZIK_mem_write ZWrite_RISCV_release
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, true)) && (eq_bool (zp0z3, true))) ->
              ZIK_mem_write ZWrite_RISCV_strong_release
            | _ ->
              zinternal_error "STORE type not implemented in initial_analysis"
          end)
        end
      | ZADDIW (zimm, zrs, zrd) ->
        begin
          if (eq_int ((zregbits_to_regno zrs), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrd), Big_int.zero)) then () else (zoR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrd))) :: !zoR))
        end
      | ZSHIFTW (zimm, zrs, zrd, zop) ->
        begin
          if (eq_int ((zregbits_to_regno zrs), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrd), Big_int.zero)) then () else (zoR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrd))) :: !zoR))
        end
      | ZRTYPEW (zrs2, zrs1, zrd, zop) ->
        begin
          if (eq_int ((zregbits_to_regno zrs2), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs2))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrs1), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs1))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrd), Big_int.zero)) then () else (zoR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrd))) :: !zoR))
        end
      | ZFENCE (zpred, zsucc) ->
        zik := (begin
          match (zpred, zsucc) with
          | (zv__1404, zv__1405) when (let zp0z3 = (access (zv__1404, (Big_int.of_int (1)))) in
          let zp1z3 = (access (zv__1404, Big_int.zero)) in
          let zp2z3 = (access (zv__1405, (Big_int.of_int (1)))) in
          let zp3z3 = (access (zv__1405, Big_int.zero)) in
          (((eq_bit (zp3z3, B1)) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
            ZIK_barrier ZBarrier_RISCV_rw_rw
          | (zv__1408, zv__1409) when (let zp0z3 = (access (zv__1408, (Big_int.of_int (1)))) in
          let zp1z3 = (access (zv__1408, Big_int.zero)) in
          let zp2z3 = (access (zv__1409, (Big_int.of_int (1)))) in
          let zp3z3 = (access (zv__1409, Big_int.zero)) in
          (((eq_bit (zp3z3, B1)) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
            ZIK_barrier ZBarrier_RISCV_r_rw
          | (zv__1412, zv__1413) when (let zp0z3 = (access (zv__1412, (Big_int.of_int (1)))) in
          let zp1z3 = (access (zv__1412, Big_int.zero)) in
          let zp2z3 = (access (zv__1413, (Big_int.of_int (1)))) in
          let zp3z3 = (access (zv__1413, Big_int.zero)) in
          (((eq_bit (zp3z3, B0)) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
            ZIK_barrier ZBarrier_RISCV_r_r
          | (zv__1416, zv__1417) when (let zp0z3 = (access (zv__1416, (Big_int.of_int (1)))) in
          let zp1z3 = (access (zv__1416, Big_int.zero)) in
          let zp2z3 = (access (zv__1417, (Big_int.of_int (1)))) in
          let zp3z3 = (access (zv__1417, Big_int.zero)) in
          (((eq_bit (zp3z3, B1)) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
            ZIK_barrier ZBarrier_RISCV_rw_w
          | (zv__1420, zv__1421) when (let zp0z3 = (access (zv__1420, (Big_int.of_int (1)))) in
          let zp1z3 = (access (zv__1420, Big_int.zero)) in
          let zp2z3 = (access (zv__1421, (Big_int.of_int (1)))) in
          let zp3z3 = (access (zv__1421, Big_int.zero)) in
          (((eq_bit (zp3z3, B1)) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
            ZIK_barrier ZBarrier_RISCV_w_w
          | (zv__1424, zv__1425) when (let zp0z3 = (access (zv__1424, (Big_int.of_int (1)))) in
          let zp1z3 = (access (zv__1424, Big_int.zero)) in
          let zp2z3 = (access (zv__1425, (Big_int.of_int (1)))) in
          let zp3z3 = (access (zv__1425, Big_int.zero)) in
          (((eq_bit (zp3z3, B1)) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
            ZIK_barrier ZBarrier_RISCV_w_rw
          | (zv__1428, zv__1429) when (let zp0z3 = (access (zv__1428, (Big_int.of_int (1)))) in
          let zp1z3 = (access (zv__1428, Big_int.zero)) in
          let zp2z3 = (access (zv__1429, (Big_int.of_int (1)))) in
          let zp3z3 = (access (zv__1429, Big_int.zero)) in
          (((eq_bit (zp3z3, B0)) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
            ZIK_barrier ZBarrier_RISCV_rw_r
          | (zv__1432, zv__1433) when (let zp0z3 = (access (zv__1432, (Big_int.of_int (1)))) in
          let zp1z3 = (access (zv__1432, Big_int.zero)) in
          let zp2z3 = (access (zv__1433, (Big_int.of_int (1)))) in
          let zp3z3 = (access (zv__1433, Big_int.zero)) in
          (((eq_bit (zp3z3, B1)) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B1))) ->
            ZIK_barrier ZBarrier_RISCV_r_w
          | (zv__1436, zv__1437) when (let zp0z3 = (access (zv__1436, (Big_int.of_int (1)))) in
          let zp1z3 = (access (zv__1436, Big_int.zero)) in
          let zp2z3 = (access (zv__1437, (Big_int.of_int (1)))) in
          let zp3z3 = (access (zv__1437, Big_int.zero)) in
          (((eq_bit (zp3z3, B0)) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B0))) ->
            ZIK_barrier ZBarrier_RISCV_w_r
          | (zv__1440, zv__1441) when (let zp0z3 = (access (zv__1440, (Big_int.of_int (1)))) in
          let zp1z3 = (access (zv__1440, Big_int.zero)) in
          let zp2z3 = (access (zv__1441, (Big_int.of_int (1)))) in
          let zp3z3 = (access (zv__1441, Big_int.zero)) in
          (((eq_bit (zp3z3, B0)) && (eq_bit (zp2z3, B0))) && (eq_bit (zp1z3, B0))) && (eq_bit (zp0z3, B0))) ->
            ZIK_simple ()
          | _ ->
            zinternal_error "barrier type not implemented in initial_analysis"
        end)
      | ZFENCE_TSO (zpred, zsucc) ->
        zik := (begin
          match (zpred, zsucc) with
          | (zv__1444, zv__1445) when (let zp0z3 = (access (zv__1444, (Big_int.of_int (1)))) in
          let zp1z3 = (access (zv__1444, Big_int.zero)) in
          let zp2z3 = (access (zv__1445, (Big_int.of_int (1)))) in
          let zp3z3 = (access (zv__1445, Big_int.zero)) in
          (((eq_bit (zp3z3, B1)) && (eq_bit (zp2z3, B1))) && (eq_bit (zp1z3, B1))) && (eq_bit (zp0z3, B1))) ->
            ZIK_barrier ZBarrier_RISCV_tso
          | _ ->
            zinternal_error "barrier type not implemented in initial_analysis"
        end)
      | ZFENCEI (()) -> zik := (ZIK_simple ())
      | ZLOADRES (zaq, zrl, zrs1, zwidth, zrd) ->
        begin
          if (eq_int ((zregbits_to_regno zrs1), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs1))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrd), Big_int.zero)) then () else (zoR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrd))) :: !zoR));
          zaR := (!ziR);
          zik := (begin
            match (zaq, zrl) with
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, false)) && (eq_bool (zp0z3, false))) ->
              ZIK_mem_read ZRead_RISCV_reserved
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, false)) && (eq_bool (zp0z3, true))) ->
              ZIK_mem_read ZRead_RISCV_reserved_acquire
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, true)) && (eq_bool (zp0z3, true))) ->
              ZIK_mem_read ZRead_RISCV_reserved_strong_acquire
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, true)) && (eq_bool (zp0z3, false))) ->
              zinternal_error "LOADRES type not implemented in initial_analysis"
          end)
        end
      | ZSTORECON (zaq, zrl, zrs2, zrs1, zwidth, zrd) ->
        begin
          if (eq_int ((zregbits_to_regno zrs2), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs2))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrs1), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs1))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrs1), Big_int.zero)) then () else (zaR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs1))) :: !zaR));
          if (eq_int ((zregbits_to_regno zrd), Big_int.zero)) then () else (zoR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrd))) :: !zoR));
          zik := (begin
            match (zaq, zrl) with
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, false)) && (eq_bool (zp0z3, false))) ->
              ZIK_mem_write ZWrite_RISCV_conditional
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, true)) && (eq_bool (zp0z3, false))) ->
              ZIK_mem_write ZWrite_RISCV_conditional_release
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, true)) && (eq_bool (zp0z3, true))) ->
              ZIK_mem_write ZWrite_RISCV_conditional_strong_release
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, false)) && (eq_bool (zp0z3, true))) ->
              zinternal_error "STORECON type not implemented in initial_analysis"
          end)
        end
      | ZAMO (zop, zaq, zrl, zrs2, zrs1, zwidth, zrd) ->
        begin
          if (eq_int ((zregbits_to_regno zrs2), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs2))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrs1), Big_int.zero)) then () else (ziR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs1))) :: !ziR));
          if (eq_int ((zregbits_to_regno zrs1), Big_int.zero)) then () else (zaR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrs1))) :: !zaR));
          if (eq_int ((zregbits_to_regno zrd), Big_int.zero)) then () else (zoR := (ZRFull (access (zGPRstr, (zregbits_to_regno zrd))) :: !zoR));
          zik := (begin
            match (zaq, zrl) with
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, false)) && (eq_bool (zp0z3, false))) ->
              ZIK_mem_rmw (ZRead_RISCV_reserved, ZWrite_RISCV_conditional)
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, true)) && (eq_bool (zp0z3, false))) ->
              ZIK_mem_rmw (ZRead_RISCV_reserved, ZWrite_RISCV_conditional_release)
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, false)) && (eq_bool (zp0z3, true))) ->
              ZIK_mem_rmw (ZRead_RISCV_reserved_acquire, ZWrite_RISCV_conditional)
            | (zp0z3, zp1z3) when ((eq_bool (zp1z3, true)) && (eq_bool (zp0z3, true))) ->
              ZIK_mem_rmw (ZRead_RISCV_reserved_acquire, ZWrite_RISCV_conditional_release)
          end)
        end
      | _ -> ()
    end;
    (!ziR, !zoR, !zaR, !zNias, !zDia, !zik)
  end)

and zinitializze_registers (() : (unit)) : unit = sail_call (fun r ->
  begin
    zPC := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    znextPC := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zinstbits := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zPCC := (zundefined_Capability ());
    znextPCC := (zundefined_Capability ());
    zDDC := (zundefined_Capability ());
    zUTCC := (zundefined_Capability ());
    zUScratchC := (zundefined_Capability ());
    zUEPCC := (zundefined_Capability ());
    zSTCC := (zundefined_Capability ());
    zSScratchC := (zundefined_Capability ());
    zSEPCC := (zundefined_Capability ());
    zMTCC := (zundefined_Capability ());
    zMScratchC := (zundefined_Capability ());
    zMEPCC := (zundefined_Capability ());
    zx1 := (zundefined_Capability ());
    zx2 := (zundefined_Capability ());
    zx3 := (zundefined_Capability ());
    zx4 := (zundefined_Capability ());
    zx5 := (zundefined_Capability ());
    zx6 := (zundefined_Capability ());
    zx7 := (zundefined_Capability ());
    zx8 := (zundefined_Capability ());
    zx9 := (zundefined_Capability ());
    zx10 := (zundefined_Capability ());
    zx11 := (zundefined_Capability ());
    zx12 := (zundefined_Capability ());
    zx13 := (zundefined_Capability ());
    zx14 := (zundefined_Capability ());
    zx15 := (zundefined_Capability ());
    zx16 := (zundefined_Capability ());
    zx17 := (zundefined_Capability ());
    zx18 := (zundefined_Capability ());
    zx19 := (zundefined_Capability ());
    zx20 := (zundefined_Capability ());
    zx21 := (zundefined_Capability ());
    zx22 := (zundefined_Capability ());
    zx23 := (zundefined_Capability ());
    zx24 := (zundefined_Capability ());
    zx25 := (zundefined_Capability ());
    zx26 := (zundefined_Capability ());
    zx27 := (zundefined_Capability ());
    zx28 := (zundefined_Capability ());
    zx29 := (zundefined_Capability ());
    zx30 := (zundefined_Capability ());
    zx31 := (zundefined_Capability ());
    zcur_privilege := (zundefined_Privilege ());
    zcur_inst := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zmisa := (zundefined_Misa ());
    zmstatus := (zundefined_Mstatus ());
    zmip := (zundefined_Minterrupts ());
    zmie := (zundefined_Minterrupts ());
    zmideleg := (zundefined_Minterrupts ());
    zmedeleg := (zundefined_Medeleg ());
    zmcause := (zundefined_Mcause ());
    zmtval := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zmscratch := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zmcounteren := (zundefined_Counteren ());
    zscounteren := (zundefined_Counteren ());
    zmcycle := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zmtime := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zminstret := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zminstret_written := (undefined_bool ());
    zmvendorid := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zmimpid := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zmarchid := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zmhartid := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zpmpaddr0 := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zpmpcfg0 := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zsedeleg := (zundefined_Sedeleg ());
    zsideleg := (zundefined_Sinterrupts ());
    zsatp := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zsscratch := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zscause := (zundefined_Mcause ());
    zstval := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    ztselect := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zmccsr := (zundefined_ccsr ());
    zsccsr := (zundefined_ccsr ());
    zuccsr := (zundefined_ccsr ());
    zuscratch := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zucause := (zundefined_Mcause ());
    zutval := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zmtimecmp := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zhtif_tohost := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    zhtif_done := (undefined_bool ());
    zhtif_exit_code := (undefined_vector ((Big_int.of_int (64)), (undefined_bit ())));
    ztlb39 := (zundefined_option (zundefined_TLB39_Entry ()))
  end)

type generators = {
  gen_zClearRegSet: generators -> zClearRegSet;
  gen_zamoop: generators -> zamoop;
  gen_zast: generators -> zast;
  gen_zbit: generators -> bit;
  gen_zbits: generators -> int -> zbits;
  gen_zbool: generators -> bool;
  gen_zbop: generators -> zbop;
  gen_zcregbits: generators -> zcregbits;
  gen_zcsrop: generators -> zcsrop;
  gen_zhalf: generators -> zhalf;
  gen_ziop: generators -> ziop;
  gen_zregbits: generators -> zregbits;
  gen_zrop: generators -> zrop;
  gen_zropw: generators -> zropw;
  gen_zsop: generators -> zsop;
  gen_zsopw: generators -> zsopw;
  gen_zunit: generators -> unit;
  gen_zuop: generators -> zuop;
  gen_zvector: 'zkz36. generators -> int -> bool -> (generators -> 'zkz36) -> ('zkz36) list;
  gen_zword: generators -> zword;
  gen_zword_width: generators -> zword_width
}

let rand_zClearRegSet g =
  rand_choice [ZGPRegs; ZFPRegs]
let constructors_zClearRegSet = [
  "GPRegs";
  "FPRegs"
  ]
let build_zClearRegSet g c = match c with
  | "GPRegs" -> ZGPRegs
  | "FPRegs" -> ZFPRegs

let rand_zamoop g =
  rand_choice [
    ZAMOSWAP;
    ZAMOADD;
    ZAMOXOR;
    ZAMOAND;
    ZAMOOR;
    ZAMOMIN;
    ZAMOMAX;
    ZAMOMINU;
    ZAMOMAXU
  ]
let constructors_zamoop = [
  "AMOSWAP";
  "AMOADD";
  "AMOXOR";
  "AMOAND";
  "AMOOR";
  "AMOMIN";
  "AMOMAX";
  "AMOMINU";
  "AMOMAXU"
  ]
let build_zamoop g c = match c with
  | "AMOSWAP" -> ZAMOSWAP
  | "AMOADD" -> ZAMOADD
  | "AMOXOR" -> ZAMOXOR
  | "AMOAND" -> ZAMOAND
  | "AMOOR" -> ZAMOOR
  | "AMOMIN" -> ZAMOMIN
  | "AMOMAX" -> ZAMOMAX
  | "AMOMINU" -> ZAMOMINU
  | "AMOMAXU" -> ZAMOMAXU

let rand_zast g =
  let c = rand_choice [
    (fun g -> ZUTYPE (g.gen_zbits g 20, g.gen_zregbits g, g.gen_zuop g));
    (fun g -> ZRISCV_JAL (g.gen_zbits g 21, g.gen_zregbits g));
    (fun g -> ZRISCV_JALR (g.gen_zbits g 12, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZBTYPE (g.gen_zbits g 13, g.gen_zregbits g, g.gen_zregbits g, g.gen_zbop g));
    (fun g -> ZITYPE (g.gen_zbits g 12, g.gen_zregbits g, g.gen_zregbits g, g.gen_ziop g));
    (fun g -> ZSHIFTIOP (g.gen_zbits g 6, g.gen_zregbits g, g.gen_zregbits g, g.gen_zsop g));
    (fun g -> ZRTYPE (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zrop g));
    (fun g -> ZLOAD (g.gen_zbits g 12, g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g, g.gen_zword_width g, g.gen_zbool g, g.gen_zbool g));
    (fun g -> ZSTORE (g.gen_zbits g 12, g.gen_zregbits g, g.gen_zregbits g, g.gen_zword_width g, g.gen_zbool g, g.gen_zbool g));
    (fun g -> ZADDIW (g.gen_zbits g 12, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZSHIFTW (g.gen_zbits g 5, g.gen_zregbits g, g.gen_zregbits g, g.gen_zsop g));
    (fun g -> ZRTYPEW (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zropw g));
    (fun g -> ZSHIFTIWOP (g.gen_zbits g 5, g.gen_zregbits g, g.gen_zregbits g, g.gen_zsopw g));
    (fun g -> ZFENCE (g.gen_zbits g 4, g.gen_zbits g 4));
    (fun g -> ZFENCE_TSO (g.gen_zbits g 4, g.gen_zbits g 4));
    (fun g -> ZFENCEI (g.gen_zunit g));
    (fun g -> ZECALL (g.gen_zunit g));
    (fun g -> ZMRET (g.gen_zunit g));
    (fun g -> ZSRET (g.gen_zunit g));
    (fun g -> ZEBREAK (g.gen_zunit g));
    (fun g -> ZWFI (g.gen_zunit g));
    (fun g -> ZSFENCE_VMA (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZLOADRES (g.gen_zbool g, g.gen_zbool g, g.gen_zregbits g, g.gen_zword_width g, g.gen_zregbits g));
    (fun g -> ZSTORECON (g.gen_zbool g, g.gen_zbool g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zword_width g, g.gen_zregbits g));
    (fun g -> ZAMO (g.gen_zamoop g, g.gen_zbool g, g.gen_zbool g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zword_width g, g.gen_zregbits g));
    (fun g -> ZC_NOP (g.gen_zunit g));
    (fun g -> ZC_ADDI4SPN (g.gen_zcregbits g, g.gen_zbits g 8));
    (fun g -> ZC_LW (g.gen_zbits g 5, g.gen_zcregbits g, g.gen_zcregbits g));
    (fun g -> ZC_LD (g.gen_zbits g 5, g.gen_zcregbits g, g.gen_zcregbits g));
    (fun g -> ZC_SW (g.gen_zbits g 5, g.gen_zcregbits g, g.gen_zcregbits g));
    (fun g -> ZC_SD (g.gen_zbits g 5, g.gen_zcregbits g, g.gen_zcregbits g));
    (fun g -> ZC_ADDI (g.gen_zbits g 6, g.gen_zregbits g));
    (fun g -> ZC_JAL (g.gen_zbits g 11));
    (fun g -> ZC_ADDIW (g.gen_zbits g 6, g.gen_zregbits g));
    (fun g -> ZC_LI (g.gen_zbits g 6, g.gen_zregbits g));
    (fun g -> ZC_ADDI16SP (g.gen_zbits g 6));
    (fun g -> ZC_LUI (g.gen_zbits g 6, g.gen_zregbits g));
    (fun g -> ZC_SRLI (g.gen_zbits g 6, g.gen_zcregbits g));
    (fun g -> ZC_SRAI (g.gen_zbits g 6, g.gen_zcregbits g));
    (fun g -> ZC_ANDI (g.gen_zbits g 6, g.gen_zcregbits g));
    (fun g -> ZC_SUB (g.gen_zcregbits g, g.gen_zcregbits g));
    (fun g -> ZC_XOR (g.gen_zcregbits g, g.gen_zcregbits g));
    (fun g -> ZC_OR (g.gen_zcregbits g, g.gen_zcregbits g));
    (fun g -> ZC_AND (g.gen_zcregbits g, g.gen_zcregbits g));
    (fun g -> ZC_SUBW (g.gen_zcregbits g, g.gen_zcregbits g));
    (fun g -> ZC_ADDW (g.gen_zcregbits g, g.gen_zcregbits g));
    (fun g -> ZC_J (g.gen_zbits g 11));
    (fun g -> ZC_BEQZ (g.gen_zbits g 8, g.gen_zcregbits g));
    (fun g -> ZC_BNEZ (g.gen_zbits g 8, g.gen_zcregbits g));
    (fun g -> ZC_SLLI (g.gen_zbits g 6, g.gen_zregbits g));
    (fun g -> ZC_LWSP (g.gen_zbits g 6, g.gen_zregbits g));
    (fun g -> ZC_LDSP (g.gen_zbits g 6, g.gen_zregbits g));
    (fun g -> ZC_SWSP (g.gen_zbits g 6, g.gen_zregbits g));
    (fun g -> ZC_SDSP (g.gen_zbits g 6, g.gen_zregbits g));
    (fun g -> ZC_JR (g.gen_zregbits g));
    (fun g -> ZC_JALR (g.gen_zregbits g));
    (fun g -> ZC_MV (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZC_EBREAK (g.gen_zunit g));
    (fun g -> ZC_ADD (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZMUL (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g, g.gen_zbool g, g.gen_zbool g));
    (fun g -> ZDIV (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g));
    (fun g -> ZREM (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g));
    (fun g -> ZMULW (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZDIVW (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g));
    (fun g -> ZREMW (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g));
    (fun g -> ZCSR (g.gen_zbits g 12, g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g, g.gen_zcsrop g));
    (fun g -> ZCGetPerm (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCGetType (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCGetBase (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCGetLen (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCGetTag (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCGetSealed (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCGetOffset (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCGetAddr (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCSpecialRW (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCAndPerm (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCToPtr (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCIncOffset (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCIncOffsetImmediate (g.gen_zregbits g, g.gen_zregbits g, g.gen_zbits g 12));
    (fun g -> ZCSetOffset (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCSetBounds (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCSetBoundsImmediate (g.gen_zregbits g, g.gen_zregbits g, g.gen_zbits g 12));
    (fun g -> ZCSetBoundsExact (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCClearTag (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCMove (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZClearRegs (g.gen_zClearRegSet g, g.gen_zbits g 2, g.gen_zbits g 8));
    (fun g -> ZCFromPtr (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCBuildCap (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCCopyType (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCCheckPerm (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCCheckType (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCCheckTag (g.gen_zregbits g));
    (fun g -> ZCTestSubset (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCSeal (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCCSeal (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCUnseal (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCCall (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCJALR (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCLoadDDC (g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g, g.gen_zword_width g));
    (fun g -> ZCLoadCap (g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g, g.gen_zword_width g));
    (fun g -> ZCLoadCapDDC (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCLoadCapCap (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCStoreDDC (g.gen_zregbits g, g.gen_zregbits g, g.gen_zword_width g));
    (fun g -> ZCStoreCap (g.gen_zregbits g, g.gen_zregbits g, g.gen_zword_width g));
    (fun g -> ZCStoreCapDDC (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZCStoreCapCap (g.gen_zregbits g, g.gen_zregbits g));
    (fun g -> ZILLEGAL (g.gen_zword g));
    (fun g -> ZC_ILLEGAL (g.gen_zhalf g))
  ] in c g
let constructors_zast = [
  "UTYPE";
  "RISCV_JAL";
  "RISCV_JALR";
  "BTYPE";
  "ITYPE";
  "SHIFTIOP";
  "RTYPE";
  "LOAD";
  "STORE";
  "ADDIW";
  "SHIFTW";
  "RTYPEW";
  "SHIFTIWOP";
  "FENCE";
  "FENCE_TSO";
  "FENCEI";
  "ECALL";
  "MRET";
  "SRET";
  "EBREAK";
  "WFI";
  "SFENCE_VMA";
  "LOADRES";
  "STORECON";
  "AMO";
  "C_NOP";
  "C_ADDI4SPN";
  "C_LW";
  "C_LD";
  "C_SW";
  "C_SD";
  "C_ADDI";
  "C_JAL";
  "C_ADDIW";
  "C_LI";
  "C_ADDI16SP";
  "C_LUI";
  "C_SRLI";
  "C_SRAI";
  "C_ANDI";
  "C_SUB";
  "C_XOR";
  "C_OR";
  "C_AND";
  "C_SUBW";
  "C_ADDW";
  "C_J";
  "C_BEQZ";
  "C_BNEZ";
  "C_SLLI";
  "C_LWSP";
  "C_LDSP";
  "C_SWSP";
  "C_SDSP";
  "C_JR";
  "C_JALR";
  "C_MV";
  "C_EBREAK";
  "C_ADD";
  "MUL";
  "DIV";
  "REM";
  "MULW";
  "DIVW";
  "REMW";
  "CSR";
  "CGetPerm";
  "CGetType";
  "CGetBase";
  "CGetLen";
  "CGetTag";
  "CGetSealed";
  "CGetOffset";
  "CGetAddr";
  "CSpecialRW";
  "CAndPerm";
  "CToPtr";
  "CIncOffset";
  "CIncOffsetImmediate";
  "CSetOffset";
  "CSetBounds";
  "CSetBoundsImmediate";
  "CSetBoundsExact";
  "CClearTag";
  "CMove";
  "ClearRegs";
  "CFromPtr";
  "CBuildCap";
  "CCopyType";
  "CCheckPerm";
  "CCheckType";
  "CCheckTag";
  "CTestSubset";
  "CSeal";
  "CCSeal";
  "CUnseal";
  "CCall";
  "CJALR";
  "CLoadDDC";
  "CLoadCap";
  "CLoadCapDDC";
  "CLoadCapCap";
  "CStoreDDC";
  "CStoreCap";
  "CStoreCapDDC";
  "CStoreCapCap";
  "ILLEGAL";
  "C_ILLEGAL"
  ]
let build_zast g c = match c with
  | "UTYPE" -> ZUTYPE (g.gen_zbits g 20, g.gen_zregbits g, g.gen_zuop g)
  | "RISCV_JAL" -> ZRISCV_JAL (g.gen_zbits g 21, g.gen_zregbits g)
  | "RISCV_JALR" -> ZRISCV_JALR (g.gen_zbits g 12, g.gen_zregbits g, g.gen_zregbits g)
  | "BTYPE" -> ZBTYPE (g.gen_zbits g 13, g.gen_zregbits g, g.gen_zregbits g, g.gen_zbop g)
  | "ITYPE" -> ZITYPE (g.gen_zbits g 12, g.gen_zregbits g, g.gen_zregbits g, g.gen_ziop g)
  | "SHIFTIOP" -> ZSHIFTIOP (g.gen_zbits g 6, g.gen_zregbits g, g.gen_zregbits g, g.gen_zsop g)
  | "RTYPE" -> ZRTYPE (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zrop g)
  | "LOAD" -> ZLOAD (g.gen_zbits g 12, g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g, g.gen_zword_width g, g.gen_zbool g, g.gen_zbool g)
  | "STORE" -> ZSTORE (g.gen_zbits g 12, g.gen_zregbits g, g.gen_zregbits g, g.gen_zword_width g, g.gen_zbool g, g.gen_zbool g)
  | "ADDIW" -> ZADDIW (g.gen_zbits g 12, g.gen_zregbits g, g.gen_zregbits g)
  | "SHIFTW" -> ZSHIFTW (g.gen_zbits g 5, g.gen_zregbits g, g.gen_zregbits g, g.gen_zsop g)
  | "RTYPEW" -> ZRTYPEW (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zropw g)
  | "SHIFTIWOP" -> ZSHIFTIWOP (g.gen_zbits g 5, g.gen_zregbits g, g.gen_zregbits g, g.gen_zsopw g)
  | "FENCE" -> ZFENCE (g.gen_zbits g 4, g.gen_zbits g 4)
  | "FENCE_TSO" -> ZFENCE_TSO (g.gen_zbits g 4, g.gen_zbits g 4)
  | "FENCEI" -> ZFENCEI (g.gen_zunit g)
  | "ECALL" -> ZECALL (g.gen_zunit g)
  | "MRET" -> ZMRET (g.gen_zunit g)
  | "SRET" -> ZSRET (g.gen_zunit g)
  | "EBREAK" -> ZEBREAK (g.gen_zunit g)
  | "WFI" -> ZWFI (g.gen_zunit g)
  | "SFENCE_VMA" -> ZSFENCE_VMA (g.gen_zregbits g, g.gen_zregbits g)
  | "LOADRES" -> ZLOADRES (g.gen_zbool g, g.gen_zbool g, g.gen_zregbits g, g.gen_zword_width g, g.gen_zregbits g)
  | "STORECON" -> ZSTORECON (g.gen_zbool g, g.gen_zbool g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zword_width g, g.gen_zregbits g)
  | "AMO" -> ZAMO (g.gen_zamoop g, g.gen_zbool g, g.gen_zbool g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zword_width g, g.gen_zregbits g)
  | "C_NOP" -> ZC_NOP (g.gen_zunit g)
  | "C_ADDI4SPN" -> ZC_ADDI4SPN (g.gen_zcregbits g, g.gen_zbits g 8)
  | "C_LW" -> ZC_LW (g.gen_zbits g 5, g.gen_zcregbits g, g.gen_zcregbits g)
  | "C_LD" -> ZC_LD (g.gen_zbits g 5, g.gen_zcregbits g, g.gen_zcregbits g)
  | "C_SW" -> ZC_SW (g.gen_zbits g 5, g.gen_zcregbits g, g.gen_zcregbits g)
  | "C_SD" -> ZC_SD (g.gen_zbits g 5, g.gen_zcregbits g, g.gen_zcregbits g)
  | "C_ADDI" -> ZC_ADDI (g.gen_zbits g 6, g.gen_zregbits g)
  | "C_JAL" -> ZC_JAL (g.gen_zbits g 11)
  | "C_ADDIW" -> ZC_ADDIW (g.gen_zbits g 6, g.gen_zregbits g)
  | "C_LI" -> ZC_LI (g.gen_zbits g 6, g.gen_zregbits g)
  | "C_ADDI16SP" -> ZC_ADDI16SP (g.gen_zbits g 6)
  | "C_LUI" -> ZC_LUI (g.gen_zbits g 6, g.gen_zregbits g)
  | "C_SRLI" -> ZC_SRLI (g.gen_zbits g 6, g.gen_zcregbits g)
  | "C_SRAI" -> ZC_SRAI (g.gen_zbits g 6, g.gen_zcregbits g)
  | "C_ANDI" -> ZC_ANDI (g.gen_zbits g 6, g.gen_zcregbits g)
  | "C_SUB" -> ZC_SUB (g.gen_zcregbits g, g.gen_zcregbits g)
  | "C_XOR" -> ZC_XOR (g.gen_zcregbits g, g.gen_zcregbits g)
  | "C_OR" -> ZC_OR (g.gen_zcregbits g, g.gen_zcregbits g)
  | "C_AND" -> ZC_AND (g.gen_zcregbits g, g.gen_zcregbits g)
  | "C_SUBW" -> ZC_SUBW (g.gen_zcregbits g, g.gen_zcregbits g)
  | "C_ADDW" -> ZC_ADDW (g.gen_zcregbits g, g.gen_zcregbits g)
  | "C_J" -> ZC_J (g.gen_zbits g 11)
  | "C_BEQZ" -> ZC_BEQZ (g.gen_zbits g 8, g.gen_zcregbits g)
  | "C_BNEZ" -> ZC_BNEZ (g.gen_zbits g 8, g.gen_zcregbits g)
  | "C_SLLI" -> ZC_SLLI (g.gen_zbits g 6, g.gen_zregbits g)
  | "C_LWSP" -> ZC_LWSP (g.gen_zbits g 6, g.gen_zregbits g)
  | "C_LDSP" -> ZC_LDSP (g.gen_zbits g 6, g.gen_zregbits g)
  | "C_SWSP" -> ZC_SWSP (g.gen_zbits g 6, g.gen_zregbits g)
  | "C_SDSP" -> ZC_SDSP (g.gen_zbits g 6, g.gen_zregbits g)
  | "C_JR" -> ZC_JR (g.gen_zregbits g)
  | "C_JALR" -> ZC_JALR (g.gen_zregbits g)
  | "C_MV" -> ZC_MV (g.gen_zregbits g, g.gen_zregbits g)
  | "C_EBREAK" -> ZC_EBREAK (g.gen_zunit g)
  | "C_ADD" -> ZC_ADD (g.gen_zregbits g, g.gen_zregbits g)
  | "MUL" -> ZMUL (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g, g.gen_zbool g, g.gen_zbool g)
  | "DIV" -> ZDIV (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g)
  | "REM" -> ZREM (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g)
  | "MULW" -> ZMULW (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g)
  | "DIVW" -> ZDIVW (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g)
  | "REMW" -> ZREMW (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g)
  | "CSR" -> ZCSR (g.gen_zbits g 12, g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g, g.gen_zcsrop g)
  | "CGetPerm" -> ZCGetPerm (g.gen_zregbits g, g.gen_zregbits g)
  | "CGetType" -> ZCGetType (g.gen_zregbits g, g.gen_zregbits g)
  | "CGetBase" -> ZCGetBase (g.gen_zregbits g, g.gen_zregbits g)
  | "CGetLen" -> ZCGetLen (g.gen_zregbits g, g.gen_zregbits g)
  | "CGetTag" -> ZCGetTag (g.gen_zregbits g, g.gen_zregbits g)
  | "CGetSealed" -> ZCGetSealed (g.gen_zregbits g, g.gen_zregbits g)
  | "CGetOffset" -> ZCGetOffset (g.gen_zregbits g, g.gen_zregbits g)
  | "CGetAddr" -> ZCGetAddr (g.gen_zregbits g, g.gen_zregbits g)
  | "CSpecialRW" -> ZCSpecialRW (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g)
  | "CAndPerm" -> ZCAndPerm (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g)
  | "CToPtr" -> ZCToPtr (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g)
  | "CIncOffset" -> ZCIncOffset (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g)
  | "CIncOffsetImmediate" -> ZCIncOffsetImmediate (g.gen_zregbits g, g.gen_zregbits g, g.gen_zbits g 12)
  | "CSetOffset" -> ZCSetOffset (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g)
  | "CSetBounds" -> ZCSetBounds (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g)
  | "CSetBoundsImmediate" -> ZCSetBoundsImmediate (g.gen_zregbits g, g.gen_zregbits g, g.gen_zbits g 12)
  | "CSetBoundsExact" -> ZCSetBoundsExact (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g)
  | "CClearTag" -> ZCClearTag (g.gen_zregbits g, g.gen_zregbits g)
  | "CMove" -> ZCMove (g.gen_zregbits g, g.gen_zregbits g)
  | "ClearRegs" -> ZClearRegs (g.gen_zClearRegSet g, g.gen_zbits g 2, g.gen_zbits g 8)
  | "CFromPtr" -> ZCFromPtr (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g)
  | "CBuildCap" -> ZCBuildCap (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g)
  | "CCopyType" -> ZCCopyType (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g)
  | "CCheckPerm" -> ZCCheckPerm (g.gen_zregbits g, g.gen_zregbits g)
  | "CCheckType" -> ZCCheckType (g.gen_zregbits g, g.gen_zregbits g)
  | "CCheckTag" -> ZCCheckTag (g.gen_zregbits g)
  | "CTestSubset" -> ZCTestSubset (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g)
  | "CSeal" -> ZCSeal (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g)
  | "CCSeal" -> ZCCSeal (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g)
  | "CUnseal" -> ZCUnseal (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g)
  | "CCall" -> ZCCall (g.gen_zregbits g, g.gen_zregbits g, g.gen_zregbits g)
  | "CJALR" -> ZCJALR (g.gen_zregbits g, g.gen_zregbits g)
  | "CLoadDDC" -> ZCLoadDDC (g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g, g.gen_zword_width g)
  | "CLoadCap" -> ZCLoadCap (g.gen_zregbits g, g.gen_zregbits g, g.gen_zbool g, g.gen_zword_width g)
  | "CLoadCapDDC" -> ZCLoadCapDDC (g.gen_zregbits g, g.gen_zregbits g)
  | "CLoadCapCap" -> ZCLoadCapCap (g.gen_zregbits g, g.gen_zregbits g)
  | "CStoreDDC" -> ZCStoreDDC (g.gen_zregbits g, g.gen_zregbits g, g.gen_zword_width g)
  | "CStoreCap" -> ZCStoreCap (g.gen_zregbits g, g.gen_zregbits g, g.gen_zword_width g)
  | "CStoreCapDDC" -> ZCStoreCapDDC (g.gen_zregbits g, g.gen_zregbits g)
  | "CStoreCapCap" -> ZCStoreCapCap (g.gen_zregbits g, g.gen_zregbits g)
  | "ILLEGAL" -> ZILLEGAL (g.gen_zword g)
  | "C_ILLEGAL" -> ZC_ILLEGAL (g.gen_zhalf g)


let rand_zbits g zz7n =
  g.gen_zvector g zz7n false (fun g -> g.gen_zbit g)


let rand_zbop g =
  rand_choice [
    ZRISCV_BEQ;
    ZRISCV_BNE;
    ZRISCV_BLT;
    ZRISCV_BGE;
    ZRISCV_BLTU;
    ZRISCV_BGEU
  ]
let constructors_zbop = [
  "RISCV_BEQ";
  "RISCV_BNE";
  "RISCV_BLT";
  "RISCV_BGE";
  "RISCV_BLTU";
  "RISCV_BGEU"
  ]
let build_zbop g c = match c with
  | "RISCV_BEQ" -> ZRISCV_BEQ
  | "RISCV_BNE" -> ZRISCV_BNE
  | "RISCV_BLT" -> ZRISCV_BLT
  | "RISCV_BGE" -> ZRISCV_BGE
  | "RISCV_BLTU" -> ZRISCV_BLTU
  | "RISCV_BGEU" -> ZRISCV_BGEU

let rand_zcregbits g =
  g.gen_zbits g 3

let rand_zcsrop g =
  rand_choice [ZCSRRW; ZCSRRS; ZCSRRC]
let constructors_zcsrop = [
  "CSRRW";
  "CSRRS";
  "CSRRC"
  ]
let build_zcsrop g c = match c with
  | "CSRRW" -> ZCSRRW
  | "CSRRS" -> ZCSRRS
  | "CSRRC" -> ZCSRRC

let rand_zhalf g =
  g.gen_zbits g 16

let rand_ziop g =
  rand_choice [
    ZRISCV_ADDI;
    ZRISCV_SLTI;
    ZRISCV_SLTIU;
    ZRISCV_XORI;
    ZRISCV_ORI;
    ZRISCV_ANDI
  ]
let constructors_ziop = [
  "RISCV_ADDI";
  "RISCV_SLTI";
  "RISCV_SLTIU";
  "RISCV_XORI";
  "RISCV_ORI";
  "RISCV_ANDI"
  ]
let build_ziop g c = match c with
  | "RISCV_ADDI" -> ZRISCV_ADDI
  | "RISCV_SLTI" -> ZRISCV_SLTI
  | "RISCV_SLTIU" -> ZRISCV_SLTIU
  | "RISCV_XORI" -> ZRISCV_XORI
  | "RISCV_ORI" -> ZRISCV_ORI
  | "RISCV_ANDI" -> ZRISCV_ANDI

let rand_zregbits g =
  g.gen_zbits g 5

let rand_zrop g =
  rand_choice [
    ZRISCV_ADD;
    ZRISCV_SUB;
    ZRISCV_SLL;
    ZRISCV_SLT;
    ZRISCV_SLTU;
    ZRISCV_XOR;
    ZRISCV_SRL;
    ZRISCV_SRA;
    ZRISCV_OR;
    ZRISCV_AND
  ]
let constructors_zrop = [
  "RISCV_ADD";
  "RISCV_SUB";
  "RISCV_SLL";
  "RISCV_SLT";
  "RISCV_SLTU";
  "RISCV_XOR";
  "RISCV_SRL";
  "RISCV_SRA";
  "RISCV_OR";
  "RISCV_AND"
  ]
let build_zrop g c = match c with
  | "RISCV_ADD" -> ZRISCV_ADD
  | "RISCV_SUB" -> ZRISCV_SUB
  | "RISCV_SLL" -> ZRISCV_SLL
  | "RISCV_SLT" -> ZRISCV_SLT
  | "RISCV_SLTU" -> ZRISCV_SLTU
  | "RISCV_XOR" -> ZRISCV_XOR
  | "RISCV_SRL" -> ZRISCV_SRL
  | "RISCV_SRA" -> ZRISCV_SRA
  | "RISCV_OR" -> ZRISCV_OR
  | "RISCV_AND" -> ZRISCV_AND

let rand_zropw g =
  rand_choice [ZRISCV_ADDW; ZRISCV_SUBW; ZRISCV_SLLW; ZRISCV_SRLW; ZRISCV_SRAW]
let constructors_zropw = [
  "RISCV_ADDW";
  "RISCV_SUBW";
  "RISCV_SLLW";
  "RISCV_SRLW";
  "RISCV_SRAW"
  ]
let build_zropw g c = match c with
  | "RISCV_ADDW" -> ZRISCV_ADDW
  | "RISCV_SUBW" -> ZRISCV_SUBW
  | "RISCV_SLLW" -> ZRISCV_SLLW
  | "RISCV_SRLW" -> ZRISCV_SRLW
  | "RISCV_SRAW" -> ZRISCV_SRAW

let rand_zsop g =
  rand_choice [ZRISCV_SLLI; ZRISCV_SRLI; ZRISCV_SRAI]
let constructors_zsop = [
  "RISCV_SLLI";
  "RISCV_SRLI";
  "RISCV_SRAI"
  ]
let build_zsop g c = match c with
  | "RISCV_SLLI" -> ZRISCV_SLLI
  | "RISCV_SRLI" -> ZRISCV_SRLI
  | "RISCV_SRAI" -> ZRISCV_SRAI

let rand_zsopw g =
  rand_choice [ZRISCV_SLLIW; ZRISCV_SRLIW; ZRISCV_SRAIW]
let constructors_zsopw = [
  "RISCV_SLLIW";
  "RISCV_SRLIW";
  "RISCV_SRAIW"
  ]
let build_zsopw g c = match c with
  | "RISCV_SLLIW" -> ZRISCV_SLLIW
  | "RISCV_SRLIW" -> ZRISCV_SRLIW
  | "RISCV_SRAIW" -> ZRISCV_SRAIW


let rand_zuop g =
  rand_choice [ZRISCV_LUI; ZRISCV_AUIPC]
let constructors_zuop = [
  "RISCV_LUI";
  "RISCV_AUIPC"
  ]
let build_zuop g c = match c with
  | "RISCV_LUI" -> ZRISCV_LUI
  | "RISCV_AUIPC" -> ZRISCV_AUIPC


let rand_zword g =
  g.gen_zbits g 32

let rand_zword_width g =
  rand_choice [ZBYTE; ZHALF; ZWORD; ZDOUBLE]
let constructors_zword_width = [
  "BYTE";
  "HALF";
  "WORD";
  "DOUBLE"
  ]
let build_zword_width g c = match c with
  | "BYTE" -> ZBYTE
  | "HALF" -> ZHALF
  | "WORD" -> ZWORD
  | "DOUBLE" -> ZDOUBLE

let rand_gens : generators = {
  gen_zClearRegSet = rand_zClearRegSet;
  gen_zamoop = rand_zamoop;
  gen_zast = rand_zast;
  gen_zbit = rand_zbit;
  gen_zbits = rand_zbits;
  gen_zbool = rand_zbool;
  gen_zbop = rand_zbop;
  gen_zcregbits = rand_zcregbits;
  gen_zcsrop = rand_zcsrop;
  gen_zhalf = rand_zhalf;
  gen_ziop = rand_ziop;
  gen_zregbits = rand_zregbits;
  gen_zrop = rand_zrop;
  gen_zropw = rand_zropw;
  gen_zsop = rand_zsop;
  gen_zsopw = rand_zsopw;
  gen_zunit = rand_zunit;
  gen_zuop = rand_zuop;
  gen_zvector = rand_zvector;
  gen_zword = rand_zword;
  gen_zword_width = rand_zword_width
}
